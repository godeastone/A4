// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raw_events.proto

#ifndef PROTOBUF_raw_5fevents_2eproto__INCLUDED
#define PROTOBUF_raw_5fevents_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
namespace media {
namespace cast {
namespace proto {
class AggregatedFrameEvent;
class AggregatedFrameEventDefaultTypeInternal;
extern AggregatedFrameEventDefaultTypeInternal _AggregatedFrameEvent_default_instance_;
class AggregatedPacketEvent;
class AggregatedPacketEventDefaultTypeInternal;
extern AggregatedPacketEventDefaultTypeInternal _AggregatedPacketEvent_default_instance_;
class BasePacketEvent;
class BasePacketEventDefaultTypeInternal;
extern BasePacketEventDefaultTypeInternal _BasePacketEvent_default_instance_;
class GeneralDescription;
class GeneralDescriptionDefaultTypeInternal;
extern GeneralDescriptionDefaultTypeInternal _GeneralDescription_default_instance_;
class LogMetadata;
class LogMetadataDefaultTypeInternal;
extern LogMetadataDefaultTypeInternal _LogMetadata_default_instance_;
}  // namespace proto
}  // namespace cast
}  // namespace media

namespace media {
namespace cast {
namespace proto {

namespace protobuf_raw_5fevents_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_raw_5fevents_2eproto

enum EventType {
  UNKNOWN = 0,
  RTT_MS = 1,
  PACKET_LOSS = 2,
  JITTER_MS = 3,
  VIDEO_ACK_RECEIVED = 4,
  REMB_BITRATE = 5,
  AUDIO_ACK_SENT = 6,
  VIDEO_ACK_SENT = 7,
  AUDIO_FRAME_CAPTURE_END = 8,
  AUDIO_FRAME_CAPTURE_BEGIN = 9,
  AUDIO_FRAME_ENCODED = 10,
  AUDIO_PLAYOUT_DELAY = 11,
  AUDIO_FRAME_DECODED = 12,
  VIDEO_FRAME_CAPTURE_BEGIN = 13,
  VIDEO_FRAME_CAPTURE_END = 14,
  VIDEO_FRAME_SENT_TO_ENCODER = 15,
  VIDEO_FRAME_ENCODED = 16,
  VIDEO_FRAME_DECODED = 17,
  VIDEO_RENDER_DELAY = 18,
  AUDIO_PACKET_SENT_TO_NETWORK = 21,
  VIDEO_PACKET_SENT_TO_NETWORK = 22,
  AUDIO_PACKET_RETRANSMITTED = 23,
  VIDEO_PACKET_RETRANSMITTED = 24,
  AUDIO_PACKET_RECEIVED = 25,
  VIDEO_PACKET_RECEIVED = 26,
  DUPLICATE_AUDIO_PACKET_RECEIVED = 27,
  DUPLICATE_VIDEO_PACKET_RECEIVED = 28,
  FRAME_CAPTURE_BEGIN = 29,
  FRAME_CAPTURE_END = 30,
  FRAME_ENCODED = 31,
  FRAME_ACK_RECEIVED = 32,
  FRAME_ACK_SENT = 33,
  FRAME_DECODED = 34,
  FRAME_PLAYOUT = 35,
  PACKET_SENT_TO_NETWORK = 36,
  PACKET_RETRANSMITTED = 37,
  PACKET_RECEIVED = 38,
  PACKET_RTX_REJECTED = 39
};
bool EventType_IsValid(int value);
const EventType EventType_MIN = UNKNOWN;
const EventType EventType_MAX = PACKET_RTX_REJECTED;
const int EventType_ARRAYSIZE = EventType_MAX + 1;

// ===================================================================

class GeneralDescription : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:media.cast.proto.GeneralDescription) */ {
 public:
  GeneralDescription();
  virtual ~GeneralDescription();

  GeneralDescription(const GeneralDescription& from);

  inline GeneralDescription& operator=(const GeneralDescription& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GeneralDescription& default_instance();

  static inline const GeneralDescription* internal_default_instance() {
    return reinterpret_cast<const GeneralDescription*>(
               &_GeneralDescription_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(GeneralDescription* other);

  // implements Message ----------------------------------------------

  inline GeneralDescription* New() const PROTOBUF_FINAL { return New(NULL); }

  GeneralDescription* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const GeneralDescription& from);
  void MergeFrom(const GeneralDescription& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GeneralDescription* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string product = 1;
  bool has_product() const;
  void clear_product();
  static const int kProductFieldNumber = 1;
  const ::std::string& product() const;
  void set_product(const ::std::string& value);
  #if LANG_CXX11
  void set_product(::std::string&& value);
  #endif
  void set_product(const char* value);
  void set_product(const char* value, size_t size);
  ::std::string* mutable_product();
  ::std::string* release_product();
  void set_allocated_product(::std::string* product);

  // optional string product_version = 2;
  bool has_product_version() const;
  void clear_product_version();
  static const int kProductVersionFieldNumber = 2;
  const ::std::string& product_version() const;
  void set_product_version(const ::std::string& value);
  #if LANG_CXX11
  void set_product_version(::std::string&& value);
  #endif
  void set_product_version(const char* value);
  void set_product_version(const char* value, size_t size);
  ::std::string* mutable_product_version();
  ::std::string* release_product_version();
  void set_allocated_product_version(::std::string* product_version);

  // optional string os = 3;
  bool has_os() const;
  void clear_os();
  static const int kOsFieldNumber = 3;
  const ::std::string& os() const;
  void set_os(const ::std::string& value);
  #if LANG_CXX11
  void set_os(::std::string&& value);
  #endif
  void set_os(const char* value);
  void set_os(const char* value, size_t size);
  ::std::string* mutable_os();
  ::std::string* release_os();
  void set_allocated_os(::std::string* os);

  // @@protoc_insertion_point(class_scope:media.cast.proto.GeneralDescription)
 private:
  void set_has_product();
  void clear_has_product();
  void set_has_product_version();
  void clear_has_product_version();
  void set_has_os();
  void clear_has_os();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr product_;
  ::google::protobuf::internal::ArenaStringPtr product_version_;
  ::google::protobuf::internal::ArenaStringPtr os_;
  friend struct protobuf_raw_5fevents_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LogMetadata : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:media.cast.proto.LogMetadata) */ {
 public:
  LogMetadata();
  virtual ~LogMetadata();

  LogMetadata(const LogMetadata& from);

  inline LogMetadata& operator=(const LogMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const LogMetadata& default_instance();

  static inline const LogMetadata* internal_default_instance() {
    return reinterpret_cast<const LogMetadata*>(
               &_LogMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(LogMetadata* other);

  // implements Message ----------------------------------------------

  inline LogMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  LogMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const LogMetadata& from);
  void MergeFrom(const LogMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LogMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string extra_data = 6;
  bool has_extra_data() const;
  void clear_extra_data();
  static const int kExtraDataFieldNumber = 6;
  const ::std::string& extra_data() const;
  void set_extra_data(const ::std::string& value);
  #if LANG_CXX11
  void set_extra_data(::std::string&& value);
  #endif
  void set_extra_data(const char* value);
  void set_extra_data(const char* value, size_t size);
  ::std::string* mutable_extra_data();
  ::std::string* release_extra_data();
  void set_allocated_extra_data(::std::string* extra_data);

  // optional .media.cast.proto.GeneralDescription general_description = 7;
  bool has_general_description() const;
  void clear_general_description();
  static const int kGeneralDescriptionFieldNumber = 7;
  const ::media::cast::proto::GeneralDescription& general_description() const;
  ::media::cast::proto::GeneralDescription* mutable_general_description();
  ::media::cast::proto::GeneralDescription* release_general_description();
  void set_allocated_general_description(::media::cast::proto::GeneralDescription* general_description);

  // optional bool is_audio = 1;
  bool has_is_audio() const;
  void clear_is_audio();
  static const int kIsAudioFieldNumber = 1;
  bool is_audio() const;
  void set_is_audio(bool value);

  // optional uint32 first_rtp_timestamp = 2;
  bool has_first_rtp_timestamp() const;
  void clear_first_rtp_timestamp();
  static const int kFirstRtpTimestampFieldNumber = 2;
  ::google::protobuf::uint32 first_rtp_timestamp() const;
  void set_first_rtp_timestamp(::google::protobuf::uint32 value);

  // optional int32 num_frame_events = 3;
  bool has_num_frame_events() const;
  void clear_num_frame_events();
  static const int kNumFrameEventsFieldNumber = 3;
  ::google::protobuf::int32 num_frame_events() const;
  void set_num_frame_events(::google::protobuf::int32 value);

  // optional int32 num_packet_events = 4;
  bool has_num_packet_events() const;
  void clear_num_packet_events();
  static const int kNumPacketEventsFieldNumber = 4;
  ::google::protobuf::int32 num_packet_events() const;
  void set_num_packet_events(::google::protobuf::int32 value);

  // optional int64 reference_timestamp_ms_at_unix_epoch = 5;
  bool has_reference_timestamp_ms_at_unix_epoch() const;
  void clear_reference_timestamp_ms_at_unix_epoch();
  static const int kReferenceTimestampMsAtUnixEpochFieldNumber = 5;
  ::google::protobuf::int64 reference_timestamp_ms_at_unix_epoch() const;
  void set_reference_timestamp_ms_at_unix_epoch(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:media.cast.proto.LogMetadata)
 private:
  void set_has_is_audio();
  void clear_has_is_audio();
  void set_has_first_rtp_timestamp();
  void clear_has_first_rtp_timestamp();
  void set_has_num_frame_events();
  void clear_has_num_frame_events();
  void set_has_num_packet_events();
  void clear_has_num_packet_events();
  void set_has_reference_timestamp_ms_at_unix_epoch();
  void clear_has_reference_timestamp_ms_at_unix_epoch();
  void set_has_extra_data();
  void clear_has_extra_data();
  void set_has_general_description();
  void clear_has_general_description();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr extra_data_;
  ::media::cast::proto::GeneralDescription* general_description_;
  bool is_audio_;
  ::google::protobuf::uint32 first_rtp_timestamp_;
  ::google::protobuf::int32 num_frame_events_;
  ::google::protobuf::int32 num_packet_events_;
  ::google::protobuf::int64 reference_timestamp_ms_at_unix_epoch_;
  friend struct protobuf_raw_5fevents_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AggregatedFrameEvent : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:media.cast.proto.AggregatedFrameEvent) */ {
 public:
  AggregatedFrameEvent();
  virtual ~AggregatedFrameEvent();

  AggregatedFrameEvent(const AggregatedFrameEvent& from);

  inline AggregatedFrameEvent& operator=(const AggregatedFrameEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AggregatedFrameEvent& default_instance();

  static inline const AggregatedFrameEvent* internal_default_instance() {
    return reinterpret_cast<const AggregatedFrameEvent*>(
               &_AggregatedFrameEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(AggregatedFrameEvent* other);

  // implements Message ----------------------------------------------

  inline AggregatedFrameEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  AggregatedFrameEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AggregatedFrameEvent& from);
  void MergeFrom(const AggregatedFrameEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AggregatedFrameEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .media.cast.proto.EventType event_type = 2 [packed = true];
  int event_type_size() const;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 2;
  ::media::cast::proto::EventType event_type(int index) const;
  void set_event_type(int index, ::media::cast::proto::EventType value);
  void add_event_type(::media::cast::proto::EventType value);
  const ::google::protobuf::RepeatedField<int>& event_type() const;
  ::google::protobuf::RepeatedField<int>* mutable_event_type();

  // repeated int64 event_timestamp_ms = 3 [packed = true];
  int event_timestamp_ms_size() const;
  void clear_event_timestamp_ms();
  static const int kEventTimestampMsFieldNumber = 3;
  ::google::protobuf::int64 event_timestamp_ms(int index) const;
  void set_event_timestamp_ms(int index, ::google::protobuf::int64 value);
  void add_event_timestamp_ms(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      event_timestamp_ms() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_event_timestamp_ms();

  // optional uint32 relative_rtp_timestamp = 1;
  bool has_relative_rtp_timestamp() const;
  void clear_relative_rtp_timestamp();
  static const int kRelativeRtpTimestampFieldNumber = 1;
  ::google::protobuf::uint32 relative_rtp_timestamp() const;
  void set_relative_rtp_timestamp(::google::protobuf::uint32 value);

  // optional int32 encoded_frame_size = 4;
  bool has_encoded_frame_size() const;
  void clear_encoded_frame_size();
  static const int kEncodedFrameSizeFieldNumber = 4;
  ::google::protobuf::int32 encoded_frame_size() const;
  void set_encoded_frame_size(::google::protobuf::int32 value);

  // optional int64 delay_millis = 5;
  bool has_delay_millis() const;
  void clear_delay_millis();
  static const int kDelayMillisFieldNumber = 5;
  ::google::protobuf::int64 delay_millis() const;
  void set_delay_millis(::google::protobuf::int64 value);

  // optional bool key_frame = 6;
  bool has_key_frame() const;
  void clear_key_frame();
  static const int kKeyFrameFieldNumber = 6;
  bool key_frame() const;
  void set_key_frame(bool value);

  // optional int32 target_bitrate = 7;
  bool has_target_bitrate() const;
  void clear_target_bitrate();
  static const int kTargetBitrateFieldNumber = 7;
  ::google::protobuf::int32 target_bitrate() const;
  void set_target_bitrate(::google::protobuf::int32 value);

  // optional int32 width = 8;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 8;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // optional int32 height = 9;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 9;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // optional int32 encoder_cpu_percent_utilized = 10;
  bool has_encoder_cpu_percent_utilized() const;
  void clear_encoder_cpu_percent_utilized();
  static const int kEncoderCpuPercentUtilizedFieldNumber = 10;
  ::google::protobuf::int32 encoder_cpu_percent_utilized() const;
  void set_encoder_cpu_percent_utilized(::google::protobuf::int32 value);

  // optional int32 idealized_bitrate_percent_utilized = 11;
  bool has_idealized_bitrate_percent_utilized() const;
  void clear_idealized_bitrate_percent_utilized();
  static const int kIdealizedBitratePercentUtilizedFieldNumber = 11;
  ::google::protobuf::int32 idealized_bitrate_percent_utilized() const;
  void set_idealized_bitrate_percent_utilized(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:media.cast.proto.AggregatedFrameEvent)
 private:
  void set_has_relative_rtp_timestamp();
  void clear_has_relative_rtp_timestamp();
  void set_has_encoded_frame_size();
  void clear_has_encoded_frame_size();
  void set_has_delay_millis();
  void clear_has_delay_millis();
  void set_has_key_frame();
  void clear_has_key_frame();
  void set_has_target_bitrate();
  void clear_has_target_bitrate();
  void set_has_width();
  void clear_has_width();
  void set_has_height();
  void clear_has_height();
  void set_has_encoder_cpu_percent_utilized();
  void clear_has_encoder_cpu_percent_utilized();
  void set_has_idealized_bitrate_percent_utilized();
  void clear_has_idealized_bitrate_percent_utilized();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> event_type_;
  mutable int _event_type_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > event_timestamp_ms_;
  mutable int _event_timestamp_ms_cached_byte_size_;
  ::google::protobuf::uint32 relative_rtp_timestamp_;
  ::google::protobuf::int32 encoded_frame_size_;
  ::google::protobuf::int64 delay_millis_;
  bool key_frame_;
  ::google::protobuf::int32 target_bitrate_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 encoder_cpu_percent_utilized_;
  ::google::protobuf::int32 idealized_bitrate_percent_utilized_;
  friend struct protobuf_raw_5fevents_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BasePacketEvent : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:media.cast.proto.BasePacketEvent) */ {
 public:
  BasePacketEvent();
  virtual ~BasePacketEvent();

  BasePacketEvent(const BasePacketEvent& from);

  inline BasePacketEvent& operator=(const BasePacketEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const BasePacketEvent& default_instance();

  static inline const BasePacketEvent* internal_default_instance() {
    return reinterpret_cast<const BasePacketEvent*>(
               &_BasePacketEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(BasePacketEvent* other);

  // implements Message ----------------------------------------------

  inline BasePacketEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  BasePacketEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const BasePacketEvent& from);
  void MergeFrom(const BasePacketEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasePacketEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .media.cast.proto.EventType event_type = 2 [packed = true];
  int event_type_size() const;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 2;
  ::media::cast::proto::EventType event_type(int index) const;
  void set_event_type(int index, ::media::cast::proto::EventType value);
  void add_event_type(::media::cast::proto::EventType value);
  const ::google::protobuf::RepeatedField<int>& event_type() const;
  ::google::protobuf::RepeatedField<int>* mutable_event_type();

  // repeated int64 event_timestamp_ms = 3 [packed = true];
  int event_timestamp_ms_size() const;
  void clear_event_timestamp_ms();
  static const int kEventTimestampMsFieldNumber = 3;
  ::google::protobuf::int64 event_timestamp_ms(int index) const;
  void set_event_timestamp_ms(int index, ::google::protobuf::int64 value);
  void add_event_timestamp_ms(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      event_timestamp_ms() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_event_timestamp_ms();

  // optional int32 packet_id = 1;
  bool has_packet_id() const;
  void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  ::google::protobuf::int32 packet_id() const;
  void set_packet_id(::google::protobuf::int32 value);

  // optional int32 size = 4;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 4;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:media.cast.proto.BasePacketEvent)
 private:
  void set_has_packet_id();
  void clear_has_packet_id();
  void set_has_size();
  void clear_has_size();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> event_type_;
  mutable int _event_type_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > event_timestamp_ms_;
  mutable int _event_timestamp_ms_cached_byte_size_;
  ::google::protobuf::int32 packet_id_;
  ::google::protobuf::int32 size_;
  friend struct protobuf_raw_5fevents_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AggregatedPacketEvent : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:media.cast.proto.AggregatedPacketEvent) */ {
 public:
  AggregatedPacketEvent();
  virtual ~AggregatedPacketEvent();

  AggregatedPacketEvent(const AggregatedPacketEvent& from);

  inline AggregatedPacketEvent& operator=(const AggregatedPacketEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AggregatedPacketEvent& default_instance();

  static inline const AggregatedPacketEvent* internal_default_instance() {
    return reinterpret_cast<const AggregatedPacketEvent*>(
               &_AggregatedPacketEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(AggregatedPacketEvent* other);

  // implements Message ----------------------------------------------

  inline AggregatedPacketEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  AggregatedPacketEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AggregatedPacketEvent& from);
  void MergeFrom(const AggregatedPacketEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AggregatedPacketEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .media.cast.proto.BasePacketEvent base_packet_event = 2;
  int base_packet_event_size() const;
  void clear_base_packet_event();
  static const int kBasePacketEventFieldNumber = 2;
  const ::media::cast::proto::BasePacketEvent& base_packet_event(int index) const;
  ::media::cast::proto::BasePacketEvent* mutable_base_packet_event(int index);
  ::media::cast::proto::BasePacketEvent* add_base_packet_event();
  ::google::protobuf::RepeatedPtrField< ::media::cast::proto::BasePacketEvent >*
      mutable_base_packet_event();
  const ::google::protobuf::RepeatedPtrField< ::media::cast::proto::BasePacketEvent >&
      base_packet_event() const;

  // optional uint32 relative_rtp_timestamp = 1;
  bool has_relative_rtp_timestamp() const;
  void clear_relative_rtp_timestamp();
  static const int kRelativeRtpTimestampFieldNumber = 1;
  ::google::protobuf::uint32 relative_rtp_timestamp() const;
  void set_relative_rtp_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:media.cast.proto.AggregatedPacketEvent)
 private:
  void set_has_relative_rtp_timestamp();
  void clear_has_relative_rtp_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::media::cast::proto::BasePacketEvent > base_packet_event_;
  ::google::protobuf::uint32 relative_rtp_timestamp_;
  friend struct protobuf_raw_5fevents_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GeneralDescription

// optional string product = 1;
inline bool GeneralDescription::has_product() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GeneralDescription::set_has_product() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GeneralDescription::clear_has_product() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GeneralDescription::clear_product() {
  product_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_product();
}
inline const ::std::string& GeneralDescription::product() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.GeneralDescription.product)
  return product_.GetNoArena();
}
inline void GeneralDescription::set_product(const ::std::string& value) {
  set_has_product();
  product_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:media.cast.proto.GeneralDescription.product)
}
#if LANG_CXX11
inline void GeneralDescription::set_product(::std::string&& value) {
  set_has_product();
  product_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:media.cast.proto.GeneralDescription.product)
}
#endif
inline void GeneralDescription::set_product(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_product();
  product_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:media.cast.proto.GeneralDescription.product)
}
inline void GeneralDescription::set_product(const char* value, size_t size) {
  set_has_product();
  product_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:media.cast.proto.GeneralDescription.product)
}
inline ::std::string* GeneralDescription::mutable_product() {
  set_has_product();
  // @@protoc_insertion_point(field_mutable:media.cast.proto.GeneralDescription.product)
  return product_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GeneralDescription::release_product() {
  // @@protoc_insertion_point(field_release:media.cast.proto.GeneralDescription.product)
  clear_has_product();
  return product_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GeneralDescription::set_allocated_product(::std::string* product) {
  if (product != NULL) {
    set_has_product();
  } else {
    clear_has_product();
  }
  product_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product);
  // @@protoc_insertion_point(field_set_allocated:media.cast.proto.GeneralDescription.product)
}

// optional string product_version = 2;
inline bool GeneralDescription::has_product_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GeneralDescription::set_has_product_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GeneralDescription::clear_has_product_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GeneralDescription::clear_product_version() {
  product_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_product_version();
}
inline const ::std::string& GeneralDescription::product_version() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.GeneralDescription.product_version)
  return product_version_.GetNoArena();
}
inline void GeneralDescription::set_product_version(const ::std::string& value) {
  set_has_product_version();
  product_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:media.cast.proto.GeneralDescription.product_version)
}
#if LANG_CXX11
inline void GeneralDescription::set_product_version(::std::string&& value) {
  set_has_product_version();
  product_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:media.cast.proto.GeneralDescription.product_version)
}
#endif
inline void GeneralDescription::set_product_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_product_version();
  product_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:media.cast.proto.GeneralDescription.product_version)
}
inline void GeneralDescription::set_product_version(const char* value, size_t size) {
  set_has_product_version();
  product_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:media.cast.proto.GeneralDescription.product_version)
}
inline ::std::string* GeneralDescription::mutable_product_version() {
  set_has_product_version();
  // @@protoc_insertion_point(field_mutable:media.cast.proto.GeneralDescription.product_version)
  return product_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GeneralDescription::release_product_version() {
  // @@protoc_insertion_point(field_release:media.cast.proto.GeneralDescription.product_version)
  clear_has_product_version();
  return product_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GeneralDescription::set_allocated_product_version(::std::string* product_version) {
  if (product_version != NULL) {
    set_has_product_version();
  } else {
    clear_has_product_version();
  }
  product_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_version);
  // @@protoc_insertion_point(field_set_allocated:media.cast.proto.GeneralDescription.product_version)
}

// optional string os = 3;
inline bool GeneralDescription::has_os() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GeneralDescription::set_has_os() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GeneralDescription::clear_has_os() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GeneralDescription::clear_os() {
  os_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_os();
}
inline const ::std::string& GeneralDescription::os() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.GeneralDescription.os)
  return os_.GetNoArena();
}
inline void GeneralDescription::set_os(const ::std::string& value) {
  set_has_os();
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:media.cast.proto.GeneralDescription.os)
}
#if LANG_CXX11
inline void GeneralDescription::set_os(::std::string&& value) {
  set_has_os();
  os_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:media.cast.proto.GeneralDescription.os)
}
#endif
inline void GeneralDescription::set_os(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_os();
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:media.cast.proto.GeneralDescription.os)
}
inline void GeneralDescription::set_os(const char* value, size_t size) {
  set_has_os();
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:media.cast.proto.GeneralDescription.os)
}
inline ::std::string* GeneralDescription::mutable_os() {
  set_has_os();
  // @@protoc_insertion_point(field_mutable:media.cast.proto.GeneralDescription.os)
  return os_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GeneralDescription::release_os() {
  // @@protoc_insertion_point(field_release:media.cast.proto.GeneralDescription.os)
  clear_has_os();
  return os_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GeneralDescription::set_allocated_os(::std::string* os) {
  if (os != NULL) {
    set_has_os();
  } else {
    clear_has_os();
  }
  os_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os);
  // @@protoc_insertion_point(field_set_allocated:media.cast.proto.GeneralDescription.os)
}

// -------------------------------------------------------------------

// LogMetadata

// optional bool is_audio = 1;
inline bool LogMetadata::has_is_audio() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogMetadata::set_has_is_audio() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogMetadata::clear_has_is_audio() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogMetadata::clear_is_audio() {
  is_audio_ = false;
  clear_has_is_audio();
}
inline bool LogMetadata::is_audio() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.LogMetadata.is_audio)
  return is_audio_;
}
inline void LogMetadata::set_is_audio(bool value) {
  set_has_is_audio();
  is_audio_ = value;
  // @@protoc_insertion_point(field_set:media.cast.proto.LogMetadata.is_audio)
}

// optional uint32 first_rtp_timestamp = 2;
inline bool LogMetadata::has_first_rtp_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogMetadata::set_has_first_rtp_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogMetadata::clear_has_first_rtp_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogMetadata::clear_first_rtp_timestamp() {
  first_rtp_timestamp_ = 0u;
  clear_has_first_rtp_timestamp();
}
inline ::google::protobuf::uint32 LogMetadata::first_rtp_timestamp() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.LogMetadata.first_rtp_timestamp)
  return first_rtp_timestamp_;
}
inline void LogMetadata::set_first_rtp_timestamp(::google::protobuf::uint32 value) {
  set_has_first_rtp_timestamp();
  first_rtp_timestamp_ = value;
  // @@protoc_insertion_point(field_set:media.cast.proto.LogMetadata.first_rtp_timestamp)
}

// optional int32 num_frame_events = 3;
inline bool LogMetadata::has_num_frame_events() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LogMetadata::set_has_num_frame_events() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LogMetadata::clear_has_num_frame_events() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LogMetadata::clear_num_frame_events() {
  num_frame_events_ = 0;
  clear_has_num_frame_events();
}
inline ::google::protobuf::int32 LogMetadata::num_frame_events() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.LogMetadata.num_frame_events)
  return num_frame_events_;
}
inline void LogMetadata::set_num_frame_events(::google::protobuf::int32 value) {
  set_has_num_frame_events();
  num_frame_events_ = value;
  // @@protoc_insertion_point(field_set:media.cast.proto.LogMetadata.num_frame_events)
}

// optional int32 num_packet_events = 4;
inline bool LogMetadata::has_num_packet_events() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LogMetadata::set_has_num_packet_events() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LogMetadata::clear_has_num_packet_events() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LogMetadata::clear_num_packet_events() {
  num_packet_events_ = 0;
  clear_has_num_packet_events();
}
inline ::google::protobuf::int32 LogMetadata::num_packet_events() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.LogMetadata.num_packet_events)
  return num_packet_events_;
}
inline void LogMetadata::set_num_packet_events(::google::protobuf::int32 value) {
  set_has_num_packet_events();
  num_packet_events_ = value;
  // @@protoc_insertion_point(field_set:media.cast.proto.LogMetadata.num_packet_events)
}

// optional int64 reference_timestamp_ms_at_unix_epoch = 5;
inline bool LogMetadata::has_reference_timestamp_ms_at_unix_epoch() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LogMetadata::set_has_reference_timestamp_ms_at_unix_epoch() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LogMetadata::clear_has_reference_timestamp_ms_at_unix_epoch() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LogMetadata::clear_reference_timestamp_ms_at_unix_epoch() {
  reference_timestamp_ms_at_unix_epoch_ = GOOGLE_LONGLONG(0);
  clear_has_reference_timestamp_ms_at_unix_epoch();
}
inline ::google::protobuf::int64 LogMetadata::reference_timestamp_ms_at_unix_epoch() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.LogMetadata.reference_timestamp_ms_at_unix_epoch)
  return reference_timestamp_ms_at_unix_epoch_;
}
inline void LogMetadata::set_reference_timestamp_ms_at_unix_epoch(::google::protobuf::int64 value) {
  set_has_reference_timestamp_ms_at_unix_epoch();
  reference_timestamp_ms_at_unix_epoch_ = value;
  // @@protoc_insertion_point(field_set:media.cast.proto.LogMetadata.reference_timestamp_ms_at_unix_epoch)
}

// optional string extra_data = 6;
inline bool LogMetadata::has_extra_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogMetadata::set_has_extra_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogMetadata::clear_has_extra_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogMetadata::clear_extra_data() {
  extra_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extra_data();
}
inline const ::std::string& LogMetadata::extra_data() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.LogMetadata.extra_data)
  return extra_data_.GetNoArena();
}
inline void LogMetadata::set_extra_data(const ::std::string& value) {
  set_has_extra_data();
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:media.cast.proto.LogMetadata.extra_data)
}
#if LANG_CXX11
inline void LogMetadata::set_extra_data(::std::string&& value) {
  set_has_extra_data();
  extra_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:media.cast.proto.LogMetadata.extra_data)
}
#endif
inline void LogMetadata::set_extra_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_extra_data();
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:media.cast.proto.LogMetadata.extra_data)
}
inline void LogMetadata::set_extra_data(const char* value, size_t size) {
  set_has_extra_data();
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:media.cast.proto.LogMetadata.extra_data)
}
inline ::std::string* LogMetadata::mutable_extra_data() {
  set_has_extra_data();
  // @@protoc_insertion_point(field_mutable:media.cast.proto.LogMetadata.extra_data)
  return extra_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogMetadata::release_extra_data() {
  // @@protoc_insertion_point(field_release:media.cast.proto.LogMetadata.extra_data)
  clear_has_extra_data();
  return extra_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogMetadata::set_allocated_extra_data(::std::string* extra_data) {
  if (extra_data != NULL) {
    set_has_extra_data();
  } else {
    clear_has_extra_data();
  }
  extra_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra_data);
  // @@protoc_insertion_point(field_set_allocated:media.cast.proto.LogMetadata.extra_data)
}

// optional .media.cast.proto.GeneralDescription general_description = 7;
inline bool LogMetadata::has_general_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogMetadata::set_has_general_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogMetadata::clear_has_general_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogMetadata::clear_general_description() {
  if (general_description_ != NULL) general_description_->::media::cast::proto::GeneralDescription::Clear();
  clear_has_general_description();
}
inline const ::media::cast::proto::GeneralDescription& LogMetadata::general_description() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.LogMetadata.general_description)
  return general_description_ != NULL ? *general_description_
                         : *::media::cast::proto::GeneralDescription::internal_default_instance();
}
inline ::media::cast::proto::GeneralDescription* LogMetadata::mutable_general_description() {
  set_has_general_description();
  if (general_description_ == NULL) {
    general_description_ = new ::media::cast::proto::GeneralDescription;
  }
  // @@protoc_insertion_point(field_mutable:media.cast.proto.LogMetadata.general_description)
  return general_description_;
}
inline ::media::cast::proto::GeneralDescription* LogMetadata::release_general_description() {
  // @@protoc_insertion_point(field_release:media.cast.proto.LogMetadata.general_description)
  clear_has_general_description();
  ::media::cast::proto::GeneralDescription* temp = general_description_;
  general_description_ = NULL;
  return temp;
}
inline void LogMetadata::set_allocated_general_description(::media::cast::proto::GeneralDescription* general_description) {
  delete general_description_;
  general_description_ = general_description;
  if (general_description) {
    set_has_general_description();
  } else {
    clear_has_general_description();
  }
  // @@protoc_insertion_point(field_set_allocated:media.cast.proto.LogMetadata.general_description)
}

// -------------------------------------------------------------------

// AggregatedFrameEvent

// optional uint32 relative_rtp_timestamp = 1;
inline bool AggregatedFrameEvent::has_relative_rtp_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AggregatedFrameEvent::set_has_relative_rtp_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AggregatedFrameEvent::clear_has_relative_rtp_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AggregatedFrameEvent::clear_relative_rtp_timestamp() {
  relative_rtp_timestamp_ = 0u;
  clear_has_relative_rtp_timestamp();
}
inline ::google::protobuf::uint32 AggregatedFrameEvent::relative_rtp_timestamp() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.AggregatedFrameEvent.relative_rtp_timestamp)
  return relative_rtp_timestamp_;
}
inline void AggregatedFrameEvent::set_relative_rtp_timestamp(::google::protobuf::uint32 value) {
  set_has_relative_rtp_timestamp();
  relative_rtp_timestamp_ = value;
  // @@protoc_insertion_point(field_set:media.cast.proto.AggregatedFrameEvent.relative_rtp_timestamp)
}

// repeated .media.cast.proto.EventType event_type = 2 [packed = true];
inline int AggregatedFrameEvent::event_type_size() const {
  return event_type_.size();
}
inline void AggregatedFrameEvent::clear_event_type() {
  event_type_.Clear();
}
inline ::media::cast::proto::EventType AggregatedFrameEvent::event_type(int index) const {
  // @@protoc_insertion_point(field_get:media.cast.proto.AggregatedFrameEvent.event_type)
  return static_cast< ::media::cast::proto::EventType >(event_type_.Get(index));
}
inline void AggregatedFrameEvent::set_event_type(int index, ::media::cast::proto::EventType value) {
  assert(::media::cast::proto::EventType_IsValid(value));
  event_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:media.cast.proto.AggregatedFrameEvent.event_type)
}
inline void AggregatedFrameEvent::add_event_type(::media::cast::proto::EventType value) {
  assert(::media::cast::proto::EventType_IsValid(value));
  event_type_.Add(value);
  // @@protoc_insertion_point(field_add:media.cast.proto.AggregatedFrameEvent.event_type)
}
inline const ::google::protobuf::RepeatedField<int>&
AggregatedFrameEvent::event_type() const {
  // @@protoc_insertion_point(field_list:media.cast.proto.AggregatedFrameEvent.event_type)
  return event_type_;
}
inline ::google::protobuf::RepeatedField<int>*
AggregatedFrameEvent::mutable_event_type() {
  // @@protoc_insertion_point(field_mutable_list:media.cast.proto.AggregatedFrameEvent.event_type)
  return &event_type_;
}

// repeated int64 event_timestamp_ms = 3 [packed = true];
inline int AggregatedFrameEvent::event_timestamp_ms_size() const {
  return event_timestamp_ms_.size();
}
inline void AggregatedFrameEvent::clear_event_timestamp_ms() {
  event_timestamp_ms_.Clear();
}
inline ::google::protobuf::int64 AggregatedFrameEvent::event_timestamp_ms(int index) const {
  // @@protoc_insertion_point(field_get:media.cast.proto.AggregatedFrameEvent.event_timestamp_ms)
  return event_timestamp_ms_.Get(index);
}
inline void AggregatedFrameEvent::set_event_timestamp_ms(int index, ::google::protobuf::int64 value) {
  event_timestamp_ms_.Set(index, value);
  // @@protoc_insertion_point(field_set:media.cast.proto.AggregatedFrameEvent.event_timestamp_ms)
}
inline void AggregatedFrameEvent::add_event_timestamp_ms(::google::protobuf::int64 value) {
  event_timestamp_ms_.Add(value);
  // @@protoc_insertion_point(field_add:media.cast.proto.AggregatedFrameEvent.event_timestamp_ms)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AggregatedFrameEvent::event_timestamp_ms() const {
  // @@protoc_insertion_point(field_list:media.cast.proto.AggregatedFrameEvent.event_timestamp_ms)
  return event_timestamp_ms_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AggregatedFrameEvent::mutable_event_timestamp_ms() {
  // @@protoc_insertion_point(field_mutable_list:media.cast.proto.AggregatedFrameEvent.event_timestamp_ms)
  return &event_timestamp_ms_;
}

// optional int32 encoded_frame_size = 4;
inline bool AggregatedFrameEvent::has_encoded_frame_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AggregatedFrameEvent::set_has_encoded_frame_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AggregatedFrameEvent::clear_has_encoded_frame_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AggregatedFrameEvent::clear_encoded_frame_size() {
  encoded_frame_size_ = 0;
  clear_has_encoded_frame_size();
}
inline ::google::protobuf::int32 AggregatedFrameEvent::encoded_frame_size() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.AggregatedFrameEvent.encoded_frame_size)
  return encoded_frame_size_;
}
inline void AggregatedFrameEvent::set_encoded_frame_size(::google::protobuf::int32 value) {
  set_has_encoded_frame_size();
  encoded_frame_size_ = value;
  // @@protoc_insertion_point(field_set:media.cast.proto.AggregatedFrameEvent.encoded_frame_size)
}

// optional int64 delay_millis = 5;
inline bool AggregatedFrameEvent::has_delay_millis() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AggregatedFrameEvent::set_has_delay_millis() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AggregatedFrameEvent::clear_has_delay_millis() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AggregatedFrameEvent::clear_delay_millis() {
  delay_millis_ = GOOGLE_LONGLONG(0);
  clear_has_delay_millis();
}
inline ::google::protobuf::int64 AggregatedFrameEvent::delay_millis() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.AggregatedFrameEvent.delay_millis)
  return delay_millis_;
}
inline void AggregatedFrameEvent::set_delay_millis(::google::protobuf::int64 value) {
  set_has_delay_millis();
  delay_millis_ = value;
  // @@protoc_insertion_point(field_set:media.cast.proto.AggregatedFrameEvent.delay_millis)
}

// optional bool key_frame = 6;
inline bool AggregatedFrameEvent::has_key_frame() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AggregatedFrameEvent::set_has_key_frame() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AggregatedFrameEvent::clear_has_key_frame() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AggregatedFrameEvent::clear_key_frame() {
  key_frame_ = false;
  clear_has_key_frame();
}
inline bool AggregatedFrameEvent::key_frame() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.AggregatedFrameEvent.key_frame)
  return key_frame_;
}
inline void AggregatedFrameEvent::set_key_frame(bool value) {
  set_has_key_frame();
  key_frame_ = value;
  // @@protoc_insertion_point(field_set:media.cast.proto.AggregatedFrameEvent.key_frame)
}

// optional int32 target_bitrate = 7;
inline bool AggregatedFrameEvent::has_target_bitrate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AggregatedFrameEvent::set_has_target_bitrate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AggregatedFrameEvent::clear_has_target_bitrate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AggregatedFrameEvent::clear_target_bitrate() {
  target_bitrate_ = 0;
  clear_has_target_bitrate();
}
inline ::google::protobuf::int32 AggregatedFrameEvent::target_bitrate() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.AggregatedFrameEvent.target_bitrate)
  return target_bitrate_;
}
inline void AggregatedFrameEvent::set_target_bitrate(::google::protobuf::int32 value) {
  set_has_target_bitrate();
  target_bitrate_ = value;
  // @@protoc_insertion_point(field_set:media.cast.proto.AggregatedFrameEvent.target_bitrate)
}

// optional int32 width = 8;
inline bool AggregatedFrameEvent::has_width() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AggregatedFrameEvent::set_has_width() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AggregatedFrameEvent::clear_has_width() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AggregatedFrameEvent::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 AggregatedFrameEvent::width() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.AggregatedFrameEvent.width)
  return width_;
}
inline void AggregatedFrameEvent::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:media.cast.proto.AggregatedFrameEvent.width)
}

// optional int32 height = 9;
inline bool AggregatedFrameEvent::has_height() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AggregatedFrameEvent::set_has_height() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AggregatedFrameEvent::clear_has_height() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AggregatedFrameEvent::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 AggregatedFrameEvent::height() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.AggregatedFrameEvent.height)
  return height_;
}
inline void AggregatedFrameEvent::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:media.cast.proto.AggregatedFrameEvent.height)
}

// optional int32 encoder_cpu_percent_utilized = 10;
inline bool AggregatedFrameEvent::has_encoder_cpu_percent_utilized() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AggregatedFrameEvent::set_has_encoder_cpu_percent_utilized() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AggregatedFrameEvent::clear_has_encoder_cpu_percent_utilized() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AggregatedFrameEvent::clear_encoder_cpu_percent_utilized() {
  encoder_cpu_percent_utilized_ = 0;
  clear_has_encoder_cpu_percent_utilized();
}
inline ::google::protobuf::int32 AggregatedFrameEvent::encoder_cpu_percent_utilized() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.AggregatedFrameEvent.encoder_cpu_percent_utilized)
  return encoder_cpu_percent_utilized_;
}
inline void AggregatedFrameEvent::set_encoder_cpu_percent_utilized(::google::protobuf::int32 value) {
  set_has_encoder_cpu_percent_utilized();
  encoder_cpu_percent_utilized_ = value;
  // @@protoc_insertion_point(field_set:media.cast.proto.AggregatedFrameEvent.encoder_cpu_percent_utilized)
}

// optional int32 idealized_bitrate_percent_utilized = 11;
inline bool AggregatedFrameEvent::has_idealized_bitrate_percent_utilized() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AggregatedFrameEvent::set_has_idealized_bitrate_percent_utilized() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AggregatedFrameEvent::clear_has_idealized_bitrate_percent_utilized() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AggregatedFrameEvent::clear_idealized_bitrate_percent_utilized() {
  idealized_bitrate_percent_utilized_ = 0;
  clear_has_idealized_bitrate_percent_utilized();
}
inline ::google::protobuf::int32 AggregatedFrameEvent::idealized_bitrate_percent_utilized() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.AggregatedFrameEvent.idealized_bitrate_percent_utilized)
  return idealized_bitrate_percent_utilized_;
}
inline void AggregatedFrameEvent::set_idealized_bitrate_percent_utilized(::google::protobuf::int32 value) {
  set_has_idealized_bitrate_percent_utilized();
  idealized_bitrate_percent_utilized_ = value;
  // @@protoc_insertion_point(field_set:media.cast.proto.AggregatedFrameEvent.idealized_bitrate_percent_utilized)
}

// -------------------------------------------------------------------

// BasePacketEvent

// optional int32 packet_id = 1;
inline bool BasePacketEvent::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasePacketEvent::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasePacketEvent::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasePacketEvent::clear_packet_id() {
  packet_id_ = 0;
  clear_has_packet_id();
}
inline ::google::protobuf::int32 BasePacketEvent::packet_id() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.BasePacketEvent.packet_id)
  return packet_id_;
}
inline void BasePacketEvent::set_packet_id(::google::protobuf::int32 value) {
  set_has_packet_id();
  packet_id_ = value;
  // @@protoc_insertion_point(field_set:media.cast.proto.BasePacketEvent.packet_id)
}

// repeated .media.cast.proto.EventType event_type = 2 [packed = true];
inline int BasePacketEvent::event_type_size() const {
  return event_type_.size();
}
inline void BasePacketEvent::clear_event_type() {
  event_type_.Clear();
}
inline ::media::cast::proto::EventType BasePacketEvent::event_type(int index) const {
  // @@protoc_insertion_point(field_get:media.cast.proto.BasePacketEvent.event_type)
  return static_cast< ::media::cast::proto::EventType >(event_type_.Get(index));
}
inline void BasePacketEvent::set_event_type(int index, ::media::cast::proto::EventType value) {
  assert(::media::cast::proto::EventType_IsValid(value));
  event_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:media.cast.proto.BasePacketEvent.event_type)
}
inline void BasePacketEvent::add_event_type(::media::cast::proto::EventType value) {
  assert(::media::cast::proto::EventType_IsValid(value));
  event_type_.Add(value);
  // @@protoc_insertion_point(field_add:media.cast.proto.BasePacketEvent.event_type)
}
inline const ::google::protobuf::RepeatedField<int>&
BasePacketEvent::event_type() const {
  // @@protoc_insertion_point(field_list:media.cast.proto.BasePacketEvent.event_type)
  return event_type_;
}
inline ::google::protobuf::RepeatedField<int>*
BasePacketEvent::mutable_event_type() {
  // @@protoc_insertion_point(field_mutable_list:media.cast.proto.BasePacketEvent.event_type)
  return &event_type_;
}

// repeated int64 event_timestamp_ms = 3 [packed = true];
inline int BasePacketEvent::event_timestamp_ms_size() const {
  return event_timestamp_ms_.size();
}
inline void BasePacketEvent::clear_event_timestamp_ms() {
  event_timestamp_ms_.Clear();
}
inline ::google::protobuf::int64 BasePacketEvent::event_timestamp_ms(int index) const {
  // @@protoc_insertion_point(field_get:media.cast.proto.BasePacketEvent.event_timestamp_ms)
  return event_timestamp_ms_.Get(index);
}
inline void BasePacketEvent::set_event_timestamp_ms(int index, ::google::protobuf::int64 value) {
  event_timestamp_ms_.Set(index, value);
  // @@protoc_insertion_point(field_set:media.cast.proto.BasePacketEvent.event_timestamp_ms)
}
inline void BasePacketEvent::add_event_timestamp_ms(::google::protobuf::int64 value) {
  event_timestamp_ms_.Add(value);
  // @@protoc_insertion_point(field_add:media.cast.proto.BasePacketEvent.event_timestamp_ms)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
BasePacketEvent::event_timestamp_ms() const {
  // @@protoc_insertion_point(field_list:media.cast.proto.BasePacketEvent.event_timestamp_ms)
  return event_timestamp_ms_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
BasePacketEvent::mutable_event_timestamp_ms() {
  // @@protoc_insertion_point(field_mutable_list:media.cast.proto.BasePacketEvent.event_timestamp_ms)
  return &event_timestamp_ms_;
}

// optional int32 size = 4;
inline bool BasePacketEvent::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasePacketEvent::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasePacketEvent::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasePacketEvent::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 BasePacketEvent::size() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.BasePacketEvent.size)
  return size_;
}
inline void BasePacketEvent::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:media.cast.proto.BasePacketEvent.size)
}

// -------------------------------------------------------------------

// AggregatedPacketEvent

// optional uint32 relative_rtp_timestamp = 1;
inline bool AggregatedPacketEvent::has_relative_rtp_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AggregatedPacketEvent::set_has_relative_rtp_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AggregatedPacketEvent::clear_has_relative_rtp_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AggregatedPacketEvent::clear_relative_rtp_timestamp() {
  relative_rtp_timestamp_ = 0u;
  clear_has_relative_rtp_timestamp();
}
inline ::google::protobuf::uint32 AggregatedPacketEvent::relative_rtp_timestamp() const {
  // @@protoc_insertion_point(field_get:media.cast.proto.AggregatedPacketEvent.relative_rtp_timestamp)
  return relative_rtp_timestamp_;
}
inline void AggregatedPacketEvent::set_relative_rtp_timestamp(::google::protobuf::uint32 value) {
  set_has_relative_rtp_timestamp();
  relative_rtp_timestamp_ = value;
  // @@protoc_insertion_point(field_set:media.cast.proto.AggregatedPacketEvent.relative_rtp_timestamp)
}

// repeated .media.cast.proto.BasePacketEvent base_packet_event = 2;
inline int AggregatedPacketEvent::base_packet_event_size() const {
  return base_packet_event_.size();
}
inline void AggregatedPacketEvent::clear_base_packet_event() {
  base_packet_event_.Clear();
}
inline const ::media::cast::proto::BasePacketEvent& AggregatedPacketEvent::base_packet_event(int index) const {
  // @@protoc_insertion_point(field_get:media.cast.proto.AggregatedPacketEvent.base_packet_event)
  return base_packet_event_.Get(index);
}
inline ::media::cast::proto::BasePacketEvent* AggregatedPacketEvent::mutable_base_packet_event(int index) {
  // @@protoc_insertion_point(field_mutable:media.cast.proto.AggregatedPacketEvent.base_packet_event)
  return base_packet_event_.Mutable(index);
}
inline ::media::cast::proto::BasePacketEvent* AggregatedPacketEvent::add_base_packet_event() {
  // @@protoc_insertion_point(field_add:media.cast.proto.AggregatedPacketEvent.base_packet_event)
  return base_packet_event_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::media::cast::proto::BasePacketEvent >*
AggregatedPacketEvent::mutable_base_packet_event() {
  // @@protoc_insertion_point(field_mutable_list:media.cast.proto.AggregatedPacketEvent.base_packet_event)
  return &base_packet_event_;
}
inline const ::google::protobuf::RepeatedPtrField< ::media::cast::proto::BasePacketEvent >&
AggregatedPacketEvent::base_packet_event() const {
  // @@protoc_insertion_point(field_list:media.cast.proto.AggregatedPacketEvent.base_packet_event)
  return base_packet_event_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto
}  // namespace cast
}  // namespace media

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::media::cast::proto::EventType> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_raw_5fevents_2eproto__INCLUDED
