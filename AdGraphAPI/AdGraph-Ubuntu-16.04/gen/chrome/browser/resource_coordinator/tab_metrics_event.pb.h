// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tab_metrics_event.proto

#ifndef PROTOBUF_tab_5fmetrics_5fevent_2eproto__INCLUDED
#define PROTOBUF_tab_5fmetrics_5fevent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
namespace metrics {
class TabMetricsEvent;
class TabMetricsEventDefaultTypeInternal;
extern TabMetricsEventDefaultTypeInternal _TabMetricsEvent_default_instance_;
class WindowMetricsEvent;
class WindowMetricsEventDefaultTypeInternal;
extern WindowMetricsEventDefaultTypeInternal _WindowMetricsEvent_default_instance_;
}  // namespace metrics

namespace metrics {

namespace protobuf_tab_5fmetrics_5fevent_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_tab_5fmetrics_5fevent_2eproto

enum TabMetricsEvent_ContentType {
  TabMetricsEvent_ContentType_CONTENT_TYPE_UNKNOWN = 0,
  TabMetricsEvent_ContentType_CONTENT_TYPE_OTHER = 1,
  TabMetricsEvent_ContentType_CONTENT_TYPE_APPLICATION = 2,
  TabMetricsEvent_ContentType_CONTENT_TYPE_AUDIO = 3,
  TabMetricsEvent_ContentType_CONTENT_TYPE_IMAGE = 4,
  TabMetricsEvent_ContentType_CONTENT_TYPE_TEXT = 5,
  TabMetricsEvent_ContentType_CONTENT_TYPE_TEXT_HTML = 6,
  TabMetricsEvent_ContentType_CONTENT_TYPE_VIDEO = 7
};
bool TabMetricsEvent_ContentType_IsValid(int value);
const TabMetricsEvent_ContentType TabMetricsEvent_ContentType_ContentType_MIN = TabMetricsEvent_ContentType_CONTENT_TYPE_UNKNOWN;
const TabMetricsEvent_ContentType TabMetricsEvent_ContentType_ContentType_MAX = TabMetricsEvent_ContentType_CONTENT_TYPE_VIDEO;
const int TabMetricsEvent_ContentType_ContentType_ARRAYSIZE = TabMetricsEvent_ContentType_ContentType_MAX + 1;

enum WindowMetricsEvent_Type {
  WindowMetricsEvent_Type_TYPE_UNKNOWN = 0,
  WindowMetricsEvent_Type_TYPE_TABBED = 1,
  WindowMetricsEvent_Type_TYPE_POPUP = 2,
  WindowMetricsEvent_Type_TYPE_EXTENSION = 3,
  WindowMetricsEvent_Type_TYPE_APP = 4
};
bool WindowMetricsEvent_Type_IsValid(int value);
const WindowMetricsEvent_Type WindowMetricsEvent_Type_Type_MIN = WindowMetricsEvent_Type_TYPE_UNKNOWN;
const WindowMetricsEvent_Type WindowMetricsEvent_Type_Type_MAX = WindowMetricsEvent_Type_TYPE_APP;
const int WindowMetricsEvent_Type_Type_ARRAYSIZE = WindowMetricsEvent_Type_Type_MAX + 1;

enum WindowMetricsEvent_ShowState {
  WindowMetricsEvent_ShowState_SHOW_STATE_UNKNOWN = 0,
  WindowMetricsEvent_ShowState_SHOW_STATE_NORMAL = 1,
  WindowMetricsEvent_ShowState_SHOW_STATE_MINIMIZED = 2,
  WindowMetricsEvent_ShowState_SHOW_STATE_MAXIMIZED = 3,
  WindowMetricsEvent_ShowState_SHOW_STATE_FULLSCREEN = 4
};
bool WindowMetricsEvent_ShowState_IsValid(int value);
const WindowMetricsEvent_ShowState WindowMetricsEvent_ShowState_ShowState_MIN = WindowMetricsEvent_ShowState_SHOW_STATE_UNKNOWN;
const WindowMetricsEvent_ShowState WindowMetricsEvent_ShowState_ShowState_MAX = WindowMetricsEvent_ShowState_SHOW_STATE_FULLSCREEN;
const int WindowMetricsEvent_ShowState_ShowState_ARRAYSIZE = WindowMetricsEvent_ShowState_ShowState_MAX + 1;

// ===================================================================

class TabMetricsEvent : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:metrics.TabMetricsEvent) */ {
 public:
  TabMetricsEvent();
  virtual ~TabMetricsEvent();

  TabMetricsEvent(const TabMetricsEvent& from);

  inline TabMetricsEvent& operator=(const TabMetricsEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const TabMetricsEvent& default_instance();

  static inline const TabMetricsEvent* internal_default_instance() {
    return reinterpret_cast<const TabMetricsEvent*>(
               &_TabMetricsEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(TabMetricsEvent* other);

  // implements Message ----------------------------------------------

  inline TabMetricsEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  TabMetricsEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const TabMetricsEvent& from);
  void MergeFrom(const TabMetricsEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TabMetricsEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TabMetricsEvent_ContentType ContentType;
  static const ContentType CONTENT_TYPE_UNKNOWN =
    TabMetricsEvent_ContentType_CONTENT_TYPE_UNKNOWN;
  static const ContentType CONTENT_TYPE_OTHER =
    TabMetricsEvent_ContentType_CONTENT_TYPE_OTHER;
  static const ContentType CONTENT_TYPE_APPLICATION =
    TabMetricsEvent_ContentType_CONTENT_TYPE_APPLICATION;
  static const ContentType CONTENT_TYPE_AUDIO =
    TabMetricsEvent_ContentType_CONTENT_TYPE_AUDIO;
  static const ContentType CONTENT_TYPE_IMAGE =
    TabMetricsEvent_ContentType_CONTENT_TYPE_IMAGE;
  static const ContentType CONTENT_TYPE_TEXT =
    TabMetricsEvent_ContentType_CONTENT_TYPE_TEXT;
  static const ContentType CONTENT_TYPE_TEXT_HTML =
    TabMetricsEvent_ContentType_CONTENT_TYPE_TEXT_HTML;
  static const ContentType CONTENT_TYPE_VIDEO =
    TabMetricsEvent_ContentType_CONTENT_TYPE_VIDEO;
  static inline bool ContentType_IsValid(int value) {
    return TabMetricsEvent_ContentType_IsValid(value);
  }
  static const ContentType ContentType_MIN =
    TabMetricsEvent_ContentType_ContentType_MIN;
  static const ContentType ContentType_MAX =
    TabMetricsEvent_ContentType_ContentType_MAX;
  static const int ContentType_ARRAYSIZE =
    TabMetricsEvent_ContentType_ContentType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional .metrics.TabMetricsEvent.ContentType content_type = 1;
  bool has_content_type() const;
  void clear_content_type();
  static const int kContentTypeFieldNumber = 1;
  ::metrics::TabMetricsEvent_ContentType content_type() const;
  void set_content_type(::metrics::TabMetricsEvent_ContentType value);

  // @@protoc_insertion_point(class_scope:metrics.TabMetricsEvent)
 private:
  void set_has_content_type();
  void clear_has_content_type();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int content_type_;
  friend struct protobuf_tab_5fmetrics_5fevent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WindowMetricsEvent : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:metrics.WindowMetricsEvent) */ {
 public:
  WindowMetricsEvent();
  virtual ~WindowMetricsEvent();

  WindowMetricsEvent(const WindowMetricsEvent& from);

  inline WindowMetricsEvent& operator=(const WindowMetricsEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const WindowMetricsEvent& default_instance();

  static inline const WindowMetricsEvent* internal_default_instance() {
    return reinterpret_cast<const WindowMetricsEvent*>(
               &_WindowMetricsEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(WindowMetricsEvent* other);

  // implements Message ----------------------------------------------

  inline WindowMetricsEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  WindowMetricsEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const WindowMetricsEvent& from);
  void MergeFrom(const WindowMetricsEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WindowMetricsEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WindowMetricsEvent_Type Type;
  static const Type TYPE_UNKNOWN =
    WindowMetricsEvent_Type_TYPE_UNKNOWN;
  static const Type TYPE_TABBED =
    WindowMetricsEvent_Type_TYPE_TABBED;
  static const Type TYPE_POPUP =
    WindowMetricsEvent_Type_TYPE_POPUP;
  static const Type TYPE_EXTENSION =
    WindowMetricsEvent_Type_TYPE_EXTENSION;
  static const Type TYPE_APP =
    WindowMetricsEvent_Type_TYPE_APP;
  static inline bool Type_IsValid(int value) {
    return WindowMetricsEvent_Type_IsValid(value);
  }
  static const Type Type_MIN =
    WindowMetricsEvent_Type_Type_MIN;
  static const Type Type_MAX =
    WindowMetricsEvent_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    WindowMetricsEvent_Type_Type_ARRAYSIZE;

  typedef WindowMetricsEvent_ShowState ShowState;
  static const ShowState SHOW_STATE_UNKNOWN =
    WindowMetricsEvent_ShowState_SHOW_STATE_UNKNOWN;
  static const ShowState SHOW_STATE_NORMAL =
    WindowMetricsEvent_ShowState_SHOW_STATE_NORMAL;
  static const ShowState SHOW_STATE_MINIMIZED =
    WindowMetricsEvent_ShowState_SHOW_STATE_MINIMIZED;
  static const ShowState SHOW_STATE_MAXIMIZED =
    WindowMetricsEvent_ShowState_SHOW_STATE_MAXIMIZED;
  static const ShowState SHOW_STATE_FULLSCREEN =
    WindowMetricsEvent_ShowState_SHOW_STATE_FULLSCREEN;
  static inline bool ShowState_IsValid(int value) {
    return WindowMetricsEvent_ShowState_IsValid(value);
  }
  static const ShowState ShowState_MIN =
    WindowMetricsEvent_ShowState_ShowState_MIN;
  static const ShowState ShowState_MAX =
    WindowMetricsEvent_ShowState_ShowState_MAX;
  static const int ShowState_ARRAYSIZE =
    WindowMetricsEvent_ShowState_ShowState_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional .metrics.WindowMetricsEvent.Type type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::metrics::WindowMetricsEvent_Type type() const;
  void set_type(::metrics::WindowMetricsEvent_Type value);

  // optional .metrics.WindowMetricsEvent.ShowState show_state = 2;
  bool has_show_state() const;
  void clear_show_state();
  static const int kShowStateFieldNumber = 2;
  ::metrics::WindowMetricsEvent_ShowState show_state() const;
  void set_show_state(::metrics::WindowMetricsEvent_ShowState value);

  // @@protoc_insertion_point(class_scope:metrics.WindowMetricsEvent)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_show_state();
  void clear_has_show_state();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int type_;
  int show_state_;
  friend struct protobuf_tab_5fmetrics_5fevent_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TabMetricsEvent

// optional .metrics.TabMetricsEvent.ContentType content_type = 1;
inline bool TabMetricsEvent::has_content_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TabMetricsEvent::set_has_content_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TabMetricsEvent::clear_has_content_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TabMetricsEvent::clear_content_type() {
  content_type_ = 0;
  clear_has_content_type();
}
inline ::metrics::TabMetricsEvent_ContentType TabMetricsEvent::content_type() const {
  // @@protoc_insertion_point(field_get:metrics.TabMetricsEvent.content_type)
  return static_cast< ::metrics::TabMetricsEvent_ContentType >(content_type_);
}
inline void TabMetricsEvent::set_content_type(::metrics::TabMetricsEvent_ContentType value) {
  assert(::metrics::TabMetricsEvent_ContentType_IsValid(value));
  set_has_content_type();
  content_type_ = value;
  // @@protoc_insertion_point(field_set:metrics.TabMetricsEvent.content_type)
}

// -------------------------------------------------------------------

// WindowMetricsEvent

// optional .metrics.WindowMetricsEvent.Type type = 1;
inline bool WindowMetricsEvent::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WindowMetricsEvent::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WindowMetricsEvent::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WindowMetricsEvent::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::metrics::WindowMetricsEvent_Type WindowMetricsEvent::type() const {
  // @@protoc_insertion_point(field_get:metrics.WindowMetricsEvent.type)
  return static_cast< ::metrics::WindowMetricsEvent_Type >(type_);
}
inline void WindowMetricsEvent::set_type(::metrics::WindowMetricsEvent_Type value) {
  assert(::metrics::WindowMetricsEvent_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:metrics.WindowMetricsEvent.type)
}

// optional .metrics.WindowMetricsEvent.ShowState show_state = 2;
inline bool WindowMetricsEvent::has_show_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WindowMetricsEvent::set_has_show_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WindowMetricsEvent::clear_has_show_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WindowMetricsEvent::clear_show_state() {
  show_state_ = 0;
  clear_has_show_state();
}
inline ::metrics::WindowMetricsEvent_ShowState WindowMetricsEvent::show_state() const {
  // @@protoc_insertion_point(field_get:metrics.WindowMetricsEvent.show_state)
  return static_cast< ::metrics::WindowMetricsEvent_ShowState >(show_state_);
}
inline void WindowMetricsEvent::set_show_state(::metrics::WindowMetricsEvent_ShowState value) {
  assert(::metrics::WindowMetricsEvent_ShowState_IsValid(value));
  set_has_show_state();
  show_state_ = value;
  // @@protoc_insertion_point(field_set:metrics.WindowMetricsEvent.show_state)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace metrics

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::metrics::TabMetricsEvent_ContentType> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::metrics::WindowMetricsEvent_Type> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::metrics::WindowMetricsEvent_ShowState> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tab_5fmetrics_5fevent_2eproto__INCLUDED
