// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: site_characteristics.proto

#ifndef PROTOBUF_site_5fcharacteristics_2eproto__INCLUDED
#define PROTOBUF_site_5fcharacteristics_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
class SiteCharacteristicsFeatureProto;
class SiteCharacteristicsFeatureProtoDefaultTypeInternal;
extern SiteCharacteristicsFeatureProtoDefaultTypeInternal _SiteCharacteristicsFeatureProto_default_instance_;
class SiteCharacteristicsProto;
class SiteCharacteristicsProtoDefaultTypeInternal;
extern SiteCharacteristicsProtoDefaultTypeInternal _SiteCharacteristicsProto_default_instance_;

namespace protobuf_site_5fcharacteristics_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_site_5fcharacteristics_2eproto

// ===================================================================

class SiteCharacteristicsFeatureProto : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:SiteCharacteristicsFeatureProto) */ {
 public:
  SiteCharacteristicsFeatureProto();
  virtual ~SiteCharacteristicsFeatureProto();

  SiteCharacteristicsFeatureProto(const SiteCharacteristicsFeatureProto& from);

  inline SiteCharacteristicsFeatureProto& operator=(const SiteCharacteristicsFeatureProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SiteCharacteristicsFeatureProto& default_instance();

  static inline const SiteCharacteristicsFeatureProto* internal_default_instance() {
    return reinterpret_cast<const SiteCharacteristicsFeatureProto*>(
               &_SiteCharacteristicsFeatureProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(SiteCharacteristicsFeatureProto* other);

  // implements Message ----------------------------------------------

  inline SiteCharacteristicsFeatureProto* New() const PROTOBUF_FINAL { return New(NULL); }

  SiteCharacteristicsFeatureProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SiteCharacteristicsFeatureProto& from);
  void MergeFrom(const SiteCharacteristicsFeatureProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SiteCharacteristicsFeatureProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 observation_duration = 1;
  bool has_observation_duration() const;
  void clear_observation_duration();
  static const int kObservationDurationFieldNumber = 1;
  ::google::protobuf::int64 observation_duration() const;
  void set_observation_duration(::google::protobuf::int64 value);

  // required int64 use_timestamp = 2;
  bool has_use_timestamp() const;
  void clear_use_timestamp();
  static const int kUseTimestampFieldNumber = 2;
  ::google::protobuf::int64 use_timestamp() const;
  void set_use_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:SiteCharacteristicsFeatureProto)
 private:
  void set_has_observation_duration();
  void clear_has_observation_duration();
  void set_has_use_timestamp();
  void clear_has_use_timestamp();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 observation_duration_;
  ::google::protobuf::int64 use_timestamp_;
  friend struct protobuf_site_5fcharacteristics_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SiteCharacteristicsProto : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:SiteCharacteristicsProto) */ {
 public:
  SiteCharacteristicsProto();
  virtual ~SiteCharacteristicsProto();

  SiteCharacteristicsProto(const SiteCharacteristicsProto& from);

  inline SiteCharacteristicsProto& operator=(const SiteCharacteristicsProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SiteCharacteristicsProto& default_instance();

  static inline const SiteCharacteristicsProto* internal_default_instance() {
    return reinterpret_cast<const SiteCharacteristicsProto*>(
               &_SiteCharacteristicsProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(SiteCharacteristicsProto* other);

  // implements Message ----------------------------------------------

  inline SiteCharacteristicsProto* New() const PROTOBUF_FINAL { return New(NULL); }

  SiteCharacteristicsProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SiteCharacteristicsProto& from);
  void MergeFrom(const SiteCharacteristicsProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SiteCharacteristicsProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .SiteCharacteristicsFeatureProto updates_favicon_in_background = 2;
  bool has_updates_favicon_in_background() const;
  void clear_updates_favicon_in_background();
  static const int kUpdatesFaviconInBackgroundFieldNumber = 2;
  const ::SiteCharacteristicsFeatureProto& updates_favicon_in_background() const;
  ::SiteCharacteristicsFeatureProto* mutable_updates_favicon_in_background();
  ::SiteCharacteristicsFeatureProto* release_updates_favicon_in_background();
  void set_allocated_updates_favicon_in_background(::SiteCharacteristicsFeatureProto* updates_favicon_in_background);

  // required .SiteCharacteristicsFeatureProto updates_title_in_background = 3;
  bool has_updates_title_in_background() const;
  void clear_updates_title_in_background();
  static const int kUpdatesTitleInBackgroundFieldNumber = 3;
  const ::SiteCharacteristicsFeatureProto& updates_title_in_background() const;
  ::SiteCharacteristicsFeatureProto* mutable_updates_title_in_background();
  ::SiteCharacteristicsFeatureProto* release_updates_title_in_background();
  void set_allocated_updates_title_in_background(::SiteCharacteristicsFeatureProto* updates_title_in_background);

  // required .SiteCharacteristicsFeatureProto uses_audio_in_background = 4;
  bool has_uses_audio_in_background() const;
  void clear_uses_audio_in_background();
  static const int kUsesAudioInBackgroundFieldNumber = 4;
  const ::SiteCharacteristicsFeatureProto& uses_audio_in_background() const;
  ::SiteCharacteristicsFeatureProto* mutable_uses_audio_in_background();
  ::SiteCharacteristicsFeatureProto* release_uses_audio_in_background();
  void set_allocated_uses_audio_in_background(::SiteCharacteristicsFeatureProto* uses_audio_in_background);

  // required .SiteCharacteristicsFeatureProto uses_notifications_in_background = 5;
  bool has_uses_notifications_in_background() const;
  void clear_uses_notifications_in_background();
  static const int kUsesNotificationsInBackgroundFieldNumber = 5;
  const ::SiteCharacteristicsFeatureProto& uses_notifications_in_background() const;
  ::SiteCharacteristicsFeatureProto* mutable_uses_notifications_in_background();
  ::SiteCharacteristicsFeatureProto* release_uses_notifications_in_background();
  void set_allocated_uses_notifications_in_background(::SiteCharacteristicsFeatureProto* uses_notifications_in_background);

  // required uint32 last_loaded = 1;
  bool has_last_loaded() const;
  void clear_last_loaded();
  static const int kLastLoadedFieldNumber = 1;
  ::google::protobuf::uint32 last_loaded() const;
  void set_last_loaded(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SiteCharacteristicsProto)
 private:
  void set_has_last_loaded();
  void clear_has_last_loaded();
  void set_has_updates_favicon_in_background();
  void clear_has_updates_favicon_in_background();
  void set_has_updates_title_in_background();
  void clear_has_updates_title_in_background();
  void set_has_uses_audio_in_background();
  void clear_has_uses_audio_in_background();
  void set_has_uses_notifications_in_background();
  void clear_has_uses_notifications_in_background();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::SiteCharacteristicsFeatureProto* updates_favicon_in_background_;
  ::SiteCharacteristicsFeatureProto* updates_title_in_background_;
  ::SiteCharacteristicsFeatureProto* uses_audio_in_background_;
  ::SiteCharacteristicsFeatureProto* uses_notifications_in_background_;
  ::google::protobuf::uint32 last_loaded_;
  friend struct protobuf_site_5fcharacteristics_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteCharacteristicsFeatureProto

// required int64 observation_duration = 1;
inline bool SiteCharacteristicsFeatureProto::has_observation_duration() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SiteCharacteristicsFeatureProto::set_has_observation_duration() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SiteCharacteristicsFeatureProto::clear_has_observation_duration() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SiteCharacteristicsFeatureProto::clear_observation_duration() {
  observation_duration_ = GOOGLE_LONGLONG(0);
  clear_has_observation_duration();
}
inline ::google::protobuf::int64 SiteCharacteristicsFeatureProto::observation_duration() const {
  // @@protoc_insertion_point(field_get:SiteCharacteristicsFeatureProto.observation_duration)
  return observation_duration_;
}
inline void SiteCharacteristicsFeatureProto::set_observation_duration(::google::protobuf::int64 value) {
  set_has_observation_duration();
  observation_duration_ = value;
  // @@protoc_insertion_point(field_set:SiteCharacteristicsFeatureProto.observation_duration)
}

// required int64 use_timestamp = 2;
inline bool SiteCharacteristicsFeatureProto::has_use_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SiteCharacteristicsFeatureProto::set_has_use_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SiteCharacteristicsFeatureProto::clear_has_use_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SiteCharacteristicsFeatureProto::clear_use_timestamp() {
  use_timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_use_timestamp();
}
inline ::google::protobuf::int64 SiteCharacteristicsFeatureProto::use_timestamp() const {
  // @@protoc_insertion_point(field_get:SiteCharacteristicsFeatureProto.use_timestamp)
  return use_timestamp_;
}
inline void SiteCharacteristicsFeatureProto::set_use_timestamp(::google::protobuf::int64 value) {
  set_has_use_timestamp();
  use_timestamp_ = value;
  // @@protoc_insertion_point(field_set:SiteCharacteristicsFeatureProto.use_timestamp)
}

// -------------------------------------------------------------------

// SiteCharacteristicsProto

// required uint32 last_loaded = 1;
inline bool SiteCharacteristicsProto::has_last_loaded() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SiteCharacteristicsProto::set_has_last_loaded() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SiteCharacteristicsProto::clear_has_last_loaded() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SiteCharacteristicsProto::clear_last_loaded() {
  last_loaded_ = 0u;
  clear_has_last_loaded();
}
inline ::google::protobuf::uint32 SiteCharacteristicsProto::last_loaded() const {
  // @@protoc_insertion_point(field_get:SiteCharacteristicsProto.last_loaded)
  return last_loaded_;
}
inline void SiteCharacteristicsProto::set_last_loaded(::google::protobuf::uint32 value) {
  set_has_last_loaded();
  last_loaded_ = value;
  // @@protoc_insertion_point(field_set:SiteCharacteristicsProto.last_loaded)
}

// required .SiteCharacteristicsFeatureProto updates_favicon_in_background = 2;
inline bool SiteCharacteristicsProto::has_updates_favicon_in_background() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SiteCharacteristicsProto::set_has_updates_favicon_in_background() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SiteCharacteristicsProto::clear_has_updates_favicon_in_background() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SiteCharacteristicsProto::clear_updates_favicon_in_background() {
  if (updates_favicon_in_background_ != NULL) updates_favicon_in_background_->::SiteCharacteristicsFeatureProto::Clear();
  clear_has_updates_favicon_in_background();
}
inline const ::SiteCharacteristicsFeatureProto& SiteCharacteristicsProto::updates_favicon_in_background() const {
  // @@protoc_insertion_point(field_get:SiteCharacteristicsProto.updates_favicon_in_background)
  return updates_favicon_in_background_ != NULL ? *updates_favicon_in_background_
                         : *::SiteCharacteristicsFeatureProto::internal_default_instance();
}
inline ::SiteCharacteristicsFeatureProto* SiteCharacteristicsProto::mutable_updates_favicon_in_background() {
  set_has_updates_favicon_in_background();
  if (updates_favicon_in_background_ == NULL) {
    updates_favicon_in_background_ = new ::SiteCharacteristicsFeatureProto;
  }
  // @@protoc_insertion_point(field_mutable:SiteCharacteristicsProto.updates_favicon_in_background)
  return updates_favicon_in_background_;
}
inline ::SiteCharacteristicsFeatureProto* SiteCharacteristicsProto::release_updates_favicon_in_background() {
  // @@protoc_insertion_point(field_release:SiteCharacteristicsProto.updates_favicon_in_background)
  clear_has_updates_favicon_in_background();
  ::SiteCharacteristicsFeatureProto* temp = updates_favicon_in_background_;
  updates_favicon_in_background_ = NULL;
  return temp;
}
inline void SiteCharacteristicsProto::set_allocated_updates_favicon_in_background(::SiteCharacteristicsFeatureProto* updates_favicon_in_background) {
  delete updates_favicon_in_background_;
  updates_favicon_in_background_ = updates_favicon_in_background;
  if (updates_favicon_in_background) {
    set_has_updates_favicon_in_background();
  } else {
    clear_has_updates_favicon_in_background();
  }
  // @@protoc_insertion_point(field_set_allocated:SiteCharacteristicsProto.updates_favicon_in_background)
}

// required .SiteCharacteristicsFeatureProto updates_title_in_background = 3;
inline bool SiteCharacteristicsProto::has_updates_title_in_background() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SiteCharacteristicsProto::set_has_updates_title_in_background() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SiteCharacteristicsProto::clear_has_updates_title_in_background() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SiteCharacteristicsProto::clear_updates_title_in_background() {
  if (updates_title_in_background_ != NULL) updates_title_in_background_->::SiteCharacteristicsFeatureProto::Clear();
  clear_has_updates_title_in_background();
}
inline const ::SiteCharacteristicsFeatureProto& SiteCharacteristicsProto::updates_title_in_background() const {
  // @@protoc_insertion_point(field_get:SiteCharacteristicsProto.updates_title_in_background)
  return updates_title_in_background_ != NULL ? *updates_title_in_background_
                         : *::SiteCharacteristicsFeatureProto::internal_default_instance();
}
inline ::SiteCharacteristicsFeatureProto* SiteCharacteristicsProto::mutable_updates_title_in_background() {
  set_has_updates_title_in_background();
  if (updates_title_in_background_ == NULL) {
    updates_title_in_background_ = new ::SiteCharacteristicsFeatureProto;
  }
  // @@protoc_insertion_point(field_mutable:SiteCharacteristicsProto.updates_title_in_background)
  return updates_title_in_background_;
}
inline ::SiteCharacteristicsFeatureProto* SiteCharacteristicsProto::release_updates_title_in_background() {
  // @@protoc_insertion_point(field_release:SiteCharacteristicsProto.updates_title_in_background)
  clear_has_updates_title_in_background();
  ::SiteCharacteristicsFeatureProto* temp = updates_title_in_background_;
  updates_title_in_background_ = NULL;
  return temp;
}
inline void SiteCharacteristicsProto::set_allocated_updates_title_in_background(::SiteCharacteristicsFeatureProto* updates_title_in_background) {
  delete updates_title_in_background_;
  updates_title_in_background_ = updates_title_in_background;
  if (updates_title_in_background) {
    set_has_updates_title_in_background();
  } else {
    clear_has_updates_title_in_background();
  }
  // @@protoc_insertion_point(field_set_allocated:SiteCharacteristicsProto.updates_title_in_background)
}

// required .SiteCharacteristicsFeatureProto uses_audio_in_background = 4;
inline bool SiteCharacteristicsProto::has_uses_audio_in_background() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SiteCharacteristicsProto::set_has_uses_audio_in_background() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SiteCharacteristicsProto::clear_has_uses_audio_in_background() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SiteCharacteristicsProto::clear_uses_audio_in_background() {
  if (uses_audio_in_background_ != NULL) uses_audio_in_background_->::SiteCharacteristicsFeatureProto::Clear();
  clear_has_uses_audio_in_background();
}
inline const ::SiteCharacteristicsFeatureProto& SiteCharacteristicsProto::uses_audio_in_background() const {
  // @@protoc_insertion_point(field_get:SiteCharacteristicsProto.uses_audio_in_background)
  return uses_audio_in_background_ != NULL ? *uses_audio_in_background_
                         : *::SiteCharacteristicsFeatureProto::internal_default_instance();
}
inline ::SiteCharacteristicsFeatureProto* SiteCharacteristicsProto::mutable_uses_audio_in_background() {
  set_has_uses_audio_in_background();
  if (uses_audio_in_background_ == NULL) {
    uses_audio_in_background_ = new ::SiteCharacteristicsFeatureProto;
  }
  // @@protoc_insertion_point(field_mutable:SiteCharacteristicsProto.uses_audio_in_background)
  return uses_audio_in_background_;
}
inline ::SiteCharacteristicsFeatureProto* SiteCharacteristicsProto::release_uses_audio_in_background() {
  // @@protoc_insertion_point(field_release:SiteCharacteristicsProto.uses_audio_in_background)
  clear_has_uses_audio_in_background();
  ::SiteCharacteristicsFeatureProto* temp = uses_audio_in_background_;
  uses_audio_in_background_ = NULL;
  return temp;
}
inline void SiteCharacteristicsProto::set_allocated_uses_audio_in_background(::SiteCharacteristicsFeatureProto* uses_audio_in_background) {
  delete uses_audio_in_background_;
  uses_audio_in_background_ = uses_audio_in_background;
  if (uses_audio_in_background) {
    set_has_uses_audio_in_background();
  } else {
    clear_has_uses_audio_in_background();
  }
  // @@protoc_insertion_point(field_set_allocated:SiteCharacteristicsProto.uses_audio_in_background)
}

// required .SiteCharacteristicsFeatureProto uses_notifications_in_background = 5;
inline bool SiteCharacteristicsProto::has_uses_notifications_in_background() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SiteCharacteristicsProto::set_has_uses_notifications_in_background() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SiteCharacteristicsProto::clear_has_uses_notifications_in_background() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SiteCharacteristicsProto::clear_uses_notifications_in_background() {
  if (uses_notifications_in_background_ != NULL) uses_notifications_in_background_->::SiteCharacteristicsFeatureProto::Clear();
  clear_has_uses_notifications_in_background();
}
inline const ::SiteCharacteristicsFeatureProto& SiteCharacteristicsProto::uses_notifications_in_background() const {
  // @@protoc_insertion_point(field_get:SiteCharacteristicsProto.uses_notifications_in_background)
  return uses_notifications_in_background_ != NULL ? *uses_notifications_in_background_
                         : *::SiteCharacteristicsFeatureProto::internal_default_instance();
}
inline ::SiteCharacteristicsFeatureProto* SiteCharacteristicsProto::mutable_uses_notifications_in_background() {
  set_has_uses_notifications_in_background();
  if (uses_notifications_in_background_ == NULL) {
    uses_notifications_in_background_ = new ::SiteCharacteristicsFeatureProto;
  }
  // @@protoc_insertion_point(field_mutable:SiteCharacteristicsProto.uses_notifications_in_background)
  return uses_notifications_in_background_;
}
inline ::SiteCharacteristicsFeatureProto* SiteCharacteristicsProto::release_uses_notifications_in_background() {
  // @@protoc_insertion_point(field_release:SiteCharacteristicsProto.uses_notifications_in_background)
  clear_has_uses_notifications_in_background();
  ::SiteCharacteristicsFeatureProto* temp = uses_notifications_in_background_;
  uses_notifications_in_background_ = NULL;
  return temp;
}
inline void SiteCharacteristicsProto::set_allocated_uses_notifications_in_background(::SiteCharacteristicsFeatureProto* uses_notifications_in_background) {
  delete uses_notifications_in_background_;
  uses_notifications_in_background_ = uses_notifications_in_background;
  if (uses_notifications_in_background) {
    set_has_uses_notifications_in_background();
  } else {
    clear_has_uses_notifications_in_background();
  }
  // @@protoc_insertion_point(field_set_allocated:SiteCharacteristicsProto.uses_notifications_in_background)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_site_5fcharacteristics_2eproto__INCLUDED
