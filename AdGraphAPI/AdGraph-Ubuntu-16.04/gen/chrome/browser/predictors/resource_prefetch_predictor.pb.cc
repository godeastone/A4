// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resource_prefetch_predictor.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "resource_prefetch_predictor.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace predictors {
class RedirectStatDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RedirectStat> {
} _RedirectStat_default_instance_;
class RedirectDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RedirectData> {
} _RedirectData_default_instance_;
class OriginStatDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OriginStat> {
} _OriginStat_default_instance_;
class OriginDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OriginData> {
} _OriginData_default_instance_;

namespace protobuf_resource_5fprefetch_5fpredictor_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _RedirectStat_default_instance_.Shutdown();
  _RedirectData_default_instance_.Shutdown();
  _OriginStat_default_instance_.Shutdown();
  _OriginData_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _RedirectStat_default_instance_.DefaultConstruct();
  _RedirectData_default_instance_.DefaultConstruct();
  _OriginStat_default_instance_.DefaultConstruct();
  _OriginData_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_resource_5fprefetch_5fpredictor_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedirectStat::kUrlFieldNumber;
const int RedirectStat::kNumberOfHitsFieldNumber;
const int RedirectStat::kNumberOfMissesFieldNumber;
const int RedirectStat::kConsecutiveMissesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedirectStat::RedirectStat()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_resource_5fprefetch_5fpredictor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:predictors.RedirectStat)
}
RedirectStat::RedirectStat(const RedirectStat& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  ::memcpy(&number_of_hits_, &from.number_of_hits_,
    static_cast<size_t>(reinterpret_cast<char*>(&consecutive_misses_) -
    reinterpret_cast<char*>(&number_of_hits_)) + sizeof(consecutive_misses_));
  // @@protoc_insertion_point(copy_constructor:predictors.RedirectStat)
}

void RedirectStat::SharedCtor() {
  _cached_size_ = 0;
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&number_of_hits_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&consecutive_misses_) -
      reinterpret_cast<char*>(&number_of_hits_)) + sizeof(consecutive_misses_));
}

RedirectStat::~RedirectStat() {
  // @@protoc_insertion_point(destructor:predictors.RedirectStat)
  SharedDtor();
}

void RedirectStat::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RedirectStat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RedirectStat& RedirectStat::default_instance() {
  protobuf_resource_5fprefetch_5fpredictor_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedirectStat* RedirectStat::New(::google::protobuf::Arena* arena) const {
  RedirectStat* n = new RedirectStat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedirectStat::Clear() {
// @@protoc_insertion_point(message_clear_start:predictors.RedirectStat)
  if (has_url()) {
    GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*url_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&number_of_hits_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&consecutive_misses_) -
        reinterpret_cast<char*>(&number_of_hits_)) + sizeof(consecutive_misses_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedirectStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:predictors.RedirectStat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 number_of_hits = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_number_of_hits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_of_hits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 number_of_misses = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_number_of_misses();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_of_misses_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 consecutive_misses = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_consecutive_misses();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &consecutive_misses_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:predictors.RedirectStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:predictors.RedirectStat)
  return false;
#undef DO_
}

void RedirectStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:predictors.RedirectStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // optional uint32 number_of_hits = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->number_of_hits(), output);
  }

  // optional uint32 number_of_misses = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->number_of_misses(), output);
  }

  // optional uint32 consecutive_misses = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->consecutive_misses(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:predictors.RedirectStat)
}

size_t RedirectStat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:predictors.RedirectStat)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 15u) {
    // optional string url = 1;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional uint32 number_of_hits = 2;
    if (has_number_of_hits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->number_of_hits());
    }

    // optional uint32 number_of_misses = 3;
    if (has_number_of_misses()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->number_of_misses());
    }

    // optional uint32 consecutive_misses = 4;
    if (has_consecutive_misses()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->consecutive_misses());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedirectStat::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RedirectStat*>(&from));
}

void RedirectStat::MergeFrom(const RedirectStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:predictors.RedirectStat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      number_of_hits_ = from.number_of_hits_;
    }
    if (cached_has_bits & 0x00000004u) {
      number_of_misses_ = from.number_of_misses_;
    }
    if (cached_has_bits & 0x00000008u) {
      consecutive_misses_ = from.consecutive_misses_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RedirectStat::CopyFrom(const RedirectStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:predictors.RedirectStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectStat::IsInitialized() const {
  return true;
}

void RedirectStat::Swap(RedirectStat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedirectStat::InternalSwap(RedirectStat* other) {
  url_.Swap(&other->url_);
  std::swap(number_of_hits_, other->number_of_hits_);
  std::swap(number_of_misses_, other->number_of_misses_);
  std::swap(consecutive_misses_, other->consecutive_misses_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string RedirectStat::GetTypeName() const {
  return "predictors.RedirectStat";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedirectStat

// optional string url = 1;
bool RedirectStat::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RedirectStat::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
void RedirectStat::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void RedirectStat::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& RedirectStat::url() const {
  // @@protoc_insertion_point(field_get:predictors.RedirectStat.url)
  return url_.GetNoArena();
}
void RedirectStat::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:predictors.RedirectStat.url)
}
#if LANG_CXX11
void RedirectStat::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:predictors.RedirectStat.url)
}
#endif
void RedirectStat::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:predictors.RedirectStat.url)
}
void RedirectStat::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:predictors.RedirectStat.url)
}
::std::string* RedirectStat::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:predictors.RedirectStat.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RedirectStat::release_url() {
  // @@protoc_insertion_point(field_release:predictors.RedirectStat.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RedirectStat::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:predictors.RedirectStat.url)
}

// optional uint32 number_of_hits = 2;
bool RedirectStat::has_number_of_hits() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RedirectStat::set_has_number_of_hits() {
  _has_bits_[0] |= 0x00000002u;
}
void RedirectStat::clear_has_number_of_hits() {
  _has_bits_[0] &= ~0x00000002u;
}
void RedirectStat::clear_number_of_hits() {
  number_of_hits_ = 0u;
  clear_has_number_of_hits();
}
::google::protobuf::uint32 RedirectStat::number_of_hits() const {
  // @@protoc_insertion_point(field_get:predictors.RedirectStat.number_of_hits)
  return number_of_hits_;
}
void RedirectStat::set_number_of_hits(::google::protobuf::uint32 value) {
  set_has_number_of_hits();
  number_of_hits_ = value;
  // @@protoc_insertion_point(field_set:predictors.RedirectStat.number_of_hits)
}

// optional uint32 number_of_misses = 3;
bool RedirectStat::has_number_of_misses() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RedirectStat::set_has_number_of_misses() {
  _has_bits_[0] |= 0x00000004u;
}
void RedirectStat::clear_has_number_of_misses() {
  _has_bits_[0] &= ~0x00000004u;
}
void RedirectStat::clear_number_of_misses() {
  number_of_misses_ = 0u;
  clear_has_number_of_misses();
}
::google::protobuf::uint32 RedirectStat::number_of_misses() const {
  // @@protoc_insertion_point(field_get:predictors.RedirectStat.number_of_misses)
  return number_of_misses_;
}
void RedirectStat::set_number_of_misses(::google::protobuf::uint32 value) {
  set_has_number_of_misses();
  number_of_misses_ = value;
  // @@protoc_insertion_point(field_set:predictors.RedirectStat.number_of_misses)
}

// optional uint32 consecutive_misses = 4;
bool RedirectStat::has_consecutive_misses() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RedirectStat::set_has_consecutive_misses() {
  _has_bits_[0] |= 0x00000008u;
}
void RedirectStat::clear_has_consecutive_misses() {
  _has_bits_[0] &= ~0x00000008u;
}
void RedirectStat::clear_consecutive_misses() {
  consecutive_misses_ = 0u;
  clear_has_consecutive_misses();
}
::google::protobuf::uint32 RedirectStat::consecutive_misses() const {
  // @@protoc_insertion_point(field_get:predictors.RedirectStat.consecutive_misses)
  return consecutive_misses_;
}
void RedirectStat::set_consecutive_misses(::google::protobuf::uint32 value) {
  set_has_consecutive_misses();
  consecutive_misses_ = value;
  // @@protoc_insertion_point(field_set:predictors.RedirectStat.consecutive_misses)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedirectData::kPrimaryKeyFieldNumber;
const int RedirectData::kLastVisitTimeFieldNumber;
const int RedirectData::kRedirectEndpointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedirectData::RedirectData()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_resource_5fprefetch_5fpredictor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:predictors.RedirectData)
}
RedirectData::RedirectData(const RedirectData& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      redirect_endpoints_(from.redirect_endpoints_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  primary_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_primary_key()) {
    primary_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primary_key_);
  }
  last_visit_time_ = from.last_visit_time_;
  // @@protoc_insertion_point(copy_constructor:predictors.RedirectData)
}

void RedirectData::SharedCtor() {
  _cached_size_ = 0;
  primary_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_visit_time_ = GOOGLE_ULONGLONG(0);
}

RedirectData::~RedirectData() {
  // @@protoc_insertion_point(destructor:predictors.RedirectData)
  SharedDtor();
}

void RedirectData::SharedDtor() {
  primary_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RedirectData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RedirectData& RedirectData::default_instance() {
  protobuf_resource_5fprefetch_5fpredictor_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedirectData* RedirectData::New(::google::protobuf::Arena* arena) const {
  RedirectData* n = new RedirectData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedirectData::Clear() {
// @@protoc_insertion_point(message_clear_start:predictors.RedirectData)
  redirect_endpoints_.Clear();
  if (has_primary_key()) {
    GOOGLE_DCHECK(!primary_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*primary_key_.UnsafeRawStringPointer())->clear();
  }
  last_visit_time_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedirectData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:predictors.RedirectData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string primary_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_primary_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 last_visit_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_last_visit_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_visit_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .predictors.RedirectStat redirect_endpoints = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_redirect_endpoints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:predictors.RedirectData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:predictors.RedirectData)
  return false;
#undef DO_
}

void RedirectData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:predictors.RedirectData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string primary_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->primary_key(), output);
  }

  // optional uint64 last_visit_time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->last_visit_time(), output);
  }

  // repeated .predictors.RedirectStat redirect_endpoints = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->redirect_endpoints_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->redirect_endpoints(static_cast<int>(i)), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:predictors.RedirectData)
}

size_t RedirectData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:predictors.RedirectData)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated .predictors.RedirectStat redirect_endpoints = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->redirect_endpoints_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->redirect_endpoints(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string primary_key = 1;
    if (has_primary_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->primary_key());
    }

    // optional uint64 last_visit_time = 2;
    if (has_last_visit_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->last_visit_time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedirectData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RedirectData*>(&from));
}

void RedirectData::MergeFrom(const RedirectData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:predictors.RedirectData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  redirect_endpoints_.MergeFrom(from.redirect_endpoints_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_primary_key();
      primary_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primary_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      last_visit_time_ = from.last_visit_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RedirectData::CopyFrom(const RedirectData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:predictors.RedirectData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectData::IsInitialized() const {
  return true;
}

void RedirectData::Swap(RedirectData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedirectData::InternalSwap(RedirectData* other) {
  redirect_endpoints_.InternalSwap(&other->redirect_endpoints_);
  primary_key_.Swap(&other->primary_key_);
  std::swap(last_visit_time_, other->last_visit_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string RedirectData::GetTypeName() const {
  return "predictors.RedirectData";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedirectData

// optional string primary_key = 1;
bool RedirectData::has_primary_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RedirectData::set_has_primary_key() {
  _has_bits_[0] |= 0x00000001u;
}
void RedirectData::clear_has_primary_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void RedirectData::clear_primary_key() {
  primary_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_primary_key();
}
const ::std::string& RedirectData::primary_key() const {
  // @@protoc_insertion_point(field_get:predictors.RedirectData.primary_key)
  return primary_key_.GetNoArena();
}
void RedirectData::set_primary_key(const ::std::string& value) {
  set_has_primary_key();
  primary_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:predictors.RedirectData.primary_key)
}
#if LANG_CXX11
void RedirectData::set_primary_key(::std::string&& value) {
  set_has_primary_key();
  primary_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:predictors.RedirectData.primary_key)
}
#endif
void RedirectData::set_primary_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_primary_key();
  primary_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:predictors.RedirectData.primary_key)
}
void RedirectData::set_primary_key(const char* value, size_t size) {
  set_has_primary_key();
  primary_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:predictors.RedirectData.primary_key)
}
::std::string* RedirectData::mutable_primary_key() {
  set_has_primary_key();
  // @@protoc_insertion_point(field_mutable:predictors.RedirectData.primary_key)
  return primary_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RedirectData::release_primary_key() {
  // @@protoc_insertion_point(field_release:predictors.RedirectData.primary_key)
  clear_has_primary_key();
  return primary_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RedirectData::set_allocated_primary_key(::std::string* primary_key) {
  if (primary_key != NULL) {
    set_has_primary_key();
  } else {
    clear_has_primary_key();
  }
  primary_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), primary_key);
  // @@protoc_insertion_point(field_set_allocated:predictors.RedirectData.primary_key)
}

// optional uint64 last_visit_time = 2;
bool RedirectData::has_last_visit_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RedirectData::set_has_last_visit_time() {
  _has_bits_[0] |= 0x00000002u;
}
void RedirectData::clear_has_last_visit_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void RedirectData::clear_last_visit_time() {
  last_visit_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_visit_time();
}
::google::protobuf::uint64 RedirectData::last_visit_time() const {
  // @@protoc_insertion_point(field_get:predictors.RedirectData.last_visit_time)
  return last_visit_time_;
}
void RedirectData::set_last_visit_time(::google::protobuf::uint64 value) {
  set_has_last_visit_time();
  last_visit_time_ = value;
  // @@protoc_insertion_point(field_set:predictors.RedirectData.last_visit_time)
}

// repeated .predictors.RedirectStat redirect_endpoints = 3;
int RedirectData::redirect_endpoints_size() const {
  return redirect_endpoints_.size();
}
void RedirectData::clear_redirect_endpoints() {
  redirect_endpoints_.Clear();
}
const ::predictors::RedirectStat& RedirectData::redirect_endpoints(int index) const {
  // @@protoc_insertion_point(field_get:predictors.RedirectData.redirect_endpoints)
  return redirect_endpoints_.Get(index);
}
::predictors::RedirectStat* RedirectData::mutable_redirect_endpoints(int index) {
  // @@protoc_insertion_point(field_mutable:predictors.RedirectData.redirect_endpoints)
  return redirect_endpoints_.Mutable(index);
}
::predictors::RedirectStat* RedirectData::add_redirect_endpoints() {
  // @@protoc_insertion_point(field_add:predictors.RedirectData.redirect_endpoints)
  return redirect_endpoints_.Add();
}
::google::protobuf::RepeatedPtrField< ::predictors::RedirectStat >*
RedirectData::mutable_redirect_endpoints() {
  // @@protoc_insertion_point(field_mutable_list:predictors.RedirectData.redirect_endpoints)
  return &redirect_endpoints_;
}
const ::google::protobuf::RepeatedPtrField< ::predictors::RedirectStat >&
RedirectData::redirect_endpoints() const {
  // @@protoc_insertion_point(field_list:predictors.RedirectData.redirect_endpoints)
  return redirect_endpoints_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OriginStat::kOriginFieldNumber;
const int OriginStat::kNumberOfHitsFieldNumber;
const int OriginStat::kNumberOfMissesFieldNumber;
const int OriginStat::kConsecutiveMissesFieldNumber;
const int OriginStat::kAveragePositionFieldNumber;
const int OriginStat::kAlwaysAccessNetworkFieldNumber;
const int OriginStat::kAccessedNetworkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OriginStat::OriginStat()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_resource_5fprefetch_5fpredictor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:predictors.OriginStat)
}
OriginStat::OriginStat(const OriginStat& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  origin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_origin()) {
    origin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_);
  }
  ::memcpy(&number_of_hits_, &from.number_of_hits_,
    static_cast<size_t>(reinterpret_cast<char*>(&accessed_network_) -
    reinterpret_cast<char*>(&number_of_hits_)) + sizeof(accessed_network_));
  // @@protoc_insertion_point(copy_constructor:predictors.OriginStat)
}

void OriginStat::SharedCtor() {
  _cached_size_ = 0;
  origin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&number_of_hits_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accessed_network_) -
      reinterpret_cast<char*>(&number_of_hits_)) + sizeof(accessed_network_));
}

OriginStat::~OriginStat() {
  // @@protoc_insertion_point(destructor:predictors.OriginStat)
  SharedDtor();
}

void OriginStat::SharedDtor() {
  origin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OriginStat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const OriginStat& OriginStat::default_instance() {
  protobuf_resource_5fprefetch_5fpredictor_2eproto::InitDefaults();
  return *internal_default_instance();
}

OriginStat* OriginStat::New(::google::protobuf::Arena* arena) const {
  OriginStat* n = new OriginStat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OriginStat::Clear() {
// @@protoc_insertion_point(message_clear_start:predictors.OriginStat)
  if (has_origin()) {
    GOOGLE_DCHECK(!origin_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*origin_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 126u) {
    ::memset(&number_of_hits_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&accessed_network_) -
        reinterpret_cast<char*>(&number_of_hits_)) + sizeof(accessed_network_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OriginStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:predictors.OriginStat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string origin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_origin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 number_of_hits = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_number_of_hits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_of_hits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 number_of_misses = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_number_of_misses();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_of_misses_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 consecutive_misses = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_consecutive_misses();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &consecutive_misses_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double average_position = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_average_position();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &average_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool always_access_network = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_always_access_network();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &always_access_network_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool accessed_network = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_accessed_network();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &accessed_network_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:predictors.OriginStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:predictors.OriginStat)
  return false;
#undef DO_
}

void OriginStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:predictors.OriginStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string origin = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->origin(), output);
  }

  // optional uint32 number_of_hits = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->number_of_hits(), output);
  }

  // optional uint32 number_of_misses = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->number_of_misses(), output);
  }

  // optional uint32 consecutive_misses = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->consecutive_misses(), output);
  }

  // optional double average_position = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->average_position(), output);
  }

  // optional bool always_access_network = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->always_access_network(), output);
  }

  // optional bool accessed_network = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->accessed_network(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:predictors.OriginStat)
}

size_t OriginStat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:predictors.OriginStat)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 127u) {
    // optional string origin = 1;
    if (has_origin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->origin());
    }

    // optional uint32 number_of_hits = 2;
    if (has_number_of_hits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->number_of_hits());
    }

    // optional uint32 number_of_misses = 3;
    if (has_number_of_misses()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->number_of_misses());
    }

    // optional double average_position = 5;
    if (has_average_position()) {
      total_size += 1 + 8;
    }

    // optional uint32 consecutive_misses = 4;
    if (has_consecutive_misses()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->consecutive_misses());
    }

    // optional bool always_access_network = 6;
    if (has_always_access_network()) {
      total_size += 1 + 1;
    }

    // optional bool accessed_network = 7;
    if (has_accessed_network()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OriginStat::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OriginStat*>(&from));
}

void OriginStat::MergeFrom(const OriginStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:predictors.OriginStat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_origin();
      origin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_);
    }
    if (cached_has_bits & 0x00000002u) {
      number_of_hits_ = from.number_of_hits_;
    }
    if (cached_has_bits & 0x00000004u) {
      number_of_misses_ = from.number_of_misses_;
    }
    if (cached_has_bits & 0x00000008u) {
      average_position_ = from.average_position_;
    }
    if (cached_has_bits & 0x00000010u) {
      consecutive_misses_ = from.consecutive_misses_;
    }
    if (cached_has_bits & 0x00000020u) {
      always_access_network_ = from.always_access_network_;
    }
    if (cached_has_bits & 0x00000040u) {
      accessed_network_ = from.accessed_network_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OriginStat::CopyFrom(const OriginStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:predictors.OriginStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OriginStat::IsInitialized() const {
  return true;
}

void OriginStat::Swap(OriginStat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OriginStat::InternalSwap(OriginStat* other) {
  origin_.Swap(&other->origin_);
  std::swap(number_of_hits_, other->number_of_hits_);
  std::swap(number_of_misses_, other->number_of_misses_);
  std::swap(average_position_, other->average_position_);
  std::swap(consecutive_misses_, other->consecutive_misses_);
  std::swap(always_access_network_, other->always_access_network_);
  std::swap(accessed_network_, other->accessed_network_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string OriginStat::GetTypeName() const {
  return "predictors.OriginStat";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OriginStat

// optional string origin = 1;
bool OriginStat::has_origin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OriginStat::set_has_origin() {
  _has_bits_[0] |= 0x00000001u;
}
void OriginStat::clear_has_origin() {
  _has_bits_[0] &= ~0x00000001u;
}
void OriginStat::clear_origin() {
  origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_origin();
}
const ::std::string& OriginStat::origin() const {
  // @@protoc_insertion_point(field_get:predictors.OriginStat.origin)
  return origin_.GetNoArena();
}
void OriginStat::set_origin(const ::std::string& value) {
  set_has_origin();
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:predictors.OriginStat.origin)
}
#if LANG_CXX11
void OriginStat::set_origin(::std::string&& value) {
  set_has_origin();
  origin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:predictors.OriginStat.origin)
}
#endif
void OriginStat::set_origin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_origin();
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:predictors.OriginStat.origin)
}
void OriginStat::set_origin(const char* value, size_t size) {
  set_has_origin();
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:predictors.OriginStat.origin)
}
::std::string* OriginStat::mutable_origin() {
  set_has_origin();
  // @@protoc_insertion_point(field_mutable:predictors.OriginStat.origin)
  return origin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OriginStat::release_origin() {
  // @@protoc_insertion_point(field_release:predictors.OriginStat.origin)
  clear_has_origin();
  return origin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OriginStat::set_allocated_origin(::std::string* origin) {
  if (origin != NULL) {
    set_has_origin();
  } else {
    clear_has_origin();
  }
  origin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), origin);
  // @@protoc_insertion_point(field_set_allocated:predictors.OriginStat.origin)
}

// optional uint32 number_of_hits = 2;
bool OriginStat::has_number_of_hits() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OriginStat::set_has_number_of_hits() {
  _has_bits_[0] |= 0x00000002u;
}
void OriginStat::clear_has_number_of_hits() {
  _has_bits_[0] &= ~0x00000002u;
}
void OriginStat::clear_number_of_hits() {
  number_of_hits_ = 0u;
  clear_has_number_of_hits();
}
::google::protobuf::uint32 OriginStat::number_of_hits() const {
  // @@protoc_insertion_point(field_get:predictors.OriginStat.number_of_hits)
  return number_of_hits_;
}
void OriginStat::set_number_of_hits(::google::protobuf::uint32 value) {
  set_has_number_of_hits();
  number_of_hits_ = value;
  // @@protoc_insertion_point(field_set:predictors.OriginStat.number_of_hits)
}

// optional uint32 number_of_misses = 3;
bool OriginStat::has_number_of_misses() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OriginStat::set_has_number_of_misses() {
  _has_bits_[0] |= 0x00000004u;
}
void OriginStat::clear_has_number_of_misses() {
  _has_bits_[0] &= ~0x00000004u;
}
void OriginStat::clear_number_of_misses() {
  number_of_misses_ = 0u;
  clear_has_number_of_misses();
}
::google::protobuf::uint32 OriginStat::number_of_misses() const {
  // @@protoc_insertion_point(field_get:predictors.OriginStat.number_of_misses)
  return number_of_misses_;
}
void OriginStat::set_number_of_misses(::google::protobuf::uint32 value) {
  set_has_number_of_misses();
  number_of_misses_ = value;
  // @@protoc_insertion_point(field_set:predictors.OriginStat.number_of_misses)
}

// optional uint32 consecutive_misses = 4;
bool OriginStat::has_consecutive_misses() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void OriginStat::set_has_consecutive_misses() {
  _has_bits_[0] |= 0x00000010u;
}
void OriginStat::clear_has_consecutive_misses() {
  _has_bits_[0] &= ~0x00000010u;
}
void OriginStat::clear_consecutive_misses() {
  consecutive_misses_ = 0u;
  clear_has_consecutive_misses();
}
::google::protobuf::uint32 OriginStat::consecutive_misses() const {
  // @@protoc_insertion_point(field_get:predictors.OriginStat.consecutive_misses)
  return consecutive_misses_;
}
void OriginStat::set_consecutive_misses(::google::protobuf::uint32 value) {
  set_has_consecutive_misses();
  consecutive_misses_ = value;
  // @@protoc_insertion_point(field_set:predictors.OriginStat.consecutive_misses)
}

// optional double average_position = 5;
bool OriginStat::has_average_position() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OriginStat::set_has_average_position() {
  _has_bits_[0] |= 0x00000008u;
}
void OriginStat::clear_has_average_position() {
  _has_bits_[0] &= ~0x00000008u;
}
void OriginStat::clear_average_position() {
  average_position_ = 0;
  clear_has_average_position();
}
double OriginStat::average_position() const {
  // @@protoc_insertion_point(field_get:predictors.OriginStat.average_position)
  return average_position_;
}
void OriginStat::set_average_position(double value) {
  set_has_average_position();
  average_position_ = value;
  // @@protoc_insertion_point(field_set:predictors.OriginStat.average_position)
}

// optional bool always_access_network = 6;
bool OriginStat::has_always_access_network() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void OriginStat::set_has_always_access_network() {
  _has_bits_[0] |= 0x00000020u;
}
void OriginStat::clear_has_always_access_network() {
  _has_bits_[0] &= ~0x00000020u;
}
void OriginStat::clear_always_access_network() {
  always_access_network_ = false;
  clear_has_always_access_network();
}
bool OriginStat::always_access_network() const {
  // @@protoc_insertion_point(field_get:predictors.OriginStat.always_access_network)
  return always_access_network_;
}
void OriginStat::set_always_access_network(bool value) {
  set_has_always_access_network();
  always_access_network_ = value;
  // @@protoc_insertion_point(field_set:predictors.OriginStat.always_access_network)
}

// optional bool accessed_network = 7;
bool OriginStat::has_accessed_network() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void OriginStat::set_has_accessed_network() {
  _has_bits_[0] |= 0x00000040u;
}
void OriginStat::clear_has_accessed_network() {
  _has_bits_[0] &= ~0x00000040u;
}
void OriginStat::clear_accessed_network() {
  accessed_network_ = false;
  clear_has_accessed_network();
}
bool OriginStat::accessed_network() const {
  // @@protoc_insertion_point(field_get:predictors.OriginStat.accessed_network)
  return accessed_network_;
}
void OriginStat::set_accessed_network(bool value) {
  set_has_accessed_network();
  accessed_network_ = value;
  // @@protoc_insertion_point(field_set:predictors.OriginStat.accessed_network)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OriginData::kHostFieldNumber;
const int OriginData::kLastVisitTimeFieldNumber;
const int OriginData::kOriginsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OriginData::OriginData()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_resource_5fprefetch_5fpredictor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:predictors.OriginData)
}
OriginData::OriginData(const OriginData& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      origins_(from.origins_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host()) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  last_visit_time_ = from.last_visit_time_;
  // @@protoc_insertion_point(copy_constructor:predictors.OriginData)
}

void OriginData::SharedCtor() {
  _cached_size_ = 0;
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_visit_time_ = GOOGLE_ULONGLONG(0);
}

OriginData::~OriginData() {
  // @@protoc_insertion_point(destructor:predictors.OriginData)
  SharedDtor();
}

void OriginData::SharedDtor() {
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OriginData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const OriginData& OriginData::default_instance() {
  protobuf_resource_5fprefetch_5fpredictor_2eproto::InitDefaults();
  return *internal_default_instance();
}

OriginData* OriginData::New(::google::protobuf::Arena* arena) const {
  OriginData* n = new OriginData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OriginData::Clear() {
// @@protoc_insertion_point(message_clear_start:predictors.OriginData)
  origins_.Clear();
  if (has_host()) {
    GOOGLE_DCHECK(!host_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*host_.UnsafeRawStringPointer())->clear();
  }
  last_visit_time_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OriginData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:predictors.OriginData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string host = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 last_visit_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_last_visit_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_visit_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .predictors.OriginStat origins = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_origins()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:predictors.OriginData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:predictors.OriginData)
  return false;
#undef DO_
}

void OriginData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:predictors.OriginData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string host = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->host(), output);
  }

  // optional uint64 last_visit_time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->last_visit_time(), output);
  }

  // repeated .predictors.OriginStat origins = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->origins_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->origins(static_cast<int>(i)), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:predictors.OriginData)
}

size_t OriginData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:predictors.OriginData)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated .predictors.OriginStat origins = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->origins_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->origins(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string host = 1;
    if (has_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host());
    }

    // optional uint64 last_visit_time = 2;
    if (has_last_visit_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->last_visit_time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OriginData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OriginData*>(&from));
}

void OriginData::MergeFrom(const OriginData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:predictors.OriginData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  origins_.MergeFrom(from.origins_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_host();
      host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
    }
    if (cached_has_bits & 0x00000002u) {
      last_visit_time_ = from.last_visit_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OriginData::CopyFrom(const OriginData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:predictors.OriginData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OriginData::IsInitialized() const {
  return true;
}

void OriginData::Swap(OriginData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OriginData::InternalSwap(OriginData* other) {
  origins_.InternalSwap(&other->origins_);
  host_.Swap(&other->host_);
  std::swap(last_visit_time_, other->last_visit_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string OriginData::GetTypeName() const {
  return "predictors.OriginData";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OriginData

// optional string host = 1;
bool OriginData::has_host() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OriginData::set_has_host() {
  _has_bits_[0] |= 0x00000001u;
}
void OriginData::clear_has_host() {
  _has_bits_[0] &= ~0x00000001u;
}
void OriginData::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
const ::std::string& OriginData::host() const {
  // @@protoc_insertion_point(field_get:predictors.OriginData.host)
  return host_.GetNoArena();
}
void OriginData::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:predictors.OriginData.host)
}
#if LANG_CXX11
void OriginData::set_host(::std::string&& value) {
  set_has_host();
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:predictors.OriginData.host)
}
#endif
void OriginData::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:predictors.OriginData.host)
}
void OriginData::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:predictors.OriginData.host)
}
::std::string* OriginData::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:predictors.OriginData.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OriginData::release_host() {
  // @@protoc_insertion_point(field_release:predictors.OriginData.host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OriginData::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:predictors.OriginData.host)
}

// optional uint64 last_visit_time = 2;
bool OriginData::has_last_visit_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OriginData::set_has_last_visit_time() {
  _has_bits_[0] |= 0x00000002u;
}
void OriginData::clear_has_last_visit_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void OriginData::clear_last_visit_time() {
  last_visit_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_visit_time();
}
::google::protobuf::uint64 OriginData::last_visit_time() const {
  // @@protoc_insertion_point(field_get:predictors.OriginData.last_visit_time)
  return last_visit_time_;
}
void OriginData::set_last_visit_time(::google::protobuf::uint64 value) {
  set_has_last_visit_time();
  last_visit_time_ = value;
  // @@protoc_insertion_point(field_set:predictors.OriginData.last_visit_time)
}

// repeated .predictors.OriginStat origins = 3;
int OriginData::origins_size() const {
  return origins_.size();
}
void OriginData::clear_origins() {
  origins_.Clear();
}
const ::predictors::OriginStat& OriginData::origins(int index) const {
  // @@protoc_insertion_point(field_get:predictors.OriginData.origins)
  return origins_.Get(index);
}
::predictors::OriginStat* OriginData::mutable_origins(int index) {
  // @@protoc_insertion_point(field_mutable:predictors.OriginData.origins)
  return origins_.Mutable(index);
}
::predictors::OriginStat* OriginData::add_origins() {
  // @@protoc_insertion_point(field_add:predictors.OriginData.origins)
  return origins_.Add();
}
::google::protobuf::RepeatedPtrField< ::predictors::OriginStat >*
OriginData::mutable_origins() {
  // @@protoc_insertion_point(field_mutable_list:predictors.OriginData.origins)
  return &origins_;
}
const ::google::protobuf::RepeatedPtrField< ::predictors::OriginStat >&
OriginData::origins() const {
  // @@protoc_insertion_point(field_list:predictors.OriginData.origins)
  return origins_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace predictors

// @@protoc_insertion_point(global_scope)
