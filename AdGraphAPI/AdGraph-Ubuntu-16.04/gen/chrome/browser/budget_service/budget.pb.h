// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: budget.proto

#ifndef PROTOBUF_budget_2eproto__INCLUDED
#define PROTOBUF_budget_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
namespace budget_service {
class Budget;
class BudgetDefaultTypeInternal;
extern BudgetDefaultTypeInternal _Budget_default_instance_;
class BudgetChunk;
class BudgetChunkDefaultTypeInternal;
extern BudgetChunkDefaultTypeInternal _BudgetChunk_default_instance_;
}  // namespace budget_service

namespace budget_service {

namespace protobuf_budget_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_budget_2eproto

// ===================================================================

class Budget : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:budget_service.Budget) */ {
 public:
  Budget();
  virtual ~Budget();

  Budget(const Budget& from);

  inline Budget& operator=(const Budget& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const Budget& default_instance();

  static inline const Budget* internal_default_instance() {
    return reinterpret_cast<const Budget*>(
               &_Budget_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(Budget* other);

  // implements Message ----------------------------------------------

  inline Budget* New() const PROTOBUF_FINAL { return New(NULL); }

  Budget* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Budget& from);
  void MergeFrom(const Budget& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Budget* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .budget_service.BudgetChunk budget = 1;
  int budget_size() const;
  void clear_budget();
  static const int kBudgetFieldNumber = 1;
  const ::budget_service::BudgetChunk& budget(int index) const;
  ::budget_service::BudgetChunk* mutable_budget(int index);
  ::budget_service::BudgetChunk* add_budget();
  ::google::protobuf::RepeatedPtrField< ::budget_service::BudgetChunk >*
      mutable_budget();
  const ::google::protobuf::RepeatedPtrField< ::budget_service::BudgetChunk >&
      budget() const;

  // optional int64 engagement_last_updated = 2;
  bool has_engagement_last_updated() const;
  void clear_engagement_last_updated();
  static const int kEngagementLastUpdatedFieldNumber = 2;
  ::google::protobuf::int64 engagement_last_updated() const;
  void set_engagement_last_updated(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:budget_service.Budget)
 private:
  void set_has_engagement_last_updated();
  void clear_has_engagement_last_updated();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::budget_service::BudgetChunk > budget_;
  ::google::protobuf::int64 engagement_last_updated_;
  friend struct protobuf_budget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BudgetChunk : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:budget_service.BudgetChunk) */ {
 public:
  BudgetChunk();
  virtual ~BudgetChunk();

  BudgetChunk(const BudgetChunk& from);

  inline BudgetChunk& operator=(const BudgetChunk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const BudgetChunk& default_instance();

  static inline const BudgetChunk* internal_default_instance() {
    return reinterpret_cast<const BudgetChunk*>(
               &_BudgetChunk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(BudgetChunk* other);

  // implements Message ----------------------------------------------

  inline BudgetChunk* New() const PROTOBUF_FINAL { return New(NULL); }

  BudgetChunk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const BudgetChunk& from);
  void MergeFrom(const BudgetChunk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BudgetChunk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double amount = 1;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 1;
  double amount() const;
  void set_amount(double value);

  // optional int64 expiration = 2;
  bool has_expiration() const;
  void clear_expiration();
  static const int kExpirationFieldNumber = 2;
  ::google::protobuf::int64 expiration() const;
  void set_expiration(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:budget_service.BudgetChunk)
 private:
  void set_has_amount();
  void clear_has_amount();
  void set_has_expiration();
  void clear_has_expiration();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double amount_;
  ::google::protobuf::int64 expiration_;
  friend struct protobuf_budget_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Budget

// repeated .budget_service.BudgetChunk budget = 1;
inline int Budget::budget_size() const {
  return budget_.size();
}
inline void Budget::clear_budget() {
  budget_.Clear();
}
inline const ::budget_service::BudgetChunk& Budget::budget(int index) const {
  // @@protoc_insertion_point(field_get:budget_service.Budget.budget)
  return budget_.Get(index);
}
inline ::budget_service::BudgetChunk* Budget::mutable_budget(int index) {
  // @@protoc_insertion_point(field_mutable:budget_service.Budget.budget)
  return budget_.Mutable(index);
}
inline ::budget_service::BudgetChunk* Budget::add_budget() {
  // @@protoc_insertion_point(field_add:budget_service.Budget.budget)
  return budget_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::budget_service::BudgetChunk >*
Budget::mutable_budget() {
  // @@protoc_insertion_point(field_mutable_list:budget_service.Budget.budget)
  return &budget_;
}
inline const ::google::protobuf::RepeatedPtrField< ::budget_service::BudgetChunk >&
Budget::budget() const {
  // @@protoc_insertion_point(field_list:budget_service.Budget.budget)
  return budget_;
}

// optional int64 engagement_last_updated = 2;
inline bool Budget::has_engagement_last_updated() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Budget::set_has_engagement_last_updated() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Budget::clear_has_engagement_last_updated() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Budget::clear_engagement_last_updated() {
  engagement_last_updated_ = GOOGLE_LONGLONG(0);
  clear_has_engagement_last_updated();
}
inline ::google::protobuf::int64 Budget::engagement_last_updated() const {
  // @@protoc_insertion_point(field_get:budget_service.Budget.engagement_last_updated)
  return engagement_last_updated_;
}
inline void Budget::set_engagement_last_updated(::google::protobuf::int64 value) {
  set_has_engagement_last_updated();
  engagement_last_updated_ = value;
  // @@protoc_insertion_point(field_set:budget_service.Budget.engagement_last_updated)
}

// -------------------------------------------------------------------

// BudgetChunk

// optional double amount = 1;
inline bool BudgetChunk::has_amount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BudgetChunk::set_has_amount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BudgetChunk::clear_has_amount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BudgetChunk::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline double BudgetChunk::amount() const {
  // @@protoc_insertion_point(field_get:budget_service.BudgetChunk.amount)
  return amount_;
}
inline void BudgetChunk::set_amount(double value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:budget_service.BudgetChunk.amount)
}

// optional int64 expiration = 2;
inline bool BudgetChunk::has_expiration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BudgetChunk::set_has_expiration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BudgetChunk::clear_has_expiration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BudgetChunk::clear_expiration() {
  expiration_ = GOOGLE_LONGLONG(0);
  clear_has_expiration();
}
inline ::google::protobuf::int64 BudgetChunk::expiration() const {
  // @@protoc_insertion_point(field_get:budget_service.BudgetChunk.expiration)
  return expiration_;
}
inline void BudgetChunk::set_expiration(::google::protobuf::int64 value) {
  set_has_expiration();
  expiration_ = value;
  // @@protoc_insertion_point(field_set:budget_service.BudgetChunk.expiration)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace budget_service

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_budget_2eproto__INCLUDED
