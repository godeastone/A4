// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: budget.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "budget.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace budget_service {
class BudgetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Budget> {
} _Budget_default_instance_;
class BudgetChunkDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BudgetChunk> {
} _BudgetChunk_default_instance_;

namespace protobuf_budget_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _Budget_default_instance_.Shutdown();
  _BudgetChunk_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Budget_default_instance_.DefaultConstruct();
  _BudgetChunk_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_budget_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Budget::kBudgetFieldNumber;
const int Budget::kEngagementLastUpdatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Budget::Budget()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_budget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:budget_service.Budget)
}
Budget::Budget(const Budget& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      budget_(from.budget_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  engagement_last_updated_ = from.engagement_last_updated_;
  // @@protoc_insertion_point(copy_constructor:budget_service.Budget)
}

void Budget::SharedCtor() {
  _cached_size_ = 0;
  engagement_last_updated_ = GOOGLE_LONGLONG(0);
}

Budget::~Budget() {
  // @@protoc_insertion_point(destructor:budget_service.Budget)
  SharedDtor();
}

void Budget::SharedDtor() {
}

void Budget::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Budget& Budget::default_instance() {
  protobuf_budget_2eproto::InitDefaults();
  return *internal_default_instance();
}

Budget* Budget::New(::google::protobuf::Arena* arena) const {
  Budget* n = new Budget;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Budget::Clear() {
// @@protoc_insertion_point(message_clear_start:budget_service.Budget)
  budget_.Clear();
  engagement_last_updated_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Budget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:budget_service.Budget)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .budget_service.BudgetChunk budget = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_budget()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 engagement_last_updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_engagement_last_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &engagement_last_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:budget_service.Budget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:budget_service.Budget)
  return false;
#undef DO_
}

void Budget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:budget_service.Budget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .budget_service.BudgetChunk budget = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->budget_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->budget(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int64 engagement_last_updated = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->engagement_last_updated(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:budget_service.Budget)
}

size_t Budget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:budget_service.Budget)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated .budget_service.BudgetChunk budget = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->budget_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->budget(static_cast<int>(i)));
    }
  }

  // optional int64 engagement_last_updated = 2;
  if (has_engagement_last_updated()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->engagement_last_updated());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Budget::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Budget*>(&from));
}

void Budget::MergeFrom(const Budget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:budget_service.Budget)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  budget_.MergeFrom(from.budget_);
  if (from.has_engagement_last_updated()) {
    set_engagement_last_updated(from.engagement_last_updated());
  }
}

void Budget::CopyFrom(const Budget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:budget_service.Budget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Budget::IsInitialized() const {
  return true;
}

void Budget::Swap(Budget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Budget::InternalSwap(Budget* other) {
  budget_.InternalSwap(&other->budget_);
  std::swap(engagement_last_updated_, other->engagement_last_updated_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Budget::GetTypeName() const {
  return "budget_service.Budget";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Budget

// repeated .budget_service.BudgetChunk budget = 1;
int Budget::budget_size() const {
  return budget_.size();
}
void Budget::clear_budget() {
  budget_.Clear();
}
const ::budget_service::BudgetChunk& Budget::budget(int index) const {
  // @@protoc_insertion_point(field_get:budget_service.Budget.budget)
  return budget_.Get(index);
}
::budget_service::BudgetChunk* Budget::mutable_budget(int index) {
  // @@protoc_insertion_point(field_mutable:budget_service.Budget.budget)
  return budget_.Mutable(index);
}
::budget_service::BudgetChunk* Budget::add_budget() {
  // @@protoc_insertion_point(field_add:budget_service.Budget.budget)
  return budget_.Add();
}
::google::protobuf::RepeatedPtrField< ::budget_service::BudgetChunk >*
Budget::mutable_budget() {
  // @@protoc_insertion_point(field_mutable_list:budget_service.Budget.budget)
  return &budget_;
}
const ::google::protobuf::RepeatedPtrField< ::budget_service::BudgetChunk >&
Budget::budget() const {
  // @@protoc_insertion_point(field_list:budget_service.Budget.budget)
  return budget_;
}

// optional int64 engagement_last_updated = 2;
bool Budget::has_engagement_last_updated() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Budget::set_has_engagement_last_updated() {
  _has_bits_[0] |= 0x00000001u;
}
void Budget::clear_has_engagement_last_updated() {
  _has_bits_[0] &= ~0x00000001u;
}
void Budget::clear_engagement_last_updated() {
  engagement_last_updated_ = GOOGLE_LONGLONG(0);
  clear_has_engagement_last_updated();
}
::google::protobuf::int64 Budget::engagement_last_updated() const {
  // @@protoc_insertion_point(field_get:budget_service.Budget.engagement_last_updated)
  return engagement_last_updated_;
}
void Budget::set_engagement_last_updated(::google::protobuf::int64 value) {
  set_has_engagement_last_updated();
  engagement_last_updated_ = value;
  // @@protoc_insertion_point(field_set:budget_service.Budget.engagement_last_updated)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BudgetChunk::kAmountFieldNumber;
const int BudgetChunk::kExpirationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BudgetChunk::BudgetChunk()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_budget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:budget_service.BudgetChunk)
}
BudgetChunk::BudgetChunk(const BudgetChunk& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&expiration_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(expiration_));
  // @@protoc_insertion_point(copy_constructor:budget_service.BudgetChunk)
}

void BudgetChunk::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expiration_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(expiration_));
}

BudgetChunk::~BudgetChunk() {
  // @@protoc_insertion_point(destructor:budget_service.BudgetChunk)
  SharedDtor();
}

void BudgetChunk::SharedDtor() {
}

void BudgetChunk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BudgetChunk& BudgetChunk::default_instance() {
  protobuf_budget_2eproto::InitDefaults();
  return *internal_default_instance();
}

BudgetChunk* BudgetChunk::New(::google::protobuf::Arena* arena) const {
  BudgetChunk* n = new BudgetChunk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BudgetChunk::Clear() {
// @@protoc_insertion_point(message_clear_start:budget_service.BudgetChunk)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&amount_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&expiration_) -
        reinterpret_cast<char*>(&amount_)) + sizeof(expiration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BudgetChunk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:budget_service.BudgetChunk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double amount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 expiration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_expiration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &expiration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:budget_service.BudgetChunk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:budget_service.BudgetChunk)
  return false;
#undef DO_
}

void BudgetChunk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:budget_service.BudgetChunk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double amount = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->amount(), output);
  }

  // optional int64 expiration = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->expiration(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:budget_service.BudgetChunk)
}

size_t BudgetChunk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:budget_service.BudgetChunk)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional double amount = 1;
    if (has_amount()) {
      total_size += 1 + 8;
    }

    // optional int64 expiration = 2;
    if (has_expiration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->expiration());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BudgetChunk::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BudgetChunk*>(&from));
}

void BudgetChunk::MergeFrom(const BudgetChunk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:budget_service.BudgetChunk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      amount_ = from.amount_;
    }
    if (cached_has_bits & 0x00000002u) {
      expiration_ = from.expiration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BudgetChunk::CopyFrom(const BudgetChunk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:budget_service.BudgetChunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BudgetChunk::IsInitialized() const {
  return true;
}

void BudgetChunk::Swap(BudgetChunk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BudgetChunk::InternalSwap(BudgetChunk* other) {
  std::swap(amount_, other->amount_);
  std::swap(expiration_, other->expiration_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string BudgetChunk::GetTypeName() const {
  return "budget_service.BudgetChunk";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BudgetChunk

// optional double amount = 1;
bool BudgetChunk::has_amount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BudgetChunk::set_has_amount() {
  _has_bits_[0] |= 0x00000001u;
}
void BudgetChunk::clear_has_amount() {
  _has_bits_[0] &= ~0x00000001u;
}
void BudgetChunk::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
double BudgetChunk::amount() const {
  // @@protoc_insertion_point(field_get:budget_service.BudgetChunk.amount)
  return amount_;
}
void BudgetChunk::set_amount(double value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:budget_service.BudgetChunk.amount)
}

// optional int64 expiration = 2;
bool BudgetChunk::has_expiration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BudgetChunk::set_has_expiration() {
  _has_bits_[0] |= 0x00000002u;
}
void BudgetChunk::clear_has_expiration() {
  _has_bits_[0] &= ~0x00000002u;
}
void BudgetChunk::clear_expiration() {
  expiration_ = GOOGLE_LONGLONG(0);
  clear_has_expiration();
}
::google::protobuf::int64 BudgetChunk::expiration() const {
  // @@protoc_insertion_point(field_get:budget_service.BudgetChunk.expiration)
  return expiration_;
}
void BudgetChunk::set_expiration(::google::protobuf::int64 value) {
  set_has_expiration();
  expiration_ = value;
  // @@protoc_insertion_point(field_set:budget_service.BudgetChunk.expiration)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace budget_service

// @@protoc_insertion_point(global_scope)
