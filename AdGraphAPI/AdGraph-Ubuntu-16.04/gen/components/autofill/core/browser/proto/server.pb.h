// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto

#ifndef PROTOBUF_server_2eproto__INCLUDED
#define PROTOBUF_server_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
namespace autofill {
class AutofillQueryContents;
class AutofillQueryContentsDefaultTypeInternal;
extern AutofillQueryContentsDefaultTypeInternal _AutofillQueryContents_default_instance_;
class AutofillQueryContents_Form;
class AutofillQueryContents_FormDefaultTypeInternal;
extern AutofillQueryContents_FormDefaultTypeInternal _AutofillQueryContents_Form_default_instance_;
class AutofillQueryContents_Form_Field;
class AutofillQueryContents_Form_FieldDefaultTypeInternal;
extern AutofillQueryContents_Form_FieldDefaultTypeInternal _AutofillQueryContents_Form_Field_default_instance_;
class AutofillQueryResponseContents;
class AutofillQueryResponseContentsDefaultTypeInternal;
extern AutofillQueryResponseContentsDefaultTypeInternal _AutofillQueryResponseContents_default_instance_;
class AutofillQueryResponseContents_Field;
class AutofillQueryResponseContents_FieldDefaultTypeInternal;
extern AutofillQueryResponseContents_FieldDefaultTypeInternal _AutofillQueryResponseContents_Field_default_instance_;
class AutofillQueryResponseContents_Field_FieldPrediction;
class AutofillQueryResponseContents_Field_FieldPredictionDefaultTypeInternal;
extern AutofillQueryResponseContents_Field_FieldPredictionDefaultTypeInternal _AutofillQueryResponseContents_Field_FieldPrediction_default_instance_;
class AutofillUploadContents;
class AutofillUploadContentsDefaultTypeInternal;
extern AutofillUploadContentsDefaultTypeInternal _AutofillUploadContents_default_instance_;
class AutofillUploadContents_Field;
class AutofillUploadContents_FieldDefaultTypeInternal;
extern AutofillUploadContents_FieldDefaultTypeInternal _AutofillUploadContents_Field_default_instance_;
}  // namespace autofill

namespace autofill {

namespace protobuf_server_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_server_2eproto

enum AutofillUploadContents_Field_PasswordGenerationType {
  AutofillUploadContents_Field_PasswordGenerationType_NO_GENERATION = 0,
  AutofillUploadContents_Field_PasswordGenerationType_AUTOMATICALLY_TRIGGERED_GENERATION_ON_SIGN_UP_FORM = 1,
  AutofillUploadContents_Field_PasswordGenerationType_AUTOMATICALLY_TRIGGERED_GENERATION_ON_CHANGE_PASSWORD_FORM = 2,
  AutofillUploadContents_Field_PasswordGenerationType_MANUALLY_TRIGGERED_GENERATION_ON_SIGN_UP_FORM = 3,
  AutofillUploadContents_Field_PasswordGenerationType_MANUALLY_TRIGGERED_GENERATION_ON_CHANGE_PASSWORD_FORM = 4,
  AutofillUploadContents_Field_PasswordGenerationType_IGNORED_GENERATION_POPUP = 5
};
bool AutofillUploadContents_Field_PasswordGenerationType_IsValid(int value);
const AutofillUploadContents_Field_PasswordGenerationType AutofillUploadContents_Field_PasswordGenerationType_PasswordGenerationType_MIN = AutofillUploadContents_Field_PasswordGenerationType_NO_GENERATION;
const AutofillUploadContents_Field_PasswordGenerationType AutofillUploadContents_Field_PasswordGenerationType_PasswordGenerationType_MAX = AutofillUploadContents_Field_PasswordGenerationType_IGNORED_GENERATION_POPUP;
const int AutofillUploadContents_Field_PasswordGenerationType_PasswordGenerationType_ARRAYSIZE = AutofillUploadContents_Field_PasswordGenerationType_PasswordGenerationType_MAX + 1;

enum AutofillUploadContents_Field_FormClassifierOutcome {
  AutofillUploadContents_Field_FormClassifierOutcome_NO_OUTCOME = 0,
  AutofillUploadContents_Field_FormClassifierOutcome_NON_GENERATION_ELEMENT = 1,
  AutofillUploadContents_Field_FormClassifierOutcome_GENERATION_ELEMENT = 2
};
bool AutofillUploadContents_Field_FormClassifierOutcome_IsValid(int value);
const AutofillUploadContents_Field_FormClassifierOutcome AutofillUploadContents_Field_FormClassifierOutcome_FormClassifierOutcome_MIN = AutofillUploadContents_Field_FormClassifierOutcome_NO_OUTCOME;
const AutofillUploadContents_Field_FormClassifierOutcome AutofillUploadContents_Field_FormClassifierOutcome_FormClassifierOutcome_MAX = AutofillUploadContents_Field_FormClassifierOutcome_GENERATION_ELEMENT;
const int AutofillUploadContents_Field_FormClassifierOutcome_FormClassifierOutcome_ARRAYSIZE = AutofillUploadContents_Field_FormClassifierOutcome_FormClassifierOutcome_MAX + 1;

enum AutofillUploadContents_Field_VoteType {
  AutofillUploadContents_Field_VoteType_NO_INFORMATION = 0,
  AutofillUploadContents_Field_VoteType_CREDENTIALS_REUSED = 1,
  AutofillUploadContents_Field_VoteType_USERNAME_OVERWRITTEN = 2,
  AutofillUploadContents_Field_VoteType_USERNAME_EDITED = 3,
  AutofillUploadContents_Field_VoteType_BASE_HEURISTIC = 4,
  AutofillUploadContents_Field_VoteType_HTML_CLASSIFIER = 5,
  AutofillUploadContents_Field_VoteType_FIRST_USE = 6
};
bool AutofillUploadContents_Field_VoteType_IsValid(int value);
const AutofillUploadContents_Field_VoteType AutofillUploadContents_Field_VoteType_VoteType_MIN = AutofillUploadContents_Field_VoteType_NO_INFORMATION;
const AutofillUploadContents_Field_VoteType AutofillUploadContents_Field_VoteType_VoteType_MAX = AutofillUploadContents_Field_VoteType_FIRST_USE;
const int AutofillUploadContents_Field_VoteType_VoteType_ARRAYSIZE = AutofillUploadContents_Field_VoteType_VoteType_MAX + 1;

// ===================================================================

class AutofillQueryContents_Form_Field : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:autofill.AutofillQueryContents.Form.Field) */ {
 public:
  AutofillQueryContents_Form_Field();
  virtual ~AutofillQueryContents_Form_Field();

  AutofillQueryContents_Form_Field(const AutofillQueryContents_Form_Field& from);

  inline AutofillQueryContents_Form_Field& operator=(const AutofillQueryContents_Form_Field& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AutofillQueryContents_Form_Field& default_instance();

  static inline const AutofillQueryContents_Form_Field* internal_default_instance() {
    return reinterpret_cast<const AutofillQueryContents_Form_Field*>(
               &_AutofillQueryContents_Form_Field_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(AutofillQueryContents_Form_Field* other);

  // implements Message ----------------------------------------------

  inline AutofillQueryContents_Form_Field* New() const PROTOBUF_FINAL { return New(NULL); }

  AutofillQueryContents_Form_Field* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AutofillQueryContents_Form_Field& from);
  void MergeFrom(const AutofillQueryContents_Form_Field& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AutofillQueryContents_Form_Field* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 8;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 8;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string type = 9;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 9;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // required fixed32 signature = 5;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 5;
  ::google::protobuf::uint32 signature() const;
  void set_signature(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:autofill.AutofillQueryContents.Form.Field)
 private:
  void set_has_signature();
  void clear_has_signature();
  void set_has_name();
  void clear_has_name();
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::uint32 signature_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AutofillQueryContents_Form : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:autofill.AutofillQueryContents.Form) */ {
 public:
  AutofillQueryContents_Form();
  virtual ~AutofillQueryContents_Form();

  AutofillQueryContents_Form(const AutofillQueryContents_Form& from);

  inline AutofillQueryContents_Form& operator=(const AutofillQueryContents_Form& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AutofillQueryContents_Form& default_instance();

  static inline const AutofillQueryContents_Form* internal_default_instance() {
    return reinterpret_cast<const AutofillQueryContents_Form*>(
               &_AutofillQueryContents_Form_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(AutofillQueryContents_Form* other);

  // implements Message ----------------------------------------------

  inline AutofillQueryContents_Form* New() const PROTOBUF_FINAL { return New(NULL); }

  AutofillQueryContents_Form* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AutofillQueryContents_Form& from);
  void MergeFrom(const AutofillQueryContents_Form& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AutofillQueryContents_Form* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AutofillQueryContents_Form_Field Field;

  // accessors -------------------------------------------------------

  // repeated group Field = 4 { ... };
  int field_size() const;
  void clear_field();
  static const int kFieldFieldNumber = 4;
  const ::autofill::AutofillQueryContents_Form_Field& field(int index) const;
  ::autofill::AutofillQueryContents_Form_Field* mutable_field(int index);
  ::autofill::AutofillQueryContents_Form_Field* add_field();
  ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryContents_Form_Field >*
      mutable_field();
  const ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryContents_Form_Field >&
      field() const;

  // required fixed64 signature = 3;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 3;
  ::google::protobuf::uint64 signature() const;
  void set_signature(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:autofill.AutofillQueryContents.Form)
 private:
  void set_has_signature();
  void clear_has_signature();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryContents_Form_Field > field_;
  ::google::protobuf::uint64 signature_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AutofillQueryContents : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:autofill.AutofillQueryContents) */ {
 public:
  AutofillQueryContents();
  virtual ~AutofillQueryContents();

  AutofillQueryContents(const AutofillQueryContents& from);

  inline AutofillQueryContents& operator=(const AutofillQueryContents& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AutofillQueryContents& default_instance();

  static inline const AutofillQueryContents* internal_default_instance() {
    return reinterpret_cast<const AutofillQueryContents*>(
               &_AutofillQueryContents_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(AutofillQueryContents* other);

  // implements Message ----------------------------------------------

  inline AutofillQueryContents* New() const PROTOBUF_FINAL { return New(NULL); }

  AutofillQueryContents* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AutofillQueryContents& from);
  void MergeFrom(const AutofillQueryContents& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AutofillQueryContents* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AutofillQueryContents_Form Form;

  // accessors -------------------------------------------------------

  // repeated group Form = 2 { ... };
  int form_size() const;
  void clear_form();
  static const int kFormFieldNumber = 2;
  const ::autofill::AutofillQueryContents_Form& form(int index) const;
  ::autofill::AutofillQueryContents_Form* mutable_form(int index);
  ::autofill::AutofillQueryContents_Form* add_form();
  ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryContents_Form >*
      mutable_form();
  const ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryContents_Form >&
      form() const;

  // required string client_version = 1;
  bool has_client_version() const;
  void clear_client_version();
  static const int kClientVersionFieldNumber = 1;
  const ::std::string& client_version() const;
  void set_client_version(const ::std::string& value);
  #if LANG_CXX11
  void set_client_version(::std::string&& value);
  #endif
  void set_client_version(const char* value);
  void set_client_version(const char* value, size_t size);
  ::std::string* mutable_client_version();
  ::std::string* release_client_version();
  void set_allocated_client_version(::std::string* client_version);

  // @@protoc_insertion_point(class_scope:autofill.AutofillQueryContents)
 private:
  void set_has_client_version();
  void clear_has_client_version();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryContents_Form > form_;
  ::google::protobuf::internal::ArenaStringPtr client_version_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AutofillQueryResponseContents_Field_FieldPrediction : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:autofill.AutofillQueryResponseContents.Field.FieldPrediction) */ {
 public:
  AutofillQueryResponseContents_Field_FieldPrediction();
  virtual ~AutofillQueryResponseContents_Field_FieldPrediction();

  AutofillQueryResponseContents_Field_FieldPrediction(const AutofillQueryResponseContents_Field_FieldPrediction& from);

  inline AutofillQueryResponseContents_Field_FieldPrediction& operator=(const AutofillQueryResponseContents_Field_FieldPrediction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AutofillQueryResponseContents_Field_FieldPrediction& default_instance();

  static inline const AutofillQueryResponseContents_Field_FieldPrediction* internal_default_instance() {
    return reinterpret_cast<const AutofillQueryResponseContents_Field_FieldPrediction*>(
               &_AutofillQueryResponseContents_Field_FieldPrediction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(AutofillQueryResponseContents_Field_FieldPrediction* other);

  // implements Message ----------------------------------------------

  inline AutofillQueryResponseContents_Field_FieldPrediction* New() const PROTOBUF_FINAL { return New(NULL); }

  AutofillQueryResponseContents_Field_FieldPrediction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AutofillQueryResponseContents_Field_FieldPrediction& from);
  void MergeFrom(const AutofillQueryResponseContents_Field_FieldPrediction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AutofillQueryResponseContents_Field_FieldPrediction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:autofill.AutofillQueryResponseContents.Field.FieldPrediction)
 private:
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AutofillQueryResponseContents_Field : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:autofill.AutofillQueryResponseContents.Field) */ {
 public:
  AutofillQueryResponseContents_Field();
  virtual ~AutofillQueryResponseContents_Field();

  AutofillQueryResponseContents_Field(const AutofillQueryResponseContents_Field& from);

  inline AutofillQueryResponseContents_Field& operator=(const AutofillQueryResponseContents_Field& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AutofillQueryResponseContents_Field& default_instance();

  static inline const AutofillQueryResponseContents_Field* internal_default_instance() {
    return reinterpret_cast<const AutofillQueryResponseContents_Field*>(
               &_AutofillQueryResponseContents_Field_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(AutofillQueryResponseContents_Field* other);

  // implements Message ----------------------------------------------

  inline AutofillQueryResponseContents_Field* New() const PROTOBUF_FINAL { return New(NULL); }

  AutofillQueryResponseContents_Field* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AutofillQueryResponseContents_Field& from);
  void MergeFrom(const AutofillQueryResponseContents_Field& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AutofillQueryResponseContents_Field* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AutofillQueryResponseContents_Field_FieldPrediction FieldPrediction;

  // accessors -------------------------------------------------------

  // repeated .autofill.AutofillQueryResponseContents.Field.FieldPrediction predictions = 7;
  int predictions_size() const;
  void clear_predictions();
  static const int kPredictionsFieldNumber = 7;
  const ::autofill::AutofillQueryResponseContents_Field_FieldPrediction& predictions(int index) const;
  ::autofill::AutofillQueryResponseContents_Field_FieldPrediction* mutable_predictions(int index);
  ::autofill::AutofillQueryResponseContents_Field_FieldPrediction* add_predictions();
  ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryResponseContents_Field_FieldPrediction >*
      mutable_predictions();
  const ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryResponseContents_Field_FieldPrediction >&
      predictions() const;

  // required fixed32 overall_type_prediction = 3;
  bool has_overall_type_prediction() const;
  void clear_overall_type_prediction();
  static const int kOverallTypePredictionFieldNumber = 3;
  ::google::protobuf::uint32 overall_type_prediction() const;
  void set_overall_type_prediction(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:autofill.AutofillQueryResponseContents.Field)
 private:
  void set_has_overall_type_prediction();
  void clear_has_overall_type_prediction();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryResponseContents_Field_FieldPrediction > predictions_;
  ::google::protobuf::uint32 overall_type_prediction_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AutofillQueryResponseContents : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:autofill.AutofillQueryResponseContents) */ {
 public:
  AutofillQueryResponseContents();
  virtual ~AutofillQueryResponseContents();

  AutofillQueryResponseContents(const AutofillQueryResponseContents& from);

  inline AutofillQueryResponseContents& operator=(const AutofillQueryResponseContents& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AutofillQueryResponseContents& default_instance();

  static inline const AutofillQueryResponseContents* internal_default_instance() {
    return reinterpret_cast<const AutofillQueryResponseContents*>(
               &_AutofillQueryResponseContents_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(AutofillQueryResponseContents* other);

  // implements Message ----------------------------------------------

  inline AutofillQueryResponseContents* New() const PROTOBUF_FINAL { return New(NULL); }

  AutofillQueryResponseContents* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AutofillQueryResponseContents& from);
  void MergeFrom(const AutofillQueryResponseContents& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AutofillQueryResponseContents* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AutofillQueryResponseContents_Field Field;

  // accessors -------------------------------------------------------

  // repeated group Field = 2 { ... };
  int field_size() const;
  void clear_field();
  static const int kFieldFieldNumber = 2;
  const ::autofill::AutofillQueryResponseContents_Field& field(int index) const;
  ::autofill::AutofillQueryResponseContents_Field* mutable_field(int index);
  ::autofill::AutofillQueryResponseContents_Field* add_field();
  ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryResponseContents_Field >*
      mutable_field();
  const ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryResponseContents_Field >&
      field() const;

  // optional bool upload_required = 1;
  bool has_upload_required() const;
  void clear_upload_required();
  static const int kUploadRequiredFieldNumber = 1;
  bool upload_required() const;
  void set_upload_required(bool value);

  // @@protoc_insertion_point(class_scope:autofill.AutofillQueryResponseContents)
 private:
  void set_has_upload_required();
  void clear_has_upload_required();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryResponseContents_Field > field_;
  bool upload_required_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AutofillUploadContents_Field : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:autofill.AutofillUploadContents.Field) */ {
 public:
  AutofillUploadContents_Field();
  virtual ~AutofillUploadContents_Field();

  AutofillUploadContents_Field(const AutofillUploadContents_Field& from);

  inline AutofillUploadContents_Field& operator=(const AutofillUploadContents_Field& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AutofillUploadContents_Field& default_instance();

  static inline const AutofillUploadContents_Field* internal_default_instance() {
    return reinterpret_cast<const AutofillUploadContents_Field*>(
               &_AutofillUploadContents_Field_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(AutofillUploadContents_Field* other);

  // implements Message ----------------------------------------------

  inline AutofillUploadContents_Field* New() const PROTOBUF_FINAL { return New(NULL); }

  AutofillUploadContents_Field* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AutofillUploadContents_Field& from);
  void MergeFrom(const AutofillUploadContents_Field& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AutofillUploadContents_Field* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AutofillUploadContents_Field_PasswordGenerationType PasswordGenerationType;
  static const PasswordGenerationType NO_GENERATION =
    AutofillUploadContents_Field_PasswordGenerationType_NO_GENERATION;
  static const PasswordGenerationType AUTOMATICALLY_TRIGGERED_GENERATION_ON_SIGN_UP_FORM =
    AutofillUploadContents_Field_PasswordGenerationType_AUTOMATICALLY_TRIGGERED_GENERATION_ON_SIGN_UP_FORM;
  static const PasswordGenerationType AUTOMATICALLY_TRIGGERED_GENERATION_ON_CHANGE_PASSWORD_FORM =
    AutofillUploadContents_Field_PasswordGenerationType_AUTOMATICALLY_TRIGGERED_GENERATION_ON_CHANGE_PASSWORD_FORM;
  static const PasswordGenerationType MANUALLY_TRIGGERED_GENERATION_ON_SIGN_UP_FORM =
    AutofillUploadContents_Field_PasswordGenerationType_MANUALLY_TRIGGERED_GENERATION_ON_SIGN_UP_FORM;
  static const PasswordGenerationType MANUALLY_TRIGGERED_GENERATION_ON_CHANGE_PASSWORD_FORM =
    AutofillUploadContents_Field_PasswordGenerationType_MANUALLY_TRIGGERED_GENERATION_ON_CHANGE_PASSWORD_FORM;
  static const PasswordGenerationType IGNORED_GENERATION_POPUP =
    AutofillUploadContents_Field_PasswordGenerationType_IGNORED_GENERATION_POPUP;
  static inline bool PasswordGenerationType_IsValid(int value) {
    return AutofillUploadContents_Field_PasswordGenerationType_IsValid(value);
  }
  static const PasswordGenerationType PasswordGenerationType_MIN =
    AutofillUploadContents_Field_PasswordGenerationType_PasswordGenerationType_MIN;
  static const PasswordGenerationType PasswordGenerationType_MAX =
    AutofillUploadContents_Field_PasswordGenerationType_PasswordGenerationType_MAX;
  static const int PasswordGenerationType_ARRAYSIZE =
    AutofillUploadContents_Field_PasswordGenerationType_PasswordGenerationType_ARRAYSIZE;

  typedef AutofillUploadContents_Field_FormClassifierOutcome FormClassifierOutcome;
  static const FormClassifierOutcome NO_OUTCOME =
    AutofillUploadContents_Field_FormClassifierOutcome_NO_OUTCOME;
  static const FormClassifierOutcome NON_GENERATION_ELEMENT =
    AutofillUploadContents_Field_FormClassifierOutcome_NON_GENERATION_ELEMENT;
  static const FormClassifierOutcome GENERATION_ELEMENT =
    AutofillUploadContents_Field_FormClassifierOutcome_GENERATION_ELEMENT;
  static inline bool FormClassifierOutcome_IsValid(int value) {
    return AutofillUploadContents_Field_FormClassifierOutcome_IsValid(value);
  }
  static const FormClassifierOutcome FormClassifierOutcome_MIN =
    AutofillUploadContents_Field_FormClassifierOutcome_FormClassifierOutcome_MIN;
  static const FormClassifierOutcome FormClassifierOutcome_MAX =
    AutofillUploadContents_Field_FormClassifierOutcome_FormClassifierOutcome_MAX;
  static const int FormClassifierOutcome_ARRAYSIZE =
    AutofillUploadContents_Field_FormClassifierOutcome_FormClassifierOutcome_ARRAYSIZE;

  typedef AutofillUploadContents_Field_VoteType VoteType;
  static const VoteType NO_INFORMATION =
    AutofillUploadContents_Field_VoteType_NO_INFORMATION;
  static const VoteType CREDENTIALS_REUSED =
    AutofillUploadContents_Field_VoteType_CREDENTIALS_REUSED;
  static const VoteType USERNAME_OVERWRITTEN =
    AutofillUploadContents_Field_VoteType_USERNAME_OVERWRITTEN;
  static const VoteType USERNAME_EDITED =
    AutofillUploadContents_Field_VoteType_USERNAME_EDITED;
  static const VoteType BASE_HEURISTIC =
    AutofillUploadContents_Field_VoteType_BASE_HEURISTIC;
  static const VoteType HTML_CLASSIFIER =
    AutofillUploadContents_Field_VoteType_HTML_CLASSIFIER;
  static const VoteType FIRST_USE =
    AutofillUploadContents_Field_VoteType_FIRST_USE;
  static inline bool VoteType_IsValid(int value) {
    return AutofillUploadContents_Field_VoteType_IsValid(value);
  }
  static const VoteType VoteType_MIN =
    AutofillUploadContents_Field_VoteType_VoteType_MIN;
  static const VoteType VoteType_MAX =
    AutofillUploadContents_Field_VoteType_VoteType_MAX;
  static const int VoteType_ARRAYSIZE =
    AutofillUploadContents_Field_VoteType_VoteType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional string name = 8;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 8;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string autocomplete = 9;
  bool has_autocomplete() const;
  void clear_autocomplete();
  static const int kAutocompleteFieldNumber = 9;
  const ::std::string& autocomplete() const;
  void set_autocomplete(const ::std::string& value);
  #if LANG_CXX11
  void set_autocomplete(::std::string&& value);
  #endif
  void set_autocomplete(const char* value);
  void set_autocomplete(const char* value, size_t size);
  ::std::string* mutable_autocomplete();
  ::std::string* release_autocomplete();
  void set_allocated_autocomplete(::std::string* autocomplete);

  // optional string type = 10;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 10;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // optional string css_classes = 19;
  bool has_css_classes() const;
  void clear_css_classes();
  static const int kCssClassesFieldNumber = 19;
  const ::std::string& css_classes() const;
  void set_css_classes(const ::std::string& value);
  #if LANG_CXX11
  void set_css_classes(::std::string&& value);
  #endif
  void set_css_classes(const char* value);
  void set_css_classes(const char* value, size_t size);
  ::std::string* mutable_css_classes();
  ::std::string* release_css_classes();
  void set_allocated_css_classes(::std::string* css_classes);

  // optional string id = 21;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 21;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required fixed32 signature = 6;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 6;
  ::google::protobuf::uint32 signature() const;
  void set_signature(::google::protobuf::uint32 value);

  // required fixed32 autofill_type = 7;
  bool has_autofill_type() const;
  void clear_autofill_type();
  static const int kAutofillTypeFieldNumber = 7;
  ::google::protobuf::uint32 autofill_type() const;
  void set_autofill_type(::google::protobuf::uint32 value);

  // optional .autofill.AutofillUploadContents.Field.VoteType vote_type = 23;
  bool has_vote_type() const;
  void clear_vote_type();
  static const int kVoteTypeFieldNumber = 23;
  ::autofill::AutofillUploadContents_Field_VoteType vote_type() const;
  void set_vote_type(::autofill::AutofillUploadContents_Field_VoteType value);

  // optional .autofill.AutofillUploadContents.Field.PasswordGenerationType generation_type = 17;
  bool has_generation_type() const;
  void clear_generation_type();
  static const int kGenerationTypeFieldNumber = 17;
  ::autofill::AutofillUploadContents_Field_PasswordGenerationType generation_type() const;
  void set_generation_type(::autofill::AutofillUploadContents_Field_PasswordGenerationType value);

  // optional .autofill.AutofillUploadContents.Field.FormClassifierOutcome form_classifier_outcome = 18;
  bool has_form_classifier_outcome() const;
  void clear_form_classifier_outcome();
  static const int kFormClassifierOutcomeFieldNumber = 18;
  ::autofill::AutofillUploadContents_Field_FormClassifierOutcome form_classifier_outcome() const;
  void set_form_classifier_outcome(::autofill::AutofillUploadContents_Field_FormClassifierOutcome value);

  // optional uint32 properties_mask = 20;
  bool has_properties_mask() const;
  void clear_properties_mask();
  static const int kPropertiesMaskFieldNumber = 20;
  ::google::protobuf::uint32 properties_mask() const;
  void set_properties_mask(::google::protobuf::uint32 value);

  // optional bool generated_password_changed = 22;
  bool has_generated_password_changed() const;
  void clear_generated_password_changed();
  static const int kGeneratedPasswordChangedFieldNumber = 22;
  bool generated_password_changed() const;
  void set_generated_password_changed(bool value);

  // @@protoc_insertion_point(class_scope:autofill.AutofillUploadContents.Field)
 private:
  void set_has_signature();
  void clear_has_signature();
  void set_has_autofill_type();
  void clear_has_autofill_type();
  void set_has_name();
  void clear_has_name();
  void set_has_autocomplete();
  void clear_has_autocomplete();
  void set_has_type();
  void clear_has_type();
  void set_has_generation_type();
  void clear_has_generation_type();
  void set_has_form_classifier_outcome();
  void clear_has_form_classifier_outcome();
  void set_has_css_classes();
  void clear_has_css_classes();
  void set_has_properties_mask();
  void clear_has_properties_mask();
  void set_has_id();
  void clear_has_id();
  void set_has_generated_password_changed();
  void clear_has_generated_password_changed();
  void set_has_vote_type();
  void clear_has_vote_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr autocomplete_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr css_classes_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::uint32 signature_;
  ::google::protobuf::uint32 autofill_type_;
  int vote_type_;
  int generation_type_;
  int form_classifier_outcome_;
  ::google::protobuf::uint32 properties_mask_;
  bool generated_password_changed_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AutofillUploadContents : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:autofill.AutofillUploadContents) */ {
 public:
  AutofillUploadContents();
  virtual ~AutofillUploadContents();

  AutofillUploadContents(const AutofillUploadContents& from);

  inline AutofillUploadContents& operator=(const AutofillUploadContents& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AutofillUploadContents& default_instance();

  static inline const AutofillUploadContents* internal_default_instance() {
    return reinterpret_cast<const AutofillUploadContents*>(
               &_AutofillUploadContents_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(AutofillUploadContents* other);

  // implements Message ----------------------------------------------

  inline AutofillUploadContents* New() const PROTOBUF_FINAL { return New(NULL); }

  AutofillUploadContents* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AutofillUploadContents& from);
  void MergeFrom(const AutofillUploadContents& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AutofillUploadContents* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AutofillUploadContents_Field Field;

  // accessors -------------------------------------------------------

  // repeated group Field = 5 { ... };
  int field_size() const;
  void clear_field();
  static const int kFieldFieldNumber = 5;
  const ::autofill::AutofillUploadContents_Field& field(int index) const;
  ::autofill::AutofillUploadContents_Field* mutable_field(int index);
  ::autofill::AutofillUploadContents_Field* add_field();
  ::google::protobuf::RepeatedPtrField< ::autofill::AutofillUploadContents_Field >*
      mutable_field();
  const ::google::protobuf::RepeatedPtrField< ::autofill::AutofillUploadContents_Field >&
      field() const;

  // required string client_version = 1;
  bool has_client_version() const;
  void clear_client_version();
  static const int kClientVersionFieldNumber = 1;
  const ::std::string& client_version() const;
  void set_client_version(const ::std::string& value);
  #if LANG_CXX11
  void set_client_version(::std::string&& value);
  #endif
  void set_client_version(const char* value);
  void set_client_version(const char* value, size_t size);
  ::std::string* mutable_client_version();
  ::std::string* release_client_version();
  void set_allocated_client_version(::std::string* client_version);

  // required string data_present = 4;
  bool has_data_present() const;
  void clear_data_present();
  static const int kDataPresentFieldNumber = 4;
  const ::std::string& data_present() const;
  void set_data_present(const ::std::string& value);
  #if LANG_CXX11
  void set_data_present(::std::string&& value);
  #endif
  void set_data_present(const char* value);
  void set_data_present(const char* value, size_t size);
  ::std::string* mutable_data_present();
  ::std::string* release_data_present();
  void set_allocated_data_present(::std::string* data_present);

  // optional string form_name = 16;
  bool has_form_name() const;
  void clear_form_name();
  static const int kFormNameFieldNumber = 16;
  const ::std::string& form_name() const;
  void set_form_name(const ::std::string& value);
  #if LANG_CXX11
  void set_form_name(::std::string&& value);
  #endif
  void set_form_name(const char* value);
  void set_form_name(const char* value, size_t size);
  ::std::string* mutable_form_name();
  ::std::string* release_form_name();
  void set_allocated_form_name(::std::string* form_name);

  // required fixed64 form_signature = 2;
  bool has_form_signature() const;
  void clear_form_signature();
  static const int kFormSignatureFieldNumber = 2;
  ::google::protobuf::uint64 form_signature() const;
  void set_form_signature(::google::protobuf::uint64 value);

  // required bool autofill_used = 3;
  bool has_autofill_used() const;
  void clear_autofill_used();
  static const int kAutofillUsedFieldNumber = 3;
  bool autofill_used() const;
  void set_autofill_used(bool value);

  // optional bool submission = 15;
  bool has_submission() const;
  void clear_submission();
  static const int kSubmissionFieldNumber = 15;
  bool submission() const;
  void set_submission(bool value);

  // optional bool passwords_revealed = 24;
  bool has_passwords_revealed() const;
  void clear_passwords_revealed();
  static const int kPasswordsRevealedFieldNumber = 24;
  bool passwords_revealed() const;
  void set_passwords_revealed(bool value);

  // optional fixed64 action_signature = 13;
  bool has_action_signature() const;
  void clear_action_signature();
  static const int kActionSignatureFieldNumber = 13;
  ::google::protobuf::uint64 action_signature() const;
  void set_action_signature(::google::protobuf::uint64 value);

  // optional fixed64 login_form_signature = 14;
  bool has_login_form_signature() const;
  void clear_login_form_signature();
  static const int kLoginFormSignatureFieldNumber = 14;
  ::google::protobuf::uint64 login_form_signature() const;
  void set_login_form_signature(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:autofill.AutofillUploadContents)
 private:
  void set_has_client_version();
  void clear_has_client_version();
  void set_has_form_signature();
  void clear_has_form_signature();
  void set_has_autofill_used();
  void clear_has_autofill_used();
  void set_has_data_present();
  void clear_has_data_present();
  void set_has_action_signature();
  void clear_has_action_signature();
  void set_has_login_form_signature();
  void clear_has_login_form_signature();
  void set_has_submission();
  void clear_has_submission();
  void set_has_form_name();
  void clear_has_form_name();
  void set_has_passwords_revealed();
  void clear_has_passwords_revealed();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::autofill::AutofillUploadContents_Field > field_;
  ::google::protobuf::internal::ArenaStringPtr client_version_;
  ::google::protobuf::internal::ArenaStringPtr data_present_;
  ::google::protobuf::internal::ArenaStringPtr form_name_;
  ::google::protobuf::uint64 form_signature_;
  bool autofill_used_;
  bool submission_;
  bool passwords_revealed_;
  ::google::protobuf::uint64 action_signature_;
  ::google::protobuf::uint64 login_form_signature_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AutofillQueryContents_Form_Field

// required fixed32 signature = 5;
inline bool AutofillQueryContents_Form_Field::has_signature() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AutofillQueryContents_Form_Field::set_has_signature() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AutofillQueryContents_Form_Field::clear_has_signature() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AutofillQueryContents_Form_Field::clear_signature() {
  signature_ = 0u;
  clear_has_signature();
}
inline ::google::protobuf::uint32 AutofillQueryContents_Form_Field::signature() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryContents.Form.Field.signature)
  return signature_;
}
inline void AutofillQueryContents_Form_Field::set_signature(::google::protobuf::uint32 value) {
  set_has_signature();
  signature_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillQueryContents.Form.Field.signature)
}

// optional string name = 8;
inline bool AutofillQueryContents_Form_Field::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillQueryContents_Form_Field::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AutofillQueryContents_Form_Field::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AutofillQueryContents_Form_Field::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& AutofillQueryContents_Form_Field::name() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryContents.Form.Field.name)
  return name_.GetNoArena();
}
inline void AutofillQueryContents_Form_Field::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:autofill.AutofillQueryContents.Form.Field.name)
}
#if LANG_CXX11
inline void AutofillQueryContents_Form_Field::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:autofill.AutofillQueryContents.Form.Field.name)
}
#endif
inline void AutofillQueryContents_Form_Field::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:autofill.AutofillQueryContents.Form.Field.name)
}
inline void AutofillQueryContents_Form_Field::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:autofill.AutofillQueryContents.Form.Field.name)
}
inline ::std::string* AutofillQueryContents_Form_Field::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:autofill.AutofillQueryContents.Form.Field.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillQueryContents_Form_Field::release_name() {
  // @@protoc_insertion_point(field_release:autofill.AutofillQueryContents.Form.Field.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillQueryContents_Form_Field::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:autofill.AutofillQueryContents.Form.Field.name)
}

// optional string type = 9;
inline bool AutofillQueryContents_Form_Field::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AutofillQueryContents_Form_Field::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AutofillQueryContents_Form_Field::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AutofillQueryContents_Form_Field::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
inline const ::std::string& AutofillQueryContents_Form_Field::type() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryContents.Form.Field.type)
  return type_.GetNoArena();
}
inline void AutofillQueryContents_Form_Field::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:autofill.AutofillQueryContents.Form.Field.type)
}
#if LANG_CXX11
inline void AutofillQueryContents_Form_Field::set_type(::std::string&& value) {
  set_has_type();
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:autofill.AutofillQueryContents.Form.Field.type)
}
#endif
inline void AutofillQueryContents_Form_Field::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:autofill.AutofillQueryContents.Form.Field.type)
}
inline void AutofillQueryContents_Form_Field::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:autofill.AutofillQueryContents.Form.Field.type)
}
inline ::std::string* AutofillQueryContents_Form_Field::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:autofill.AutofillQueryContents.Form.Field.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillQueryContents_Form_Field::release_type() {
  // @@protoc_insertion_point(field_release:autofill.AutofillQueryContents.Form.Field.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillQueryContents_Form_Field::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:autofill.AutofillQueryContents.Form.Field.type)
}

// -------------------------------------------------------------------

// AutofillQueryContents_Form

// required fixed64 signature = 3;
inline bool AutofillQueryContents_Form::has_signature() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillQueryContents_Form::set_has_signature() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AutofillQueryContents_Form::clear_has_signature() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AutofillQueryContents_Form::clear_signature() {
  signature_ = GOOGLE_ULONGLONG(0);
  clear_has_signature();
}
inline ::google::protobuf::uint64 AutofillQueryContents_Form::signature() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryContents.Form.signature)
  return signature_;
}
inline void AutofillQueryContents_Form::set_signature(::google::protobuf::uint64 value) {
  set_has_signature();
  signature_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillQueryContents.Form.signature)
}

// repeated group Field = 4 { ... };
inline int AutofillQueryContents_Form::field_size() const {
  return field_.size();
}
inline void AutofillQueryContents_Form::clear_field() {
  field_.Clear();
}
inline const ::autofill::AutofillQueryContents_Form_Field& AutofillQueryContents_Form::field(int index) const {
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryContents.Form.field)
  return field_.Get(index);
}
inline ::autofill::AutofillQueryContents_Form_Field* AutofillQueryContents_Form::mutable_field(int index) {
  // @@protoc_insertion_point(field_mutable:autofill.AutofillQueryContents.Form.field)
  return field_.Mutable(index);
}
inline ::autofill::AutofillQueryContents_Form_Field* AutofillQueryContents_Form::add_field() {
  // @@protoc_insertion_point(field_add:autofill.AutofillQueryContents.Form.field)
  return field_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryContents_Form_Field >*
AutofillQueryContents_Form::mutable_field() {
  // @@protoc_insertion_point(field_mutable_list:autofill.AutofillQueryContents.Form.field)
  return &field_;
}
inline const ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryContents_Form_Field >&
AutofillQueryContents_Form::field() const {
  // @@protoc_insertion_point(field_list:autofill.AutofillQueryContents.Form.field)
  return field_;
}

// -------------------------------------------------------------------

// AutofillQueryContents

// required string client_version = 1;
inline bool AutofillQueryContents::has_client_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillQueryContents::set_has_client_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AutofillQueryContents::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AutofillQueryContents::clear_client_version() {
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_client_version();
}
inline const ::std::string& AutofillQueryContents::client_version() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryContents.client_version)
  return client_version_.GetNoArena();
}
inline void AutofillQueryContents::set_client_version(const ::std::string& value) {
  set_has_client_version();
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:autofill.AutofillQueryContents.client_version)
}
#if LANG_CXX11
inline void AutofillQueryContents::set_client_version(::std::string&& value) {
  set_has_client_version();
  client_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:autofill.AutofillQueryContents.client_version)
}
#endif
inline void AutofillQueryContents::set_client_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_client_version();
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:autofill.AutofillQueryContents.client_version)
}
inline void AutofillQueryContents::set_client_version(const char* value, size_t size) {
  set_has_client_version();
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:autofill.AutofillQueryContents.client_version)
}
inline ::std::string* AutofillQueryContents::mutable_client_version() {
  set_has_client_version();
  // @@protoc_insertion_point(field_mutable:autofill.AutofillQueryContents.client_version)
  return client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillQueryContents::release_client_version() {
  // @@protoc_insertion_point(field_release:autofill.AutofillQueryContents.client_version)
  clear_has_client_version();
  return client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillQueryContents::set_allocated_client_version(::std::string* client_version) {
  if (client_version != NULL) {
    set_has_client_version();
  } else {
    clear_has_client_version();
  }
  client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version);
  // @@protoc_insertion_point(field_set_allocated:autofill.AutofillQueryContents.client_version)
}

// repeated group Form = 2 { ... };
inline int AutofillQueryContents::form_size() const {
  return form_.size();
}
inline void AutofillQueryContents::clear_form() {
  form_.Clear();
}
inline const ::autofill::AutofillQueryContents_Form& AutofillQueryContents::form(int index) const {
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryContents.form)
  return form_.Get(index);
}
inline ::autofill::AutofillQueryContents_Form* AutofillQueryContents::mutable_form(int index) {
  // @@protoc_insertion_point(field_mutable:autofill.AutofillQueryContents.form)
  return form_.Mutable(index);
}
inline ::autofill::AutofillQueryContents_Form* AutofillQueryContents::add_form() {
  // @@protoc_insertion_point(field_add:autofill.AutofillQueryContents.form)
  return form_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryContents_Form >*
AutofillQueryContents::mutable_form() {
  // @@protoc_insertion_point(field_mutable_list:autofill.AutofillQueryContents.form)
  return &form_;
}
inline const ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryContents_Form >&
AutofillQueryContents::form() const {
  // @@protoc_insertion_point(field_list:autofill.AutofillQueryContents.form)
  return form_;
}

// -------------------------------------------------------------------

// AutofillQueryResponseContents_Field_FieldPrediction

// optional fixed32 type = 1;
inline bool AutofillQueryResponseContents_Field_FieldPrediction::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillQueryResponseContents_Field_FieldPrediction::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AutofillQueryResponseContents_Field_FieldPrediction::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AutofillQueryResponseContents_Field_FieldPrediction::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 AutofillQueryResponseContents_Field_FieldPrediction::type() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryResponseContents.Field.FieldPrediction.type)
  return type_;
}
inline void AutofillQueryResponseContents_Field_FieldPrediction::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillQueryResponseContents.Field.FieldPrediction.type)
}

// -------------------------------------------------------------------

// AutofillQueryResponseContents_Field

// required fixed32 overall_type_prediction = 3;
inline bool AutofillQueryResponseContents_Field::has_overall_type_prediction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillQueryResponseContents_Field::set_has_overall_type_prediction() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AutofillQueryResponseContents_Field::clear_has_overall_type_prediction() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AutofillQueryResponseContents_Field::clear_overall_type_prediction() {
  overall_type_prediction_ = 0u;
  clear_has_overall_type_prediction();
}
inline ::google::protobuf::uint32 AutofillQueryResponseContents_Field::overall_type_prediction() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryResponseContents.Field.overall_type_prediction)
  return overall_type_prediction_;
}
inline void AutofillQueryResponseContents_Field::set_overall_type_prediction(::google::protobuf::uint32 value) {
  set_has_overall_type_prediction();
  overall_type_prediction_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillQueryResponseContents.Field.overall_type_prediction)
}

// repeated .autofill.AutofillQueryResponseContents.Field.FieldPrediction predictions = 7;
inline int AutofillQueryResponseContents_Field::predictions_size() const {
  return predictions_.size();
}
inline void AutofillQueryResponseContents_Field::clear_predictions() {
  predictions_.Clear();
}
inline const ::autofill::AutofillQueryResponseContents_Field_FieldPrediction& AutofillQueryResponseContents_Field::predictions(int index) const {
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryResponseContents.Field.predictions)
  return predictions_.Get(index);
}
inline ::autofill::AutofillQueryResponseContents_Field_FieldPrediction* AutofillQueryResponseContents_Field::mutable_predictions(int index) {
  // @@protoc_insertion_point(field_mutable:autofill.AutofillQueryResponseContents.Field.predictions)
  return predictions_.Mutable(index);
}
inline ::autofill::AutofillQueryResponseContents_Field_FieldPrediction* AutofillQueryResponseContents_Field::add_predictions() {
  // @@protoc_insertion_point(field_add:autofill.AutofillQueryResponseContents.Field.predictions)
  return predictions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryResponseContents_Field_FieldPrediction >*
AutofillQueryResponseContents_Field::mutable_predictions() {
  // @@protoc_insertion_point(field_mutable_list:autofill.AutofillQueryResponseContents.Field.predictions)
  return &predictions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryResponseContents_Field_FieldPrediction >&
AutofillQueryResponseContents_Field::predictions() const {
  // @@protoc_insertion_point(field_list:autofill.AutofillQueryResponseContents.Field.predictions)
  return predictions_;
}

// -------------------------------------------------------------------

// AutofillQueryResponseContents

// optional bool upload_required = 1;
inline bool AutofillQueryResponseContents::has_upload_required() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillQueryResponseContents::set_has_upload_required() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AutofillQueryResponseContents::clear_has_upload_required() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AutofillQueryResponseContents::clear_upload_required() {
  upload_required_ = false;
  clear_has_upload_required();
}
inline bool AutofillQueryResponseContents::upload_required() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryResponseContents.upload_required)
  return upload_required_;
}
inline void AutofillQueryResponseContents::set_upload_required(bool value) {
  set_has_upload_required();
  upload_required_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillQueryResponseContents.upload_required)
}

// repeated group Field = 2 { ... };
inline int AutofillQueryResponseContents::field_size() const {
  return field_.size();
}
inline void AutofillQueryResponseContents::clear_field() {
  field_.Clear();
}
inline const ::autofill::AutofillQueryResponseContents_Field& AutofillQueryResponseContents::field(int index) const {
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryResponseContents.field)
  return field_.Get(index);
}
inline ::autofill::AutofillQueryResponseContents_Field* AutofillQueryResponseContents::mutable_field(int index) {
  // @@protoc_insertion_point(field_mutable:autofill.AutofillQueryResponseContents.field)
  return field_.Mutable(index);
}
inline ::autofill::AutofillQueryResponseContents_Field* AutofillQueryResponseContents::add_field() {
  // @@protoc_insertion_point(field_add:autofill.AutofillQueryResponseContents.field)
  return field_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryResponseContents_Field >*
AutofillQueryResponseContents::mutable_field() {
  // @@protoc_insertion_point(field_mutable_list:autofill.AutofillQueryResponseContents.field)
  return &field_;
}
inline const ::google::protobuf::RepeatedPtrField< ::autofill::AutofillQueryResponseContents_Field >&
AutofillQueryResponseContents::field() const {
  // @@protoc_insertion_point(field_list:autofill.AutofillQueryResponseContents.field)
  return field_;
}

// -------------------------------------------------------------------

// AutofillUploadContents_Field

// required fixed32 signature = 6;
inline bool AutofillUploadContents_Field::has_signature() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AutofillUploadContents_Field::set_has_signature() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AutofillUploadContents_Field::clear_has_signature() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AutofillUploadContents_Field::clear_signature() {
  signature_ = 0u;
  clear_has_signature();
}
inline ::google::protobuf::uint32 AutofillUploadContents_Field::signature() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.signature)
  return signature_;
}
inline void AutofillUploadContents_Field::set_signature(::google::protobuf::uint32 value) {
  set_has_signature();
  signature_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.signature)
}

// required fixed32 autofill_type = 7;
inline bool AutofillUploadContents_Field::has_autofill_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AutofillUploadContents_Field::set_has_autofill_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AutofillUploadContents_Field::clear_has_autofill_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AutofillUploadContents_Field::clear_autofill_type() {
  autofill_type_ = 0u;
  clear_has_autofill_type();
}
inline ::google::protobuf::uint32 AutofillUploadContents_Field::autofill_type() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.autofill_type)
  return autofill_type_;
}
inline void AutofillUploadContents_Field::set_autofill_type(::google::protobuf::uint32 value) {
  set_has_autofill_type();
  autofill_type_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.autofill_type)
}

// optional string name = 8;
inline bool AutofillUploadContents_Field::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillUploadContents_Field::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AutofillUploadContents_Field::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AutofillUploadContents_Field::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& AutofillUploadContents_Field::name() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.name)
  return name_.GetNoArena();
}
inline void AutofillUploadContents_Field::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.name)
}
#if LANG_CXX11
inline void AutofillUploadContents_Field::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:autofill.AutofillUploadContents.Field.name)
}
#endif
inline void AutofillUploadContents_Field::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:autofill.AutofillUploadContents.Field.name)
}
inline void AutofillUploadContents_Field::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:autofill.AutofillUploadContents.Field.name)
}
inline ::std::string* AutofillUploadContents_Field::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:autofill.AutofillUploadContents.Field.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillUploadContents_Field::release_name() {
  // @@protoc_insertion_point(field_release:autofill.AutofillUploadContents.Field.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents_Field::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:autofill.AutofillUploadContents.Field.name)
}

// optional string autocomplete = 9;
inline bool AutofillUploadContents_Field::has_autocomplete() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AutofillUploadContents_Field::set_has_autocomplete() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AutofillUploadContents_Field::clear_has_autocomplete() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AutofillUploadContents_Field::clear_autocomplete() {
  autocomplete_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_autocomplete();
}
inline const ::std::string& AutofillUploadContents_Field::autocomplete() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.autocomplete)
  return autocomplete_.GetNoArena();
}
inline void AutofillUploadContents_Field::set_autocomplete(const ::std::string& value) {
  set_has_autocomplete();
  autocomplete_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.autocomplete)
}
#if LANG_CXX11
inline void AutofillUploadContents_Field::set_autocomplete(::std::string&& value) {
  set_has_autocomplete();
  autocomplete_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:autofill.AutofillUploadContents.Field.autocomplete)
}
#endif
inline void AutofillUploadContents_Field::set_autocomplete(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_autocomplete();
  autocomplete_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:autofill.AutofillUploadContents.Field.autocomplete)
}
inline void AutofillUploadContents_Field::set_autocomplete(const char* value, size_t size) {
  set_has_autocomplete();
  autocomplete_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:autofill.AutofillUploadContents.Field.autocomplete)
}
inline ::std::string* AutofillUploadContents_Field::mutable_autocomplete() {
  set_has_autocomplete();
  // @@protoc_insertion_point(field_mutable:autofill.AutofillUploadContents.Field.autocomplete)
  return autocomplete_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillUploadContents_Field::release_autocomplete() {
  // @@protoc_insertion_point(field_release:autofill.AutofillUploadContents.Field.autocomplete)
  clear_has_autocomplete();
  return autocomplete_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents_Field::set_allocated_autocomplete(::std::string* autocomplete) {
  if (autocomplete != NULL) {
    set_has_autocomplete();
  } else {
    clear_has_autocomplete();
  }
  autocomplete_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), autocomplete);
  // @@protoc_insertion_point(field_set_allocated:autofill.AutofillUploadContents.Field.autocomplete)
}

// optional string type = 10;
inline bool AutofillUploadContents_Field::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AutofillUploadContents_Field::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AutofillUploadContents_Field::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AutofillUploadContents_Field::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
inline const ::std::string& AutofillUploadContents_Field::type() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.type)
  return type_.GetNoArena();
}
inline void AutofillUploadContents_Field::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.type)
}
#if LANG_CXX11
inline void AutofillUploadContents_Field::set_type(::std::string&& value) {
  set_has_type();
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:autofill.AutofillUploadContents.Field.type)
}
#endif
inline void AutofillUploadContents_Field::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:autofill.AutofillUploadContents.Field.type)
}
inline void AutofillUploadContents_Field::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:autofill.AutofillUploadContents.Field.type)
}
inline ::std::string* AutofillUploadContents_Field::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:autofill.AutofillUploadContents.Field.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillUploadContents_Field::release_type() {
  // @@protoc_insertion_point(field_release:autofill.AutofillUploadContents.Field.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents_Field::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:autofill.AutofillUploadContents.Field.type)
}

// optional .autofill.AutofillUploadContents.Field.PasswordGenerationType generation_type = 17;
inline bool AutofillUploadContents_Field::has_generation_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AutofillUploadContents_Field::set_has_generation_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AutofillUploadContents_Field::clear_has_generation_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AutofillUploadContents_Field::clear_generation_type() {
  generation_type_ = 0;
  clear_has_generation_type();
}
inline ::autofill::AutofillUploadContents_Field_PasswordGenerationType AutofillUploadContents_Field::generation_type() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.generation_type)
  return static_cast< ::autofill::AutofillUploadContents_Field_PasswordGenerationType >(generation_type_);
}
inline void AutofillUploadContents_Field::set_generation_type(::autofill::AutofillUploadContents_Field_PasswordGenerationType value) {
  assert(::autofill::AutofillUploadContents_Field_PasswordGenerationType_IsValid(value));
  set_has_generation_type();
  generation_type_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.generation_type)
}

// optional .autofill.AutofillUploadContents.Field.FormClassifierOutcome form_classifier_outcome = 18;
inline bool AutofillUploadContents_Field::has_form_classifier_outcome() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AutofillUploadContents_Field::set_has_form_classifier_outcome() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AutofillUploadContents_Field::clear_has_form_classifier_outcome() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AutofillUploadContents_Field::clear_form_classifier_outcome() {
  form_classifier_outcome_ = 0;
  clear_has_form_classifier_outcome();
}
inline ::autofill::AutofillUploadContents_Field_FormClassifierOutcome AutofillUploadContents_Field::form_classifier_outcome() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.form_classifier_outcome)
  return static_cast< ::autofill::AutofillUploadContents_Field_FormClassifierOutcome >(form_classifier_outcome_);
}
inline void AutofillUploadContents_Field::set_form_classifier_outcome(::autofill::AutofillUploadContents_Field_FormClassifierOutcome value) {
  assert(::autofill::AutofillUploadContents_Field_FormClassifierOutcome_IsValid(value));
  set_has_form_classifier_outcome();
  form_classifier_outcome_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.form_classifier_outcome)
}

// optional string css_classes = 19;
inline bool AutofillUploadContents_Field::has_css_classes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AutofillUploadContents_Field::set_has_css_classes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AutofillUploadContents_Field::clear_has_css_classes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AutofillUploadContents_Field::clear_css_classes() {
  css_classes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_css_classes();
}
inline const ::std::string& AutofillUploadContents_Field::css_classes() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.css_classes)
  return css_classes_.GetNoArena();
}
inline void AutofillUploadContents_Field::set_css_classes(const ::std::string& value) {
  set_has_css_classes();
  css_classes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.css_classes)
}
#if LANG_CXX11
inline void AutofillUploadContents_Field::set_css_classes(::std::string&& value) {
  set_has_css_classes();
  css_classes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:autofill.AutofillUploadContents.Field.css_classes)
}
#endif
inline void AutofillUploadContents_Field::set_css_classes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_css_classes();
  css_classes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:autofill.AutofillUploadContents.Field.css_classes)
}
inline void AutofillUploadContents_Field::set_css_classes(const char* value, size_t size) {
  set_has_css_classes();
  css_classes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:autofill.AutofillUploadContents.Field.css_classes)
}
inline ::std::string* AutofillUploadContents_Field::mutable_css_classes() {
  set_has_css_classes();
  // @@protoc_insertion_point(field_mutable:autofill.AutofillUploadContents.Field.css_classes)
  return css_classes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillUploadContents_Field::release_css_classes() {
  // @@protoc_insertion_point(field_release:autofill.AutofillUploadContents.Field.css_classes)
  clear_has_css_classes();
  return css_classes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents_Field::set_allocated_css_classes(::std::string* css_classes) {
  if (css_classes != NULL) {
    set_has_css_classes();
  } else {
    clear_has_css_classes();
  }
  css_classes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), css_classes);
  // @@protoc_insertion_point(field_set_allocated:autofill.AutofillUploadContents.Field.css_classes)
}

// optional uint32 properties_mask = 20;
inline bool AutofillUploadContents_Field::has_properties_mask() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AutofillUploadContents_Field::set_has_properties_mask() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AutofillUploadContents_Field::clear_has_properties_mask() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AutofillUploadContents_Field::clear_properties_mask() {
  properties_mask_ = 0u;
  clear_has_properties_mask();
}
inline ::google::protobuf::uint32 AutofillUploadContents_Field::properties_mask() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.properties_mask)
  return properties_mask_;
}
inline void AutofillUploadContents_Field::set_properties_mask(::google::protobuf::uint32 value) {
  set_has_properties_mask();
  properties_mask_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.properties_mask)
}

// optional string id = 21;
inline bool AutofillUploadContents_Field::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AutofillUploadContents_Field::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AutofillUploadContents_Field::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AutofillUploadContents_Field::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& AutofillUploadContents_Field::id() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.id)
  return id_.GetNoArena();
}
inline void AutofillUploadContents_Field::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.id)
}
#if LANG_CXX11
inline void AutofillUploadContents_Field::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:autofill.AutofillUploadContents.Field.id)
}
#endif
inline void AutofillUploadContents_Field::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:autofill.AutofillUploadContents.Field.id)
}
inline void AutofillUploadContents_Field::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:autofill.AutofillUploadContents.Field.id)
}
inline ::std::string* AutofillUploadContents_Field::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:autofill.AutofillUploadContents.Field.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillUploadContents_Field::release_id() {
  // @@protoc_insertion_point(field_release:autofill.AutofillUploadContents.Field.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents_Field::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:autofill.AutofillUploadContents.Field.id)
}

// optional bool generated_password_changed = 22;
inline bool AutofillUploadContents_Field::has_generated_password_changed() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AutofillUploadContents_Field::set_has_generated_password_changed() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AutofillUploadContents_Field::clear_has_generated_password_changed() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AutofillUploadContents_Field::clear_generated_password_changed() {
  generated_password_changed_ = false;
  clear_has_generated_password_changed();
}
inline bool AutofillUploadContents_Field::generated_password_changed() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.generated_password_changed)
  return generated_password_changed_;
}
inline void AutofillUploadContents_Field::set_generated_password_changed(bool value) {
  set_has_generated_password_changed();
  generated_password_changed_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.generated_password_changed)
}

// optional .autofill.AutofillUploadContents.Field.VoteType vote_type = 23;
inline bool AutofillUploadContents_Field::has_vote_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AutofillUploadContents_Field::set_has_vote_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AutofillUploadContents_Field::clear_has_vote_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AutofillUploadContents_Field::clear_vote_type() {
  vote_type_ = 0;
  clear_has_vote_type();
}
inline ::autofill::AutofillUploadContents_Field_VoteType AutofillUploadContents_Field::vote_type() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.vote_type)
  return static_cast< ::autofill::AutofillUploadContents_Field_VoteType >(vote_type_);
}
inline void AutofillUploadContents_Field::set_vote_type(::autofill::AutofillUploadContents_Field_VoteType value) {
  assert(::autofill::AutofillUploadContents_Field_VoteType_IsValid(value));
  set_has_vote_type();
  vote_type_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.vote_type)
}

// -------------------------------------------------------------------

// AutofillUploadContents

// required string client_version = 1;
inline bool AutofillUploadContents::has_client_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillUploadContents::set_has_client_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AutofillUploadContents::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AutofillUploadContents::clear_client_version() {
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_client_version();
}
inline const ::std::string& AutofillUploadContents::client_version() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.client_version)
  return client_version_.GetNoArena();
}
inline void AutofillUploadContents::set_client_version(const ::std::string& value) {
  set_has_client_version();
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.client_version)
}
#if LANG_CXX11
inline void AutofillUploadContents::set_client_version(::std::string&& value) {
  set_has_client_version();
  client_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:autofill.AutofillUploadContents.client_version)
}
#endif
inline void AutofillUploadContents::set_client_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_client_version();
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:autofill.AutofillUploadContents.client_version)
}
inline void AutofillUploadContents::set_client_version(const char* value, size_t size) {
  set_has_client_version();
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:autofill.AutofillUploadContents.client_version)
}
inline ::std::string* AutofillUploadContents::mutable_client_version() {
  set_has_client_version();
  // @@protoc_insertion_point(field_mutable:autofill.AutofillUploadContents.client_version)
  return client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillUploadContents::release_client_version() {
  // @@protoc_insertion_point(field_release:autofill.AutofillUploadContents.client_version)
  clear_has_client_version();
  return client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents::set_allocated_client_version(::std::string* client_version) {
  if (client_version != NULL) {
    set_has_client_version();
  } else {
    clear_has_client_version();
  }
  client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version);
  // @@protoc_insertion_point(field_set_allocated:autofill.AutofillUploadContents.client_version)
}

// required fixed64 form_signature = 2;
inline bool AutofillUploadContents::has_form_signature() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AutofillUploadContents::set_has_form_signature() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AutofillUploadContents::clear_has_form_signature() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AutofillUploadContents::clear_form_signature() {
  form_signature_ = GOOGLE_ULONGLONG(0);
  clear_has_form_signature();
}
inline ::google::protobuf::uint64 AutofillUploadContents::form_signature() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.form_signature)
  return form_signature_;
}
inline void AutofillUploadContents::set_form_signature(::google::protobuf::uint64 value) {
  set_has_form_signature();
  form_signature_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.form_signature)
}

// required bool autofill_used = 3;
inline bool AutofillUploadContents::has_autofill_used() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AutofillUploadContents::set_has_autofill_used() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AutofillUploadContents::clear_has_autofill_used() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AutofillUploadContents::clear_autofill_used() {
  autofill_used_ = false;
  clear_has_autofill_used();
}
inline bool AutofillUploadContents::autofill_used() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.autofill_used)
  return autofill_used_;
}
inline void AutofillUploadContents::set_autofill_used(bool value) {
  set_has_autofill_used();
  autofill_used_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.autofill_used)
}

// required string data_present = 4;
inline bool AutofillUploadContents::has_data_present() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AutofillUploadContents::set_has_data_present() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AutofillUploadContents::clear_has_data_present() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AutofillUploadContents::clear_data_present() {
  data_present_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data_present();
}
inline const ::std::string& AutofillUploadContents::data_present() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.data_present)
  return data_present_.GetNoArena();
}
inline void AutofillUploadContents::set_data_present(const ::std::string& value) {
  set_has_data_present();
  data_present_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.data_present)
}
#if LANG_CXX11
inline void AutofillUploadContents::set_data_present(::std::string&& value) {
  set_has_data_present();
  data_present_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:autofill.AutofillUploadContents.data_present)
}
#endif
inline void AutofillUploadContents::set_data_present(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data_present();
  data_present_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:autofill.AutofillUploadContents.data_present)
}
inline void AutofillUploadContents::set_data_present(const char* value, size_t size) {
  set_has_data_present();
  data_present_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:autofill.AutofillUploadContents.data_present)
}
inline ::std::string* AutofillUploadContents::mutable_data_present() {
  set_has_data_present();
  // @@protoc_insertion_point(field_mutable:autofill.AutofillUploadContents.data_present)
  return data_present_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillUploadContents::release_data_present() {
  // @@protoc_insertion_point(field_release:autofill.AutofillUploadContents.data_present)
  clear_has_data_present();
  return data_present_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents::set_allocated_data_present(::std::string* data_present) {
  if (data_present != NULL) {
    set_has_data_present();
  } else {
    clear_has_data_present();
  }
  data_present_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_present);
  // @@protoc_insertion_point(field_set_allocated:autofill.AutofillUploadContents.data_present)
}

// repeated group Field = 5 { ... };
inline int AutofillUploadContents::field_size() const {
  return field_.size();
}
inline void AutofillUploadContents::clear_field() {
  field_.Clear();
}
inline const ::autofill::AutofillUploadContents_Field& AutofillUploadContents::field(int index) const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.field)
  return field_.Get(index);
}
inline ::autofill::AutofillUploadContents_Field* AutofillUploadContents::mutable_field(int index) {
  // @@protoc_insertion_point(field_mutable:autofill.AutofillUploadContents.field)
  return field_.Mutable(index);
}
inline ::autofill::AutofillUploadContents_Field* AutofillUploadContents::add_field() {
  // @@protoc_insertion_point(field_add:autofill.AutofillUploadContents.field)
  return field_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::autofill::AutofillUploadContents_Field >*
AutofillUploadContents::mutable_field() {
  // @@protoc_insertion_point(field_mutable_list:autofill.AutofillUploadContents.field)
  return &field_;
}
inline const ::google::protobuf::RepeatedPtrField< ::autofill::AutofillUploadContents_Field >&
AutofillUploadContents::field() const {
  // @@protoc_insertion_point(field_list:autofill.AutofillUploadContents.field)
  return field_;
}

// optional fixed64 action_signature = 13;
inline bool AutofillUploadContents::has_action_signature() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AutofillUploadContents::set_has_action_signature() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AutofillUploadContents::clear_has_action_signature() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AutofillUploadContents::clear_action_signature() {
  action_signature_ = GOOGLE_ULONGLONG(0);
  clear_has_action_signature();
}
inline ::google::protobuf::uint64 AutofillUploadContents::action_signature() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.action_signature)
  return action_signature_;
}
inline void AutofillUploadContents::set_action_signature(::google::protobuf::uint64 value) {
  set_has_action_signature();
  action_signature_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.action_signature)
}

// optional fixed64 login_form_signature = 14;
inline bool AutofillUploadContents::has_login_form_signature() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AutofillUploadContents::set_has_login_form_signature() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AutofillUploadContents::clear_has_login_form_signature() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AutofillUploadContents::clear_login_form_signature() {
  login_form_signature_ = GOOGLE_ULONGLONG(0);
  clear_has_login_form_signature();
}
inline ::google::protobuf::uint64 AutofillUploadContents::login_form_signature() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.login_form_signature)
  return login_form_signature_;
}
inline void AutofillUploadContents::set_login_form_signature(::google::protobuf::uint64 value) {
  set_has_login_form_signature();
  login_form_signature_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.login_form_signature)
}

// optional bool submission = 15;
inline bool AutofillUploadContents::has_submission() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AutofillUploadContents::set_has_submission() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AutofillUploadContents::clear_has_submission() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AutofillUploadContents::clear_submission() {
  submission_ = false;
  clear_has_submission();
}
inline bool AutofillUploadContents::submission() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.submission)
  return submission_;
}
inline void AutofillUploadContents::set_submission(bool value) {
  set_has_submission();
  submission_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.submission)
}

// optional string form_name = 16;
inline bool AutofillUploadContents::has_form_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AutofillUploadContents::set_has_form_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AutofillUploadContents::clear_has_form_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AutofillUploadContents::clear_form_name() {
  form_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_form_name();
}
inline const ::std::string& AutofillUploadContents::form_name() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.form_name)
  return form_name_.GetNoArena();
}
inline void AutofillUploadContents::set_form_name(const ::std::string& value) {
  set_has_form_name();
  form_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.form_name)
}
#if LANG_CXX11
inline void AutofillUploadContents::set_form_name(::std::string&& value) {
  set_has_form_name();
  form_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:autofill.AutofillUploadContents.form_name)
}
#endif
inline void AutofillUploadContents::set_form_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_form_name();
  form_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:autofill.AutofillUploadContents.form_name)
}
inline void AutofillUploadContents::set_form_name(const char* value, size_t size) {
  set_has_form_name();
  form_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:autofill.AutofillUploadContents.form_name)
}
inline ::std::string* AutofillUploadContents::mutable_form_name() {
  set_has_form_name();
  // @@protoc_insertion_point(field_mutable:autofill.AutofillUploadContents.form_name)
  return form_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillUploadContents::release_form_name() {
  // @@protoc_insertion_point(field_release:autofill.AutofillUploadContents.form_name)
  clear_has_form_name();
  return form_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents::set_allocated_form_name(::std::string* form_name) {
  if (form_name != NULL) {
    set_has_form_name();
  } else {
    clear_has_form_name();
  }
  form_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), form_name);
  // @@protoc_insertion_point(field_set_allocated:autofill.AutofillUploadContents.form_name)
}

// optional bool passwords_revealed = 24;
inline bool AutofillUploadContents::has_passwords_revealed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AutofillUploadContents::set_has_passwords_revealed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AutofillUploadContents::clear_has_passwords_revealed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AutofillUploadContents::clear_passwords_revealed() {
  passwords_revealed_ = false;
  clear_has_passwords_revealed();
}
inline bool AutofillUploadContents::passwords_revealed() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.passwords_revealed)
  return passwords_revealed_;
}
inline void AutofillUploadContents::set_passwords_revealed(bool value) {
  set_has_passwords_revealed();
  passwords_revealed_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.passwords_revealed)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace autofill

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::autofill::AutofillUploadContents_Field_PasswordGenerationType> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::autofill::AutofillUploadContents_Field_FormClassifierOutcome> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::autofill::AutofillUploadContents_Field_VoteType> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_2eproto__INCLUDED
