// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ranker_model.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ranker_model.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace assist_ranker {
class RankerModelMetadataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RankerModelMetadata> {
} _RankerModelMetadata_default_instance_;
class RankerModelProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RankerModelProto> {
  public:
  const ::assist_ranker::TranslateRankerModel* translate_;
  const ::assist_ranker::GenericLogisticRegressionModel* logistic_regression_;
} _RankerModelProto_default_instance_;

namespace protobuf_ranker_5fmodel_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _RankerModelMetadata_default_instance_.Shutdown();
  _RankerModelProto_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::assist_ranker::protobuf_translate_5franker_5fmodel_2eproto::InitDefaults();
  ::assist_ranker::protobuf_generic_5flogistic_5fregression_5fmodel_2eproto::InitDefaults();
  _RankerModelMetadata_default_instance_.DefaultConstruct();
  _RankerModelProto_default_instance_.DefaultConstruct();
  _RankerModelProto_default_instance_.get_mutable()->metadata_ = const_cast< ::assist_ranker::RankerModelMetadata*>(
      ::assist_ranker::RankerModelMetadata::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::assist_ranker::protobuf_translate_5franker_5fmodel_2eproto::AddDescriptors();
  ::assist_ranker::protobuf_generic_5flogistic_5fregression_5fmodel_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_ranker_5fmodel_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankerModelMetadata::kNameFieldNumber;
const int RankerModelMetadata::kLabelFieldNumber;
const int RankerModelMetadata::kSourceFieldNumber;
const int RankerModelMetadata::kLastModifiedSecFieldNumber;
const int RankerModelMetadata::kCacheDurationSecFieldNumber;
const int RankerModelMetadata::kModelVersionFieldNumber;
const int RankerModelMetadata::kInputFeaturesNamesAreHexHashesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankerModelMetadata::RankerModelMetadata()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ranker_5fmodel_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:assist_ranker.RankerModelMetadata)
}
RankerModelMetadata::RankerModelMetadata(const RankerModelMetadata& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source()) {
    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  ::memcpy(&last_modified_sec_, &from.last_modified_sec_,
    static_cast<size_t>(reinterpret_cast<char*>(&input_features_names_are_hex_hashes_) -
    reinterpret_cast<char*>(&last_modified_sec_)) + sizeof(input_features_names_are_hex_hashes_));
  // @@protoc_insertion_point(copy_constructor:assist_ranker.RankerModelMetadata)
}

void RankerModelMetadata::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&last_modified_sec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&input_features_names_are_hex_hashes_) -
      reinterpret_cast<char*>(&last_modified_sec_)) + sizeof(input_features_names_are_hex_hashes_));
}

RankerModelMetadata::~RankerModelMetadata() {
  // @@protoc_insertion_point(destructor:assist_ranker.RankerModelMetadata)
  SharedDtor();
}

void RankerModelMetadata::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RankerModelMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RankerModelMetadata& RankerModelMetadata::default_instance() {
  protobuf_ranker_5fmodel_2eproto::InitDefaults();
  return *internal_default_instance();
}

RankerModelMetadata* RankerModelMetadata::New(::google::protobuf::Arena* arena) const {
  RankerModelMetadata* n = new RankerModelMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RankerModelMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:assist_ranker.RankerModelMetadata)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_label()) {
      GOOGLE_DCHECK(!label_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*label_.UnsafeRawStringPointer())->clear();
    }
    if (has_source()) {
      GOOGLE_DCHECK(!source_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*source_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 120u) {
    ::memset(&last_modified_sec_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&input_features_names_are_hex_hashes_) -
        reinterpret_cast<char*>(&last_modified_sec_)) + sizeof(input_features_names_are_hex_hashes_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RankerModelMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:assist_ranker.RankerModelMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string label = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string source = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 last_modified_sec = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_last_modified_sec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_modified_sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 cache_duration_sec = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_cache_duration_sec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cache_duration_sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 model_version = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_model_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &model_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool input_features_names_are_hex_hashes = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_input_features_names_are_hex_hashes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &input_features_names_are_hex_hashes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:assist_ranker.RankerModelMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:assist_ranker.RankerModelMetadata)
  return false;
#undef DO_
}

void RankerModelMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:assist_ranker.RankerModelMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string label = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  // optional string source = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->source(), output);
  }

  // optional int64 last_modified_sec = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->last_modified_sec(), output);
  }

  // optional int64 cache_duration_sec = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->cache_duration_sec(), output);
  }

  // optional uint32 model_version = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->model_version(), output);
  }

  // optional bool input_features_names_are_hex_hashes = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->input_features_names_are_hex_hashes(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:assist_ranker.RankerModelMetadata)
}

size_t RankerModelMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:assist_ranker.RankerModelMetadata)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 127u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string label = 2;
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional string source = 3;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source());
    }

    // optional int64 last_modified_sec = 4;
    if (has_last_modified_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->last_modified_sec());
    }

    // optional int64 cache_duration_sec = 5;
    if (has_cache_duration_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->cache_duration_sec());
    }

    // optional uint32 model_version = 6;
    if (has_model_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->model_version());
    }

    // optional bool input_features_names_are_hex_hashes = 7;
    if (has_input_features_names_are_hex_hashes()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankerModelMetadata::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RankerModelMetadata*>(&from));
}

void RankerModelMetadata::MergeFrom(const RankerModelMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:assist_ranker.RankerModelMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_label();
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_source();
      source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
    }
    if (cached_has_bits & 0x00000008u) {
      last_modified_sec_ = from.last_modified_sec_;
    }
    if (cached_has_bits & 0x00000010u) {
      cache_duration_sec_ = from.cache_duration_sec_;
    }
    if (cached_has_bits & 0x00000020u) {
      model_version_ = from.model_version_;
    }
    if (cached_has_bits & 0x00000040u) {
      input_features_names_are_hex_hashes_ = from.input_features_names_are_hex_hashes_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RankerModelMetadata::CopyFrom(const RankerModelMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:assist_ranker.RankerModelMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankerModelMetadata::IsInitialized() const {
  return true;
}

void RankerModelMetadata::Swap(RankerModelMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankerModelMetadata::InternalSwap(RankerModelMetadata* other) {
  name_.Swap(&other->name_);
  label_.Swap(&other->label_);
  source_.Swap(&other->source_);
  std::swap(last_modified_sec_, other->last_modified_sec_);
  std::swap(cache_duration_sec_, other->cache_duration_sec_);
  std::swap(model_version_, other->model_version_);
  std::swap(input_features_names_are_hex_hashes_, other->input_features_names_are_hex_hashes_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string RankerModelMetadata::GetTypeName() const {
  return "assist_ranker.RankerModelMetadata";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RankerModelMetadata

// optional string name = 1;
bool RankerModelMetadata::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RankerModelMetadata::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void RankerModelMetadata::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void RankerModelMetadata::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& RankerModelMetadata::name() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelMetadata.name)
  return name_.GetNoArena();
}
void RankerModelMetadata::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:assist_ranker.RankerModelMetadata.name)
}
#if LANG_CXX11
void RankerModelMetadata::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:assist_ranker.RankerModelMetadata.name)
}
#endif
void RankerModelMetadata::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:assist_ranker.RankerModelMetadata.name)
}
void RankerModelMetadata::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:assist_ranker.RankerModelMetadata.name)
}
::std::string* RankerModelMetadata::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:assist_ranker.RankerModelMetadata.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RankerModelMetadata::release_name() {
  // @@protoc_insertion_point(field_release:assist_ranker.RankerModelMetadata.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RankerModelMetadata::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:assist_ranker.RankerModelMetadata.name)
}

// optional string label = 2;
bool RankerModelMetadata::has_label() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RankerModelMetadata::set_has_label() {
  _has_bits_[0] |= 0x00000002u;
}
void RankerModelMetadata::clear_has_label() {
  _has_bits_[0] &= ~0x00000002u;
}
void RankerModelMetadata::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_label();
}
const ::std::string& RankerModelMetadata::label() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelMetadata.label)
  return label_.GetNoArena();
}
void RankerModelMetadata::set_label(const ::std::string& value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:assist_ranker.RankerModelMetadata.label)
}
#if LANG_CXX11
void RankerModelMetadata::set_label(::std::string&& value) {
  set_has_label();
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:assist_ranker.RankerModelMetadata.label)
}
#endif
void RankerModelMetadata::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:assist_ranker.RankerModelMetadata.label)
}
void RankerModelMetadata::set_label(const char* value, size_t size) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:assist_ranker.RankerModelMetadata.label)
}
::std::string* RankerModelMetadata::mutable_label() {
  set_has_label();
  // @@protoc_insertion_point(field_mutable:assist_ranker.RankerModelMetadata.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RankerModelMetadata::release_label() {
  // @@protoc_insertion_point(field_release:assist_ranker.RankerModelMetadata.label)
  clear_has_label();
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RankerModelMetadata::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:assist_ranker.RankerModelMetadata.label)
}

// optional string source = 3;
bool RankerModelMetadata::has_source() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RankerModelMetadata::set_has_source() {
  _has_bits_[0] |= 0x00000004u;
}
void RankerModelMetadata::clear_has_source() {
  _has_bits_[0] &= ~0x00000004u;
}
void RankerModelMetadata::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}
const ::std::string& RankerModelMetadata::source() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelMetadata.source)
  return source_.GetNoArena();
}
void RankerModelMetadata::set_source(const ::std::string& value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:assist_ranker.RankerModelMetadata.source)
}
#if LANG_CXX11
void RankerModelMetadata::set_source(::std::string&& value) {
  set_has_source();
  source_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:assist_ranker.RankerModelMetadata.source)
}
#endif
void RankerModelMetadata::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:assist_ranker.RankerModelMetadata.source)
}
void RankerModelMetadata::set_source(const char* value, size_t size) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:assist_ranker.RankerModelMetadata.source)
}
::std::string* RankerModelMetadata::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:assist_ranker.RankerModelMetadata.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RankerModelMetadata::release_source() {
  // @@protoc_insertion_point(field_release:assist_ranker.RankerModelMetadata.source)
  clear_has_source();
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RankerModelMetadata::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:assist_ranker.RankerModelMetadata.source)
}

// optional int64 last_modified_sec = 4;
bool RankerModelMetadata::has_last_modified_sec() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RankerModelMetadata::set_has_last_modified_sec() {
  _has_bits_[0] |= 0x00000008u;
}
void RankerModelMetadata::clear_has_last_modified_sec() {
  _has_bits_[0] &= ~0x00000008u;
}
void RankerModelMetadata::clear_last_modified_sec() {
  last_modified_sec_ = GOOGLE_LONGLONG(0);
  clear_has_last_modified_sec();
}
::google::protobuf::int64 RankerModelMetadata::last_modified_sec() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelMetadata.last_modified_sec)
  return last_modified_sec_;
}
void RankerModelMetadata::set_last_modified_sec(::google::protobuf::int64 value) {
  set_has_last_modified_sec();
  last_modified_sec_ = value;
  // @@protoc_insertion_point(field_set:assist_ranker.RankerModelMetadata.last_modified_sec)
}

// optional int64 cache_duration_sec = 5;
bool RankerModelMetadata::has_cache_duration_sec() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RankerModelMetadata::set_has_cache_duration_sec() {
  _has_bits_[0] |= 0x00000010u;
}
void RankerModelMetadata::clear_has_cache_duration_sec() {
  _has_bits_[0] &= ~0x00000010u;
}
void RankerModelMetadata::clear_cache_duration_sec() {
  cache_duration_sec_ = GOOGLE_LONGLONG(0);
  clear_has_cache_duration_sec();
}
::google::protobuf::int64 RankerModelMetadata::cache_duration_sec() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelMetadata.cache_duration_sec)
  return cache_duration_sec_;
}
void RankerModelMetadata::set_cache_duration_sec(::google::protobuf::int64 value) {
  set_has_cache_duration_sec();
  cache_duration_sec_ = value;
  // @@protoc_insertion_point(field_set:assist_ranker.RankerModelMetadata.cache_duration_sec)
}

// optional uint32 model_version = 6;
bool RankerModelMetadata::has_model_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RankerModelMetadata::set_has_model_version() {
  _has_bits_[0] |= 0x00000020u;
}
void RankerModelMetadata::clear_has_model_version() {
  _has_bits_[0] &= ~0x00000020u;
}
void RankerModelMetadata::clear_model_version() {
  model_version_ = 0u;
  clear_has_model_version();
}
::google::protobuf::uint32 RankerModelMetadata::model_version() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelMetadata.model_version)
  return model_version_;
}
void RankerModelMetadata::set_model_version(::google::protobuf::uint32 value) {
  set_has_model_version();
  model_version_ = value;
  // @@protoc_insertion_point(field_set:assist_ranker.RankerModelMetadata.model_version)
}

// optional bool input_features_names_are_hex_hashes = 7;
bool RankerModelMetadata::has_input_features_names_are_hex_hashes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void RankerModelMetadata::set_has_input_features_names_are_hex_hashes() {
  _has_bits_[0] |= 0x00000040u;
}
void RankerModelMetadata::clear_has_input_features_names_are_hex_hashes() {
  _has_bits_[0] &= ~0x00000040u;
}
void RankerModelMetadata::clear_input_features_names_are_hex_hashes() {
  input_features_names_are_hex_hashes_ = false;
  clear_has_input_features_names_are_hex_hashes();
}
bool RankerModelMetadata::input_features_names_are_hex_hashes() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelMetadata.input_features_names_are_hex_hashes)
  return input_features_names_are_hex_hashes_;
}
void RankerModelMetadata::set_input_features_names_are_hex_hashes(bool value) {
  set_has_input_features_names_are_hex_hashes();
  input_features_names_are_hex_hashes_ = value;
  // @@protoc_insertion_point(field_set:assist_ranker.RankerModelMetadata.input_features_names_are_hex_hashes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankerModelProto::kMetadataFieldNumber;
const int RankerModelProto::kTranslateFieldNumber;
const int RankerModelProto::kLogisticRegressionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankerModelProto::RankerModelProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ranker_5fmodel_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:assist_ranker.RankerModelProto)
}
RankerModelProto::RankerModelProto(const RankerModelProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_metadata()) {
    metadata_ = new ::assist_ranker::RankerModelMetadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  clear_has_model();
  switch (from.model_case()) {
    case kTranslate: {
      mutable_translate()->::assist_ranker::TranslateRankerModel::MergeFrom(from.translate());
      break;
    }
    case kLogisticRegression: {
      mutable_logistic_regression()->::assist_ranker::GenericLogisticRegressionModel::MergeFrom(from.logistic_regression());
      break;
    }
    case MODEL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:assist_ranker.RankerModelProto)
}

void RankerModelProto::SharedCtor() {
  _cached_size_ = 0;
  metadata_ = NULL;
  clear_has_model();
}

RankerModelProto::~RankerModelProto() {
  // @@protoc_insertion_point(destructor:assist_ranker.RankerModelProto)
  SharedDtor();
}

void RankerModelProto::SharedDtor() {
  if (this != internal_default_instance()) {
    delete metadata_;
  }
  if (has_model()) {
    clear_model();
  }
}

void RankerModelProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RankerModelProto& RankerModelProto::default_instance() {
  protobuf_ranker_5fmodel_2eproto::InitDefaults();
  return *internal_default_instance();
}

RankerModelProto* RankerModelProto::New(::google::protobuf::Arena* arena) const {
  RankerModelProto* n = new RankerModelProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RankerModelProto::clear_model() {
// @@protoc_insertion_point(one_of_clear_start:assist_ranker.RankerModelProto)
  switch (model_case()) {
    case kTranslate: {
      delete model_.translate_;
      break;
    }
    case kLogisticRegression: {
      delete model_.logistic_regression_;
      break;
    }
    case MODEL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MODEL_NOT_SET;
}


void RankerModelProto::Clear() {
// @@protoc_insertion_point(message_clear_start:assist_ranker.RankerModelProto)
  if (has_metadata()) {
    GOOGLE_DCHECK(metadata_ != NULL);
    metadata_->::assist_ranker::RankerModelMetadata::Clear();
  }
  clear_model();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RankerModelProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:assist_ranker.RankerModelProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .assist_ranker.RankerModelMetadata metadata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .assist_ranker.TranslateRankerModel translate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_translate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .assist_ranker.GenericLogisticRegressionModel logistic_regression = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_logistic_regression()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:assist_ranker.RankerModelProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:assist_ranker.RankerModelProto)
  return false;
#undef DO_
}

void RankerModelProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:assist_ranker.RankerModelProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .assist_ranker.RankerModelMetadata metadata = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->metadata_, output);
  }

  switch (model_case()) {
    case kTranslate:
      ::google::protobuf::internal::WireFormatLite::WriteMessage(
        2, *model_.translate_, output);
      break;
    case kLogisticRegression:
      ::google::protobuf::internal::WireFormatLite::WriteMessage(
        3, *model_.logistic_regression_, output);
      break;
    default: ;
  }
  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:assist_ranker.RankerModelProto)
}

size_t RankerModelProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:assist_ranker.RankerModelProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // optional .assist_ranker.RankerModelMetadata metadata = 1;
  if (has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->metadata_);
  }

  switch (model_case()) {
    // optional .assist_ranker.TranslateRankerModel translate = 2;
    case kTranslate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *model_.translate_);
      break;
    }
    // optional .assist_ranker.GenericLogisticRegressionModel logistic_regression = 3;
    case kLogisticRegression: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *model_.logistic_regression_);
      break;
    }
    case MODEL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankerModelProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RankerModelProto*>(&from));
}

void RankerModelProto::MergeFrom(const RankerModelProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:assist_ranker.RankerModelProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_metadata()) {
    mutable_metadata()->::assist_ranker::RankerModelMetadata::MergeFrom(from.metadata());
  }
  switch (from.model_case()) {
    case kTranslate: {
      mutable_translate()->::assist_ranker::TranslateRankerModel::MergeFrom(from.translate());
      break;
    }
    case kLogisticRegression: {
      mutable_logistic_regression()->::assist_ranker::GenericLogisticRegressionModel::MergeFrom(from.logistic_regression());
      break;
    }
    case MODEL_NOT_SET: {
      break;
    }
  }
}

void RankerModelProto::CopyFrom(const RankerModelProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:assist_ranker.RankerModelProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankerModelProto::IsInitialized() const {
  return true;
}

void RankerModelProto::Swap(RankerModelProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankerModelProto::InternalSwap(RankerModelProto* other) {
  std::swap(metadata_, other->metadata_);
  std::swap(model_, other->model_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string RankerModelProto::GetTypeName() const {
  return "assist_ranker.RankerModelProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RankerModelProto

// optional .assist_ranker.RankerModelMetadata metadata = 1;
bool RankerModelProto::has_metadata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RankerModelProto::set_has_metadata() {
  _has_bits_[0] |= 0x00000001u;
}
void RankerModelProto::clear_has_metadata() {
  _has_bits_[0] &= ~0x00000001u;
}
void RankerModelProto::clear_metadata() {
  if (metadata_ != NULL) metadata_->::assist_ranker::RankerModelMetadata::Clear();
  clear_has_metadata();
}
const ::assist_ranker::RankerModelMetadata& RankerModelProto::metadata() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelProto.metadata)
  return metadata_ != NULL ? *metadata_
                         : *::assist_ranker::RankerModelMetadata::internal_default_instance();
}
::assist_ranker::RankerModelMetadata* RankerModelProto::mutable_metadata() {
  set_has_metadata();
  if (metadata_ == NULL) {
    metadata_ = new ::assist_ranker::RankerModelMetadata;
  }
  // @@protoc_insertion_point(field_mutable:assist_ranker.RankerModelProto.metadata)
  return metadata_;
}
::assist_ranker::RankerModelMetadata* RankerModelProto::release_metadata() {
  // @@protoc_insertion_point(field_release:assist_ranker.RankerModelProto.metadata)
  clear_has_metadata();
  ::assist_ranker::RankerModelMetadata* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
void RankerModelProto::set_allocated_metadata(::assist_ranker::RankerModelMetadata* metadata) {
  delete metadata_;
  metadata_ = metadata;
  if (metadata) {
    set_has_metadata();
  } else {
    clear_has_metadata();
  }
  // @@protoc_insertion_point(field_set_allocated:assist_ranker.RankerModelProto.metadata)
}

// optional .assist_ranker.TranslateRankerModel translate = 2;
bool RankerModelProto::has_translate() const {
  return model_case() == kTranslate;
}
void RankerModelProto::set_has_translate() {
  _oneof_case_[0] = kTranslate;
}
void RankerModelProto::clear_translate() {
  if (has_translate()) {
    delete model_.translate_;
    clear_has_model();
  }
}
 const ::assist_ranker::TranslateRankerModel& RankerModelProto::translate() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelProto.translate)
  return has_translate()
      ? *model_.translate_
      : ::assist_ranker::TranslateRankerModel::default_instance();
}
::assist_ranker::TranslateRankerModel* RankerModelProto::mutable_translate() {
  if (!has_translate()) {
    clear_model();
    set_has_translate();
    model_.translate_ = new ::assist_ranker::TranslateRankerModel;
  }
  // @@protoc_insertion_point(field_mutable:assist_ranker.RankerModelProto.translate)
  return model_.translate_;
}
::assist_ranker::TranslateRankerModel* RankerModelProto::release_translate() {
  // @@protoc_insertion_point(field_release:assist_ranker.RankerModelProto.translate)
  if (has_translate()) {
    clear_has_model();
    ::assist_ranker::TranslateRankerModel* temp = model_.translate_;
    model_.translate_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void RankerModelProto::set_allocated_translate(::assist_ranker::TranslateRankerModel* translate) {
  clear_model();
  if (translate) {
    set_has_translate();
    model_.translate_ = translate;
  }
  // @@protoc_insertion_point(field_set_allocated:assist_ranker.RankerModelProto.translate)
}

// optional .assist_ranker.GenericLogisticRegressionModel logistic_regression = 3;
bool RankerModelProto::has_logistic_regression() const {
  return model_case() == kLogisticRegression;
}
void RankerModelProto::set_has_logistic_regression() {
  _oneof_case_[0] = kLogisticRegression;
}
void RankerModelProto::clear_logistic_regression() {
  if (has_logistic_regression()) {
    delete model_.logistic_regression_;
    clear_has_model();
  }
}
 const ::assist_ranker::GenericLogisticRegressionModel& RankerModelProto::logistic_regression() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelProto.logistic_regression)
  return has_logistic_regression()
      ? *model_.logistic_regression_
      : ::assist_ranker::GenericLogisticRegressionModel::default_instance();
}
::assist_ranker::GenericLogisticRegressionModel* RankerModelProto::mutable_logistic_regression() {
  if (!has_logistic_regression()) {
    clear_model();
    set_has_logistic_regression();
    model_.logistic_regression_ = new ::assist_ranker::GenericLogisticRegressionModel;
  }
  // @@protoc_insertion_point(field_mutable:assist_ranker.RankerModelProto.logistic_regression)
  return model_.logistic_regression_;
}
::assist_ranker::GenericLogisticRegressionModel* RankerModelProto::release_logistic_regression() {
  // @@protoc_insertion_point(field_release:assist_ranker.RankerModelProto.logistic_regression)
  if (has_logistic_regression()) {
    clear_has_model();
    ::assist_ranker::GenericLogisticRegressionModel* temp = model_.logistic_regression_;
    model_.logistic_regression_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void RankerModelProto::set_allocated_logistic_regression(::assist_ranker::GenericLogisticRegressionModel* logistic_regression) {
  clear_model();
  if (logistic_regression) {
    set_has_logistic_regression();
    model_.logistic_regression_ = logistic_regression;
  }
  // @@protoc_insertion_point(field_set_allocated:assist_ranker.RankerModelProto.logistic_regression)
}

bool RankerModelProto::has_model() const {
  return model_case() != MODEL_NOT_SET;
}
void RankerModelProto::clear_has_model() {
  _oneof_case_[0] = MODEL_NOT_SET;
}
RankerModelProto::ModelCase RankerModelProto::model_case() const {
  return RankerModelProto::ModelCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace assist_ranker

// @@protoc_insertion_point(global_scope)
