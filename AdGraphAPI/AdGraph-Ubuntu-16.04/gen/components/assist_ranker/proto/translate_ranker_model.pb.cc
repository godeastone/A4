// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: translate_ranker_model.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "translate_ranker_model.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace assist_ranker {
class TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TranslateRankerModel_TranslateLogisticRegressionModel::TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry> {
} _TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_default_instance_;
class TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TranslateRankerModel_TranslateLogisticRegressionModel::TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry> {
} _TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_default_instance_;
class TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TranslateRankerModel_TranslateLogisticRegressionModel::TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry> {
} _TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_default_instance_;
class TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TranslateRankerModel_TranslateLogisticRegressionModel::TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry> {
} _TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_default_instance_;
class TranslateRankerModel_TranslateLogisticRegressionModelDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TranslateRankerModel_TranslateLogisticRegressionModel> {
} _TranslateRankerModel_TranslateLogisticRegressionModel_default_instance_;
class TranslateRankerModelDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TranslateRankerModel> {
  public:
  const ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* translate_logistic_regression_model_;
} _TranslateRankerModel_default_instance_;

namespace protobuf_translate_5franker_5fmodel_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _TranslateRankerModel_TranslateLogisticRegressionModel_default_instance_.Shutdown();
  _TranslateRankerModel_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_default_instance_.DefaultConstruct();
  _TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_default_instance_.DefaultConstruct();
  _TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_default_instance_.DefaultConstruct();
  _TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_default_instance_.DefaultConstruct();
  _TranslateRankerModel_TranslateLogisticRegressionModel_default_instance_.DefaultConstruct();
  _TranslateRankerModel_default_instance_.DefaultConstruct();
  _TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_default_instance_.get_mutable()->set_default_instance(_TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_default_instance_.get_mutable());
  _TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_default_instance_.get_mutable()->set_default_instance(_TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_default_instance_.get_mutable());
  _TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_default_instance_.get_mutable()->set_default_instance(_TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_default_instance_.get_mutable());
  _TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_default_instance_.get_mutable()->set_default_instance(_TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_default_instance_.get_mutable());
  _TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_translate_5franker_5fmodel_2eproto


// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TranslateRankerModel_TranslateLogisticRegressionModel::kThresholdFieldNumber;
const int TranslateRankerModel_TranslateLogisticRegressionModel::kBiasFieldNumber;
const int TranslateRankerModel_TranslateLogisticRegressionModel::kAcceptRatioWeightFieldNumber;
const int TranslateRankerModel_TranslateLogisticRegressionModel::kDeclineRatioWeightFieldNumber;
const int TranslateRankerModel_TranslateLogisticRegressionModel::kIgnoreRatioWeightFieldNumber;
const int TranslateRankerModel_TranslateLogisticRegressionModel::kAcceptCountWeightFieldNumber;
const int TranslateRankerModel_TranslateLogisticRegressionModel::kDeclineCountWeightFieldNumber;
const int TranslateRankerModel_TranslateLogisticRegressionModel::kIgnoreCountWeightFieldNumber;
const int TranslateRankerModel_TranslateLogisticRegressionModel::kSourceLanguageWeightFieldNumber;
const int TranslateRankerModel_TranslateLogisticRegressionModel::kTargetLanguageWeightFieldNumber;
const int TranslateRankerModel_TranslateLogisticRegressionModel::kCountryWeightFieldNumber;
const int TranslateRankerModel_TranslateLogisticRegressionModel::kLocaleWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TranslateRankerModel_TranslateLogisticRegressionModel::TranslateRankerModel_TranslateLogisticRegressionModel()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_translate_5franker_5fmodel_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel)
}
TranslateRankerModel_TranslateLogisticRegressionModel::TranslateRankerModel_TranslateLogisticRegressionModel(const TranslateRankerModel_TranslateLogisticRegressionModel& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_language_weight_.MergeFrom(from.source_language_weight_);
  target_language_weight_.MergeFrom(from.target_language_weight_);
  country_weight_.MergeFrom(from.country_weight_);
  locale_weight_.MergeFrom(from.locale_weight_);
  ::memcpy(&bias_, &from.bias_,
    static_cast<size_t>(reinterpret_cast<char*>(&threshold_) -
    reinterpret_cast<char*>(&bias_)) + sizeof(threshold_));
  // @@protoc_insertion_point(copy_constructor:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel)
}

void TranslateRankerModel_TranslateLogisticRegressionModel::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&bias_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&threshold_) -
      reinterpret_cast<char*>(&bias_)) + sizeof(threshold_));
}

TranslateRankerModel_TranslateLogisticRegressionModel::~TranslateRankerModel_TranslateLogisticRegressionModel() {
  // @@protoc_insertion_point(destructor:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel)
  SharedDtor();
}

void TranslateRankerModel_TranslateLogisticRegressionModel::SharedDtor() {
}

void TranslateRankerModel_TranslateLogisticRegressionModel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TranslateRankerModel_TranslateLogisticRegressionModel& TranslateRankerModel_TranslateLogisticRegressionModel::default_instance() {
  protobuf_translate_5franker_5fmodel_2eproto::InitDefaults();
  return *internal_default_instance();
}

TranslateRankerModel_TranslateLogisticRegressionModel* TranslateRankerModel_TranslateLogisticRegressionModel::New(::google::protobuf::Arena* arena) const {
  TranslateRankerModel_TranslateLogisticRegressionModel* n = new TranslateRankerModel_TranslateLogisticRegressionModel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TranslateRankerModel_TranslateLogisticRegressionModel::Clear() {
// @@protoc_insertion_point(message_clear_start:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel)
  source_language_weight_.Clear();
  target_language_weight_.Clear();
  country_weight_.Clear();
  locale_weight_.Clear();
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&bias_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&threshold_) -
        reinterpret_cast<char*>(&bias_)) + sizeof(threshold_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TranslateRankerModel_TranslateLogisticRegressionModel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float bias = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u)) {
          set_has_bias();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bias_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float accept_ratio_weight = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {
          set_has_accept_ratio_weight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &accept_ratio_weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float decline_ratio_weight = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {
          set_has_decline_ratio_weight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &decline_ratio_weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float ignore_ratio_weight = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u)) {
          set_has_ignore_ratio_weight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ignore_ratio_weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, float> source_language_weight = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry::Parser< ::google::protobuf::internal::MapFieldLite<
              TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry,
              ::std::string, float,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
              0 >,
            ::google::protobuf::Map< ::std::string, float > > parser(&source_language_weight_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, float> target_language_weight = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry::Parser< ::google::protobuf::internal::MapFieldLite<
              TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry,
              ::std::string, float,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
              0 >,
            ::google::protobuf::Map< ::std::string, float > > parser(&target_language_weight_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, float> country_weight = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry::Parser< ::google::protobuf::internal::MapFieldLite<
              TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry,
              ::std::string, float,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
              0 >,
            ::google::protobuf::Map< ::std::string, float > > parser(&country_weight_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, float> locale_weight = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry::Parser< ::google::protobuf::internal::MapFieldLite<
              TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry,
              ::std::string, float,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
              0 >,
            ::google::protobuf::Map< ::std::string, float > > parser(&locale_weight_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float accept_count_weight = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u)) {
          set_has_accept_count_weight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &accept_count_weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float decline_count_weight = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u)) {
          set_has_decline_count_weight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &decline_count_weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float ignore_count_weight = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u)) {
          set_has_ignore_count_weight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ignore_count_weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float threshold = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u)) {
          set_has_threshold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel)
  return false;
#undef DO_
}

void TranslateRankerModel_TranslateLogisticRegressionModel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float bias = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->bias(), output);
  }

  // optional float accept_ratio_weight = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->accept_ratio_weight(), output);
  }

  // optional float decline_ratio_weight = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->decline_ratio_weight(), output);
  }

  // optional float ignore_ratio_weight = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->ignore_ratio_weight(), output);
  }

  // map<string, float> source_language_weight = 5;
  if (!this->source_language_weight().empty()) {
    typedef ::google::protobuf::Map< ::std::string, float >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->source_language_weight().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->source_language_weight().size()]);
      typedef ::google::protobuf::Map< ::std::string, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, float >::const_iterator
          it = this->source_language_weight().begin();
          it != this->source_language_weight().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(source_language_weight_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry> entry;
      for (::google::protobuf::Map< ::std::string, float >::const_iterator
          it = this->source_language_weight().begin();
          it != this->source_language_weight().end(); ++it) {
        entry.reset(source_language_weight_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, float> target_language_weight = 6;
  if (!this->target_language_weight().empty()) {
    typedef ::google::protobuf::Map< ::std::string, float >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->target_language_weight().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->target_language_weight().size()]);
      typedef ::google::protobuf::Map< ::std::string, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, float >::const_iterator
          it = this->target_language_weight().begin();
          it != this->target_language_weight().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(target_language_weight_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            6, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry> entry;
      for (::google::protobuf::Map< ::std::string, float >::const_iterator
          it = this->target_language_weight().begin();
          it != this->target_language_weight().end(); ++it) {
        entry.reset(target_language_weight_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, float> country_weight = 7;
  if (!this->country_weight().empty()) {
    typedef ::google::protobuf::Map< ::std::string, float >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->country_weight().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->country_weight().size()]);
      typedef ::google::protobuf::Map< ::std::string, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, float >::const_iterator
          it = this->country_weight().begin();
          it != this->country_weight().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(country_weight_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            7, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry> entry;
      for (::google::protobuf::Map< ::std::string, float >::const_iterator
          it = this->country_weight().begin();
          it != this->country_weight().end(); ++it) {
        entry.reset(country_weight_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            7, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, float> locale_weight = 8;
  if (!this->locale_weight().empty()) {
    typedef ::google::protobuf::Map< ::std::string, float >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->locale_weight().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->locale_weight().size()]);
      typedef ::google::protobuf::Map< ::std::string, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, float >::const_iterator
          it = this->locale_weight().begin();
          it != this->locale_weight().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(locale_weight_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            8, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry> entry;
      for (::google::protobuf::Map< ::std::string, float >::const_iterator
          it = this->locale_weight().begin();
          it != this->locale_weight().end(); ++it) {
        entry.reset(locale_weight_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            8, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional float accept_count_weight = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->accept_count_weight(), output);
  }

  // optional float decline_count_weight = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->decline_count_weight(), output);
  }

  // optional float ignore_count_weight = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->ignore_count_weight(), output);
  }

  // optional float threshold = 12;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->threshold(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel)
}

size_t TranslateRankerModel_TranslateLogisticRegressionModel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // map<string, float> source_language_weight = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->source_language_weight_size());
  {
    ::google::protobuf::scoped_ptr<TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry> entry;
    for (::google::protobuf::Map< ::std::string, float >::const_iterator
        it = this->source_language_weight().begin();
        it != this->source_language_weight().end(); ++it) {
      entry.reset(source_language_weight_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, float> target_language_weight = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->target_language_weight_size());
  {
    ::google::protobuf::scoped_ptr<TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry> entry;
    for (::google::protobuf::Map< ::std::string, float >::const_iterator
        it = this->target_language_weight().begin();
        it != this->target_language_weight().end(); ++it) {
      entry.reset(target_language_weight_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, float> country_weight = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->country_weight_size());
  {
    ::google::protobuf::scoped_ptr<TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry> entry;
    for (::google::protobuf::Map< ::std::string, float >::const_iterator
        it = this->country_weight().begin();
        it != this->country_weight().end(); ++it) {
      entry.reset(country_weight_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, float> locale_weight = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->locale_weight_size());
  {
    ::google::protobuf::scoped_ptr<TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry> entry;
    for (::google::protobuf::Map< ::std::string, float >::const_iterator
        it = this->locale_weight().begin();
        it != this->locale_weight().end(); ++it) {
      entry.reset(locale_weight_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional float bias = 1;
    if (has_bias()) {
      total_size += 1 + 4;
    }

    // optional float accept_ratio_weight = 2;
    if (has_accept_ratio_weight()) {
      total_size += 1 + 4;
    }

    // optional float decline_ratio_weight = 3;
    if (has_decline_ratio_weight()) {
      total_size += 1 + 4;
    }

    // optional float ignore_ratio_weight = 4;
    if (has_ignore_ratio_weight()) {
      total_size += 1 + 4;
    }

    // optional float accept_count_weight = 9;
    if (has_accept_count_weight()) {
      total_size += 1 + 4;
    }

    // optional float decline_count_weight = 10;
    if (has_decline_count_weight()) {
      total_size += 1 + 4;
    }

    // optional float ignore_count_weight = 11;
    if (has_ignore_count_weight()) {
      total_size += 1 + 4;
    }

    // optional float threshold = 12;
    if (has_threshold()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TranslateRankerModel_TranslateLogisticRegressionModel::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TranslateRankerModel_TranslateLogisticRegressionModel*>(&from));
}

void TranslateRankerModel_TranslateLogisticRegressionModel::MergeFrom(const TranslateRankerModel_TranslateLogisticRegressionModel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  source_language_weight_.MergeFrom(from.source_language_weight_);
  target_language_weight_.MergeFrom(from.target_language_weight_);
  country_weight_.MergeFrom(from.country_weight_);
  locale_weight_.MergeFrom(from.locale_weight_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      bias_ = from.bias_;
    }
    if (cached_has_bits & 0x00000002u) {
      accept_ratio_weight_ = from.accept_ratio_weight_;
    }
    if (cached_has_bits & 0x00000004u) {
      decline_ratio_weight_ = from.decline_ratio_weight_;
    }
    if (cached_has_bits & 0x00000008u) {
      ignore_ratio_weight_ = from.ignore_ratio_weight_;
    }
    if (cached_has_bits & 0x00000010u) {
      accept_count_weight_ = from.accept_count_weight_;
    }
    if (cached_has_bits & 0x00000020u) {
      decline_count_weight_ = from.decline_count_weight_;
    }
    if (cached_has_bits & 0x00000040u) {
      ignore_count_weight_ = from.ignore_count_weight_;
    }
    if (cached_has_bits & 0x00000080u) {
      threshold_ = from.threshold_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TranslateRankerModel_TranslateLogisticRegressionModel::CopyFrom(const TranslateRankerModel_TranslateLogisticRegressionModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TranslateRankerModel_TranslateLogisticRegressionModel::IsInitialized() const {
  return true;
}

void TranslateRankerModel_TranslateLogisticRegressionModel::Swap(TranslateRankerModel_TranslateLogisticRegressionModel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TranslateRankerModel_TranslateLogisticRegressionModel::InternalSwap(TranslateRankerModel_TranslateLogisticRegressionModel* other) {
  source_language_weight_.Swap(&other->source_language_weight_);
  target_language_weight_.Swap(&other->target_language_weight_);
  country_weight_.Swap(&other->country_weight_);
  locale_weight_.Swap(&other->locale_weight_);
  std::swap(bias_, other->bias_);
  std::swap(accept_ratio_weight_, other->accept_ratio_weight_);
  std::swap(decline_ratio_weight_, other->decline_ratio_weight_);
  std::swap(ignore_ratio_weight_, other->ignore_ratio_weight_);
  std::swap(accept_count_weight_, other->accept_count_weight_);
  std::swap(decline_count_weight_, other->decline_count_weight_);
  std::swap(ignore_count_weight_, other->ignore_count_weight_);
  std::swap(threshold_, other->threshold_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TranslateRankerModel_TranslateLogisticRegressionModel::GetTypeName() const {
  return "assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TranslateRankerModel_TranslateLogisticRegressionModel

// optional float threshold = 12;
bool TranslateRankerModel_TranslateLogisticRegressionModel::has_threshold() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::set_has_threshold() {
  _has_bits_[0] |= 0x00000080u;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_has_threshold() {
  _has_bits_[0] &= ~0x00000080u;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_threshold() {
  threshold_ = 0;
  clear_has_threshold();
}
float TranslateRankerModel_TranslateLogisticRegressionModel::threshold() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.threshold)
  return threshold_;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::set_threshold(float value) {
  set_has_threshold();
  threshold_ = value;
  // @@protoc_insertion_point(field_set:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.threshold)
}

// optional float bias = 1;
bool TranslateRankerModel_TranslateLogisticRegressionModel::has_bias() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::set_has_bias() {
  _has_bits_[0] |= 0x00000001u;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_has_bias() {
  _has_bits_[0] &= ~0x00000001u;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_bias() {
  bias_ = 0;
  clear_has_bias();
}
float TranslateRankerModel_TranslateLogisticRegressionModel::bias() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.bias)
  return bias_;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::set_bias(float value) {
  set_has_bias();
  bias_ = value;
  // @@protoc_insertion_point(field_set:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.bias)
}

// optional float accept_ratio_weight = 2;
bool TranslateRankerModel_TranslateLogisticRegressionModel::has_accept_ratio_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::set_has_accept_ratio_weight() {
  _has_bits_[0] |= 0x00000002u;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_has_accept_ratio_weight() {
  _has_bits_[0] &= ~0x00000002u;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_accept_ratio_weight() {
  accept_ratio_weight_ = 0;
  clear_has_accept_ratio_weight();
}
float TranslateRankerModel_TranslateLogisticRegressionModel::accept_ratio_weight() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.accept_ratio_weight)
  return accept_ratio_weight_;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::set_accept_ratio_weight(float value) {
  set_has_accept_ratio_weight();
  accept_ratio_weight_ = value;
  // @@protoc_insertion_point(field_set:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.accept_ratio_weight)
}

// optional float decline_ratio_weight = 3;
bool TranslateRankerModel_TranslateLogisticRegressionModel::has_decline_ratio_weight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::set_has_decline_ratio_weight() {
  _has_bits_[0] |= 0x00000004u;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_has_decline_ratio_weight() {
  _has_bits_[0] &= ~0x00000004u;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_decline_ratio_weight() {
  decline_ratio_weight_ = 0;
  clear_has_decline_ratio_weight();
}
float TranslateRankerModel_TranslateLogisticRegressionModel::decline_ratio_weight() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.decline_ratio_weight)
  return decline_ratio_weight_;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::set_decline_ratio_weight(float value) {
  set_has_decline_ratio_weight();
  decline_ratio_weight_ = value;
  // @@protoc_insertion_point(field_set:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.decline_ratio_weight)
}

// optional float ignore_ratio_weight = 4;
bool TranslateRankerModel_TranslateLogisticRegressionModel::has_ignore_ratio_weight() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::set_has_ignore_ratio_weight() {
  _has_bits_[0] |= 0x00000008u;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_has_ignore_ratio_weight() {
  _has_bits_[0] &= ~0x00000008u;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_ignore_ratio_weight() {
  ignore_ratio_weight_ = 0;
  clear_has_ignore_ratio_weight();
}
float TranslateRankerModel_TranslateLogisticRegressionModel::ignore_ratio_weight() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.ignore_ratio_weight)
  return ignore_ratio_weight_;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::set_ignore_ratio_weight(float value) {
  set_has_ignore_ratio_weight();
  ignore_ratio_weight_ = value;
  // @@protoc_insertion_point(field_set:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.ignore_ratio_weight)
}

// optional float accept_count_weight = 9;
bool TranslateRankerModel_TranslateLogisticRegressionModel::has_accept_count_weight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::set_has_accept_count_weight() {
  _has_bits_[0] |= 0x00000010u;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_has_accept_count_weight() {
  _has_bits_[0] &= ~0x00000010u;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_accept_count_weight() {
  accept_count_weight_ = 0;
  clear_has_accept_count_weight();
}
float TranslateRankerModel_TranslateLogisticRegressionModel::accept_count_weight() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.accept_count_weight)
  return accept_count_weight_;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::set_accept_count_weight(float value) {
  set_has_accept_count_weight();
  accept_count_weight_ = value;
  // @@protoc_insertion_point(field_set:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.accept_count_weight)
}

// optional float decline_count_weight = 10;
bool TranslateRankerModel_TranslateLogisticRegressionModel::has_decline_count_weight() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::set_has_decline_count_weight() {
  _has_bits_[0] |= 0x00000020u;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_has_decline_count_weight() {
  _has_bits_[0] &= ~0x00000020u;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_decline_count_weight() {
  decline_count_weight_ = 0;
  clear_has_decline_count_weight();
}
float TranslateRankerModel_TranslateLogisticRegressionModel::decline_count_weight() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.decline_count_weight)
  return decline_count_weight_;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::set_decline_count_weight(float value) {
  set_has_decline_count_weight();
  decline_count_weight_ = value;
  // @@protoc_insertion_point(field_set:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.decline_count_weight)
}

// optional float ignore_count_weight = 11;
bool TranslateRankerModel_TranslateLogisticRegressionModel::has_ignore_count_weight() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::set_has_ignore_count_weight() {
  _has_bits_[0] |= 0x00000040u;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_has_ignore_count_weight() {
  _has_bits_[0] &= ~0x00000040u;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_ignore_count_weight() {
  ignore_count_weight_ = 0;
  clear_has_ignore_count_weight();
}
float TranslateRankerModel_TranslateLogisticRegressionModel::ignore_count_weight() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.ignore_count_weight)
  return ignore_count_weight_;
}
void TranslateRankerModel_TranslateLogisticRegressionModel::set_ignore_count_weight(float value) {
  set_has_ignore_count_weight();
  ignore_count_weight_ = value;
  // @@protoc_insertion_point(field_set:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.ignore_count_weight)
}

// map<string, float> source_language_weight = 5;
int TranslateRankerModel_TranslateLogisticRegressionModel::source_language_weight_size() const {
  return source_language_weight_.size();
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_source_language_weight() {
  source_language_weight_.Clear();
}
 const ::google::protobuf::Map< ::std::string, float >&
TranslateRankerModel_TranslateLogisticRegressionModel::source_language_weight() const {
  // @@protoc_insertion_point(field_map:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.source_language_weight)
  return source_language_weight_.GetMap();
}
 ::google::protobuf::Map< ::std::string, float >*
TranslateRankerModel_TranslateLogisticRegressionModel::mutable_source_language_weight() {
  // @@protoc_insertion_point(field_mutable_map:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.source_language_weight)
  return source_language_weight_.MutableMap();
}

// map<string, float> target_language_weight = 6;
int TranslateRankerModel_TranslateLogisticRegressionModel::target_language_weight_size() const {
  return target_language_weight_.size();
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_target_language_weight() {
  target_language_weight_.Clear();
}
 const ::google::protobuf::Map< ::std::string, float >&
TranslateRankerModel_TranslateLogisticRegressionModel::target_language_weight() const {
  // @@protoc_insertion_point(field_map:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.target_language_weight)
  return target_language_weight_.GetMap();
}
 ::google::protobuf::Map< ::std::string, float >*
TranslateRankerModel_TranslateLogisticRegressionModel::mutable_target_language_weight() {
  // @@protoc_insertion_point(field_mutable_map:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.target_language_weight)
  return target_language_weight_.MutableMap();
}

// map<string, float> country_weight = 7;
int TranslateRankerModel_TranslateLogisticRegressionModel::country_weight_size() const {
  return country_weight_.size();
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_country_weight() {
  country_weight_.Clear();
}
 const ::google::protobuf::Map< ::std::string, float >&
TranslateRankerModel_TranslateLogisticRegressionModel::country_weight() const {
  // @@protoc_insertion_point(field_map:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.country_weight)
  return country_weight_.GetMap();
}
 ::google::protobuf::Map< ::std::string, float >*
TranslateRankerModel_TranslateLogisticRegressionModel::mutable_country_weight() {
  // @@protoc_insertion_point(field_mutable_map:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.country_weight)
  return country_weight_.MutableMap();
}

// map<string, float> locale_weight = 8;
int TranslateRankerModel_TranslateLogisticRegressionModel::locale_weight_size() const {
  return locale_weight_.size();
}
void TranslateRankerModel_TranslateLogisticRegressionModel::clear_locale_weight() {
  locale_weight_.Clear();
}
 const ::google::protobuf::Map< ::std::string, float >&
TranslateRankerModel_TranslateLogisticRegressionModel::locale_weight() const {
  // @@protoc_insertion_point(field_map:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.locale_weight)
  return locale_weight_.GetMap();
}
 ::google::protobuf::Map< ::std::string, float >*
TranslateRankerModel_TranslateLogisticRegressionModel::mutable_locale_weight() {
  // @@protoc_insertion_point(field_mutable_map:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.locale_weight)
  return locale_weight_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TranslateRankerModel::kVersionFieldNumber;
const int TranslateRankerModel::kTranslateLogisticRegressionModelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TranslateRankerModel::TranslateRankerModel()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_translate_5franker_5fmodel_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:assist_ranker.TranslateRankerModel)
}
TranslateRankerModel::TranslateRankerModel(const TranslateRankerModel& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_ = from.version_;
  clear_has_model_revision();
  switch (from.model_revision_case()) {
    case kTranslateLogisticRegressionModel: {
      mutable_translate_logistic_regression_model()->::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel::MergeFrom(from.translate_logistic_regression_model());
      break;
    }
    case MODEL_REVISION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:assist_ranker.TranslateRankerModel)
}

void TranslateRankerModel::SharedCtor() {
  _cached_size_ = 0;
  version_ = 0u;
  clear_has_model_revision();
}

TranslateRankerModel::~TranslateRankerModel() {
  // @@protoc_insertion_point(destructor:assist_ranker.TranslateRankerModel)
  SharedDtor();
}

void TranslateRankerModel::SharedDtor() {
  if (has_model_revision()) {
    clear_model_revision();
  }
}

void TranslateRankerModel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TranslateRankerModel& TranslateRankerModel::default_instance() {
  protobuf_translate_5franker_5fmodel_2eproto::InitDefaults();
  return *internal_default_instance();
}

TranslateRankerModel* TranslateRankerModel::New(::google::protobuf::Arena* arena) const {
  TranslateRankerModel* n = new TranslateRankerModel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TranslateRankerModel::clear_model_revision() {
// @@protoc_insertion_point(one_of_clear_start:assist_ranker.TranslateRankerModel)
  switch (model_revision_case()) {
    case kTranslateLogisticRegressionModel: {
      delete model_revision_.translate_logistic_regression_model_;
      break;
    }
    case MODEL_REVISION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MODEL_REVISION_NOT_SET;
}


void TranslateRankerModel::Clear() {
// @@protoc_insertion_point(message_clear_start:assist_ranker.TranslateRankerModel)
  version_ = 0u;
  clear_model_revision();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TranslateRankerModel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:assist_ranker.TranslateRankerModel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel translate_logistic_regression_model = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_translate_logistic_regression_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:assist_ranker.TranslateRankerModel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:assist_ranker.TranslateRankerModel)
  return false;
#undef DO_
}

void TranslateRankerModel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:assist_ranker.TranslateRankerModel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional .assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel translate_logistic_regression_model = 2;
  if (has_translate_logistic_regression_model()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *model_revision_.translate_logistic_regression_model_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:assist_ranker.TranslateRankerModel)
}

size_t TranslateRankerModel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:assist_ranker.TranslateRankerModel)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // optional uint32 version = 1;
  if (has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  switch (model_revision_case()) {
    // optional .assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel translate_logistic_regression_model = 2;
    case kTranslateLogisticRegressionModel: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *model_revision_.translate_logistic_regression_model_);
      break;
    }
    case MODEL_REVISION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TranslateRankerModel::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TranslateRankerModel*>(&from));
}

void TranslateRankerModel::MergeFrom(const TranslateRankerModel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:assist_ranker.TranslateRankerModel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_version()) {
    set_version(from.version());
  }
  switch (from.model_revision_case()) {
    case kTranslateLogisticRegressionModel: {
      mutable_translate_logistic_regression_model()->::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel::MergeFrom(from.translate_logistic_regression_model());
      break;
    }
    case MODEL_REVISION_NOT_SET: {
      break;
    }
  }
}

void TranslateRankerModel::CopyFrom(const TranslateRankerModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:assist_ranker.TranslateRankerModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TranslateRankerModel::IsInitialized() const {
  return true;
}

void TranslateRankerModel::Swap(TranslateRankerModel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TranslateRankerModel::InternalSwap(TranslateRankerModel* other) {
  std::swap(version_, other->version_);
  std::swap(model_revision_, other->model_revision_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TranslateRankerModel::GetTypeName() const {
  return "assist_ranker.TranslateRankerModel";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TranslateRankerModel

// optional uint32 version = 1;
bool TranslateRankerModel::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TranslateRankerModel::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
void TranslateRankerModel::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void TranslateRankerModel::clear_version() {
  version_ = 0u;
  clear_has_version();
}
::google::protobuf::uint32 TranslateRankerModel::version() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.version)
  return version_;
}
void TranslateRankerModel::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:assist_ranker.TranslateRankerModel.version)
}

// optional .assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel translate_logistic_regression_model = 2;
bool TranslateRankerModel::has_translate_logistic_regression_model() const {
  return model_revision_case() == kTranslateLogisticRegressionModel;
}
void TranslateRankerModel::set_has_translate_logistic_regression_model() {
  _oneof_case_[0] = kTranslateLogisticRegressionModel;
}
void TranslateRankerModel::clear_translate_logistic_regression_model() {
  if (has_translate_logistic_regression_model()) {
    delete model_revision_.translate_logistic_regression_model_;
    clear_has_model_revision();
  }
}
 const ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel& TranslateRankerModel::translate_logistic_regression_model() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.translate_logistic_regression_model)
  return has_translate_logistic_regression_model()
      ? *model_revision_.translate_logistic_regression_model_
      : ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel::default_instance();
}
::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* TranslateRankerModel::mutable_translate_logistic_regression_model() {
  if (!has_translate_logistic_regression_model()) {
    clear_model_revision();
    set_has_translate_logistic_regression_model();
    model_revision_.translate_logistic_regression_model_ = new ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel;
  }
  // @@protoc_insertion_point(field_mutable:assist_ranker.TranslateRankerModel.translate_logistic_regression_model)
  return model_revision_.translate_logistic_regression_model_;
}
::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* TranslateRankerModel::release_translate_logistic_regression_model() {
  // @@protoc_insertion_point(field_release:assist_ranker.TranslateRankerModel.translate_logistic_regression_model)
  if (has_translate_logistic_regression_model()) {
    clear_has_model_revision();
    ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* temp = model_revision_.translate_logistic_regression_model_;
    model_revision_.translate_logistic_regression_model_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void TranslateRankerModel::set_allocated_translate_logistic_regression_model(::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* translate_logistic_regression_model) {
  clear_model_revision();
  if (translate_logistic_regression_model) {
    set_has_translate_logistic_regression_model();
    model_revision_.translate_logistic_regression_model_ = translate_logistic_regression_model;
  }
  // @@protoc_insertion_point(field_set_allocated:assist_ranker.TranslateRankerModel.translate_logistic_regression_model)
}

bool TranslateRankerModel::has_model_revision() const {
  return model_revision_case() != MODEL_REVISION_NOT_SET;
}
void TranslateRankerModel::clear_has_model_revision() {
  _oneof_case_[0] = MODEL_REVISION_NOT_SET;
}
TranslateRankerModel::ModelRevisionCase TranslateRankerModel::model_revision_case() const {
  return TranslateRankerModel::ModelRevisionCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace assist_ranker

// @@protoc_insertion_point(global_scope)
