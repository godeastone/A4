// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ranker_model.proto

#ifndef PROTOBUF_ranker_5fmodel_2eproto__INCLUDED
#define PROTOBUF_ranker_5fmodel_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "translate_ranker_model.pb.h"
#include "generic_logistic_regression_model.pb.h"
// @@protoc_insertion_point(includes)
namespace assist_ranker {
class RankerModelMetadata;
class RankerModelMetadataDefaultTypeInternal;
extern RankerModelMetadataDefaultTypeInternal _RankerModelMetadata_default_instance_;
class RankerModelProto;
class RankerModelProtoDefaultTypeInternal;
extern RankerModelProtoDefaultTypeInternal _RankerModelProto_default_instance_;
}  // namespace assist_ranker

namespace assist_ranker {

namespace protobuf_ranker_5fmodel_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_ranker_5fmodel_2eproto

// ===================================================================

class RankerModelMetadata : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:assist_ranker.RankerModelMetadata) */ {
 public:
  RankerModelMetadata();
  virtual ~RankerModelMetadata();

  RankerModelMetadata(const RankerModelMetadata& from);

  inline RankerModelMetadata& operator=(const RankerModelMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const RankerModelMetadata& default_instance();

  static inline const RankerModelMetadata* internal_default_instance() {
    return reinterpret_cast<const RankerModelMetadata*>(
               &_RankerModelMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(RankerModelMetadata* other);

  // implements Message ----------------------------------------------

  inline RankerModelMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  RankerModelMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RankerModelMetadata& from);
  void MergeFrom(const RankerModelMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RankerModelMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string label = 2;
  bool has_label() const;
  void clear_label();
  static const int kLabelFieldNumber = 2;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  #if LANG_CXX11
  void set_label(::std::string&& value);
  #endif
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // optional string source = 3;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 3;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  #if LANG_CXX11
  void set_source(::std::string&& value);
  #endif
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // optional int64 last_modified_sec = 4;
  bool has_last_modified_sec() const;
  void clear_last_modified_sec();
  static const int kLastModifiedSecFieldNumber = 4;
  ::google::protobuf::int64 last_modified_sec() const;
  void set_last_modified_sec(::google::protobuf::int64 value);

  // optional int64 cache_duration_sec = 5;
  bool has_cache_duration_sec() const;
  void clear_cache_duration_sec();
  static const int kCacheDurationSecFieldNumber = 5;
  ::google::protobuf::int64 cache_duration_sec() const;
  void set_cache_duration_sec(::google::protobuf::int64 value);

  // optional uint32 model_version = 6;
  bool has_model_version() const;
  void clear_model_version();
  static const int kModelVersionFieldNumber = 6;
  ::google::protobuf::uint32 model_version() const;
  void set_model_version(::google::protobuf::uint32 value);

  // optional bool input_features_names_are_hex_hashes = 7;
  bool has_input_features_names_are_hex_hashes() const;
  void clear_input_features_names_are_hex_hashes();
  static const int kInputFeaturesNamesAreHexHashesFieldNumber = 7;
  bool input_features_names_are_hex_hashes() const;
  void set_input_features_names_are_hex_hashes(bool value);

  // @@protoc_insertion_point(class_scope:assist_ranker.RankerModelMetadata)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_label();
  void clear_has_label();
  void set_has_source();
  void clear_has_source();
  void set_has_last_modified_sec();
  void clear_has_last_modified_sec();
  void set_has_cache_duration_sec();
  void clear_has_cache_duration_sec();
  void set_has_model_version();
  void clear_has_model_version();
  void set_has_input_features_names_are_hex_hashes();
  void clear_has_input_features_names_are_hex_hashes();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::int64 last_modified_sec_;
  ::google::protobuf::int64 cache_duration_sec_;
  ::google::protobuf::uint32 model_version_;
  bool input_features_names_are_hex_hashes_;
  friend struct protobuf_ranker_5fmodel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RankerModelProto : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:assist_ranker.RankerModelProto) */ {
 public:
  RankerModelProto();
  virtual ~RankerModelProto();

  RankerModelProto(const RankerModelProto& from);

  inline RankerModelProto& operator=(const RankerModelProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const RankerModelProto& default_instance();

  enum ModelCase {
    kTranslate = 2,
    kLogisticRegression = 3,
    MODEL_NOT_SET = 0,
  };

  static inline const RankerModelProto* internal_default_instance() {
    return reinterpret_cast<const RankerModelProto*>(
               &_RankerModelProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(RankerModelProto* other);

  // implements Message ----------------------------------------------

  inline RankerModelProto* New() const PROTOBUF_FINAL { return New(NULL); }

  RankerModelProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RankerModelProto& from);
  void MergeFrom(const RankerModelProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RankerModelProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .assist_ranker.RankerModelMetadata metadata = 1;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 1;
  const ::assist_ranker::RankerModelMetadata& metadata() const;
  ::assist_ranker::RankerModelMetadata* mutable_metadata();
  ::assist_ranker::RankerModelMetadata* release_metadata();
  void set_allocated_metadata(::assist_ranker::RankerModelMetadata* metadata);

  // optional .assist_ranker.TranslateRankerModel translate = 2;
  bool has_translate() const;
  void clear_translate();
  static const int kTranslateFieldNumber = 2;
  const ::assist_ranker::TranslateRankerModel& translate() const;
  ::assist_ranker::TranslateRankerModel* mutable_translate();
  ::assist_ranker::TranslateRankerModel* release_translate();
  void set_allocated_translate(::assist_ranker::TranslateRankerModel* translate);

  // optional .assist_ranker.GenericLogisticRegressionModel logistic_regression = 3;
  bool has_logistic_regression() const;
  void clear_logistic_regression();
  static const int kLogisticRegressionFieldNumber = 3;
  const ::assist_ranker::GenericLogisticRegressionModel& logistic_regression() const;
  ::assist_ranker::GenericLogisticRegressionModel* mutable_logistic_regression();
  ::assist_ranker::GenericLogisticRegressionModel* release_logistic_regression();
  void set_allocated_logistic_regression(::assist_ranker::GenericLogisticRegressionModel* logistic_regression);

  ModelCase model_case() const;
  // @@protoc_insertion_point(class_scope:assist_ranker.RankerModelProto)
 private:
  void set_has_metadata();
  void clear_has_metadata();
  void set_has_translate();
  void set_has_logistic_regression();

  inline bool has_model() const;
  void clear_model();
  inline void clear_has_model();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::assist_ranker::RankerModelMetadata* metadata_;
  union ModelUnion {
    ModelUnion() {}
    ::assist_ranker::TranslateRankerModel* translate_;
    ::assist_ranker::GenericLogisticRegressionModel* logistic_regression_;
  } model_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_ranker_5fmodel_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RankerModelMetadata

// optional string name = 1;
inline bool RankerModelMetadata::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankerModelMetadata::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankerModelMetadata::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankerModelMetadata::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& RankerModelMetadata::name() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelMetadata.name)
  return name_.GetNoArena();
}
inline void RankerModelMetadata::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:assist_ranker.RankerModelMetadata.name)
}
#if LANG_CXX11
inline void RankerModelMetadata::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:assist_ranker.RankerModelMetadata.name)
}
#endif
inline void RankerModelMetadata::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:assist_ranker.RankerModelMetadata.name)
}
inline void RankerModelMetadata::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:assist_ranker.RankerModelMetadata.name)
}
inline ::std::string* RankerModelMetadata::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:assist_ranker.RankerModelMetadata.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RankerModelMetadata::release_name() {
  // @@protoc_insertion_point(field_release:assist_ranker.RankerModelMetadata.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RankerModelMetadata::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:assist_ranker.RankerModelMetadata.name)
}

// optional string label = 2;
inline bool RankerModelMetadata::has_label() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankerModelMetadata::set_has_label() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankerModelMetadata::clear_has_label() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankerModelMetadata::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_label();
}
inline const ::std::string& RankerModelMetadata::label() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelMetadata.label)
  return label_.GetNoArena();
}
inline void RankerModelMetadata::set_label(const ::std::string& value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:assist_ranker.RankerModelMetadata.label)
}
#if LANG_CXX11
inline void RankerModelMetadata::set_label(::std::string&& value) {
  set_has_label();
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:assist_ranker.RankerModelMetadata.label)
}
#endif
inline void RankerModelMetadata::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:assist_ranker.RankerModelMetadata.label)
}
inline void RankerModelMetadata::set_label(const char* value, size_t size) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:assist_ranker.RankerModelMetadata.label)
}
inline ::std::string* RankerModelMetadata::mutable_label() {
  set_has_label();
  // @@protoc_insertion_point(field_mutable:assist_ranker.RankerModelMetadata.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RankerModelMetadata::release_label() {
  // @@protoc_insertion_point(field_release:assist_ranker.RankerModelMetadata.label)
  clear_has_label();
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RankerModelMetadata::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:assist_ranker.RankerModelMetadata.label)
}

// optional string source = 3;
inline bool RankerModelMetadata::has_source() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RankerModelMetadata::set_has_source() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RankerModelMetadata::clear_has_source() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RankerModelMetadata::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}
inline const ::std::string& RankerModelMetadata::source() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelMetadata.source)
  return source_.GetNoArena();
}
inline void RankerModelMetadata::set_source(const ::std::string& value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:assist_ranker.RankerModelMetadata.source)
}
#if LANG_CXX11
inline void RankerModelMetadata::set_source(::std::string&& value) {
  set_has_source();
  source_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:assist_ranker.RankerModelMetadata.source)
}
#endif
inline void RankerModelMetadata::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:assist_ranker.RankerModelMetadata.source)
}
inline void RankerModelMetadata::set_source(const char* value, size_t size) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:assist_ranker.RankerModelMetadata.source)
}
inline ::std::string* RankerModelMetadata::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:assist_ranker.RankerModelMetadata.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RankerModelMetadata::release_source() {
  // @@protoc_insertion_point(field_release:assist_ranker.RankerModelMetadata.source)
  clear_has_source();
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RankerModelMetadata::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:assist_ranker.RankerModelMetadata.source)
}

// optional int64 last_modified_sec = 4;
inline bool RankerModelMetadata::has_last_modified_sec() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RankerModelMetadata::set_has_last_modified_sec() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RankerModelMetadata::clear_has_last_modified_sec() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RankerModelMetadata::clear_last_modified_sec() {
  last_modified_sec_ = GOOGLE_LONGLONG(0);
  clear_has_last_modified_sec();
}
inline ::google::protobuf::int64 RankerModelMetadata::last_modified_sec() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelMetadata.last_modified_sec)
  return last_modified_sec_;
}
inline void RankerModelMetadata::set_last_modified_sec(::google::protobuf::int64 value) {
  set_has_last_modified_sec();
  last_modified_sec_ = value;
  // @@protoc_insertion_point(field_set:assist_ranker.RankerModelMetadata.last_modified_sec)
}

// optional int64 cache_duration_sec = 5;
inline bool RankerModelMetadata::has_cache_duration_sec() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RankerModelMetadata::set_has_cache_duration_sec() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RankerModelMetadata::clear_has_cache_duration_sec() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RankerModelMetadata::clear_cache_duration_sec() {
  cache_duration_sec_ = GOOGLE_LONGLONG(0);
  clear_has_cache_duration_sec();
}
inline ::google::protobuf::int64 RankerModelMetadata::cache_duration_sec() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelMetadata.cache_duration_sec)
  return cache_duration_sec_;
}
inline void RankerModelMetadata::set_cache_duration_sec(::google::protobuf::int64 value) {
  set_has_cache_duration_sec();
  cache_duration_sec_ = value;
  // @@protoc_insertion_point(field_set:assist_ranker.RankerModelMetadata.cache_duration_sec)
}

// optional uint32 model_version = 6;
inline bool RankerModelMetadata::has_model_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RankerModelMetadata::set_has_model_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RankerModelMetadata::clear_has_model_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RankerModelMetadata::clear_model_version() {
  model_version_ = 0u;
  clear_has_model_version();
}
inline ::google::protobuf::uint32 RankerModelMetadata::model_version() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelMetadata.model_version)
  return model_version_;
}
inline void RankerModelMetadata::set_model_version(::google::protobuf::uint32 value) {
  set_has_model_version();
  model_version_ = value;
  // @@protoc_insertion_point(field_set:assist_ranker.RankerModelMetadata.model_version)
}

// optional bool input_features_names_are_hex_hashes = 7;
inline bool RankerModelMetadata::has_input_features_names_are_hex_hashes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RankerModelMetadata::set_has_input_features_names_are_hex_hashes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RankerModelMetadata::clear_has_input_features_names_are_hex_hashes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RankerModelMetadata::clear_input_features_names_are_hex_hashes() {
  input_features_names_are_hex_hashes_ = false;
  clear_has_input_features_names_are_hex_hashes();
}
inline bool RankerModelMetadata::input_features_names_are_hex_hashes() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelMetadata.input_features_names_are_hex_hashes)
  return input_features_names_are_hex_hashes_;
}
inline void RankerModelMetadata::set_input_features_names_are_hex_hashes(bool value) {
  set_has_input_features_names_are_hex_hashes();
  input_features_names_are_hex_hashes_ = value;
  // @@protoc_insertion_point(field_set:assist_ranker.RankerModelMetadata.input_features_names_are_hex_hashes)
}

// -------------------------------------------------------------------

// RankerModelProto

// optional .assist_ranker.RankerModelMetadata metadata = 1;
inline bool RankerModelProto::has_metadata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankerModelProto::set_has_metadata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankerModelProto::clear_has_metadata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankerModelProto::clear_metadata() {
  if (metadata_ != NULL) metadata_->::assist_ranker::RankerModelMetadata::Clear();
  clear_has_metadata();
}
inline const ::assist_ranker::RankerModelMetadata& RankerModelProto::metadata() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelProto.metadata)
  return metadata_ != NULL ? *metadata_
                         : *::assist_ranker::RankerModelMetadata::internal_default_instance();
}
inline ::assist_ranker::RankerModelMetadata* RankerModelProto::mutable_metadata() {
  set_has_metadata();
  if (metadata_ == NULL) {
    metadata_ = new ::assist_ranker::RankerModelMetadata;
  }
  // @@protoc_insertion_point(field_mutable:assist_ranker.RankerModelProto.metadata)
  return metadata_;
}
inline ::assist_ranker::RankerModelMetadata* RankerModelProto::release_metadata() {
  // @@protoc_insertion_point(field_release:assist_ranker.RankerModelProto.metadata)
  clear_has_metadata();
  ::assist_ranker::RankerModelMetadata* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
inline void RankerModelProto::set_allocated_metadata(::assist_ranker::RankerModelMetadata* metadata) {
  delete metadata_;
  metadata_ = metadata;
  if (metadata) {
    set_has_metadata();
  } else {
    clear_has_metadata();
  }
  // @@protoc_insertion_point(field_set_allocated:assist_ranker.RankerModelProto.metadata)
}

// optional .assist_ranker.TranslateRankerModel translate = 2;
inline bool RankerModelProto::has_translate() const {
  return model_case() == kTranslate;
}
inline void RankerModelProto::set_has_translate() {
  _oneof_case_[0] = kTranslate;
}
inline void RankerModelProto::clear_translate() {
  if (has_translate()) {
    delete model_.translate_;
    clear_has_model();
  }
}
inline  const ::assist_ranker::TranslateRankerModel& RankerModelProto::translate() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelProto.translate)
  return has_translate()
      ? *model_.translate_
      : ::assist_ranker::TranslateRankerModel::default_instance();
}
inline ::assist_ranker::TranslateRankerModel* RankerModelProto::mutable_translate() {
  if (!has_translate()) {
    clear_model();
    set_has_translate();
    model_.translate_ = new ::assist_ranker::TranslateRankerModel;
  }
  // @@protoc_insertion_point(field_mutable:assist_ranker.RankerModelProto.translate)
  return model_.translate_;
}
inline ::assist_ranker::TranslateRankerModel* RankerModelProto::release_translate() {
  // @@protoc_insertion_point(field_release:assist_ranker.RankerModelProto.translate)
  if (has_translate()) {
    clear_has_model();
    ::assist_ranker::TranslateRankerModel* temp = model_.translate_;
    model_.translate_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void RankerModelProto::set_allocated_translate(::assist_ranker::TranslateRankerModel* translate) {
  clear_model();
  if (translate) {
    set_has_translate();
    model_.translate_ = translate;
  }
  // @@protoc_insertion_point(field_set_allocated:assist_ranker.RankerModelProto.translate)
}

// optional .assist_ranker.GenericLogisticRegressionModel logistic_regression = 3;
inline bool RankerModelProto::has_logistic_regression() const {
  return model_case() == kLogisticRegression;
}
inline void RankerModelProto::set_has_logistic_regression() {
  _oneof_case_[0] = kLogisticRegression;
}
inline void RankerModelProto::clear_logistic_regression() {
  if (has_logistic_regression()) {
    delete model_.logistic_regression_;
    clear_has_model();
  }
}
inline  const ::assist_ranker::GenericLogisticRegressionModel& RankerModelProto::logistic_regression() const {
  // @@protoc_insertion_point(field_get:assist_ranker.RankerModelProto.logistic_regression)
  return has_logistic_regression()
      ? *model_.logistic_regression_
      : ::assist_ranker::GenericLogisticRegressionModel::default_instance();
}
inline ::assist_ranker::GenericLogisticRegressionModel* RankerModelProto::mutable_logistic_regression() {
  if (!has_logistic_regression()) {
    clear_model();
    set_has_logistic_regression();
    model_.logistic_regression_ = new ::assist_ranker::GenericLogisticRegressionModel;
  }
  // @@protoc_insertion_point(field_mutable:assist_ranker.RankerModelProto.logistic_regression)
  return model_.logistic_regression_;
}
inline ::assist_ranker::GenericLogisticRegressionModel* RankerModelProto::release_logistic_regression() {
  // @@protoc_insertion_point(field_release:assist_ranker.RankerModelProto.logistic_regression)
  if (has_logistic_regression()) {
    clear_has_model();
    ::assist_ranker::GenericLogisticRegressionModel* temp = model_.logistic_regression_;
    model_.logistic_regression_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void RankerModelProto::set_allocated_logistic_regression(::assist_ranker::GenericLogisticRegressionModel* logistic_regression) {
  clear_model();
  if (logistic_regression) {
    set_has_logistic_regression();
    model_.logistic_regression_ = logistic_regression;
  }
  // @@protoc_insertion_point(field_set_allocated:assist_ranker.RankerModelProto.logistic_regression)
}

inline bool RankerModelProto::has_model() const {
  return model_case() != MODEL_NOT_SET;
}
inline void RankerModelProto::clear_has_model() {
  _oneof_case_[0] = MODEL_NOT_SET;
}
inline RankerModelProto::ModelCase RankerModelProto::model_case() const {
  return RankerModelProto::ModelCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace assist_ranker

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ranker_5fmodel_2eproto__INCLUDED
