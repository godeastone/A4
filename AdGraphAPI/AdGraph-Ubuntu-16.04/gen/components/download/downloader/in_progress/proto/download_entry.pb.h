// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: download_entry.proto

#ifndef PROTOBUF_download_5fentry_2eproto__INCLUDED
#define PROTOBUF_download_5fentry_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "download_source.pb.h"
// @@protoc_insertion_point(includes)
namespace metadata_pb {
class DownloadDBEntry;
class DownloadDBEntryDefaultTypeInternal;
extern DownloadDBEntryDefaultTypeInternal _DownloadDBEntry_default_instance_;
class DownloadEntries;
class DownloadEntriesDefaultTypeInternal;
extern DownloadEntriesDefaultTypeInternal _DownloadEntries_default_instance_;
class DownloadEntry;
class DownloadEntryDefaultTypeInternal;
extern DownloadEntryDefaultTypeInternal _DownloadEntry_default_instance_;
class DownloadInfo;
class DownloadInfoDefaultTypeInternal;
extern DownloadInfoDefaultTypeInternal _DownloadInfo_default_instance_;
class HttpRequestHeader;
class HttpRequestHeaderDefaultTypeInternal;
extern HttpRequestHeaderDefaultTypeInternal _HttpRequestHeader_default_instance_;
class InProgressInfo;
class InProgressInfoDefaultTypeInternal;
extern InProgressInfoDefaultTypeInternal _InProgressInfo_default_instance_;
class ReceivedSlice;
class ReceivedSliceDefaultTypeInternal;
extern ReceivedSliceDefaultTypeInternal _ReceivedSlice_default_instance_;
class UkmInfo;
class UkmInfoDefaultTypeInternal;
extern UkmInfoDefaultTypeInternal _UkmInfo_default_instance_;
}  // namespace metadata_pb

namespace metadata_pb {

namespace protobuf_download_5fentry_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_download_5fentry_2eproto

// ===================================================================

class HttpRequestHeader : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:metadata_pb.HttpRequestHeader) */ {
 public:
  HttpRequestHeader();
  virtual ~HttpRequestHeader();

  HttpRequestHeader(const HttpRequestHeader& from);

  inline HttpRequestHeader& operator=(const HttpRequestHeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const HttpRequestHeader& default_instance();

  static inline const HttpRequestHeader* internal_default_instance() {
    return reinterpret_cast<const HttpRequestHeader*>(
               &_HttpRequestHeader_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(HttpRequestHeader* other);

  // implements Message ----------------------------------------------

  inline HttpRequestHeader* New() const PROTOBUF_FINAL { return New(NULL); }

  HttpRequestHeader* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const HttpRequestHeader& from);
  void MergeFrom(const HttpRequestHeader& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HttpRequestHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:metadata_pb.HttpRequestHeader)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct protobuf_download_5fentry_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReceivedSlice : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:metadata_pb.ReceivedSlice) */ {
 public:
  ReceivedSlice();
  virtual ~ReceivedSlice();

  ReceivedSlice(const ReceivedSlice& from);

  inline ReceivedSlice& operator=(const ReceivedSlice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ReceivedSlice& default_instance();

  static inline const ReceivedSlice* internal_default_instance() {
    return reinterpret_cast<const ReceivedSlice*>(
               &_ReceivedSlice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(ReceivedSlice* other);

  // implements Message ----------------------------------------------

  inline ReceivedSlice* New() const PROTOBUF_FINAL { return New(NULL); }

  ReceivedSlice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ReceivedSlice& from);
  void MergeFrom(const ReceivedSlice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReceivedSlice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 offset = 1;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 1;
  ::google::protobuf::int64 offset() const;
  void set_offset(::google::protobuf::int64 value);

  // optional int64 received_bytes = 2;
  bool has_received_bytes() const;
  void clear_received_bytes();
  static const int kReceivedBytesFieldNumber = 2;
  ::google::protobuf::int64 received_bytes() const;
  void set_received_bytes(::google::protobuf::int64 value);

  // optional bool finished = 3;
  bool has_finished() const;
  void clear_finished();
  static const int kFinishedFieldNumber = 3;
  bool finished() const;
  void set_finished(bool value);

  // @@protoc_insertion_point(class_scope:metadata_pb.ReceivedSlice)
 private:
  void set_has_offset();
  void clear_has_offset();
  void set_has_received_bytes();
  void clear_has_received_bytes();
  void set_has_finished();
  void clear_has_finished();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 offset_;
  ::google::protobuf::int64 received_bytes_;
  bool finished_;
  friend struct protobuf_download_5fentry_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DownloadEntry : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:metadata_pb.DownloadEntry) */ {
 public:
  DownloadEntry();
  virtual ~DownloadEntry();

  DownloadEntry(const DownloadEntry& from);

  inline DownloadEntry& operator=(const DownloadEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DownloadEntry& default_instance();

  static inline const DownloadEntry* internal_default_instance() {
    return reinterpret_cast<const DownloadEntry*>(
               &_DownloadEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(DownloadEntry* other);

  // implements Message ----------------------------------------------

  inline DownloadEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  DownloadEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DownloadEntry& from);
  void MergeFrom(const DownloadEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DownloadEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .metadata_pb.HttpRequestHeader request_headers = 7;
  int request_headers_size() const;
  void clear_request_headers();
  static const int kRequestHeadersFieldNumber = 7;
  const ::metadata_pb::HttpRequestHeader& request_headers(int index) const;
  ::metadata_pb::HttpRequestHeader* mutable_request_headers(int index);
  ::metadata_pb::HttpRequestHeader* add_request_headers();
  ::google::protobuf::RepeatedPtrField< ::metadata_pb::HttpRequestHeader >*
      mutable_request_headers();
  const ::google::protobuf::RepeatedPtrField< ::metadata_pb::HttpRequestHeader >&
      request_headers() const;

  // optional string guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // optional string request_origin = 2;
  bool has_request_origin() const;
  void clear_request_origin();
  static const int kRequestOriginFieldNumber = 2;
  const ::std::string& request_origin() const;
  void set_request_origin(const ::std::string& value);
  #if LANG_CXX11
  void set_request_origin(::std::string&& value);
  #endif
  void set_request_origin(const char* value);
  void set_request_origin(const char* value, size_t size);
  ::std::string* mutable_request_origin();
  ::std::string* release_request_origin();
  void set_allocated_request_origin(::std::string* request_origin);

  // optional int64 ukm_download_id = 4;
  bool has_ukm_download_id() const;
  void clear_ukm_download_id();
  static const int kUkmDownloadIdFieldNumber = 4;
  ::google::protobuf::int64 ukm_download_id() const;
  void set_ukm_download_id(::google::protobuf::int64 value);

  // optional .metadata_pb.DownloadSource download_source = 3;
  bool has_download_source() const;
  void clear_download_source();
  static const int kDownloadSourceFieldNumber = 3;
  ::metadata_pb::DownloadSource download_source() const;
  void set_download_source(::metadata_pb::DownloadSource value);

  // optional bool fetch_error_body = 6;
  bool has_fetch_error_body() const;
  void clear_fetch_error_body();
  static const int kFetchErrorBodyFieldNumber = 6;
  bool fetch_error_body() const;
  void set_fetch_error_body(bool value);

  // optional int64 bytes_wasted = 5;
  bool has_bytes_wasted() const;
  void clear_bytes_wasted();
  static const int kBytesWastedFieldNumber = 5;
  ::google::protobuf::int64 bytes_wasted() const;
  void set_bytes_wasted(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:metadata_pb.DownloadEntry)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_request_origin();
  void clear_has_request_origin();
  void set_has_download_source();
  void clear_has_download_source();
  void set_has_ukm_download_id();
  void clear_has_ukm_download_id();
  void set_has_bytes_wasted();
  void clear_has_bytes_wasted();
  void set_has_fetch_error_body();
  void clear_has_fetch_error_body();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::metadata_pb::HttpRequestHeader > request_headers_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  ::google::protobuf::internal::ArenaStringPtr request_origin_;
  ::google::protobuf::int64 ukm_download_id_;
  int download_source_;
  bool fetch_error_body_;
  ::google::protobuf::int64 bytes_wasted_;
  friend struct protobuf_download_5fentry_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DownloadEntries : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:metadata_pb.DownloadEntries) */ {
 public:
  DownloadEntries();
  virtual ~DownloadEntries();

  DownloadEntries(const DownloadEntries& from);

  inline DownloadEntries& operator=(const DownloadEntries& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DownloadEntries& default_instance();

  static inline const DownloadEntries* internal_default_instance() {
    return reinterpret_cast<const DownloadEntries*>(
               &_DownloadEntries_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(DownloadEntries* other);

  // implements Message ----------------------------------------------

  inline DownloadEntries* New() const PROTOBUF_FINAL { return New(NULL); }

  DownloadEntries* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DownloadEntries& from);
  void MergeFrom(const DownloadEntries& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DownloadEntries* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .metadata_pb.DownloadEntry entries = 1;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 1;
  const ::metadata_pb::DownloadEntry& entries(int index) const;
  ::metadata_pb::DownloadEntry* mutable_entries(int index);
  ::metadata_pb::DownloadEntry* add_entries();
  ::google::protobuf::RepeatedPtrField< ::metadata_pb::DownloadEntry >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::metadata_pb::DownloadEntry >&
      entries() const;

  // @@protoc_insertion_point(class_scope:metadata_pb.DownloadEntries)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::metadata_pb::DownloadEntry > entries_;
  friend struct protobuf_download_5fentry_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UkmInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:metadata_pb.UkmInfo) */ {
 public:
  UkmInfo();
  virtual ~UkmInfo();

  UkmInfo(const UkmInfo& from);

  inline UkmInfo& operator=(const UkmInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const UkmInfo& default_instance();

  static inline const UkmInfo* internal_default_instance() {
    return reinterpret_cast<const UkmInfo*>(
               &_UkmInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(UkmInfo* other);

  // implements Message ----------------------------------------------

  inline UkmInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UkmInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const UkmInfo& from);
  void MergeFrom(const UkmInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UkmInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 ukm_download_id = 2;
  bool has_ukm_download_id() const;
  void clear_ukm_download_id();
  static const int kUkmDownloadIdFieldNumber = 2;
  ::google::protobuf::int64 ukm_download_id() const;
  void set_ukm_download_id(::google::protobuf::int64 value);

  // optional .metadata_pb.DownloadSource download_source = 1;
  bool has_download_source() const;
  void clear_download_source();
  static const int kDownloadSourceFieldNumber = 1;
  ::metadata_pb::DownloadSource download_source() const;
  void set_download_source(::metadata_pb::DownloadSource value);

  // @@protoc_insertion_point(class_scope:metadata_pb.UkmInfo)
 private:
  void set_has_download_source();
  void clear_has_download_source();
  void set_has_ukm_download_id();
  void clear_has_ukm_download_id();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 ukm_download_id_;
  int download_source_;
  friend struct protobuf_download_5fentry_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InProgressInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:metadata_pb.InProgressInfo) */ {
 public:
  InProgressInfo();
  virtual ~InProgressInfo();

  InProgressInfo(const InProgressInfo& from);

  inline InProgressInfo& operator=(const InProgressInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const InProgressInfo& default_instance();

  static inline const InProgressInfo* internal_default_instance() {
    return reinterpret_cast<const InProgressInfo*>(
               &_InProgressInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(InProgressInfo* other);

  // implements Message ----------------------------------------------

  inline InProgressInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  InProgressInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const InProgressInfo& from);
  void MergeFrom(const InProgressInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InProgressInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string url_chain = 1;
  int url_chain_size() const;
  void clear_url_chain();
  static const int kUrlChainFieldNumber = 1;
  const ::std::string& url_chain(int index) const;
  ::std::string* mutable_url_chain(int index);
  void set_url_chain(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_url_chain(int index, ::std::string&& value);
  #endif
  void set_url_chain(int index, const char* value);
  void set_url_chain(int index, const char* value, size_t size);
  ::std::string* add_url_chain();
  void add_url_chain(const ::std::string& value);
  #if LANG_CXX11
  void add_url_chain(::std::string&& value);
  #endif
  void add_url_chain(const char* value);
  void add_url_chain(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& url_chain() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_url_chain();

  // repeated .metadata_pb.HttpRequestHeader request_headers = 3;
  int request_headers_size() const;
  void clear_request_headers();
  static const int kRequestHeadersFieldNumber = 3;
  const ::metadata_pb::HttpRequestHeader& request_headers(int index) const;
  ::metadata_pb::HttpRequestHeader* mutable_request_headers(int index);
  ::metadata_pb::HttpRequestHeader* add_request_headers();
  ::google::protobuf::RepeatedPtrField< ::metadata_pb::HttpRequestHeader >*
      mutable_request_headers();
  const ::google::protobuf::RepeatedPtrField< ::metadata_pb::HttpRequestHeader >&
      request_headers() const;

  // repeated .metadata_pb.ReceivedSlice received_slices = 11;
  int received_slices_size() const;
  void clear_received_slices();
  static const int kReceivedSlicesFieldNumber = 11;
  const ::metadata_pb::ReceivedSlice& received_slices(int index) const;
  ::metadata_pb::ReceivedSlice* mutable_received_slices(int index);
  ::metadata_pb::ReceivedSlice* add_received_slices();
  ::google::protobuf::RepeatedPtrField< ::metadata_pb::ReceivedSlice >*
      mutable_received_slices();
  const ::google::protobuf::RepeatedPtrField< ::metadata_pb::ReceivedSlice >&
      received_slices() const;

  // optional string etag = 4;
  bool has_etag() const;
  void clear_etag();
  static const int kEtagFieldNumber = 4;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // optional string last_modified = 5;
  bool has_last_modified() const;
  void clear_last_modified();
  static const int kLastModifiedFieldNumber = 5;
  const ::std::string& last_modified() const;
  void set_last_modified(const ::std::string& value);
  #if LANG_CXX11
  void set_last_modified(::std::string&& value);
  #endif
  void set_last_modified(const char* value);
  void set_last_modified(const char* value, size_t size);
  ::std::string* mutable_last_modified();
  ::std::string* release_last_modified();
  void set_allocated_last_modified(::std::string* last_modified);

  // optional bytes current_path = 7;
  bool has_current_path() const;
  void clear_current_path();
  static const int kCurrentPathFieldNumber = 7;
  const ::std::string& current_path() const;
  void set_current_path(const ::std::string& value);
  #if LANG_CXX11
  void set_current_path(::std::string&& value);
  #endif
  void set_current_path(const char* value);
  void set_current_path(const void* value, size_t size);
  ::std::string* mutable_current_path();
  ::std::string* release_current_path();
  void set_allocated_current_path(::std::string* current_path);

  // optional bytes target_path = 8;
  bool has_target_path() const;
  void clear_target_path();
  static const int kTargetPathFieldNumber = 8;
  const ::std::string& target_path() const;
  void set_target_path(const ::std::string& value);
  #if LANG_CXX11
  void set_target_path(::std::string&& value);
  #endif
  void set_target_path(const char* value);
  void set_target_path(const void* value, size_t size);
  ::std::string* mutable_target_path();
  ::std::string* release_target_path();
  void set_allocated_target_path(::std::string* target_path);

  // optional string hash = 12;
  bool has_hash() const;
  void clear_hash();
  static const int kHashFieldNumber = 12;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_hash(::std::string&& value);
  #endif
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // optional string request_origin = 19;
  bool has_request_origin() const;
  void clear_request_origin();
  static const int kRequestOriginFieldNumber = 19;
  const ::std::string& request_origin() const;
  void set_request_origin(const ::std::string& value);
  #if LANG_CXX11
  void set_request_origin(::std::string&& value);
  #endif
  void set_request_origin(const char* value);
  void set_request_origin(const char* value, size_t size);
  ::std::string* mutable_request_origin();
  ::std::string* release_request_origin();
  void set_allocated_request_origin(::std::string* request_origin);

  // optional int64 total_bytes = 6;
  bool has_total_bytes() const;
  void clear_total_bytes();
  static const int kTotalBytesFieldNumber = 6;
  ::google::protobuf::int64 total_bytes() const;
  void set_total_bytes(::google::protobuf::int64 value);

  // optional int64 received_bytes = 9;
  bool has_received_bytes() const;
  void clear_received_bytes();
  static const int kReceivedBytesFieldNumber = 9;
  ::google::protobuf::int64 received_bytes() const;
  void set_received_bytes(::google::protobuf::int64 value);

  // optional int64 end_time = 10;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 10;
  ::google::protobuf::int64 end_time() const;
  void set_end_time(::google::protobuf::int64 value);

  // optional bool fetch_error_body = 2;
  bool has_fetch_error_body() const;
  void clear_fetch_error_body();
  static const int kFetchErrorBodyFieldNumber = 2;
  bool fetch_error_body() const;
  void set_fetch_error_body(bool value);

  // optional bool transient = 13;
  bool has_transient() const;
  void clear_transient();
  static const int kTransientFieldNumber = 13;
  bool transient() const;
  void set_transient(bool value);

  // optional bool paused = 17;
  bool has_paused() const;
  void clear_paused();
  static const int kPausedFieldNumber = 17;
  bool paused() const;
  void set_paused(bool value);

  // optional bool metered = 18;
  bool has_metered() const;
  void clear_metered();
  static const int kMeteredFieldNumber = 18;
  bool metered() const;
  void set_metered(bool value);

  // optional int32 state = 14;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 14;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // optional int32 danger_type = 15;
  bool has_danger_type() const;
  void clear_danger_type();
  static const int kDangerTypeFieldNumber = 15;
  ::google::protobuf::int32 danger_type() const;
  void set_danger_type(::google::protobuf::int32 value);

  // optional int32 interrupt_reason = 16;
  bool has_interrupt_reason() const;
  void clear_interrupt_reason();
  static const int kInterruptReasonFieldNumber = 16;
  ::google::protobuf::int32 interrupt_reason() const;
  void set_interrupt_reason(::google::protobuf::int32 value);

  // optional int64 bytes_wasted = 20;
  bool has_bytes_wasted() const;
  void clear_bytes_wasted();
  static const int kBytesWastedFieldNumber = 20;
  ::google::protobuf::int64 bytes_wasted() const;
  void set_bytes_wasted(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:metadata_pb.InProgressInfo)
 private:
  void set_has_fetch_error_body();
  void clear_has_fetch_error_body();
  void set_has_etag();
  void clear_has_etag();
  void set_has_last_modified();
  void clear_has_last_modified();
  void set_has_total_bytes();
  void clear_has_total_bytes();
  void set_has_current_path();
  void clear_has_current_path();
  void set_has_target_path();
  void clear_has_target_path();
  void set_has_received_bytes();
  void clear_has_received_bytes();
  void set_has_end_time();
  void clear_has_end_time();
  void set_has_hash();
  void clear_has_hash();
  void set_has_transient();
  void clear_has_transient();
  void set_has_state();
  void clear_has_state();
  void set_has_danger_type();
  void clear_has_danger_type();
  void set_has_interrupt_reason();
  void clear_has_interrupt_reason();
  void set_has_paused();
  void clear_has_paused();
  void set_has_metered();
  void clear_has_metered();
  void set_has_request_origin();
  void clear_has_request_origin();
  void set_has_bytes_wasted();
  void clear_has_bytes_wasted();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> url_chain_;
  ::google::protobuf::RepeatedPtrField< ::metadata_pb::HttpRequestHeader > request_headers_;
  ::google::protobuf::RepeatedPtrField< ::metadata_pb::ReceivedSlice > received_slices_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::internal::ArenaStringPtr last_modified_;
  ::google::protobuf::internal::ArenaStringPtr current_path_;
  ::google::protobuf::internal::ArenaStringPtr target_path_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  ::google::protobuf::internal::ArenaStringPtr request_origin_;
  ::google::protobuf::int64 total_bytes_;
  ::google::protobuf::int64 received_bytes_;
  ::google::protobuf::int64 end_time_;
  bool fetch_error_body_;
  bool transient_;
  bool paused_;
  bool metered_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 danger_type_;
  ::google::protobuf::int32 interrupt_reason_;
  ::google::protobuf::int64 bytes_wasted_;
  friend struct protobuf_download_5fentry_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DownloadInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:metadata_pb.DownloadInfo) */ {
 public:
  DownloadInfo();
  virtual ~DownloadInfo();

  DownloadInfo(const DownloadInfo& from);

  inline DownloadInfo& operator=(const DownloadInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DownloadInfo& default_instance();

  static inline const DownloadInfo* internal_default_instance() {
    return reinterpret_cast<const DownloadInfo*>(
               &_DownloadInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(DownloadInfo* other);

  // implements Message ----------------------------------------------

  inline DownloadInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DownloadInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DownloadInfo& from);
  void MergeFrom(const DownloadInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DownloadInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // optional .metadata_pb.UkmInfo ukm_info = 2;
  bool has_ukm_info() const;
  void clear_ukm_info();
  static const int kUkmInfoFieldNumber = 2;
  const ::metadata_pb::UkmInfo& ukm_info() const;
  ::metadata_pb::UkmInfo* mutable_ukm_info();
  ::metadata_pb::UkmInfo* release_ukm_info();
  void set_allocated_ukm_info(::metadata_pb::UkmInfo* ukm_info);

  // optional .metadata_pb.InProgressInfo in_progress_info = 3;
  bool has_in_progress_info() const;
  void clear_in_progress_info();
  static const int kInProgressInfoFieldNumber = 3;
  const ::metadata_pb::InProgressInfo& in_progress_info() const;
  ::metadata_pb::InProgressInfo* mutable_in_progress_info();
  ::metadata_pb::InProgressInfo* release_in_progress_info();
  void set_allocated_in_progress_info(::metadata_pb::InProgressInfo* in_progress_info);

  // @@protoc_insertion_point(class_scope:metadata_pb.DownloadInfo)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_ukm_info();
  void clear_has_ukm_info();
  void set_has_in_progress_info();
  void clear_has_in_progress_info();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  ::metadata_pb::UkmInfo* ukm_info_;
  ::metadata_pb::InProgressInfo* in_progress_info_;
  friend struct protobuf_download_5fentry_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DownloadDBEntry : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:metadata_pb.DownloadDBEntry) */ {
 public:
  DownloadDBEntry();
  virtual ~DownloadDBEntry();

  DownloadDBEntry(const DownloadDBEntry& from);

  inline DownloadDBEntry& operator=(const DownloadDBEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DownloadDBEntry& default_instance();

  enum EntryCase {
    kDownloadInfo = 2,
    ENTRY_NOT_SET = 0,
  };

  static inline const DownloadDBEntry* internal_default_instance() {
    return reinterpret_cast<const DownloadDBEntry*>(
               &_DownloadDBEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(DownloadDBEntry* other);

  // implements Message ----------------------------------------------

  inline DownloadDBEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  DownloadDBEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DownloadDBEntry& from);
  void MergeFrom(const DownloadDBEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DownloadDBEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .metadata_pb.DownloadInfo download_info = 2;
  bool has_download_info() const;
  void clear_download_info();
  static const int kDownloadInfoFieldNumber = 2;
  const ::metadata_pb::DownloadInfo& download_info() const;
  ::metadata_pb::DownloadInfo* mutable_download_info();
  ::metadata_pb::DownloadInfo* release_download_info();
  void set_allocated_download_info(::metadata_pb::DownloadInfo* download_info);

  EntryCase entry_case() const;
  // @@protoc_insertion_point(class_scope:metadata_pb.DownloadDBEntry)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_download_info();

  inline bool has_entry() const;
  void clear_entry();
  inline void clear_has_entry();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  union EntryUnion {
    EntryUnion() {}
    ::metadata_pb::DownloadInfo* download_info_;
  } entry_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_download_5fentry_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// HttpRequestHeader

// optional string key = 1;
inline bool HttpRequestHeader::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HttpRequestHeader::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HttpRequestHeader::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HttpRequestHeader::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& HttpRequestHeader::key() const {
  // @@protoc_insertion_point(field_get:metadata_pb.HttpRequestHeader.key)
  return key_.GetNoArena();
}
inline void HttpRequestHeader::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metadata_pb.HttpRequestHeader.key)
}
#if LANG_CXX11
inline void HttpRequestHeader::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metadata_pb.HttpRequestHeader.key)
}
#endif
inline void HttpRequestHeader::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metadata_pb.HttpRequestHeader.key)
}
inline void HttpRequestHeader::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metadata_pb.HttpRequestHeader.key)
}
inline ::std::string* HttpRequestHeader::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:metadata_pb.HttpRequestHeader.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpRequestHeader::release_key() {
  // @@protoc_insertion_point(field_release:metadata_pb.HttpRequestHeader.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequestHeader::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:metadata_pb.HttpRequestHeader.key)
}

// optional string value = 2;
inline bool HttpRequestHeader::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HttpRequestHeader::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HttpRequestHeader::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HttpRequestHeader::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& HttpRequestHeader::value() const {
  // @@protoc_insertion_point(field_get:metadata_pb.HttpRequestHeader.value)
  return value_.GetNoArena();
}
inline void HttpRequestHeader::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metadata_pb.HttpRequestHeader.value)
}
#if LANG_CXX11
inline void HttpRequestHeader::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metadata_pb.HttpRequestHeader.value)
}
#endif
inline void HttpRequestHeader::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metadata_pb.HttpRequestHeader.value)
}
inline void HttpRequestHeader::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metadata_pb.HttpRequestHeader.value)
}
inline ::std::string* HttpRequestHeader::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:metadata_pb.HttpRequestHeader.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpRequestHeader::release_value() {
  // @@protoc_insertion_point(field_release:metadata_pb.HttpRequestHeader.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequestHeader::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:metadata_pb.HttpRequestHeader.value)
}

// -------------------------------------------------------------------

// ReceivedSlice

// optional int64 offset = 1;
inline bool ReceivedSlice::has_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReceivedSlice::set_has_offset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReceivedSlice::clear_has_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReceivedSlice::clear_offset() {
  offset_ = GOOGLE_LONGLONG(0);
  clear_has_offset();
}
inline ::google::protobuf::int64 ReceivedSlice::offset() const {
  // @@protoc_insertion_point(field_get:metadata_pb.ReceivedSlice.offset)
  return offset_;
}
inline void ReceivedSlice::set_offset(::google::protobuf::int64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.ReceivedSlice.offset)
}

// optional int64 received_bytes = 2;
inline bool ReceivedSlice::has_received_bytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReceivedSlice::set_has_received_bytes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReceivedSlice::clear_has_received_bytes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReceivedSlice::clear_received_bytes() {
  received_bytes_ = GOOGLE_LONGLONG(0);
  clear_has_received_bytes();
}
inline ::google::protobuf::int64 ReceivedSlice::received_bytes() const {
  // @@protoc_insertion_point(field_get:metadata_pb.ReceivedSlice.received_bytes)
  return received_bytes_;
}
inline void ReceivedSlice::set_received_bytes(::google::protobuf::int64 value) {
  set_has_received_bytes();
  received_bytes_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.ReceivedSlice.received_bytes)
}

// optional bool finished = 3;
inline bool ReceivedSlice::has_finished() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReceivedSlice::set_has_finished() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReceivedSlice::clear_has_finished() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReceivedSlice::clear_finished() {
  finished_ = false;
  clear_has_finished();
}
inline bool ReceivedSlice::finished() const {
  // @@protoc_insertion_point(field_get:metadata_pb.ReceivedSlice.finished)
  return finished_;
}
inline void ReceivedSlice::set_finished(bool value) {
  set_has_finished();
  finished_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.ReceivedSlice.finished)
}

// -------------------------------------------------------------------

// DownloadEntry

// optional string guid = 1;
inline bool DownloadEntry::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DownloadEntry::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DownloadEntry::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DownloadEntry::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
inline const ::std::string& DownloadEntry::guid() const {
  // @@protoc_insertion_point(field_get:metadata_pb.DownloadEntry.guid)
  return guid_.GetNoArena();
}
inline void DownloadEntry::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metadata_pb.DownloadEntry.guid)
}
#if LANG_CXX11
inline void DownloadEntry::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metadata_pb.DownloadEntry.guid)
}
#endif
inline void DownloadEntry::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metadata_pb.DownloadEntry.guid)
}
inline void DownloadEntry::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metadata_pb.DownloadEntry.guid)
}
inline ::std::string* DownloadEntry::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:metadata_pb.DownloadEntry.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DownloadEntry::release_guid() {
  // @@protoc_insertion_point(field_release:metadata_pb.DownloadEntry.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DownloadEntry::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:metadata_pb.DownloadEntry.guid)
}

// optional string request_origin = 2;
inline bool DownloadEntry::has_request_origin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DownloadEntry::set_has_request_origin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DownloadEntry::clear_has_request_origin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DownloadEntry::clear_request_origin() {
  request_origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_request_origin();
}
inline const ::std::string& DownloadEntry::request_origin() const {
  // @@protoc_insertion_point(field_get:metadata_pb.DownloadEntry.request_origin)
  return request_origin_.GetNoArena();
}
inline void DownloadEntry::set_request_origin(const ::std::string& value) {
  set_has_request_origin();
  request_origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metadata_pb.DownloadEntry.request_origin)
}
#if LANG_CXX11
inline void DownloadEntry::set_request_origin(::std::string&& value) {
  set_has_request_origin();
  request_origin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metadata_pb.DownloadEntry.request_origin)
}
#endif
inline void DownloadEntry::set_request_origin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_request_origin();
  request_origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metadata_pb.DownloadEntry.request_origin)
}
inline void DownloadEntry::set_request_origin(const char* value, size_t size) {
  set_has_request_origin();
  request_origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metadata_pb.DownloadEntry.request_origin)
}
inline ::std::string* DownloadEntry::mutable_request_origin() {
  set_has_request_origin();
  // @@protoc_insertion_point(field_mutable:metadata_pb.DownloadEntry.request_origin)
  return request_origin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DownloadEntry::release_request_origin() {
  // @@protoc_insertion_point(field_release:metadata_pb.DownloadEntry.request_origin)
  clear_has_request_origin();
  return request_origin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DownloadEntry::set_allocated_request_origin(::std::string* request_origin) {
  if (request_origin != NULL) {
    set_has_request_origin();
  } else {
    clear_has_request_origin();
  }
  request_origin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_origin);
  // @@protoc_insertion_point(field_set_allocated:metadata_pb.DownloadEntry.request_origin)
}

// optional .metadata_pb.DownloadSource download_source = 3;
inline bool DownloadEntry::has_download_source() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DownloadEntry::set_has_download_source() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DownloadEntry::clear_has_download_source() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DownloadEntry::clear_download_source() {
  download_source_ = 0;
  clear_has_download_source();
}
inline ::metadata_pb::DownloadSource DownloadEntry::download_source() const {
  // @@protoc_insertion_point(field_get:metadata_pb.DownloadEntry.download_source)
  return static_cast< ::metadata_pb::DownloadSource >(download_source_);
}
inline void DownloadEntry::set_download_source(::metadata_pb::DownloadSource value) {
  assert(::metadata_pb::DownloadSource_IsValid(value));
  set_has_download_source();
  download_source_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.DownloadEntry.download_source)
}

// optional int64 ukm_download_id = 4;
inline bool DownloadEntry::has_ukm_download_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DownloadEntry::set_has_ukm_download_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DownloadEntry::clear_has_ukm_download_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DownloadEntry::clear_ukm_download_id() {
  ukm_download_id_ = GOOGLE_LONGLONG(0);
  clear_has_ukm_download_id();
}
inline ::google::protobuf::int64 DownloadEntry::ukm_download_id() const {
  // @@protoc_insertion_point(field_get:metadata_pb.DownloadEntry.ukm_download_id)
  return ukm_download_id_;
}
inline void DownloadEntry::set_ukm_download_id(::google::protobuf::int64 value) {
  set_has_ukm_download_id();
  ukm_download_id_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.DownloadEntry.ukm_download_id)
}

// optional int64 bytes_wasted = 5;
inline bool DownloadEntry::has_bytes_wasted() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DownloadEntry::set_has_bytes_wasted() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DownloadEntry::clear_has_bytes_wasted() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DownloadEntry::clear_bytes_wasted() {
  bytes_wasted_ = GOOGLE_LONGLONG(0);
  clear_has_bytes_wasted();
}
inline ::google::protobuf::int64 DownloadEntry::bytes_wasted() const {
  // @@protoc_insertion_point(field_get:metadata_pb.DownloadEntry.bytes_wasted)
  return bytes_wasted_;
}
inline void DownloadEntry::set_bytes_wasted(::google::protobuf::int64 value) {
  set_has_bytes_wasted();
  bytes_wasted_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.DownloadEntry.bytes_wasted)
}

// optional bool fetch_error_body = 6;
inline bool DownloadEntry::has_fetch_error_body() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DownloadEntry::set_has_fetch_error_body() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DownloadEntry::clear_has_fetch_error_body() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DownloadEntry::clear_fetch_error_body() {
  fetch_error_body_ = false;
  clear_has_fetch_error_body();
}
inline bool DownloadEntry::fetch_error_body() const {
  // @@protoc_insertion_point(field_get:metadata_pb.DownloadEntry.fetch_error_body)
  return fetch_error_body_;
}
inline void DownloadEntry::set_fetch_error_body(bool value) {
  set_has_fetch_error_body();
  fetch_error_body_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.DownloadEntry.fetch_error_body)
}

// repeated .metadata_pb.HttpRequestHeader request_headers = 7;
inline int DownloadEntry::request_headers_size() const {
  return request_headers_.size();
}
inline void DownloadEntry::clear_request_headers() {
  request_headers_.Clear();
}
inline const ::metadata_pb::HttpRequestHeader& DownloadEntry::request_headers(int index) const {
  // @@protoc_insertion_point(field_get:metadata_pb.DownloadEntry.request_headers)
  return request_headers_.Get(index);
}
inline ::metadata_pb::HttpRequestHeader* DownloadEntry::mutable_request_headers(int index) {
  // @@protoc_insertion_point(field_mutable:metadata_pb.DownloadEntry.request_headers)
  return request_headers_.Mutable(index);
}
inline ::metadata_pb::HttpRequestHeader* DownloadEntry::add_request_headers() {
  // @@protoc_insertion_point(field_add:metadata_pb.DownloadEntry.request_headers)
  return request_headers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::metadata_pb::HttpRequestHeader >*
DownloadEntry::mutable_request_headers() {
  // @@protoc_insertion_point(field_mutable_list:metadata_pb.DownloadEntry.request_headers)
  return &request_headers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::metadata_pb::HttpRequestHeader >&
DownloadEntry::request_headers() const {
  // @@protoc_insertion_point(field_list:metadata_pb.DownloadEntry.request_headers)
  return request_headers_;
}

// -------------------------------------------------------------------

// DownloadEntries

// repeated .metadata_pb.DownloadEntry entries = 1;
inline int DownloadEntries::entries_size() const {
  return entries_.size();
}
inline void DownloadEntries::clear_entries() {
  entries_.Clear();
}
inline const ::metadata_pb::DownloadEntry& DownloadEntries::entries(int index) const {
  // @@protoc_insertion_point(field_get:metadata_pb.DownloadEntries.entries)
  return entries_.Get(index);
}
inline ::metadata_pb::DownloadEntry* DownloadEntries::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:metadata_pb.DownloadEntries.entries)
  return entries_.Mutable(index);
}
inline ::metadata_pb::DownloadEntry* DownloadEntries::add_entries() {
  // @@protoc_insertion_point(field_add:metadata_pb.DownloadEntries.entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::metadata_pb::DownloadEntry >*
DownloadEntries::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:metadata_pb.DownloadEntries.entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::metadata_pb::DownloadEntry >&
DownloadEntries::entries() const {
  // @@protoc_insertion_point(field_list:metadata_pb.DownloadEntries.entries)
  return entries_;
}

// -------------------------------------------------------------------

// UkmInfo

// optional .metadata_pb.DownloadSource download_source = 1;
inline bool UkmInfo::has_download_source() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UkmInfo::set_has_download_source() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UkmInfo::clear_has_download_source() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UkmInfo::clear_download_source() {
  download_source_ = 0;
  clear_has_download_source();
}
inline ::metadata_pb::DownloadSource UkmInfo::download_source() const {
  // @@protoc_insertion_point(field_get:metadata_pb.UkmInfo.download_source)
  return static_cast< ::metadata_pb::DownloadSource >(download_source_);
}
inline void UkmInfo::set_download_source(::metadata_pb::DownloadSource value) {
  assert(::metadata_pb::DownloadSource_IsValid(value));
  set_has_download_source();
  download_source_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.UkmInfo.download_source)
}

// optional int64 ukm_download_id = 2;
inline bool UkmInfo::has_ukm_download_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UkmInfo::set_has_ukm_download_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UkmInfo::clear_has_ukm_download_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UkmInfo::clear_ukm_download_id() {
  ukm_download_id_ = GOOGLE_LONGLONG(0);
  clear_has_ukm_download_id();
}
inline ::google::protobuf::int64 UkmInfo::ukm_download_id() const {
  // @@protoc_insertion_point(field_get:metadata_pb.UkmInfo.ukm_download_id)
  return ukm_download_id_;
}
inline void UkmInfo::set_ukm_download_id(::google::protobuf::int64 value) {
  set_has_ukm_download_id();
  ukm_download_id_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.UkmInfo.ukm_download_id)
}

// -------------------------------------------------------------------

// InProgressInfo

// repeated string url_chain = 1;
inline int InProgressInfo::url_chain_size() const {
  return url_chain_.size();
}
inline void InProgressInfo::clear_url_chain() {
  url_chain_.Clear();
}
inline const ::std::string& InProgressInfo::url_chain(int index) const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.url_chain)
  return url_chain_.Get(index);
}
inline ::std::string* InProgressInfo::mutable_url_chain(int index) {
  // @@protoc_insertion_point(field_mutable:metadata_pb.InProgressInfo.url_chain)
  return url_chain_.Mutable(index);
}
inline void InProgressInfo::set_url_chain(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:metadata_pb.InProgressInfo.url_chain)
  url_chain_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void InProgressInfo::set_url_chain(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:metadata_pb.InProgressInfo.url_chain)
  url_chain_.Mutable(index)->assign(std::move(value));
}
#endif
inline void InProgressInfo::set_url_chain(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  url_chain_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:metadata_pb.InProgressInfo.url_chain)
}
inline void InProgressInfo::set_url_chain(int index, const char* value, size_t size) {
  url_chain_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:metadata_pb.InProgressInfo.url_chain)
}
inline ::std::string* InProgressInfo::add_url_chain() {
  // @@protoc_insertion_point(field_add_mutable:metadata_pb.InProgressInfo.url_chain)
  return url_chain_.Add();
}
inline void InProgressInfo::add_url_chain(const ::std::string& value) {
  url_chain_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:metadata_pb.InProgressInfo.url_chain)
}
#if LANG_CXX11
inline void InProgressInfo::add_url_chain(::std::string&& value) {
  url_chain_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:metadata_pb.InProgressInfo.url_chain)
}
#endif
inline void InProgressInfo::add_url_chain(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  url_chain_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:metadata_pb.InProgressInfo.url_chain)
}
inline void InProgressInfo::add_url_chain(const char* value, size_t size) {
  url_chain_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:metadata_pb.InProgressInfo.url_chain)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
InProgressInfo::url_chain() const {
  // @@protoc_insertion_point(field_list:metadata_pb.InProgressInfo.url_chain)
  return url_chain_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
InProgressInfo::mutable_url_chain() {
  // @@protoc_insertion_point(field_mutable_list:metadata_pb.InProgressInfo.url_chain)
  return &url_chain_;
}

// optional bool fetch_error_body = 2;
inline bool InProgressInfo::has_fetch_error_body() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void InProgressInfo::set_has_fetch_error_body() {
  _has_bits_[0] |= 0x00000200u;
}
inline void InProgressInfo::clear_has_fetch_error_body() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void InProgressInfo::clear_fetch_error_body() {
  fetch_error_body_ = false;
  clear_has_fetch_error_body();
}
inline bool InProgressInfo::fetch_error_body() const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.fetch_error_body)
  return fetch_error_body_;
}
inline void InProgressInfo::set_fetch_error_body(bool value) {
  set_has_fetch_error_body();
  fetch_error_body_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.InProgressInfo.fetch_error_body)
}

// repeated .metadata_pb.HttpRequestHeader request_headers = 3;
inline int InProgressInfo::request_headers_size() const {
  return request_headers_.size();
}
inline void InProgressInfo::clear_request_headers() {
  request_headers_.Clear();
}
inline const ::metadata_pb::HttpRequestHeader& InProgressInfo::request_headers(int index) const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.request_headers)
  return request_headers_.Get(index);
}
inline ::metadata_pb::HttpRequestHeader* InProgressInfo::mutable_request_headers(int index) {
  // @@protoc_insertion_point(field_mutable:metadata_pb.InProgressInfo.request_headers)
  return request_headers_.Mutable(index);
}
inline ::metadata_pb::HttpRequestHeader* InProgressInfo::add_request_headers() {
  // @@protoc_insertion_point(field_add:metadata_pb.InProgressInfo.request_headers)
  return request_headers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::metadata_pb::HttpRequestHeader >*
InProgressInfo::mutable_request_headers() {
  // @@protoc_insertion_point(field_mutable_list:metadata_pb.InProgressInfo.request_headers)
  return &request_headers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::metadata_pb::HttpRequestHeader >&
InProgressInfo::request_headers() const {
  // @@protoc_insertion_point(field_list:metadata_pb.InProgressInfo.request_headers)
  return request_headers_;
}

// optional string etag = 4;
inline bool InProgressInfo::has_etag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InProgressInfo::set_has_etag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InProgressInfo::clear_has_etag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InProgressInfo::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_etag();
}
inline const ::std::string& InProgressInfo::etag() const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.etag)
  return etag_.GetNoArena();
}
inline void InProgressInfo::set_etag(const ::std::string& value) {
  set_has_etag();
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metadata_pb.InProgressInfo.etag)
}
#if LANG_CXX11
inline void InProgressInfo::set_etag(::std::string&& value) {
  set_has_etag();
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metadata_pb.InProgressInfo.etag)
}
#endif
inline void InProgressInfo::set_etag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_etag();
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metadata_pb.InProgressInfo.etag)
}
inline void InProgressInfo::set_etag(const char* value, size_t size) {
  set_has_etag();
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metadata_pb.InProgressInfo.etag)
}
inline ::std::string* InProgressInfo::mutable_etag() {
  set_has_etag();
  // @@protoc_insertion_point(field_mutable:metadata_pb.InProgressInfo.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InProgressInfo::release_etag() {
  // @@protoc_insertion_point(field_release:metadata_pb.InProgressInfo.etag)
  clear_has_etag();
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InProgressInfo::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    set_has_etag();
  } else {
    clear_has_etag();
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:metadata_pb.InProgressInfo.etag)
}

// optional string last_modified = 5;
inline bool InProgressInfo::has_last_modified() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InProgressInfo::set_has_last_modified() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InProgressInfo::clear_has_last_modified() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InProgressInfo::clear_last_modified() {
  last_modified_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_last_modified();
}
inline const ::std::string& InProgressInfo::last_modified() const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.last_modified)
  return last_modified_.GetNoArena();
}
inline void InProgressInfo::set_last_modified(const ::std::string& value) {
  set_has_last_modified();
  last_modified_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metadata_pb.InProgressInfo.last_modified)
}
#if LANG_CXX11
inline void InProgressInfo::set_last_modified(::std::string&& value) {
  set_has_last_modified();
  last_modified_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metadata_pb.InProgressInfo.last_modified)
}
#endif
inline void InProgressInfo::set_last_modified(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_last_modified();
  last_modified_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metadata_pb.InProgressInfo.last_modified)
}
inline void InProgressInfo::set_last_modified(const char* value, size_t size) {
  set_has_last_modified();
  last_modified_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metadata_pb.InProgressInfo.last_modified)
}
inline ::std::string* InProgressInfo::mutable_last_modified() {
  set_has_last_modified();
  // @@protoc_insertion_point(field_mutable:metadata_pb.InProgressInfo.last_modified)
  return last_modified_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InProgressInfo::release_last_modified() {
  // @@protoc_insertion_point(field_release:metadata_pb.InProgressInfo.last_modified)
  clear_has_last_modified();
  return last_modified_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InProgressInfo::set_allocated_last_modified(::std::string* last_modified) {
  if (last_modified != NULL) {
    set_has_last_modified();
  } else {
    clear_has_last_modified();
  }
  last_modified_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_modified);
  // @@protoc_insertion_point(field_set_allocated:metadata_pb.InProgressInfo.last_modified)
}

// optional int64 total_bytes = 6;
inline bool InProgressInfo::has_total_bytes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void InProgressInfo::set_has_total_bytes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void InProgressInfo::clear_has_total_bytes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void InProgressInfo::clear_total_bytes() {
  total_bytes_ = GOOGLE_LONGLONG(0);
  clear_has_total_bytes();
}
inline ::google::protobuf::int64 InProgressInfo::total_bytes() const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.total_bytes)
  return total_bytes_;
}
inline void InProgressInfo::set_total_bytes(::google::protobuf::int64 value) {
  set_has_total_bytes();
  total_bytes_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.InProgressInfo.total_bytes)
}

// optional bytes current_path = 7;
inline bool InProgressInfo::has_current_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InProgressInfo::set_has_current_path() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InProgressInfo::clear_has_current_path() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InProgressInfo::clear_current_path() {
  current_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_current_path();
}
inline const ::std::string& InProgressInfo::current_path() const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.current_path)
  return current_path_.GetNoArena();
}
inline void InProgressInfo::set_current_path(const ::std::string& value) {
  set_has_current_path();
  current_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metadata_pb.InProgressInfo.current_path)
}
#if LANG_CXX11
inline void InProgressInfo::set_current_path(::std::string&& value) {
  set_has_current_path();
  current_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metadata_pb.InProgressInfo.current_path)
}
#endif
inline void InProgressInfo::set_current_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_current_path();
  current_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metadata_pb.InProgressInfo.current_path)
}
inline void InProgressInfo::set_current_path(const void* value, size_t size) {
  set_has_current_path();
  current_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metadata_pb.InProgressInfo.current_path)
}
inline ::std::string* InProgressInfo::mutable_current_path() {
  set_has_current_path();
  // @@protoc_insertion_point(field_mutable:metadata_pb.InProgressInfo.current_path)
  return current_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InProgressInfo::release_current_path() {
  // @@protoc_insertion_point(field_release:metadata_pb.InProgressInfo.current_path)
  clear_has_current_path();
  return current_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InProgressInfo::set_allocated_current_path(::std::string* current_path) {
  if (current_path != NULL) {
    set_has_current_path();
  } else {
    clear_has_current_path();
  }
  current_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), current_path);
  // @@protoc_insertion_point(field_set_allocated:metadata_pb.InProgressInfo.current_path)
}

// optional bytes target_path = 8;
inline bool InProgressInfo::has_target_path() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InProgressInfo::set_has_target_path() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InProgressInfo::clear_has_target_path() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InProgressInfo::clear_target_path() {
  target_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target_path();
}
inline const ::std::string& InProgressInfo::target_path() const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.target_path)
  return target_path_.GetNoArena();
}
inline void InProgressInfo::set_target_path(const ::std::string& value) {
  set_has_target_path();
  target_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metadata_pb.InProgressInfo.target_path)
}
#if LANG_CXX11
inline void InProgressInfo::set_target_path(::std::string&& value) {
  set_has_target_path();
  target_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metadata_pb.InProgressInfo.target_path)
}
#endif
inline void InProgressInfo::set_target_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_target_path();
  target_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metadata_pb.InProgressInfo.target_path)
}
inline void InProgressInfo::set_target_path(const void* value, size_t size) {
  set_has_target_path();
  target_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metadata_pb.InProgressInfo.target_path)
}
inline ::std::string* InProgressInfo::mutable_target_path() {
  set_has_target_path();
  // @@protoc_insertion_point(field_mutable:metadata_pb.InProgressInfo.target_path)
  return target_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InProgressInfo::release_target_path() {
  // @@protoc_insertion_point(field_release:metadata_pb.InProgressInfo.target_path)
  clear_has_target_path();
  return target_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InProgressInfo::set_allocated_target_path(::std::string* target_path) {
  if (target_path != NULL) {
    set_has_target_path();
  } else {
    clear_has_target_path();
  }
  target_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_path);
  // @@protoc_insertion_point(field_set_allocated:metadata_pb.InProgressInfo.target_path)
}

// optional int64 received_bytes = 9;
inline bool InProgressInfo::has_received_bytes() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void InProgressInfo::set_has_received_bytes() {
  _has_bits_[0] |= 0x00000080u;
}
inline void InProgressInfo::clear_has_received_bytes() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void InProgressInfo::clear_received_bytes() {
  received_bytes_ = GOOGLE_LONGLONG(0);
  clear_has_received_bytes();
}
inline ::google::protobuf::int64 InProgressInfo::received_bytes() const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.received_bytes)
  return received_bytes_;
}
inline void InProgressInfo::set_received_bytes(::google::protobuf::int64 value) {
  set_has_received_bytes();
  received_bytes_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.InProgressInfo.received_bytes)
}

// optional int64 end_time = 10;
inline bool InProgressInfo::has_end_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void InProgressInfo::set_has_end_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void InProgressInfo::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void InProgressInfo::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 InProgressInfo::end_time() const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.end_time)
  return end_time_;
}
inline void InProgressInfo::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.InProgressInfo.end_time)
}

// repeated .metadata_pb.ReceivedSlice received_slices = 11;
inline int InProgressInfo::received_slices_size() const {
  return received_slices_.size();
}
inline void InProgressInfo::clear_received_slices() {
  received_slices_.Clear();
}
inline const ::metadata_pb::ReceivedSlice& InProgressInfo::received_slices(int index) const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.received_slices)
  return received_slices_.Get(index);
}
inline ::metadata_pb::ReceivedSlice* InProgressInfo::mutable_received_slices(int index) {
  // @@protoc_insertion_point(field_mutable:metadata_pb.InProgressInfo.received_slices)
  return received_slices_.Mutable(index);
}
inline ::metadata_pb::ReceivedSlice* InProgressInfo::add_received_slices() {
  // @@protoc_insertion_point(field_add:metadata_pb.InProgressInfo.received_slices)
  return received_slices_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::metadata_pb::ReceivedSlice >*
InProgressInfo::mutable_received_slices() {
  // @@protoc_insertion_point(field_mutable_list:metadata_pb.InProgressInfo.received_slices)
  return &received_slices_;
}
inline const ::google::protobuf::RepeatedPtrField< ::metadata_pb::ReceivedSlice >&
InProgressInfo::received_slices() const {
  // @@protoc_insertion_point(field_list:metadata_pb.InProgressInfo.received_slices)
  return received_slices_;
}

// optional string hash = 12;
inline bool InProgressInfo::has_hash() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InProgressInfo::set_has_hash() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InProgressInfo::clear_has_hash() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InProgressInfo::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hash();
}
inline const ::std::string& InProgressInfo::hash() const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.hash)
  return hash_.GetNoArena();
}
inline void InProgressInfo::set_hash(const ::std::string& value) {
  set_has_hash();
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metadata_pb.InProgressInfo.hash)
}
#if LANG_CXX11
inline void InProgressInfo::set_hash(::std::string&& value) {
  set_has_hash();
  hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metadata_pb.InProgressInfo.hash)
}
#endif
inline void InProgressInfo::set_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hash();
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metadata_pb.InProgressInfo.hash)
}
inline void InProgressInfo::set_hash(const char* value, size_t size) {
  set_has_hash();
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metadata_pb.InProgressInfo.hash)
}
inline ::std::string* InProgressInfo::mutable_hash() {
  set_has_hash();
  // @@protoc_insertion_point(field_mutable:metadata_pb.InProgressInfo.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InProgressInfo::release_hash() {
  // @@protoc_insertion_point(field_release:metadata_pb.InProgressInfo.hash)
  clear_has_hash();
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InProgressInfo::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    set_has_hash();
  } else {
    clear_has_hash();
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:metadata_pb.InProgressInfo.hash)
}

// optional bool transient = 13;
inline bool InProgressInfo::has_transient() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void InProgressInfo::set_has_transient() {
  _has_bits_[0] |= 0x00000400u;
}
inline void InProgressInfo::clear_has_transient() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void InProgressInfo::clear_transient() {
  transient_ = false;
  clear_has_transient();
}
inline bool InProgressInfo::transient() const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.transient)
  return transient_;
}
inline void InProgressInfo::set_transient(bool value) {
  set_has_transient();
  transient_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.InProgressInfo.transient)
}

// optional int32 state = 14;
inline bool InProgressInfo::has_state() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void InProgressInfo::set_has_state() {
  _has_bits_[0] |= 0x00002000u;
}
inline void InProgressInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void InProgressInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 InProgressInfo::state() const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.state)
  return state_;
}
inline void InProgressInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.InProgressInfo.state)
}

// optional int32 danger_type = 15;
inline bool InProgressInfo::has_danger_type() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void InProgressInfo::set_has_danger_type() {
  _has_bits_[0] |= 0x00004000u;
}
inline void InProgressInfo::clear_has_danger_type() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void InProgressInfo::clear_danger_type() {
  danger_type_ = 0;
  clear_has_danger_type();
}
inline ::google::protobuf::int32 InProgressInfo::danger_type() const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.danger_type)
  return danger_type_;
}
inline void InProgressInfo::set_danger_type(::google::protobuf::int32 value) {
  set_has_danger_type();
  danger_type_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.InProgressInfo.danger_type)
}

// optional int32 interrupt_reason = 16;
inline bool InProgressInfo::has_interrupt_reason() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void InProgressInfo::set_has_interrupt_reason() {
  _has_bits_[0] |= 0x00008000u;
}
inline void InProgressInfo::clear_has_interrupt_reason() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void InProgressInfo::clear_interrupt_reason() {
  interrupt_reason_ = 0;
  clear_has_interrupt_reason();
}
inline ::google::protobuf::int32 InProgressInfo::interrupt_reason() const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.interrupt_reason)
  return interrupt_reason_;
}
inline void InProgressInfo::set_interrupt_reason(::google::protobuf::int32 value) {
  set_has_interrupt_reason();
  interrupt_reason_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.InProgressInfo.interrupt_reason)
}

// optional bool paused = 17;
inline bool InProgressInfo::has_paused() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void InProgressInfo::set_has_paused() {
  _has_bits_[0] |= 0x00000800u;
}
inline void InProgressInfo::clear_has_paused() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void InProgressInfo::clear_paused() {
  paused_ = false;
  clear_has_paused();
}
inline bool InProgressInfo::paused() const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.paused)
  return paused_;
}
inline void InProgressInfo::set_paused(bool value) {
  set_has_paused();
  paused_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.InProgressInfo.paused)
}

// optional bool metered = 18;
inline bool InProgressInfo::has_metered() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void InProgressInfo::set_has_metered() {
  _has_bits_[0] |= 0x00001000u;
}
inline void InProgressInfo::clear_has_metered() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void InProgressInfo::clear_metered() {
  metered_ = false;
  clear_has_metered();
}
inline bool InProgressInfo::metered() const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.metered)
  return metered_;
}
inline void InProgressInfo::set_metered(bool value) {
  set_has_metered();
  metered_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.InProgressInfo.metered)
}

// optional string request_origin = 19;
inline bool InProgressInfo::has_request_origin() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InProgressInfo::set_has_request_origin() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InProgressInfo::clear_has_request_origin() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InProgressInfo::clear_request_origin() {
  request_origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_request_origin();
}
inline const ::std::string& InProgressInfo::request_origin() const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.request_origin)
  return request_origin_.GetNoArena();
}
inline void InProgressInfo::set_request_origin(const ::std::string& value) {
  set_has_request_origin();
  request_origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metadata_pb.InProgressInfo.request_origin)
}
#if LANG_CXX11
inline void InProgressInfo::set_request_origin(::std::string&& value) {
  set_has_request_origin();
  request_origin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metadata_pb.InProgressInfo.request_origin)
}
#endif
inline void InProgressInfo::set_request_origin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_request_origin();
  request_origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metadata_pb.InProgressInfo.request_origin)
}
inline void InProgressInfo::set_request_origin(const char* value, size_t size) {
  set_has_request_origin();
  request_origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metadata_pb.InProgressInfo.request_origin)
}
inline ::std::string* InProgressInfo::mutable_request_origin() {
  set_has_request_origin();
  // @@protoc_insertion_point(field_mutable:metadata_pb.InProgressInfo.request_origin)
  return request_origin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InProgressInfo::release_request_origin() {
  // @@protoc_insertion_point(field_release:metadata_pb.InProgressInfo.request_origin)
  clear_has_request_origin();
  return request_origin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InProgressInfo::set_allocated_request_origin(::std::string* request_origin) {
  if (request_origin != NULL) {
    set_has_request_origin();
  } else {
    clear_has_request_origin();
  }
  request_origin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_origin);
  // @@protoc_insertion_point(field_set_allocated:metadata_pb.InProgressInfo.request_origin)
}

// optional int64 bytes_wasted = 20;
inline bool InProgressInfo::has_bytes_wasted() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void InProgressInfo::set_has_bytes_wasted() {
  _has_bits_[0] |= 0x00010000u;
}
inline void InProgressInfo::clear_has_bytes_wasted() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void InProgressInfo::clear_bytes_wasted() {
  bytes_wasted_ = GOOGLE_LONGLONG(0);
  clear_has_bytes_wasted();
}
inline ::google::protobuf::int64 InProgressInfo::bytes_wasted() const {
  // @@protoc_insertion_point(field_get:metadata_pb.InProgressInfo.bytes_wasted)
  return bytes_wasted_;
}
inline void InProgressInfo::set_bytes_wasted(::google::protobuf::int64 value) {
  set_has_bytes_wasted();
  bytes_wasted_ = value;
  // @@protoc_insertion_point(field_set:metadata_pb.InProgressInfo.bytes_wasted)
}

// -------------------------------------------------------------------

// DownloadInfo

// optional string guid = 1;
inline bool DownloadInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DownloadInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DownloadInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DownloadInfo::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
inline const ::std::string& DownloadInfo::guid() const {
  // @@protoc_insertion_point(field_get:metadata_pb.DownloadInfo.guid)
  return guid_.GetNoArena();
}
inline void DownloadInfo::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metadata_pb.DownloadInfo.guid)
}
#if LANG_CXX11
inline void DownloadInfo::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metadata_pb.DownloadInfo.guid)
}
#endif
inline void DownloadInfo::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metadata_pb.DownloadInfo.guid)
}
inline void DownloadInfo::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metadata_pb.DownloadInfo.guid)
}
inline ::std::string* DownloadInfo::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:metadata_pb.DownloadInfo.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DownloadInfo::release_guid() {
  // @@protoc_insertion_point(field_release:metadata_pb.DownloadInfo.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DownloadInfo::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:metadata_pb.DownloadInfo.guid)
}

// optional .metadata_pb.UkmInfo ukm_info = 2;
inline bool DownloadInfo::has_ukm_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DownloadInfo::set_has_ukm_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DownloadInfo::clear_has_ukm_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DownloadInfo::clear_ukm_info() {
  if (ukm_info_ != NULL) ukm_info_->::metadata_pb::UkmInfo::Clear();
  clear_has_ukm_info();
}
inline const ::metadata_pb::UkmInfo& DownloadInfo::ukm_info() const {
  // @@protoc_insertion_point(field_get:metadata_pb.DownloadInfo.ukm_info)
  return ukm_info_ != NULL ? *ukm_info_
                         : *::metadata_pb::UkmInfo::internal_default_instance();
}
inline ::metadata_pb::UkmInfo* DownloadInfo::mutable_ukm_info() {
  set_has_ukm_info();
  if (ukm_info_ == NULL) {
    ukm_info_ = new ::metadata_pb::UkmInfo;
  }
  // @@protoc_insertion_point(field_mutable:metadata_pb.DownloadInfo.ukm_info)
  return ukm_info_;
}
inline ::metadata_pb::UkmInfo* DownloadInfo::release_ukm_info() {
  // @@protoc_insertion_point(field_release:metadata_pb.DownloadInfo.ukm_info)
  clear_has_ukm_info();
  ::metadata_pb::UkmInfo* temp = ukm_info_;
  ukm_info_ = NULL;
  return temp;
}
inline void DownloadInfo::set_allocated_ukm_info(::metadata_pb::UkmInfo* ukm_info) {
  delete ukm_info_;
  ukm_info_ = ukm_info;
  if (ukm_info) {
    set_has_ukm_info();
  } else {
    clear_has_ukm_info();
  }
  // @@protoc_insertion_point(field_set_allocated:metadata_pb.DownloadInfo.ukm_info)
}

// optional .metadata_pb.InProgressInfo in_progress_info = 3;
inline bool DownloadInfo::has_in_progress_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DownloadInfo::set_has_in_progress_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DownloadInfo::clear_has_in_progress_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DownloadInfo::clear_in_progress_info() {
  if (in_progress_info_ != NULL) in_progress_info_->::metadata_pb::InProgressInfo::Clear();
  clear_has_in_progress_info();
}
inline const ::metadata_pb::InProgressInfo& DownloadInfo::in_progress_info() const {
  // @@protoc_insertion_point(field_get:metadata_pb.DownloadInfo.in_progress_info)
  return in_progress_info_ != NULL ? *in_progress_info_
                         : *::metadata_pb::InProgressInfo::internal_default_instance();
}
inline ::metadata_pb::InProgressInfo* DownloadInfo::mutable_in_progress_info() {
  set_has_in_progress_info();
  if (in_progress_info_ == NULL) {
    in_progress_info_ = new ::metadata_pb::InProgressInfo;
  }
  // @@protoc_insertion_point(field_mutable:metadata_pb.DownloadInfo.in_progress_info)
  return in_progress_info_;
}
inline ::metadata_pb::InProgressInfo* DownloadInfo::release_in_progress_info() {
  // @@protoc_insertion_point(field_release:metadata_pb.DownloadInfo.in_progress_info)
  clear_has_in_progress_info();
  ::metadata_pb::InProgressInfo* temp = in_progress_info_;
  in_progress_info_ = NULL;
  return temp;
}
inline void DownloadInfo::set_allocated_in_progress_info(::metadata_pb::InProgressInfo* in_progress_info) {
  delete in_progress_info_;
  in_progress_info_ = in_progress_info;
  if (in_progress_info) {
    set_has_in_progress_info();
  } else {
    clear_has_in_progress_info();
  }
  // @@protoc_insertion_point(field_set_allocated:metadata_pb.DownloadInfo.in_progress_info)
}

// -------------------------------------------------------------------

// DownloadDBEntry

// optional string id = 1;
inline bool DownloadDBEntry::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DownloadDBEntry::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DownloadDBEntry::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DownloadDBEntry::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& DownloadDBEntry::id() const {
  // @@protoc_insertion_point(field_get:metadata_pb.DownloadDBEntry.id)
  return id_.GetNoArena();
}
inline void DownloadDBEntry::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metadata_pb.DownloadDBEntry.id)
}
#if LANG_CXX11
inline void DownloadDBEntry::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metadata_pb.DownloadDBEntry.id)
}
#endif
inline void DownloadDBEntry::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metadata_pb.DownloadDBEntry.id)
}
inline void DownloadDBEntry::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metadata_pb.DownloadDBEntry.id)
}
inline ::std::string* DownloadDBEntry::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:metadata_pb.DownloadDBEntry.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DownloadDBEntry::release_id() {
  // @@protoc_insertion_point(field_release:metadata_pb.DownloadDBEntry.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DownloadDBEntry::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:metadata_pb.DownloadDBEntry.id)
}

// optional .metadata_pb.DownloadInfo download_info = 2;
inline bool DownloadDBEntry::has_download_info() const {
  return entry_case() == kDownloadInfo;
}
inline void DownloadDBEntry::set_has_download_info() {
  _oneof_case_[0] = kDownloadInfo;
}
inline void DownloadDBEntry::clear_download_info() {
  if (has_download_info()) {
    delete entry_.download_info_;
    clear_has_entry();
  }
}
inline  const ::metadata_pb::DownloadInfo& DownloadDBEntry::download_info() const {
  // @@protoc_insertion_point(field_get:metadata_pb.DownloadDBEntry.download_info)
  return has_download_info()
      ? *entry_.download_info_
      : ::metadata_pb::DownloadInfo::default_instance();
}
inline ::metadata_pb::DownloadInfo* DownloadDBEntry::mutable_download_info() {
  if (!has_download_info()) {
    clear_entry();
    set_has_download_info();
    entry_.download_info_ = new ::metadata_pb::DownloadInfo;
  }
  // @@protoc_insertion_point(field_mutable:metadata_pb.DownloadDBEntry.download_info)
  return entry_.download_info_;
}
inline ::metadata_pb::DownloadInfo* DownloadDBEntry::release_download_info() {
  // @@protoc_insertion_point(field_release:metadata_pb.DownloadDBEntry.download_info)
  if (has_download_info()) {
    clear_has_entry();
    ::metadata_pb::DownloadInfo* temp = entry_.download_info_;
    entry_.download_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void DownloadDBEntry::set_allocated_download_info(::metadata_pb::DownloadInfo* download_info) {
  clear_entry();
  if (download_info) {
    set_has_download_info();
    entry_.download_info_ = download_info;
  }
  // @@protoc_insertion_point(field_set_allocated:metadata_pb.DownloadDBEntry.download_info)
}

inline bool DownloadDBEntry::has_entry() const {
  return entry_case() != ENTRY_NOT_SET;
}
inline void DownloadDBEntry::clear_has_entry() {
  _oneof_case_[0] = ENTRY_NOT_SET;
}
inline DownloadDBEntry::EntryCase DownloadDBEntry::entry_case() const {
  return DownloadDBEntry::EntryCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace metadata_pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_download_5fentry_2eproto__INCLUDED
