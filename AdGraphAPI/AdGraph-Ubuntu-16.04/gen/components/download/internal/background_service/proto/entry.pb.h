// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: entry.proto

#ifndef PROTOBUF_entry_2eproto__INCLUDED
#define PROTOBUF_entry_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
#include "request.pb.h"
#include "scheduling.pb.h"
// @@protoc_insertion_point(includes)
namespace protodb {
class Entry;
class EntryDefaultTypeInternal;
extern EntryDefaultTypeInternal _Entry_default_instance_;
}  // namespace protodb

namespace protodb {

namespace protobuf_entry_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_entry_2eproto

enum Entry_State {
  Entry_State_NEW = 0,
  Entry_State_AVAILABLE = 1,
  Entry_State_ACTIVE = 2,
  Entry_State_PAUSED = 3,
  Entry_State_COMPLETE = 4
};
bool Entry_State_IsValid(int value);
const Entry_State Entry_State_State_MIN = Entry_State_NEW;
const Entry_State Entry_State_State_MAX = Entry_State_COMPLETE;
const int Entry_State_State_ARRAYSIZE = Entry_State_State_MAX + 1;

enum DownloadClient {
  INVALID = 0,
  TEST = 1,
  TEST_2 = 2,
  TEST_3 = 3,
  OFFLINE_PAGE_PREFETCH = 4,
  BACKGROUND_FETCH = 5,
  DEBUGGING = 6,
  MOUNTAIN_INTERNAL = 7,
  BOUNDARY = 8
};
bool DownloadClient_IsValid(int value);
const DownloadClient DownloadClient_MIN = INVALID;
const DownloadClient DownloadClient_MAX = BOUNDARY;
const int DownloadClient_ARRAYSIZE = DownloadClient_MAX + 1;

// ===================================================================

class Entry : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:protodb.Entry) */ {
 public:
  Entry();
  virtual ~Entry();

  Entry(const Entry& from);

  inline Entry& operator=(const Entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const Entry& default_instance();

  static inline const Entry* internal_default_instance() {
    return reinterpret_cast<const Entry*>(
               &_Entry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(Entry* other);

  // implements Message ----------------------------------------------

  inline Entry* New() const PROTOBUF_FINAL { return New(NULL); }

  Entry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Entry& from);
  void MergeFrom(const Entry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Entry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Entry_State State;
  static const State NEW =
    Entry_State_NEW;
  static const State AVAILABLE =
    Entry_State_AVAILABLE;
  static const State ACTIVE =
    Entry_State_ACTIVE;
  static const State PAUSED =
    Entry_State_PAUSED;
  static const State COMPLETE =
    Entry_State_COMPLETE;
  static inline bool State_IsValid(int value) {
    return Entry_State_IsValid(value);
  }
  static const State State_MIN =
    Entry_State_State_MIN;
  static const State State_MAX =
    Entry_State_State_MAX;
  static const int State_ARRAYSIZE =
    Entry_State_State_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional string guid = 2;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // optional string target_file_path = 6;
  bool has_target_file_path() const;
  void clear_target_file_path();
  static const int kTargetFilePathFieldNumber = 6;
  const ::std::string& target_file_path() const;
  void set_target_file_path(const ::std::string& value);
  #if LANG_CXX11
  void set_target_file_path(::std::string&& value);
  #endif
  void set_target_file_path(const char* value);
  void set_target_file_path(const char* value, size_t size);
  ::std::string* mutable_target_file_path();
  ::std::string* release_target_file_path();
  void set_allocated_target_file_path(::std::string* target_file_path);

  // optional .protodb.SchedulingParams scheduling_params = 3;
  bool has_scheduling_params() const;
  void clear_scheduling_params();
  static const int kSchedulingParamsFieldNumber = 3;
  const ::protodb::SchedulingParams& scheduling_params() const;
  ::protodb::SchedulingParams* mutable_scheduling_params();
  ::protodb::SchedulingParams* release_scheduling_params();
  void set_allocated_scheduling_params(::protodb::SchedulingParams* scheduling_params);

  // optional .protodb.RequestParams request_params = 4;
  bool has_request_params() const;
  void clear_request_params();
  static const int kRequestParamsFieldNumber = 4;
  const ::protodb::RequestParams& request_params() const;
  ::protodb::RequestParams* mutable_request_params();
  ::protodb::RequestParams* release_request_params();
  void set_allocated_request_params(::protodb::RequestParams* request_params);

  // optional .protodb.DownloadClient name_space = 1;
  bool has_name_space() const;
  void clear_name_space();
  static const int kNameSpaceFieldNumber = 1;
  ::protodb::DownloadClient name_space() const;
  void set_name_space(::protodb::DownloadClient value);

  // optional .protodb.Entry.State state = 5;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 5;
  ::protodb::Entry_State state() const;
  void set_state(::protodb::Entry_State value);

  // optional int64 create_time = 7;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 7;
  ::google::protobuf::int64 create_time() const;
  void set_create_time(::google::protobuf::int64 value);

  // optional int64 completion_time = 8;
  bool has_completion_time() const;
  void clear_completion_time();
  static const int kCompletionTimeFieldNumber = 8;
  ::google::protobuf::int64 completion_time() const;
  void set_completion_time(::google::protobuf::int64 value);

  // optional uint32 attempt_count = 9;
  bool has_attempt_count() const;
  void clear_attempt_count();
  static const int kAttemptCountFieldNumber = 9;
  ::google::protobuf::uint32 attempt_count() const;
  void set_attempt_count(::google::protobuf::uint32 value);

  // optional int32 traffic_annotation = 10;
  bool has_traffic_annotation() const;
  void clear_traffic_annotation();
  static const int kTrafficAnnotationFieldNumber = 10;
  ::google::protobuf::int32 traffic_annotation() const;
  void set_traffic_annotation(::google::protobuf::int32 value);

  // optional uint64 bytes_downloaded = 11;
  bool has_bytes_downloaded() const;
  void clear_bytes_downloaded();
  static const int kBytesDownloadedFieldNumber = 11;
  ::google::protobuf::uint64 bytes_downloaded() const;
  void set_bytes_downloaded(::google::protobuf::uint64 value);

  // optional int64 last_cleanup_check_time = 12;
  bool has_last_cleanup_check_time() const;
  void clear_last_cleanup_check_time();
  static const int kLastCleanupCheckTimeFieldNumber = 12;
  ::google::protobuf::int64 last_cleanup_check_time() const;
  void set_last_cleanup_check_time(::google::protobuf::int64 value);

  // optional uint32 cleanup_attempt_count = 13;
  bool has_cleanup_attempt_count() const;
  void clear_cleanup_attempt_count();
  static const int kCleanupAttemptCountFieldNumber = 13;
  ::google::protobuf::uint32 cleanup_attempt_count() const;
  void set_cleanup_attempt_count(::google::protobuf::uint32 value);

  // optional uint32 resumption_count = 14;
  bool has_resumption_count() const;
  void clear_resumption_count();
  static const int kResumptionCountFieldNumber = 14;
  ::google::protobuf::uint32 resumption_count() const;
  void set_resumption_count(::google::protobuf::uint32 value);

  // optional bool has_upload_data = 15;
  bool has_has_upload_data() const;
  void clear_has_upload_data();
  static const int kHasUploadDataFieldNumber = 15;
  bool has_upload_data() const;
  void set_has_upload_data(bool value);

  // @@protoc_insertion_point(class_scope:protodb.Entry)
 private:
  void set_has_name_space();
  void clear_has_name_space();
  void set_has_guid();
  void clear_has_guid();
  void set_has_scheduling_params();
  void clear_has_scheduling_params();
  void set_has_request_params();
  void clear_has_request_params();
  void set_has_state();
  void clear_has_state();
  void set_has_target_file_path();
  void clear_has_target_file_path();
  void set_has_create_time();
  void clear_has_create_time();
  void set_has_completion_time();
  void clear_has_completion_time();
  void set_has_attempt_count();
  void clear_has_attempt_count();
  void set_has_traffic_annotation();
  void clear_has_traffic_annotation();
  void set_has_bytes_downloaded();
  void clear_has_bytes_downloaded();
  void set_has_last_cleanup_check_time();
  void clear_has_last_cleanup_check_time();
  void set_has_cleanup_attempt_count();
  void clear_has_cleanup_attempt_count();
  void set_has_resumption_count();
  void clear_has_resumption_count();
  void set_has_has_upload_data();
  void clear_has_has_upload_data();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  ::google::protobuf::internal::ArenaStringPtr target_file_path_;
  ::protodb::SchedulingParams* scheduling_params_;
  ::protodb::RequestParams* request_params_;
  int name_space_;
  int state_;
  ::google::protobuf::int64 create_time_;
  ::google::protobuf::int64 completion_time_;
  ::google::protobuf::uint32 attempt_count_;
  ::google::protobuf::int32 traffic_annotation_;
  ::google::protobuf::uint64 bytes_downloaded_;
  ::google::protobuf::int64 last_cleanup_check_time_;
  ::google::protobuf::uint32 cleanup_attempt_count_;
  ::google::protobuf::uint32 resumption_count_;
  bool has_upload_data_;
  friend struct protobuf_entry_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Entry

// optional .protodb.DownloadClient name_space = 1;
inline bool Entry::has_name_space() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Entry::set_has_name_space() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Entry::clear_has_name_space() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Entry::clear_name_space() {
  name_space_ = 0;
  clear_has_name_space();
}
inline ::protodb::DownloadClient Entry::name_space() const {
  // @@protoc_insertion_point(field_get:protodb.Entry.name_space)
  return static_cast< ::protodb::DownloadClient >(name_space_);
}
inline void Entry::set_name_space(::protodb::DownloadClient value) {
  assert(::protodb::DownloadClient_IsValid(value));
  set_has_name_space();
  name_space_ = value;
  // @@protoc_insertion_point(field_set:protodb.Entry.name_space)
}

// optional string guid = 2;
inline bool Entry::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Entry::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Entry::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Entry::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
inline const ::std::string& Entry::guid() const {
  // @@protoc_insertion_point(field_get:protodb.Entry.guid)
  return guid_.GetNoArena();
}
inline void Entry::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protodb.Entry.guid)
}
#if LANG_CXX11
inline void Entry::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protodb.Entry.guid)
}
#endif
inline void Entry::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protodb.Entry.guid)
}
inline void Entry::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protodb.Entry.guid)
}
inline ::std::string* Entry::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:protodb.Entry.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Entry::release_guid() {
  // @@protoc_insertion_point(field_release:protodb.Entry.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Entry::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:protodb.Entry.guid)
}

// optional .protodb.SchedulingParams scheduling_params = 3;
inline bool Entry::has_scheduling_params() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Entry::set_has_scheduling_params() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Entry::clear_has_scheduling_params() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Entry::clear_scheduling_params() {
  if (scheduling_params_ != NULL) scheduling_params_->::protodb::SchedulingParams::Clear();
  clear_has_scheduling_params();
}
inline const ::protodb::SchedulingParams& Entry::scheduling_params() const {
  // @@protoc_insertion_point(field_get:protodb.Entry.scheduling_params)
  return scheduling_params_ != NULL ? *scheduling_params_
                         : *::protodb::SchedulingParams::internal_default_instance();
}
inline ::protodb::SchedulingParams* Entry::mutable_scheduling_params() {
  set_has_scheduling_params();
  if (scheduling_params_ == NULL) {
    scheduling_params_ = new ::protodb::SchedulingParams;
  }
  // @@protoc_insertion_point(field_mutable:protodb.Entry.scheduling_params)
  return scheduling_params_;
}
inline ::protodb::SchedulingParams* Entry::release_scheduling_params() {
  // @@protoc_insertion_point(field_release:protodb.Entry.scheduling_params)
  clear_has_scheduling_params();
  ::protodb::SchedulingParams* temp = scheduling_params_;
  scheduling_params_ = NULL;
  return temp;
}
inline void Entry::set_allocated_scheduling_params(::protodb::SchedulingParams* scheduling_params) {
  delete scheduling_params_;
  scheduling_params_ = scheduling_params;
  if (scheduling_params) {
    set_has_scheduling_params();
  } else {
    clear_has_scheduling_params();
  }
  // @@protoc_insertion_point(field_set_allocated:protodb.Entry.scheduling_params)
}

// optional .protodb.RequestParams request_params = 4;
inline bool Entry::has_request_params() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Entry::set_has_request_params() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Entry::clear_has_request_params() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Entry::clear_request_params() {
  if (request_params_ != NULL) request_params_->::protodb::RequestParams::Clear();
  clear_has_request_params();
}
inline const ::protodb::RequestParams& Entry::request_params() const {
  // @@protoc_insertion_point(field_get:protodb.Entry.request_params)
  return request_params_ != NULL ? *request_params_
                         : *::protodb::RequestParams::internal_default_instance();
}
inline ::protodb::RequestParams* Entry::mutable_request_params() {
  set_has_request_params();
  if (request_params_ == NULL) {
    request_params_ = new ::protodb::RequestParams;
  }
  // @@protoc_insertion_point(field_mutable:protodb.Entry.request_params)
  return request_params_;
}
inline ::protodb::RequestParams* Entry::release_request_params() {
  // @@protoc_insertion_point(field_release:protodb.Entry.request_params)
  clear_has_request_params();
  ::protodb::RequestParams* temp = request_params_;
  request_params_ = NULL;
  return temp;
}
inline void Entry::set_allocated_request_params(::protodb::RequestParams* request_params) {
  delete request_params_;
  request_params_ = request_params;
  if (request_params) {
    set_has_request_params();
  } else {
    clear_has_request_params();
  }
  // @@protoc_insertion_point(field_set_allocated:protodb.Entry.request_params)
}

// optional .protodb.Entry.State state = 5;
inline bool Entry::has_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Entry::set_has_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Entry::clear_has_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Entry::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::protodb::Entry_State Entry::state() const {
  // @@protoc_insertion_point(field_get:protodb.Entry.state)
  return static_cast< ::protodb::Entry_State >(state_);
}
inline void Entry::set_state(::protodb::Entry_State value) {
  assert(::protodb::Entry_State_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:protodb.Entry.state)
}

// optional string target_file_path = 6;
inline bool Entry::has_target_file_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Entry::set_has_target_file_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Entry::clear_has_target_file_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Entry::clear_target_file_path() {
  target_file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target_file_path();
}
inline const ::std::string& Entry::target_file_path() const {
  // @@protoc_insertion_point(field_get:protodb.Entry.target_file_path)
  return target_file_path_.GetNoArena();
}
inline void Entry::set_target_file_path(const ::std::string& value) {
  set_has_target_file_path();
  target_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protodb.Entry.target_file_path)
}
#if LANG_CXX11
inline void Entry::set_target_file_path(::std::string&& value) {
  set_has_target_file_path();
  target_file_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protodb.Entry.target_file_path)
}
#endif
inline void Entry::set_target_file_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_target_file_path();
  target_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protodb.Entry.target_file_path)
}
inline void Entry::set_target_file_path(const char* value, size_t size) {
  set_has_target_file_path();
  target_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protodb.Entry.target_file_path)
}
inline ::std::string* Entry::mutable_target_file_path() {
  set_has_target_file_path();
  // @@protoc_insertion_point(field_mutable:protodb.Entry.target_file_path)
  return target_file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Entry::release_target_file_path() {
  // @@protoc_insertion_point(field_release:protodb.Entry.target_file_path)
  clear_has_target_file_path();
  return target_file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Entry::set_allocated_target_file_path(::std::string* target_file_path) {
  if (target_file_path != NULL) {
    set_has_target_file_path();
  } else {
    clear_has_target_file_path();
  }
  target_file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_file_path);
  // @@protoc_insertion_point(field_set_allocated:protodb.Entry.target_file_path)
}

// optional int64 create_time = 7;
inline bool Entry::has_create_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Entry::set_has_create_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Entry::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Entry::clear_create_time() {
  create_time_ = GOOGLE_LONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::int64 Entry::create_time() const {
  // @@protoc_insertion_point(field_get:protodb.Entry.create_time)
  return create_time_;
}
inline void Entry::set_create_time(::google::protobuf::int64 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:protodb.Entry.create_time)
}

// optional int64 completion_time = 8;
inline bool Entry::has_completion_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Entry::set_has_completion_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Entry::clear_has_completion_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Entry::clear_completion_time() {
  completion_time_ = GOOGLE_LONGLONG(0);
  clear_has_completion_time();
}
inline ::google::protobuf::int64 Entry::completion_time() const {
  // @@protoc_insertion_point(field_get:protodb.Entry.completion_time)
  return completion_time_;
}
inline void Entry::set_completion_time(::google::protobuf::int64 value) {
  set_has_completion_time();
  completion_time_ = value;
  // @@protoc_insertion_point(field_set:protodb.Entry.completion_time)
}

// optional uint32 attempt_count = 9;
inline bool Entry::has_attempt_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Entry::set_has_attempt_count() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Entry::clear_has_attempt_count() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Entry::clear_attempt_count() {
  attempt_count_ = 0u;
  clear_has_attempt_count();
}
inline ::google::protobuf::uint32 Entry::attempt_count() const {
  // @@protoc_insertion_point(field_get:protodb.Entry.attempt_count)
  return attempt_count_;
}
inline void Entry::set_attempt_count(::google::protobuf::uint32 value) {
  set_has_attempt_count();
  attempt_count_ = value;
  // @@protoc_insertion_point(field_set:protodb.Entry.attempt_count)
}

// optional int32 traffic_annotation = 10;
inline bool Entry::has_traffic_annotation() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Entry::set_has_traffic_annotation() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Entry::clear_has_traffic_annotation() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Entry::clear_traffic_annotation() {
  traffic_annotation_ = 0;
  clear_has_traffic_annotation();
}
inline ::google::protobuf::int32 Entry::traffic_annotation() const {
  // @@protoc_insertion_point(field_get:protodb.Entry.traffic_annotation)
  return traffic_annotation_;
}
inline void Entry::set_traffic_annotation(::google::protobuf::int32 value) {
  set_has_traffic_annotation();
  traffic_annotation_ = value;
  // @@protoc_insertion_point(field_set:protodb.Entry.traffic_annotation)
}

// optional uint64 bytes_downloaded = 11;
inline bool Entry::has_bytes_downloaded() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Entry::set_has_bytes_downloaded() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Entry::clear_has_bytes_downloaded() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Entry::clear_bytes_downloaded() {
  bytes_downloaded_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes_downloaded();
}
inline ::google::protobuf::uint64 Entry::bytes_downloaded() const {
  // @@protoc_insertion_point(field_get:protodb.Entry.bytes_downloaded)
  return bytes_downloaded_;
}
inline void Entry::set_bytes_downloaded(::google::protobuf::uint64 value) {
  set_has_bytes_downloaded();
  bytes_downloaded_ = value;
  // @@protoc_insertion_point(field_set:protodb.Entry.bytes_downloaded)
}

// optional int64 last_cleanup_check_time = 12;
inline bool Entry::has_last_cleanup_check_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Entry::set_has_last_cleanup_check_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Entry::clear_has_last_cleanup_check_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Entry::clear_last_cleanup_check_time() {
  last_cleanup_check_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_cleanup_check_time();
}
inline ::google::protobuf::int64 Entry::last_cleanup_check_time() const {
  // @@protoc_insertion_point(field_get:protodb.Entry.last_cleanup_check_time)
  return last_cleanup_check_time_;
}
inline void Entry::set_last_cleanup_check_time(::google::protobuf::int64 value) {
  set_has_last_cleanup_check_time();
  last_cleanup_check_time_ = value;
  // @@protoc_insertion_point(field_set:protodb.Entry.last_cleanup_check_time)
}

// optional uint32 cleanup_attempt_count = 13;
inline bool Entry::has_cleanup_attempt_count() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Entry::set_has_cleanup_attempt_count() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Entry::clear_has_cleanup_attempt_count() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Entry::clear_cleanup_attempt_count() {
  cleanup_attempt_count_ = 0u;
  clear_has_cleanup_attempt_count();
}
inline ::google::protobuf::uint32 Entry::cleanup_attempt_count() const {
  // @@protoc_insertion_point(field_get:protodb.Entry.cleanup_attempt_count)
  return cleanup_attempt_count_;
}
inline void Entry::set_cleanup_attempt_count(::google::protobuf::uint32 value) {
  set_has_cleanup_attempt_count();
  cleanup_attempt_count_ = value;
  // @@protoc_insertion_point(field_set:protodb.Entry.cleanup_attempt_count)
}

// optional uint32 resumption_count = 14;
inline bool Entry::has_resumption_count() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Entry::set_has_resumption_count() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Entry::clear_has_resumption_count() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Entry::clear_resumption_count() {
  resumption_count_ = 0u;
  clear_has_resumption_count();
}
inline ::google::protobuf::uint32 Entry::resumption_count() const {
  // @@protoc_insertion_point(field_get:protodb.Entry.resumption_count)
  return resumption_count_;
}
inline void Entry::set_resumption_count(::google::protobuf::uint32 value) {
  set_has_resumption_count();
  resumption_count_ = value;
  // @@protoc_insertion_point(field_set:protodb.Entry.resumption_count)
}

// optional bool has_upload_data = 15;
inline bool Entry::has_has_upload_data() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Entry::set_has_has_upload_data() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Entry::clear_has_has_upload_data() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Entry::clear_has_upload_data() {
  has_upload_data_ = false;
  clear_has_has_upload_data();
}
inline bool Entry::has_upload_data() const {
  // @@protoc_insertion_point(field_get:protodb.Entry.has_upload_data)
  return has_upload_data_;
}
inline void Entry::set_has_upload_data(bool value) {
  set_has_has_upload_data();
  has_upload_data_ = value;
  // @@protoc_insertion_point(field_set:protodb.Entry.has_upload_data)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace protodb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::protodb::Entry_State> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::protodb::DownloadClient> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_entry_2eproto__INCLUDED
