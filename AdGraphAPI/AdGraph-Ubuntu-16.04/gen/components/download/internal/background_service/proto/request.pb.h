// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request.proto

#ifndef PROTOBUF_request_2eproto__INCLUDED
#define PROTOBUF_request_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
namespace protodb {
class RequestHeader;
class RequestHeaderDefaultTypeInternal;
extern RequestHeaderDefaultTypeInternal _RequestHeader_default_instance_;
class RequestParams;
class RequestParamsDefaultTypeInternal;
extern RequestParamsDefaultTypeInternal _RequestParams_default_instance_;
}  // namespace protodb

namespace protodb {

namespace protobuf_request_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_request_2eproto

// ===================================================================

class RequestHeader : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:protodb.RequestHeader) */ {
 public:
  RequestHeader();
  virtual ~RequestHeader();

  RequestHeader(const RequestHeader& from);

  inline RequestHeader& operator=(const RequestHeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const RequestHeader& default_instance();

  static inline const RequestHeader* internal_default_instance() {
    return reinterpret_cast<const RequestHeader*>(
               &_RequestHeader_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(RequestHeader* other);

  // implements Message ----------------------------------------------

  inline RequestHeader* New() const PROTOBUF_FINAL { return New(NULL); }

  RequestHeader* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RequestHeader& from);
  void MergeFrom(const RequestHeader& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:protodb.RequestHeader)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct protobuf_request_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RequestParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:protodb.RequestParams) */ {
 public:
  RequestParams();
  virtual ~RequestParams();

  RequestParams(const RequestParams& from);

  inline RequestParams& operator=(const RequestParams& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const RequestParams& default_instance();

  static inline const RequestParams* internal_default_instance() {
    return reinterpret_cast<const RequestParams*>(
               &_RequestParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(RequestParams* other);

  // implements Message ----------------------------------------------

  inline RequestParams* New() const PROTOBUF_FINAL { return New(NULL); }

  RequestParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RequestParams& from);
  void MergeFrom(const RequestParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protodb.RequestHeader headers = 3;
  int headers_size() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 3;
  const ::protodb::RequestHeader& headers(int index) const;
  ::protodb::RequestHeader* mutable_headers(int index);
  ::protodb::RequestHeader* add_headers();
  ::google::protobuf::RepeatedPtrField< ::protodb::RequestHeader >*
      mutable_headers();
  const ::google::protobuf::RepeatedPtrField< ::protodb::RequestHeader >&
      headers() const;

  // optional string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string method = 2;
  bool has_method() const;
  void clear_method();
  static const int kMethodFieldNumber = 2;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  #if LANG_CXX11
  void set_method(::std::string&& value);
  #endif
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // optional bool fetch_error_body = 4;
  bool has_fetch_error_body() const;
  void clear_fetch_error_body();
  static const int kFetchErrorBodyFieldNumber = 4;
  bool fetch_error_body() const;
  void set_fetch_error_body(bool value);

  // @@protoc_insertion_point(class_scope:protodb.RequestParams)
 private:
  void set_has_url();
  void clear_has_url();
  void set_has_method();
  void clear_has_method();
  void set_has_fetch_error_body();
  void clear_has_fetch_error_body();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protodb::RequestHeader > headers_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  bool fetch_error_body_;
  friend struct protobuf_request_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestHeader

// optional string key = 1;
inline bool RequestHeader::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestHeader::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestHeader::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestHeader::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& RequestHeader::key() const {
  // @@protoc_insertion_point(field_get:protodb.RequestHeader.key)
  return key_.GetNoArena();
}
inline void RequestHeader::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protodb.RequestHeader.key)
}
#if LANG_CXX11
inline void RequestHeader::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protodb.RequestHeader.key)
}
#endif
inline void RequestHeader::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protodb.RequestHeader.key)
}
inline void RequestHeader::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protodb.RequestHeader.key)
}
inline ::std::string* RequestHeader::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:protodb.RequestHeader.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestHeader::release_key() {
  // @@protoc_insertion_point(field_release:protodb.RequestHeader.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestHeader::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:protodb.RequestHeader.key)
}

// optional string value = 2;
inline bool RequestHeader::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestHeader::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestHeader::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestHeader::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& RequestHeader::value() const {
  // @@protoc_insertion_point(field_get:protodb.RequestHeader.value)
  return value_.GetNoArena();
}
inline void RequestHeader::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protodb.RequestHeader.value)
}
#if LANG_CXX11
inline void RequestHeader::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protodb.RequestHeader.value)
}
#endif
inline void RequestHeader::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protodb.RequestHeader.value)
}
inline void RequestHeader::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protodb.RequestHeader.value)
}
inline ::std::string* RequestHeader::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:protodb.RequestHeader.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestHeader::release_value() {
  // @@protoc_insertion_point(field_release:protodb.RequestHeader.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestHeader::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:protodb.RequestHeader.value)
}

// -------------------------------------------------------------------

// RequestParams

// optional string url = 1;
inline bool RequestParams::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestParams::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestParams::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestParams::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& RequestParams::url() const {
  // @@protoc_insertion_point(field_get:protodb.RequestParams.url)
  return url_.GetNoArena();
}
inline void RequestParams::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protodb.RequestParams.url)
}
#if LANG_CXX11
inline void RequestParams::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protodb.RequestParams.url)
}
#endif
inline void RequestParams::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protodb.RequestParams.url)
}
inline void RequestParams::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protodb.RequestParams.url)
}
inline ::std::string* RequestParams::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:protodb.RequestParams.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestParams::release_url() {
  // @@protoc_insertion_point(field_release:protodb.RequestParams.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestParams::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:protodb.RequestParams.url)
}

// optional string method = 2;
inline bool RequestParams::has_method() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestParams::set_has_method() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestParams::clear_has_method() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestParams::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method();
}
inline const ::std::string& RequestParams::method() const {
  // @@protoc_insertion_point(field_get:protodb.RequestParams.method)
  return method_.GetNoArena();
}
inline void RequestParams::set_method(const ::std::string& value) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protodb.RequestParams.method)
}
#if LANG_CXX11
inline void RequestParams::set_method(::std::string&& value) {
  set_has_method();
  method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protodb.RequestParams.method)
}
#endif
inline void RequestParams::set_method(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protodb.RequestParams.method)
}
inline void RequestParams::set_method(const char* value, size_t size) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protodb.RequestParams.method)
}
inline ::std::string* RequestParams::mutable_method() {
  set_has_method();
  // @@protoc_insertion_point(field_mutable:protodb.RequestParams.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestParams::release_method() {
  // @@protoc_insertion_point(field_release:protodb.RequestParams.method)
  clear_has_method();
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestParams::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    set_has_method();
  } else {
    clear_has_method();
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:protodb.RequestParams.method)
}

// repeated .protodb.RequestHeader headers = 3;
inline int RequestParams::headers_size() const {
  return headers_.size();
}
inline void RequestParams::clear_headers() {
  headers_.Clear();
}
inline const ::protodb::RequestHeader& RequestParams::headers(int index) const {
  // @@protoc_insertion_point(field_get:protodb.RequestParams.headers)
  return headers_.Get(index);
}
inline ::protodb::RequestHeader* RequestParams::mutable_headers(int index) {
  // @@protoc_insertion_point(field_mutable:protodb.RequestParams.headers)
  return headers_.Mutable(index);
}
inline ::protodb::RequestHeader* RequestParams::add_headers() {
  // @@protoc_insertion_point(field_add:protodb.RequestParams.headers)
  return headers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protodb::RequestHeader >*
RequestParams::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_list:protodb.RequestParams.headers)
  return &headers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protodb::RequestHeader >&
RequestParams::headers() const {
  // @@protoc_insertion_point(field_list:protodb.RequestParams.headers)
  return headers_;
}

// optional bool fetch_error_body = 4;
inline bool RequestParams::has_fetch_error_body() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestParams::set_has_fetch_error_body() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestParams::clear_has_fetch_error_body() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestParams::clear_fetch_error_body() {
  fetch_error_body_ = false;
  clear_has_fetch_error_body();
}
inline bool RequestParams::fetch_error_body() const {
  // @@protoc_insertion_point(field_get:protodb.RequestParams.fetch_error_body)
  return fetch_error_body_;
}
inline void RequestParams::set_fetch_error_body(bool value) {
  set_has_fetch_error_body();
  fetch_error_body_ = value;
  // @@protoc_insertion_point(field_set:protodb.RequestParams.fetch_error_body)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protodb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_request_2eproto__INCLUDED
