// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authority_keys.proto

#ifndef PROTOBUF_authority_5fkeys_2eproto__INCLUDED
#define PROTOBUF_authority_5fkeys_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
namespace cast_channel {
namespace proto {
class AuthorityKeys;
class AuthorityKeysDefaultTypeInternal;
extern AuthorityKeysDefaultTypeInternal _AuthorityKeys_default_instance_;
class AuthorityKeys_Key;
class AuthorityKeys_KeyDefaultTypeInternal;
extern AuthorityKeys_KeyDefaultTypeInternal _AuthorityKeys_Key_default_instance_;
}  // namespace proto
}  // namespace cast_channel

namespace cast_channel {
namespace proto {

namespace protobuf_authority_5fkeys_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_authority_5fkeys_2eproto

// ===================================================================

class AuthorityKeys_Key : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:cast_channel.proto.AuthorityKeys.Key) */ {
 public:
  AuthorityKeys_Key();
  virtual ~AuthorityKeys_Key();

  AuthorityKeys_Key(const AuthorityKeys_Key& from);

  inline AuthorityKeys_Key& operator=(const AuthorityKeys_Key& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AuthorityKeys_Key& default_instance();

  static inline const AuthorityKeys_Key* internal_default_instance() {
    return reinterpret_cast<const AuthorityKeys_Key*>(
               &_AuthorityKeys_Key_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(AuthorityKeys_Key* other);

  // implements Message ----------------------------------------------

  inline AuthorityKeys_Key* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthorityKeys_Key* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AuthorityKeys_Key& from);
  void MergeFrom(const AuthorityKeys_Key& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthorityKeys_Key* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes fingerprint = 1;
  bool has_fingerprint() const;
  void clear_fingerprint();
  static const int kFingerprintFieldNumber = 1;
  const ::std::string& fingerprint() const;
  void set_fingerprint(const ::std::string& value);
  #if LANG_CXX11
  void set_fingerprint(::std::string&& value);
  #endif
  void set_fingerprint(const char* value);
  void set_fingerprint(const void* value, size_t size);
  ::std::string* mutable_fingerprint();
  ::std::string* release_fingerprint();
  void set_allocated_fingerprint(::std::string* fingerprint);

  // required bytes public_key = 2;
  bool has_public_key() const;
  void clear_public_key();
  static const int kPublicKeyFieldNumber = 2;
  const ::std::string& public_key() const;
  void set_public_key(const ::std::string& value);
  #if LANG_CXX11
  void set_public_key(::std::string&& value);
  #endif
  void set_public_key(const char* value);
  void set_public_key(const void* value, size_t size);
  ::std::string* mutable_public_key();
  ::std::string* release_public_key();
  void set_allocated_public_key(::std::string* public_key);

  // @@protoc_insertion_point(class_scope:cast_channel.proto.AuthorityKeys.Key)
 private:
  void set_has_fingerprint();
  void clear_has_fingerprint();
  void set_has_public_key();
  void clear_has_public_key();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr fingerprint_;
  ::google::protobuf::internal::ArenaStringPtr public_key_;
  friend struct protobuf_authority_5fkeys_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuthorityKeys : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:cast_channel.proto.AuthorityKeys) */ {
 public:
  AuthorityKeys();
  virtual ~AuthorityKeys();

  AuthorityKeys(const AuthorityKeys& from);

  inline AuthorityKeys& operator=(const AuthorityKeys& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AuthorityKeys& default_instance();

  static inline const AuthorityKeys* internal_default_instance() {
    return reinterpret_cast<const AuthorityKeys*>(
               &_AuthorityKeys_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(AuthorityKeys* other);

  // implements Message ----------------------------------------------

  inline AuthorityKeys* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthorityKeys* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AuthorityKeys& from);
  void MergeFrom(const AuthorityKeys& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthorityKeys* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AuthorityKeys_Key Key;

  // accessors -------------------------------------------------------

  // repeated .cast_channel.proto.AuthorityKeys.Key keys = 1;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 1;
  const ::cast_channel::proto::AuthorityKeys_Key& keys(int index) const;
  ::cast_channel::proto::AuthorityKeys_Key* mutable_keys(int index);
  ::cast_channel::proto::AuthorityKeys_Key* add_keys();
  ::google::protobuf::RepeatedPtrField< ::cast_channel::proto::AuthorityKeys_Key >*
      mutable_keys();
  const ::google::protobuf::RepeatedPtrField< ::cast_channel::proto::AuthorityKeys_Key >&
      keys() const;

  // @@protoc_insertion_point(class_scope:cast_channel.proto.AuthorityKeys)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::cast_channel::proto::AuthorityKeys_Key > keys_;
  friend struct protobuf_authority_5fkeys_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthorityKeys_Key

// required bytes fingerprint = 1;
inline bool AuthorityKeys_Key::has_fingerprint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthorityKeys_Key::set_has_fingerprint() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthorityKeys_Key::clear_has_fingerprint() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthorityKeys_Key::clear_fingerprint() {
  fingerprint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fingerprint();
}
inline const ::std::string& AuthorityKeys_Key::fingerprint() const {
  // @@protoc_insertion_point(field_get:cast_channel.proto.AuthorityKeys.Key.fingerprint)
  return fingerprint_.GetNoArena();
}
inline void AuthorityKeys_Key::set_fingerprint(const ::std::string& value) {
  set_has_fingerprint();
  fingerprint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cast_channel.proto.AuthorityKeys.Key.fingerprint)
}
#if LANG_CXX11
inline void AuthorityKeys_Key::set_fingerprint(::std::string&& value) {
  set_has_fingerprint();
  fingerprint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cast_channel.proto.AuthorityKeys.Key.fingerprint)
}
#endif
inline void AuthorityKeys_Key::set_fingerprint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fingerprint();
  fingerprint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cast_channel.proto.AuthorityKeys.Key.fingerprint)
}
inline void AuthorityKeys_Key::set_fingerprint(const void* value, size_t size) {
  set_has_fingerprint();
  fingerprint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cast_channel.proto.AuthorityKeys.Key.fingerprint)
}
inline ::std::string* AuthorityKeys_Key::mutable_fingerprint() {
  set_has_fingerprint();
  // @@protoc_insertion_point(field_mutable:cast_channel.proto.AuthorityKeys.Key.fingerprint)
  return fingerprint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthorityKeys_Key::release_fingerprint() {
  // @@protoc_insertion_point(field_release:cast_channel.proto.AuthorityKeys.Key.fingerprint)
  clear_has_fingerprint();
  return fingerprint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthorityKeys_Key::set_allocated_fingerprint(::std::string* fingerprint) {
  if (fingerprint != NULL) {
    set_has_fingerprint();
  } else {
    clear_has_fingerprint();
  }
  fingerprint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fingerprint);
  // @@protoc_insertion_point(field_set_allocated:cast_channel.proto.AuthorityKeys.Key.fingerprint)
}

// required bytes public_key = 2;
inline bool AuthorityKeys_Key::has_public_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthorityKeys_Key::set_has_public_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthorityKeys_Key::clear_has_public_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthorityKeys_Key::clear_public_key() {
  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_public_key();
}
inline const ::std::string& AuthorityKeys_Key::public_key() const {
  // @@protoc_insertion_point(field_get:cast_channel.proto.AuthorityKeys.Key.public_key)
  return public_key_.GetNoArena();
}
inline void AuthorityKeys_Key::set_public_key(const ::std::string& value) {
  set_has_public_key();
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cast_channel.proto.AuthorityKeys.Key.public_key)
}
#if LANG_CXX11
inline void AuthorityKeys_Key::set_public_key(::std::string&& value) {
  set_has_public_key();
  public_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cast_channel.proto.AuthorityKeys.Key.public_key)
}
#endif
inline void AuthorityKeys_Key::set_public_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_public_key();
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cast_channel.proto.AuthorityKeys.Key.public_key)
}
inline void AuthorityKeys_Key::set_public_key(const void* value, size_t size) {
  set_has_public_key();
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cast_channel.proto.AuthorityKeys.Key.public_key)
}
inline ::std::string* AuthorityKeys_Key::mutable_public_key() {
  set_has_public_key();
  // @@protoc_insertion_point(field_mutable:cast_channel.proto.AuthorityKeys.Key.public_key)
  return public_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthorityKeys_Key::release_public_key() {
  // @@protoc_insertion_point(field_release:cast_channel.proto.AuthorityKeys.Key.public_key)
  clear_has_public_key();
  return public_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthorityKeys_Key::set_allocated_public_key(::std::string* public_key) {
  if (public_key != NULL) {
    set_has_public_key();
  } else {
    clear_has_public_key();
  }
  public_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key);
  // @@protoc_insertion_point(field_set_allocated:cast_channel.proto.AuthorityKeys.Key.public_key)
}

// -------------------------------------------------------------------

// AuthorityKeys

// repeated .cast_channel.proto.AuthorityKeys.Key keys = 1;
inline int AuthorityKeys::keys_size() const {
  return keys_.size();
}
inline void AuthorityKeys::clear_keys() {
  keys_.Clear();
}
inline const ::cast_channel::proto::AuthorityKeys_Key& AuthorityKeys::keys(int index) const {
  // @@protoc_insertion_point(field_get:cast_channel.proto.AuthorityKeys.keys)
  return keys_.Get(index);
}
inline ::cast_channel::proto::AuthorityKeys_Key* AuthorityKeys::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:cast_channel.proto.AuthorityKeys.keys)
  return keys_.Mutable(index);
}
inline ::cast_channel::proto::AuthorityKeys_Key* AuthorityKeys::add_keys() {
  // @@protoc_insertion_point(field_add:cast_channel.proto.AuthorityKeys.keys)
  return keys_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::cast_channel::proto::AuthorityKeys_Key >*
AuthorityKeys::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:cast_channel.proto.AuthorityKeys.keys)
  return &keys_;
}
inline const ::google::protobuf::RepeatedPtrField< ::cast_channel::proto::AuthorityKeys_Key >&
AuthorityKeys::keys() const {
  // @@protoc_insertion_point(field_list:cast_channel.proto.AuthorityKeys.keys)
  return keys_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto
}  // namespace cast_channel

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_authority_5fkeys_2eproto__INCLUDED
