// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chrome_extension_policy.proto

#ifndef PROTOBUF_chrome_5fextension_5fpolicy_2eproto__INCLUDED
#define PROTOBUF_chrome_5fextension_5fpolicy_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include "components/policy/proto/policy_proto_export.h"
namespace enterprise_management {
class ExternalPolicyData;
class ExternalPolicyDataDefaultTypeInternal;
POLICY_PROTO_EXPORT extern ExternalPolicyDataDefaultTypeInternal _ExternalPolicyData_default_instance_;
}  // namespace enterprise_management

namespace enterprise_management {

namespace protobuf_chrome_5fextension_5fpolicy_2eproto {
// Internal implementation detail -- do not call these.
struct POLICY_PROTO_EXPORT TableStruct {
static const ::google::protobuf::internal::ParseTableField entries[];
static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
static const ::google::protobuf::internal::ParseTable schema[];
static const ::google::protobuf::uint32 offsets[];
static void InitDefaultsImpl();
static void Shutdown();
};
void POLICY_PROTO_EXPORT AddDescriptors();
void POLICY_PROTO_EXPORT InitDefaults();
}  // namespace protobuf_chrome_5fextension_5fpolicy_2eproto

// ===================================================================

class POLICY_PROTO_EXPORT ExternalPolicyData : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:enterprise_management.ExternalPolicyData) */ {
public:
ExternalPolicyData();
virtual ~ExternalPolicyData();

ExternalPolicyData(const ExternalPolicyData& from);

inline ExternalPolicyData& operator=(const ExternalPolicyData& from) {
CopyFrom(from);
return *this;
}

inline const ::std::string& unknown_fields() const {
return _internal_metadata_.unknown_fields();
}

inline ::std::string* mutable_unknown_fields() {
return _internal_metadata_.mutable_unknown_fields();
}

static const ExternalPolicyData& default_instance();

static inline const ExternalPolicyData* internal_default_instance() {
return reinterpret_cast<const ExternalPolicyData*>(
&_ExternalPolicyData_default_instance_);
}
static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
0;

GOOGLE_ATTRIBUTE_NOINLINE void Swap(ExternalPolicyData* other);

// implements Message ----------------------------------------------

inline ExternalPolicyData* New() const PROTOBUF_FINAL { return New(NULL); }

ExternalPolicyData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
PROTOBUF_FINAL;
void CopyFrom(const ExternalPolicyData& from);
void MergeFrom(const ExternalPolicyData& from);
void Clear() PROTOBUF_FINAL;
bool IsInitialized() const PROTOBUF_FINAL;

size_t ByteSizeLong() const PROTOBUF_FINAL;
bool MergePartialFromCodedStream(
::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
void SerializeWithCachedSizes(
::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
void DiscardUnknownFields();
int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
private:
void SharedCtor();
void SharedDtor();
void SetCachedSize(int size) const;
void InternalSwap(ExternalPolicyData* other);
private:
inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
return NULL;
}
inline void* MaybeArenaPtr() const {
return NULL;
}
public:

::std::string GetTypeName() const PROTOBUF_FINAL;

// nested types ----------------------------------------------------

// accessors -------------------------------------------------------

// optional string download_url = 1;
bool has_download_url() const;
void clear_download_url();
static const int kDownloadUrlFieldNumber = 1;
const ::std::string& download_url() const;
void set_download_url(const ::std::string& value);
#if LANG_CXX11
void set_download_url(::std::string&& value);
#endif
void set_download_url(const char* value);
void set_download_url(const char* value, size_t size);
::std::string* mutable_download_url();
::std::string* release_download_url();
void set_allocated_download_url(::std::string* download_url);

// optional bytes secure_hash = 2;
bool has_secure_hash() const;
void clear_secure_hash();
static const int kSecureHashFieldNumber = 2;
const ::std::string& secure_hash() const;
void set_secure_hash(const ::std::string& value);
#if LANG_CXX11
void set_secure_hash(::std::string&& value);
#endif
void set_secure_hash(const char* value);
void set_secure_hash(const void* value, size_t size);
::std::string* mutable_secure_hash();
::std::string* release_secure_hash();
void set_allocated_secure_hash(::std::string* secure_hash);

// @@protoc_insertion_point(class_scope:enterprise_management.ExternalPolicyData)
private:
void set_has_download_url();
void clear_has_download_url();
void set_has_secure_hash();
void clear_has_secure_hash();

::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
::google::protobuf::internal::HasBits<1> _has_bits_;
mutable int _cached_size_;
::google::protobuf::internal::ArenaStringPtr download_url_;
::google::protobuf::internal::ArenaStringPtr secure_hash_;
friend struct protobuf_chrome_5fextension_5fpolicy_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ExternalPolicyData

// optional string download_url = 1;
inline bool ExternalPolicyData::has_download_url() const {
return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExternalPolicyData::set_has_download_url() {
_has_bits_[0] |= 0x00000001u;
}
inline void ExternalPolicyData::clear_has_download_url() {
_has_bits_[0] &= ~0x00000001u;
}
inline void ExternalPolicyData::clear_download_url() {
download_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
clear_has_download_url();
}
inline const ::std::string& ExternalPolicyData::download_url() const {
// @@protoc_insertion_point(field_get:enterprise_management.ExternalPolicyData.download_url)
return download_url_.GetNoArena();
}
inline void ExternalPolicyData::set_download_url(const ::std::string& value) {
set_has_download_url();
download_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
// @@protoc_insertion_point(field_set:enterprise_management.ExternalPolicyData.download_url)
}
#if LANG_CXX11
inline void ExternalPolicyData::set_download_url(::std::string&& value) {
set_has_download_url();
download_url_.SetNoArena(
&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
// @@protoc_insertion_point(field_set_rvalue:enterprise_management.ExternalPolicyData.download_url)
}
#endif
inline void ExternalPolicyData::set_download_url(const char* value) {
GOOGLE_DCHECK(value != NULL);
set_has_download_url();
download_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
// @@protoc_insertion_point(field_set_char:enterprise_management.ExternalPolicyData.download_url)
}
inline void ExternalPolicyData::set_download_url(const char* value, size_t size) {
set_has_download_url();
download_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
::std::string(reinterpret_cast<const char*>(value), size));
// @@protoc_insertion_point(field_set_pointer:enterprise_management.ExternalPolicyData.download_url)
}
inline ::std::string* ExternalPolicyData::mutable_download_url() {
set_has_download_url();
// @@protoc_insertion_point(field_mutable:enterprise_management.ExternalPolicyData.download_url)
return download_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExternalPolicyData::release_download_url() {
// @@protoc_insertion_point(field_release:enterprise_management.ExternalPolicyData.download_url)
clear_has_download_url();
return download_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalPolicyData::set_allocated_download_url(::std::string* download_url) {
if (download_url != NULL) {
set_has_download_url();
} else {
clear_has_download_url();
}
download_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), download_url);
// @@protoc_insertion_point(field_set_allocated:enterprise_management.ExternalPolicyData.download_url)
}

// optional bytes secure_hash = 2;
inline bool ExternalPolicyData::has_secure_hash() const {
return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExternalPolicyData::set_has_secure_hash() {
_has_bits_[0] |= 0x00000002u;
}
inline void ExternalPolicyData::clear_has_secure_hash() {
_has_bits_[0] &= ~0x00000002u;
}
inline void ExternalPolicyData::clear_secure_hash() {
secure_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
clear_has_secure_hash();
}
inline const ::std::string& ExternalPolicyData::secure_hash() const {
// @@protoc_insertion_point(field_get:enterprise_management.ExternalPolicyData.secure_hash)
return secure_hash_.GetNoArena();
}
inline void ExternalPolicyData::set_secure_hash(const ::std::string& value) {
set_has_secure_hash();
secure_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
// @@protoc_insertion_point(field_set:enterprise_management.ExternalPolicyData.secure_hash)
}
#if LANG_CXX11
inline void ExternalPolicyData::set_secure_hash(::std::string&& value) {
set_has_secure_hash();
secure_hash_.SetNoArena(
&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
// @@protoc_insertion_point(field_set_rvalue:enterprise_management.ExternalPolicyData.secure_hash)
}
#endif
inline void ExternalPolicyData::set_secure_hash(const char* value) {
GOOGLE_DCHECK(value != NULL);
set_has_secure_hash();
secure_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
// @@protoc_insertion_point(field_set_char:enterprise_management.ExternalPolicyData.secure_hash)
}
inline void ExternalPolicyData::set_secure_hash(const void* value, size_t size) {
set_has_secure_hash();
secure_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
::std::string(reinterpret_cast<const char*>(value), size));
// @@protoc_insertion_point(field_set_pointer:enterprise_management.ExternalPolicyData.secure_hash)
}
inline ::std::string* ExternalPolicyData::mutable_secure_hash() {
set_has_secure_hash();
// @@protoc_insertion_point(field_mutable:enterprise_management.ExternalPolicyData.secure_hash)
return secure_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExternalPolicyData::release_secure_hash() {
// @@protoc_insertion_point(field_release:enterprise_management.ExternalPolicyData.secure_hash)
clear_has_secure_hash();
return secure_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalPolicyData::set_allocated_secure_hash(::std::string* secure_hash) {
if (secure_hash != NULL) {
set_has_secure_hash();
} else {
clear_has_secure_hash();
}
secure_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secure_hash);
// @@protoc_insertion_point(field_set_allocated:enterprise_management.ExternalPolicyData.secure_hash)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace enterprise_management

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_chrome_5fextension_5fpolicy_2eproto__INCLUDED
