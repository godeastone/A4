// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cloud_policy.proto

#ifndef PROTOBUF_cloud_5fpolicy_2eproto__INCLUDED
#define PROTOBUF_cloud_5fpolicy_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
#include "components/policy/proto/policy_proto_export.h"
namespace enterprise_management {
class BooleanPolicyProto;
class BooleanPolicyProtoDefaultTypeInternal;
POLICY_PROTO_EXPORT extern BooleanPolicyProtoDefaultTypeInternal _BooleanPolicyProto_default_instance_;
class CloudPolicySettings;
class CloudPolicySettingsDefaultTypeInternal;
POLICY_PROTO_EXPORT extern CloudPolicySettingsDefaultTypeInternal _CloudPolicySettings_default_instance_;
class IntegerPolicyProto;
class IntegerPolicyProtoDefaultTypeInternal;
POLICY_PROTO_EXPORT extern IntegerPolicyProtoDefaultTypeInternal _IntegerPolicyProto_default_instance_;
class PolicyOptions;
class PolicyOptionsDefaultTypeInternal;
POLICY_PROTO_EXPORT extern PolicyOptionsDefaultTypeInternal _PolicyOptions_default_instance_;
class StringList;
class StringListDefaultTypeInternal;
POLICY_PROTO_EXPORT extern StringListDefaultTypeInternal _StringList_default_instance_;
class StringListPolicyProto;
class StringListPolicyProtoDefaultTypeInternal;
POLICY_PROTO_EXPORT extern StringListPolicyProtoDefaultTypeInternal _StringListPolicyProto_default_instance_;
class StringPolicyProto;
class StringPolicyProtoDefaultTypeInternal;
POLICY_PROTO_EXPORT extern StringPolicyProtoDefaultTypeInternal _StringPolicyProto_default_instance_;
}  // namespace enterprise_management

namespace enterprise_management {

namespace protobuf_cloud_5fpolicy_2eproto {
// Internal implementation detail -- do not call these.
struct POLICY_PROTO_EXPORT TableStruct {
static const ::google::protobuf::internal::ParseTableField entries[];
static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
static const ::google::protobuf::internal::ParseTable schema[];
static const ::google::protobuf::uint32 offsets[];
static void InitDefaultsImpl();
static void Shutdown();
};
void POLICY_PROTO_EXPORT AddDescriptors();
void POLICY_PROTO_EXPORT InitDefaults();
}  // namespace protobuf_cloud_5fpolicy_2eproto

enum PolicyOptions_PolicyMode {
PolicyOptions_PolicyMode_MANDATORY = 0,
PolicyOptions_PolicyMode_RECOMMENDED = 1,
PolicyOptions_PolicyMode_UNSET = 2
};
POLICY_PROTO_EXPORT bool PolicyOptions_PolicyMode_IsValid(int value);
const PolicyOptions_PolicyMode PolicyOptions_PolicyMode_PolicyMode_MIN = PolicyOptions_PolicyMode_MANDATORY;
const PolicyOptions_PolicyMode PolicyOptions_PolicyMode_PolicyMode_MAX = PolicyOptions_PolicyMode_UNSET;
const int PolicyOptions_PolicyMode_PolicyMode_ARRAYSIZE = PolicyOptions_PolicyMode_PolicyMode_MAX + 1;

// ===================================================================

class POLICY_PROTO_EXPORT StringList : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:enterprise_management.StringList) */ {
public:
StringList();
virtual ~StringList();

StringList(const StringList& from);

inline StringList& operator=(const StringList& from) {
CopyFrom(from);
return *this;
}

inline const ::std::string& unknown_fields() const {
return _internal_metadata_.unknown_fields();
}

inline ::std::string* mutable_unknown_fields() {
return _internal_metadata_.mutable_unknown_fields();
}

static const StringList& default_instance();

static inline const StringList* internal_default_instance() {
return reinterpret_cast<const StringList*>(
&_StringList_default_instance_);
}
static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
0;

GOOGLE_ATTRIBUTE_NOINLINE void Swap(StringList* other);

// implements Message ----------------------------------------------

inline StringList* New() const PROTOBUF_FINAL { return New(NULL); }

StringList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
PROTOBUF_FINAL;
void CopyFrom(const StringList& from);
void MergeFrom(const StringList& from);
void Clear() PROTOBUF_FINAL;
bool IsInitialized() const PROTOBUF_FINAL;

size_t ByteSizeLong() const PROTOBUF_FINAL;
bool MergePartialFromCodedStream(
::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
void SerializeWithCachedSizes(
::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
void DiscardUnknownFields();
int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
private:
void SharedCtor();
void SharedDtor();
void SetCachedSize(int size) const;
void InternalSwap(StringList* other);
private:
inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
return NULL;
}
inline void* MaybeArenaPtr() const {
return NULL;
}
public:

::std::string GetTypeName() const PROTOBUF_FINAL;

// nested types ----------------------------------------------------

// accessors -------------------------------------------------------

// repeated string entries = 1;
int entries_size() const;
void clear_entries();
static const int kEntriesFieldNumber = 1;
const ::std::string& entries(int index) const;
::std::string* mutable_entries(int index);
void set_entries(int index, const ::std::string& value);
#if LANG_CXX11
void set_entries(int index, ::std::string&& value);
#endif
void set_entries(int index, const char* value);
void set_entries(int index, const char* value, size_t size);
::std::string* add_entries();
void add_entries(const ::std::string& value);
#if LANG_CXX11
void add_entries(::std::string&& value);
#endif
void add_entries(const char* value);
void add_entries(const char* value, size_t size);
const ::google::protobuf::RepeatedPtrField< ::std::string>& entries() const;
::google::protobuf::RepeatedPtrField< ::std::string>* mutable_entries();

// @@protoc_insertion_point(class_scope:enterprise_management.StringList)
private:

::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
::google::protobuf::internal::HasBits<1> _has_bits_;
mutable int _cached_size_;
::google::protobuf::RepeatedPtrField< ::std::string> entries_;
friend struct protobuf_cloud_5fpolicy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class POLICY_PROTO_EXPORT PolicyOptions : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:enterprise_management.PolicyOptions) */ {
public:
PolicyOptions();
virtual ~PolicyOptions();

PolicyOptions(const PolicyOptions& from);

inline PolicyOptions& operator=(const PolicyOptions& from) {
CopyFrom(from);
return *this;
}

inline const ::std::string& unknown_fields() const {
return _internal_metadata_.unknown_fields();
}

inline ::std::string* mutable_unknown_fields() {
return _internal_metadata_.mutable_unknown_fields();
}

static const PolicyOptions& default_instance();

static inline const PolicyOptions* internal_default_instance() {
return reinterpret_cast<const PolicyOptions*>(
&_PolicyOptions_default_instance_);
}
static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
1;

GOOGLE_ATTRIBUTE_NOINLINE void Swap(PolicyOptions* other);

// implements Message ----------------------------------------------

inline PolicyOptions* New() const PROTOBUF_FINAL { return New(NULL); }

PolicyOptions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
PROTOBUF_FINAL;
void CopyFrom(const PolicyOptions& from);
void MergeFrom(const PolicyOptions& from);
void Clear() PROTOBUF_FINAL;
bool IsInitialized() const PROTOBUF_FINAL;

size_t ByteSizeLong() const PROTOBUF_FINAL;
bool MergePartialFromCodedStream(
::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
void SerializeWithCachedSizes(
::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
void DiscardUnknownFields();
int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
private:
void SharedCtor();
void SharedDtor();
void SetCachedSize(int size) const;
void InternalSwap(PolicyOptions* other);
private:
inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
return NULL;
}
inline void* MaybeArenaPtr() const {
return NULL;
}
public:

::std::string GetTypeName() const PROTOBUF_FINAL;

// nested types ----------------------------------------------------

typedef PolicyOptions_PolicyMode PolicyMode;
static const PolicyMode MANDATORY =
PolicyOptions_PolicyMode_MANDATORY;
static const PolicyMode RECOMMENDED =
PolicyOptions_PolicyMode_RECOMMENDED;
static const PolicyMode UNSET =
PolicyOptions_PolicyMode_UNSET;
static inline bool PolicyMode_IsValid(int value) {
return PolicyOptions_PolicyMode_IsValid(value);
}
static const PolicyMode PolicyMode_MIN =
PolicyOptions_PolicyMode_PolicyMode_MIN;
static const PolicyMode PolicyMode_MAX =
PolicyOptions_PolicyMode_PolicyMode_MAX;
static const int PolicyMode_ARRAYSIZE =
PolicyOptions_PolicyMode_PolicyMode_ARRAYSIZE;

// accessors -------------------------------------------------------

// optional .enterprise_management.PolicyOptions.PolicyMode mode = 1 [default = MANDATORY];
bool has_mode() const;
void clear_mode();
static const int kModeFieldNumber = 1;
::enterprise_management::PolicyOptions_PolicyMode mode() const;
void set_mode(::enterprise_management::PolicyOptions_PolicyMode value);

// @@protoc_insertion_point(class_scope:enterprise_management.PolicyOptions)
private:
void set_has_mode();
void clear_has_mode();

::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
::google::protobuf::internal::HasBits<1> _has_bits_;
mutable int _cached_size_;
int mode_;
friend struct protobuf_cloud_5fpolicy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class POLICY_PROTO_EXPORT BooleanPolicyProto : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:enterprise_management.BooleanPolicyProto) */ {
public:
BooleanPolicyProto();
virtual ~BooleanPolicyProto();

BooleanPolicyProto(const BooleanPolicyProto& from);

inline BooleanPolicyProto& operator=(const BooleanPolicyProto& from) {
CopyFrom(from);
return *this;
}

inline const ::std::string& unknown_fields() const {
return _internal_metadata_.unknown_fields();
}

inline ::std::string* mutable_unknown_fields() {
return _internal_metadata_.mutable_unknown_fields();
}

static const BooleanPolicyProto& default_instance();

static inline const BooleanPolicyProto* internal_default_instance() {
return reinterpret_cast<const BooleanPolicyProto*>(
&_BooleanPolicyProto_default_instance_);
}
static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
2;

GOOGLE_ATTRIBUTE_NOINLINE void Swap(BooleanPolicyProto* other);

// implements Message ----------------------------------------------

inline BooleanPolicyProto* New() const PROTOBUF_FINAL { return New(NULL); }

BooleanPolicyProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
PROTOBUF_FINAL;
void CopyFrom(const BooleanPolicyProto& from);
void MergeFrom(const BooleanPolicyProto& from);
void Clear() PROTOBUF_FINAL;
bool IsInitialized() const PROTOBUF_FINAL;

size_t ByteSizeLong() const PROTOBUF_FINAL;
bool MergePartialFromCodedStream(
::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
void SerializeWithCachedSizes(
::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
void DiscardUnknownFields();
int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
private:
void SharedCtor();
void SharedDtor();
void SetCachedSize(int size) const;
void InternalSwap(BooleanPolicyProto* other);
private:
inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
return NULL;
}
inline void* MaybeArenaPtr() const {
return NULL;
}
public:

::std::string GetTypeName() const PROTOBUF_FINAL;

// nested types ----------------------------------------------------

// accessors -------------------------------------------------------

// optional .enterprise_management.PolicyOptions policy_options = 1;
bool has_policy_options() const;
void clear_policy_options();
static const int kPolicyOptionsFieldNumber = 1;
const ::enterprise_management::PolicyOptions& policy_options() const;
::enterprise_management::PolicyOptions* mutable_policy_options();
::enterprise_management::PolicyOptions* release_policy_options();
void set_allocated_policy_options(::enterprise_management::PolicyOptions* policy_options);

// optional bool value = 2;
bool has_value() const;
void clear_value();
static const int kValueFieldNumber = 2;
bool value() const;
void set_value(bool value);

// @@protoc_insertion_point(class_scope:enterprise_management.BooleanPolicyProto)
private:
void set_has_policy_options();
void clear_has_policy_options();
void set_has_value();
void clear_has_value();

::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
::google::protobuf::internal::HasBits<1> _has_bits_;
mutable int _cached_size_;
::enterprise_management::PolicyOptions* policy_options_;
bool value_;
friend struct protobuf_cloud_5fpolicy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class POLICY_PROTO_EXPORT IntegerPolicyProto : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:enterprise_management.IntegerPolicyProto) */ {
public:
IntegerPolicyProto();
virtual ~IntegerPolicyProto();

IntegerPolicyProto(const IntegerPolicyProto& from);

inline IntegerPolicyProto& operator=(const IntegerPolicyProto& from) {
CopyFrom(from);
return *this;
}

inline const ::std::string& unknown_fields() const {
return _internal_metadata_.unknown_fields();
}

inline ::std::string* mutable_unknown_fields() {
return _internal_metadata_.mutable_unknown_fields();
}

static const IntegerPolicyProto& default_instance();

static inline const IntegerPolicyProto* internal_default_instance() {
return reinterpret_cast<const IntegerPolicyProto*>(
&_IntegerPolicyProto_default_instance_);
}
static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
3;

GOOGLE_ATTRIBUTE_NOINLINE void Swap(IntegerPolicyProto* other);

// implements Message ----------------------------------------------

inline IntegerPolicyProto* New() const PROTOBUF_FINAL { return New(NULL); }

IntegerPolicyProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
PROTOBUF_FINAL;
void CopyFrom(const IntegerPolicyProto& from);
void MergeFrom(const IntegerPolicyProto& from);
void Clear() PROTOBUF_FINAL;
bool IsInitialized() const PROTOBUF_FINAL;

size_t ByteSizeLong() const PROTOBUF_FINAL;
bool MergePartialFromCodedStream(
::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
void SerializeWithCachedSizes(
::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
void DiscardUnknownFields();
int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
private:
void SharedCtor();
void SharedDtor();
void SetCachedSize(int size) const;
void InternalSwap(IntegerPolicyProto* other);
private:
inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
return NULL;
}
inline void* MaybeArenaPtr() const {
return NULL;
}
public:

::std::string GetTypeName() const PROTOBUF_FINAL;

// nested types ----------------------------------------------------

// accessors -------------------------------------------------------

// optional .enterprise_management.PolicyOptions policy_options = 1;
bool has_policy_options() const;
void clear_policy_options();
static const int kPolicyOptionsFieldNumber = 1;
const ::enterprise_management::PolicyOptions& policy_options() const;
::enterprise_management::PolicyOptions* mutable_policy_options();
::enterprise_management::PolicyOptions* release_policy_options();
void set_allocated_policy_options(::enterprise_management::PolicyOptions* policy_options);

// optional int64 value = 2;
bool has_value() const;
void clear_value();
static const int kValueFieldNumber = 2;
::google::protobuf::int64 value() const;
void set_value(::google::protobuf::int64 value);

// @@protoc_insertion_point(class_scope:enterprise_management.IntegerPolicyProto)
private:
void set_has_policy_options();
void clear_has_policy_options();
void set_has_value();
void clear_has_value();

::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
::google::protobuf::internal::HasBits<1> _has_bits_;
mutable int _cached_size_;
::enterprise_management::PolicyOptions* policy_options_;
::google::protobuf::int64 value_;
friend struct protobuf_cloud_5fpolicy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class POLICY_PROTO_EXPORT StringPolicyProto : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:enterprise_management.StringPolicyProto) */ {
public:
StringPolicyProto();
virtual ~StringPolicyProto();

StringPolicyProto(const StringPolicyProto& from);

inline StringPolicyProto& operator=(const StringPolicyProto& from) {
CopyFrom(from);
return *this;
}

inline const ::std::string& unknown_fields() const {
return _internal_metadata_.unknown_fields();
}

inline ::std::string* mutable_unknown_fields() {
return _internal_metadata_.mutable_unknown_fields();
}

static const StringPolicyProto& default_instance();

static inline const StringPolicyProto* internal_default_instance() {
return reinterpret_cast<const StringPolicyProto*>(
&_StringPolicyProto_default_instance_);
}
static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
4;

GOOGLE_ATTRIBUTE_NOINLINE void Swap(StringPolicyProto* other);

// implements Message ----------------------------------------------

inline StringPolicyProto* New() const PROTOBUF_FINAL { return New(NULL); }

StringPolicyProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
PROTOBUF_FINAL;
void CopyFrom(const StringPolicyProto& from);
void MergeFrom(const StringPolicyProto& from);
void Clear() PROTOBUF_FINAL;
bool IsInitialized() const PROTOBUF_FINAL;

size_t ByteSizeLong() const PROTOBUF_FINAL;
bool MergePartialFromCodedStream(
::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
void SerializeWithCachedSizes(
::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
void DiscardUnknownFields();
int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
private:
void SharedCtor();
void SharedDtor();
void SetCachedSize(int size) const;
void InternalSwap(StringPolicyProto* other);
private:
inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
return NULL;
}
inline void* MaybeArenaPtr() const {
return NULL;
}
public:

::std::string GetTypeName() const PROTOBUF_FINAL;

// nested types ----------------------------------------------------

// accessors -------------------------------------------------------

// optional string value = 2;
bool has_value() const;
void clear_value();
static const int kValueFieldNumber = 2;
const ::std::string& value() const;
void set_value(const ::std::string& value);
#if LANG_CXX11
void set_value(::std::string&& value);
#endif
void set_value(const char* value);
void set_value(const char* value, size_t size);
::std::string* mutable_value();
::std::string* release_value();
void set_allocated_value(::std::string* value);

// optional .enterprise_management.PolicyOptions policy_options = 1;
bool has_policy_options() const;
void clear_policy_options();
static const int kPolicyOptionsFieldNumber = 1;
const ::enterprise_management::PolicyOptions& policy_options() const;
::enterprise_management::PolicyOptions* mutable_policy_options();
::enterprise_management::PolicyOptions* release_policy_options();
void set_allocated_policy_options(::enterprise_management::PolicyOptions* policy_options);

// @@protoc_insertion_point(class_scope:enterprise_management.StringPolicyProto)
private:
void set_has_policy_options();
void clear_has_policy_options();
void set_has_value();
void clear_has_value();

::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
::google::protobuf::internal::HasBits<1> _has_bits_;
mutable int _cached_size_;
::google::protobuf::internal::ArenaStringPtr value_;
::enterprise_management::PolicyOptions* policy_options_;
friend struct protobuf_cloud_5fpolicy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class POLICY_PROTO_EXPORT StringListPolicyProto : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:enterprise_management.StringListPolicyProto) */ {
public:
StringListPolicyProto();
virtual ~StringListPolicyProto();

StringListPolicyProto(const StringListPolicyProto& from);

inline StringListPolicyProto& operator=(const StringListPolicyProto& from) {
CopyFrom(from);
return *this;
}

inline const ::std::string& unknown_fields() const {
return _internal_metadata_.unknown_fields();
}

inline ::std::string* mutable_unknown_fields() {
return _internal_metadata_.mutable_unknown_fields();
}

static const StringListPolicyProto& default_instance();

static inline const StringListPolicyProto* internal_default_instance() {
return reinterpret_cast<const StringListPolicyProto*>(
&_StringListPolicyProto_default_instance_);
}
static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
5;

GOOGLE_ATTRIBUTE_NOINLINE void Swap(StringListPolicyProto* other);

// implements Message ----------------------------------------------

inline StringListPolicyProto* New() const PROTOBUF_FINAL { return New(NULL); }

StringListPolicyProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
PROTOBUF_FINAL;
void CopyFrom(const StringListPolicyProto& from);
void MergeFrom(const StringListPolicyProto& from);
void Clear() PROTOBUF_FINAL;
bool IsInitialized() const PROTOBUF_FINAL;

size_t ByteSizeLong() const PROTOBUF_FINAL;
bool MergePartialFromCodedStream(
::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
void SerializeWithCachedSizes(
::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
void DiscardUnknownFields();
int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
private:
void SharedCtor();
void SharedDtor();
void SetCachedSize(int size) const;
void InternalSwap(StringListPolicyProto* other);
private:
inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
return NULL;
}
inline void* MaybeArenaPtr() const {
return NULL;
}
public:

::std::string GetTypeName() const PROTOBUF_FINAL;

// nested types ----------------------------------------------------

// accessors -------------------------------------------------------

// optional .enterprise_management.PolicyOptions policy_options = 1;
bool has_policy_options() const;
void clear_policy_options();
static const int kPolicyOptionsFieldNumber = 1;
const ::enterprise_management::PolicyOptions& policy_options() const;
::enterprise_management::PolicyOptions* mutable_policy_options();
::enterprise_management::PolicyOptions* release_policy_options();
void set_allocated_policy_options(::enterprise_management::PolicyOptions* policy_options);

// optional .enterprise_management.StringList value = 2;
bool has_value() const;
void clear_value();
static const int kValueFieldNumber = 2;
const ::enterprise_management::StringList& value() const;
::enterprise_management::StringList* mutable_value();
::enterprise_management::StringList* release_value();
void set_allocated_value(::enterprise_management::StringList* value);

// @@protoc_insertion_point(class_scope:enterprise_management.StringListPolicyProto)
private:
void set_has_policy_options();
void clear_has_policy_options();
void set_has_value();
void clear_has_value();

::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
::google::protobuf::internal::HasBits<1> _has_bits_;
mutable int _cached_size_;
::enterprise_management::PolicyOptions* policy_options_;
::enterprise_management::StringList* value_;
friend struct protobuf_cloud_5fpolicy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class POLICY_PROTO_EXPORT CloudPolicySettings : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:enterprise_management.CloudPolicySettings) */ {
public:
CloudPolicySettings();
virtual ~CloudPolicySettings();

CloudPolicySettings(const CloudPolicySettings& from);

inline CloudPolicySettings& operator=(const CloudPolicySettings& from) {
CopyFrom(from);
return *this;
}

inline const ::std::string& unknown_fields() const {
return _internal_metadata_.unknown_fields();
}

inline ::std::string* mutable_unknown_fields() {
return _internal_metadata_.mutable_unknown_fields();
}

static const CloudPolicySettings& default_instance();

static inline const CloudPolicySettings* internal_default_instance() {
return reinterpret_cast<const CloudPolicySettings*>(
&_CloudPolicySettings_default_instance_);
}
static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
6;

GOOGLE_ATTRIBUTE_NOINLINE void Swap(CloudPolicySettings* other);

// implements Message ----------------------------------------------

inline CloudPolicySettings* New() const PROTOBUF_FINAL { return New(NULL); }

CloudPolicySettings* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
PROTOBUF_FINAL;
void CopyFrom(const CloudPolicySettings& from);
void MergeFrom(const CloudPolicySettings& from);
void Clear() PROTOBUF_FINAL;
bool IsInitialized() const PROTOBUF_FINAL;

size_t ByteSizeLong() const PROTOBUF_FINAL;
bool MergePartialFromCodedStream(
::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
void SerializeWithCachedSizes(
::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
void DiscardUnknownFields();
int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
private:
void SharedCtor();
void SharedDtor();
void SetCachedSize(int size) const;
void InternalSwap(CloudPolicySettings* other);
private:
inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
return NULL;
}
inline void* MaybeArenaPtr() const {
return NULL;
}
public:

::std::string GetTypeName() const PROTOBUF_FINAL;

// nested types ----------------------------------------------------

// accessors -------------------------------------------------------

// optional .enterprise_management.StringPolicyProto HomepageLocation = 3;
bool has_homepagelocation() const;
void clear_homepagelocation();
static const int kHomepageLocationFieldNumber = 3;
const ::enterprise_management::StringPolicyProto& homepagelocation() const;
::enterprise_management::StringPolicyProto* mutable_homepagelocation();
::enterprise_management::StringPolicyProto* release_homepagelocation();
void set_allocated_homepagelocation(::enterprise_management::StringPolicyProto* homepagelocation);

// optional .enterprise_management.BooleanPolicyProto HomepageIsNewTabPage = 4;
bool has_homepageisnewtabpage() const;
void clear_homepageisnewtabpage();
static const int kHomepageIsNewTabPageFieldNumber = 4;
const ::enterprise_management::BooleanPolicyProto& homepageisnewtabpage() const;
::enterprise_management::BooleanPolicyProto* mutable_homepageisnewtabpage();
::enterprise_management::BooleanPolicyProto* release_homepageisnewtabpage();
void set_allocated_homepageisnewtabpage(::enterprise_management::BooleanPolicyProto* homepageisnewtabpage);

// optional .enterprise_management.BooleanPolicyProto DefaultBrowserSettingEnabled = 5;
bool has_defaultbrowsersettingenabled() const;
void clear_defaultbrowsersettingenabled();
static const int kDefaultBrowserSettingEnabledFieldNumber = 5;
const ::enterprise_management::BooleanPolicyProto& defaultbrowsersettingenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_defaultbrowsersettingenabled();
::enterprise_management::BooleanPolicyProto* release_defaultbrowsersettingenabled();
void set_allocated_defaultbrowsersettingenabled(::enterprise_management::BooleanPolicyProto* defaultbrowsersettingenabled);

// optional .enterprise_management.BooleanPolicyProto AlternateErrorPagesEnabled = 7;
bool has_alternateerrorpagesenabled() const;
void clear_alternateerrorpagesenabled();
static const int kAlternateErrorPagesEnabledFieldNumber = 7;
const ::enterprise_management::BooleanPolicyProto& alternateerrorpagesenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_alternateerrorpagesenabled();
::enterprise_management::BooleanPolicyProto* release_alternateerrorpagesenabled();
void set_allocated_alternateerrorpagesenabled(::enterprise_management::BooleanPolicyProto* alternateerrorpagesenabled);

// optional .enterprise_management.BooleanPolicyProto SearchSuggestEnabled = 8;
bool has_searchsuggestenabled() const;
void clear_searchsuggestenabled();
static const int kSearchSuggestEnabledFieldNumber = 8;
const ::enterprise_management::BooleanPolicyProto& searchsuggestenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_searchsuggestenabled();
::enterprise_management::BooleanPolicyProto* release_searchsuggestenabled();
void set_allocated_searchsuggestenabled(::enterprise_management::BooleanPolicyProto* searchsuggestenabled);

// optional .enterprise_management.BooleanPolicyProto JavascriptEnabled = 11;
bool has_javascriptenabled() const;
void clear_javascriptenabled();
static const int kJavascriptEnabledFieldNumber = 11;
const ::enterprise_management::BooleanPolicyProto& javascriptenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_javascriptenabled();
::enterprise_management::BooleanPolicyProto* release_javascriptenabled();
void set_allocated_javascriptenabled(::enterprise_management::BooleanPolicyProto* javascriptenabled);

// optional .enterprise_management.BooleanPolicyProto IncognitoEnabled = 12;
bool has_incognitoenabled() const;
void clear_incognitoenabled();
static const int kIncognitoEnabledFieldNumber = 12;
const ::enterprise_management::BooleanPolicyProto& incognitoenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_incognitoenabled();
::enterprise_management::BooleanPolicyProto* release_incognitoenabled();
void set_allocated_incognitoenabled(::enterprise_management::BooleanPolicyProto* incognitoenabled);

// optional .enterprise_management.BooleanPolicyProto SavingBrowserHistoryDisabled = 13;
bool has_savingbrowserhistorydisabled() const;
void clear_savingbrowserhistorydisabled();
static const int kSavingBrowserHistoryDisabledFieldNumber = 13;
const ::enterprise_management::BooleanPolicyProto& savingbrowserhistorydisabled() const;
::enterprise_management::BooleanPolicyProto* mutable_savingbrowserhistorydisabled();
::enterprise_management::BooleanPolicyProto* release_savingbrowserhistorydisabled();
void set_allocated_savingbrowserhistorydisabled(::enterprise_management::BooleanPolicyProto* savingbrowserhistorydisabled);

// optional .enterprise_management.BooleanPolicyProto PrintingEnabled = 14;
bool has_printingenabled() const;
void clear_printingenabled();
static const int kPrintingEnabledFieldNumber = 14;
const ::enterprise_management::BooleanPolicyProto& printingenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_printingenabled();
::enterprise_management::BooleanPolicyProto* release_printingenabled();
void set_allocated_printingenabled(::enterprise_management::BooleanPolicyProto* printingenabled);

// optional .enterprise_management.BooleanPolicyProto CloudPrintProxyEnabled = 15;
bool has_cloudprintproxyenabled() const;
void clear_cloudprintproxyenabled();
static const int kCloudPrintProxyEnabledFieldNumber = 15;
const ::enterprise_management::BooleanPolicyProto& cloudprintproxyenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_cloudprintproxyenabled();
::enterprise_management::BooleanPolicyProto* release_cloudprintproxyenabled();
void set_allocated_cloudprintproxyenabled(::enterprise_management::BooleanPolicyProto* cloudprintproxyenabled);

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingEnabled = 16;
bool has_safebrowsingenabled() const;
void clear_safebrowsingenabled();
static const int kSafeBrowsingEnabledFieldNumber = 16;
const ::enterprise_management::BooleanPolicyProto& safebrowsingenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_safebrowsingenabled();
::enterprise_management::BooleanPolicyProto* release_safebrowsingenabled();
void set_allocated_safebrowsingenabled(::enterprise_management::BooleanPolicyProto* safebrowsingenabled);

// optional .enterprise_management.BooleanPolicyProto MetricsReportingEnabled = 17;
bool has_metricsreportingenabled() const;
void clear_metricsreportingenabled();
static const int kMetricsReportingEnabledFieldNumber = 17;
const ::enterprise_management::BooleanPolicyProto& metricsreportingenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_metricsreportingenabled();
::enterprise_management::BooleanPolicyProto* release_metricsreportingenabled();
void set_allocated_metricsreportingenabled(::enterprise_management::BooleanPolicyProto* metricsreportingenabled);

// optional .enterprise_management.BooleanPolicyProto PasswordManagerEnabled = 18;
bool has_passwordmanagerenabled() const;
void clear_passwordmanagerenabled();
static const int kPasswordManagerEnabledFieldNumber = 18;
const ::enterprise_management::BooleanPolicyProto& passwordmanagerenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_passwordmanagerenabled();
::enterprise_management::BooleanPolicyProto* release_passwordmanagerenabled();
void set_allocated_passwordmanagerenabled(::enterprise_management::BooleanPolicyProto* passwordmanagerenabled);

// optional .enterprise_management.BooleanPolicyProto AutoFillEnabled = 20;
bool has_autofillenabled() const;
void clear_autofillenabled();
static const int kAutoFillEnabledFieldNumber = 20;
const ::enterprise_management::BooleanPolicyProto& autofillenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_autofillenabled();
::enterprise_management::BooleanPolicyProto* release_autofillenabled();
void set_allocated_autofillenabled(::enterprise_management::BooleanPolicyProto* autofillenabled);

// optional .enterprise_management.StringListPolicyProto DisabledPlugins = 21;
bool has_disabledplugins() const;
void clear_disabledplugins();
static const int kDisabledPluginsFieldNumber = 21;
const ::enterprise_management::StringListPolicyProto& disabledplugins() const;
::enterprise_management::StringListPolicyProto* mutable_disabledplugins();
::enterprise_management::StringListPolicyProto* release_disabledplugins();
void set_allocated_disabledplugins(::enterprise_management::StringListPolicyProto* disabledplugins);

// optional .enterprise_management.BooleanPolicyProto SyncDisabled = 22;
bool has_syncdisabled() const;
void clear_syncdisabled();
static const int kSyncDisabledFieldNumber = 22;
const ::enterprise_management::BooleanPolicyProto& syncdisabled() const;
::enterprise_management::BooleanPolicyProto* mutable_syncdisabled();
::enterprise_management::BooleanPolicyProto* release_syncdisabled();
void set_allocated_syncdisabled(::enterprise_management::BooleanPolicyProto* syncdisabled);

// optional .enterprise_management.StringPolicyProto ProxyMode = 23;
bool has_proxymode() const;
void clear_proxymode();
static const int kProxyModeFieldNumber = 23;
const ::enterprise_management::StringPolicyProto& proxymode() const;
::enterprise_management::StringPolicyProto* mutable_proxymode();
::enterprise_management::StringPolicyProto* release_proxymode();
void set_allocated_proxymode(::enterprise_management::StringPolicyProto* proxymode);

// optional .enterprise_management.IntegerPolicyProto ProxyServerMode = 24;
bool has_proxyservermode() const;
void clear_proxyservermode();
static const int kProxyServerModeFieldNumber = 24;
const ::enterprise_management::IntegerPolicyProto& proxyservermode() const;
::enterprise_management::IntegerPolicyProto* mutable_proxyservermode();
::enterprise_management::IntegerPolicyProto* release_proxyservermode();
void set_allocated_proxyservermode(::enterprise_management::IntegerPolicyProto* proxyservermode);

// optional .enterprise_management.StringPolicyProto ProxyServer = 25;
bool has_proxyserver() const;
void clear_proxyserver();
static const int kProxyServerFieldNumber = 25;
const ::enterprise_management::StringPolicyProto& proxyserver() const;
::enterprise_management::StringPolicyProto* mutable_proxyserver();
::enterprise_management::StringPolicyProto* release_proxyserver();
void set_allocated_proxyserver(::enterprise_management::StringPolicyProto* proxyserver);

// optional .enterprise_management.StringPolicyProto ProxyPacUrl = 26;
bool has_proxypacurl() const;
void clear_proxypacurl();
static const int kProxyPacUrlFieldNumber = 26;
const ::enterprise_management::StringPolicyProto& proxypacurl() const;
::enterprise_management::StringPolicyProto* mutable_proxypacurl();
::enterprise_management::StringPolicyProto* release_proxypacurl();
void set_allocated_proxypacurl(::enterprise_management::StringPolicyProto* proxypacurl);

// optional .enterprise_management.StringPolicyProto ProxyBypassList = 27;
bool has_proxybypasslist() const;
void clear_proxybypasslist();
static const int kProxyBypassListFieldNumber = 27;
const ::enterprise_management::StringPolicyProto& proxybypasslist() const;
::enterprise_management::StringPolicyProto* mutable_proxybypasslist();
::enterprise_management::StringPolicyProto* release_proxybypasslist();
void set_allocated_proxybypasslist(::enterprise_management::StringPolicyProto* proxybypasslist);

// optional .enterprise_management.StringPolicyProto AuthSchemes = 28;
bool has_authschemes() const;
void clear_authschemes();
static const int kAuthSchemesFieldNumber = 28;
const ::enterprise_management::StringPolicyProto& authschemes() const;
::enterprise_management::StringPolicyProto* mutable_authschemes();
::enterprise_management::StringPolicyProto* release_authschemes();
void set_allocated_authschemes(::enterprise_management::StringPolicyProto* authschemes);

// optional .enterprise_management.BooleanPolicyProto DisableAuthNegotiateCnameLookup = 29;
bool has_disableauthnegotiatecnamelookup() const;
void clear_disableauthnegotiatecnamelookup();
static const int kDisableAuthNegotiateCnameLookupFieldNumber = 29;
const ::enterprise_management::BooleanPolicyProto& disableauthnegotiatecnamelookup() const;
::enterprise_management::BooleanPolicyProto* mutable_disableauthnegotiatecnamelookup();
::enterprise_management::BooleanPolicyProto* release_disableauthnegotiatecnamelookup();
void set_allocated_disableauthnegotiatecnamelookup(::enterprise_management::BooleanPolicyProto* disableauthnegotiatecnamelookup);

// optional .enterprise_management.BooleanPolicyProto EnableAuthNegotiatePort = 30;
bool has_enableauthnegotiateport() const;
void clear_enableauthnegotiateport();
static const int kEnableAuthNegotiatePortFieldNumber = 30;
const ::enterprise_management::BooleanPolicyProto& enableauthnegotiateport() const;
::enterprise_management::BooleanPolicyProto* mutable_enableauthnegotiateport();
::enterprise_management::BooleanPolicyProto* release_enableauthnegotiateport();
void set_allocated_enableauthnegotiateport(::enterprise_management::BooleanPolicyProto* enableauthnegotiateport);

// optional .enterprise_management.StringPolicyProto AuthServerWhitelist = 31;
bool has_authserverwhitelist() const;
void clear_authserverwhitelist();
static const int kAuthServerWhitelistFieldNumber = 31;
const ::enterprise_management::StringPolicyProto& authserverwhitelist() const;
::enterprise_management::StringPolicyProto* mutable_authserverwhitelist();
::enterprise_management::StringPolicyProto* release_authserverwhitelist();
void set_allocated_authserverwhitelist(::enterprise_management::StringPolicyProto* authserverwhitelist);

// optional .enterprise_management.StringPolicyProto AuthNegotiateDelegateWhitelist = 32;
bool has_authnegotiatedelegatewhitelist() const;
void clear_authnegotiatedelegatewhitelist();
static const int kAuthNegotiateDelegateWhitelistFieldNumber = 32;
const ::enterprise_management::StringPolicyProto& authnegotiatedelegatewhitelist() const;
::enterprise_management::StringPolicyProto* mutable_authnegotiatedelegatewhitelist();
::enterprise_management::StringPolicyProto* release_authnegotiatedelegatewhitelist();
void set_allocated_authnegotiatedelegatewhitelist(::enterprise_management::StringPolicyProto* authnegotiatedelegatewhitelist);

// optional .enterprise_management.StringPolicyProto GSSAPILibraryName = 33;
bool has_gssapilibraryname() const;
void clear_gssapilibraryname();
static const int kGSSAPILibraryNameFieldNumber = 33;
const ::enterprise_management::StringPolicyProto& gssapilibraryname() const;
::enterprise_management::StringPolicyProto* mutable_gssapilibraryname();
::enterprise_management::StringPolicyProto* release_gssapilibraryname();
void set_allocated_gssapilibraryname(::enterprise_management::StringPolicyProto* gssapilibraryname);

// optional .enterprise_management.StringListPolicyProto ExtensionInstallBlacklist = 34;
bool has_extensioninstallblacklist() const;
void clear_extensioninstallblacklist();
static const int kExtensionInstallBlacklistFieldNumber = 34;
const ::enterprise_management::StringListPolicyProto& extensioninstallblacklist() const;
::enterprise_management::StringListPolicyProto* mutable_extensioninstallblacklist();
::enterprise_management::StringListPolicyProto* release_extensioninstallblacklist();
void set_allocated_extensioninstallblacklist(::enterprise_management::StringListPolicyProto* extensioninstallblacklist);

// optional .enterprise_management.StringListPolicyProto ExtensionInstallWhitelist = 35;
bool has_extensioninstallwhitelist() const;
void clear_extensioninstallwhitelist();
static const int kExtensionInstallWhitelistFieldNumber = 35;
const ::enterprise_management::StringListPolicyProto& extensioninstallwhitelist() const;
::enterprise_management::StringListPolicyProto* mutable_extensioninstallwhitelist();
::enterprise_management::StringListPolicyProto* release_extensioninstallwhitelist();
void set_allocated_extensioninstallwhitelist(::enterprise_management::StringListPolicyProto* extensioninstallwhitelist);

// optional .enterprise_management.StringListPolicyProto ExtensionInstallForcelist = 36;
bool has_extensioninstallforcelist() const;
void clear_extensioninstallforcelist();
static const int kExtensionInstallForcelistFieldNumber = 36;
const ::enterprise_management::StringListPolicyProto& extensioninstallforcelist() const;
::enterprise_management::StringListPolicyProto* mutable_extensioninstallforcelist();
::enterprise_management::StringListPolicyProto* release_extensioninstallforcelist();
void set_allocated_extensioninstallforcelist(::enterprise_management::StringListPolicyProto* extensioninstallforcelist);

// optional .enterprise_management.BooleanPolicyProto ShowHomeButton = 37;
bool has_showhomebutton() const;
void clear_showhomebutton();
static const int kShowHomeButtonFieldNumber = 37;
const ::enterprise_management::BooleanPolicyProto& showhomebutton() const;
::enterprise_management::BooleanPolicyProto* mutable_showhomebutton();
::enterprise_management::BooleanPolicyProto* release_showhomebutton();
void set_allocated_showhomebutton(::enterprise_management::BooleanPolicyProto* showhomebutton);

// optional .enterprise_management.BooleanPolicyProto DeveloperToolsDisabled = 38;
bool has_developertoolsdisabled() const;
void clear_developertoolsdisabled();
static const int kDeveloperToolsDisabledFieldNumber = 38;
const ::enterprise_management::BooleanPolicyProto& developertoolsdisabled() const;
::enterprise_management::BooleanPolicyProto* mutable_developertoolsdisabled();
::enterprise_management::BooleanPolicyProto* release_developertoolsdisabled();
void set_allocated_developertoolsdisabled(::enterprise_management::BooleanPolicyProto* developertoolsdisabled);

// optional .enterprise_management.IntegerPolicyProto RestoreOnStartup = 39;
bool has_restoreonstartup() const;
void clear_restoreonstartup();
static const int kRestoreOnStartupFieldNumber = 39;
const ::enterprise_management::IntegerPolicyProto& restoreonstartup() const;
::enterprise_management::IntegerPolicyProto* mutable_restoreonstartup();
::enterprise_management::IntegerPolicyProto* release_restoreonstartup();
void set_allocated_restoreonstartup(::enterprise_management::IntegerPolicyProto* restoreonstartup);

// optional .enterprise_management.StringListPolicyProto RestoreOnStartupURLs = 40;
bool has_restoreonstartupurls() const;
void clear_restoreonstartupurls();
static const int kRestoreOnStartupURLsFieldNumber = 40;
const ::enterprise_management::StringListPolicyProto& restoreonstartupurls() const;
::enterprise_management::StringListPolicyProto* mutable_restoreonstartupurls();
::enterprise_management::StringListPolicyProto* release_restoreonstartupurls();
void set_allocated_restoreonstartupurls(::enterprise_management::StringListPolicyProto* restoreonstartupurls);

// optional .enterprise_management.BooleanPolicyProto BlockThirdPartyCookies = 41;
bool has_blockthirdpartycookies() const;
void clear_blockthirdpartycookies();
static const int kBlockThirdPartyCookiesFieldNumber = 41;
const ::enterprise_management::BooleanPolicyProto& blockthirdpartycookies() const;
::enterprise_management::BooleanPolicyProto* mutable_blockthirdpartycookies();
::enterprise_management::BooleanPolicyProto* release_blockthirdpartycookies();
void set_allocated_blockthirdpartycookies(::enterprise_management::BooleanPolicyProto* blockthirdpartycookies);

// optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderEnabled = 42;
bool has_defaultsearchproviderenabled() const;
void clear_defaultsearchproviderenabled();
static const int kDefaultSearchProviderEnabledFieldNumber = 42;
const ::enterprise_management::BooleanPolicyProto& defaultsearchproviderenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_defaultsearchproviderenabled();
::enterprise_management::BooleanPolicyProto* release_defaultsearchproviderenabled();
void set_allocated_defaultsearchproviderenabled(::enterprise_management::BooleanPolicyProto* defaultsearchproviderenabled);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderName = 43;
bool has_defaultsearchprovidername() const;
void clear_defaultsearchprovidername();
static const int kDefaultSearchProviderNameFieldNumber = 43;
const ::enterprise_management::StringPolicyProto& defaultsearchprovidername() const;
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidername();
::enterprise_management::StringPolicyProto* release_defaultsearchprovidername();
void set_allocated_defaultsearchprovidername(::enterprise_management::StringPolicyProto* defaultsearchprovidername);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderKeyword = 44;
bool has_defaultsearchproviderkeyword() const;
void clear_defaultsearchproviderkeyword();
static const int kDefaultSearchProviderKeywordFieldNumber = 44;
const ::enterprise_management::StringPolicyProto& defaultsearchproviderkeyword() const;
::enterprise_management::StringPolicyProto* mutable_defaultsearchproviderkeyword();
::enterprise_management::StringPolicyProto* release_defaultsearchproviderkeyword();
void set_allocated_defaultsearchproviderkeyword(::enterprise_management::StringPolicyProto* defaultsearchproviderkeyword);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURL = 45;
bool has_defaultsearchprovidersearchurl() const;
void clear_defaultsearchprovidersearchurl();
static const int kDefaultSearchProviderSearchURLFieldNumber = 45;
const ::enterprise_management::StringPolicyProto& defaultsearchprovidersearchurl() const;
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidersearchurl();
::enterprise_management::StringPolicyProto* release_defaultsearchprovidersearchurl();
void set_allocated_defaultsearchprovidersearchurl(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurl);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURL = 46;
bool has_defaultsearchprovidersuggesturl() const;
void clear_defaultsearchprovidersuggesturl();
static const int kDefaultSearchProviderSuggestURLFieldNumber = 46;
const ::enterprise_management::StringPolicyProto& defaultsearchprovidersuggesturl() const;
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidersuggesturl();
::enterprise_management::StringPolicyProto* release_defaultsearchprovidersuggesturl();
void set_allocated_defaultsearchprovidersuggesturl(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturl);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderIconURL = 48;
bool has_defaultsearchprovidericonurl() const;
void clear_defaultsearchprovidericonurl();
static const int kDefaultSearchProviderIconURLFieldNumber = 48;
const ::enterprise_management::StringPolicyProto& defaultsearchprovidericonurl() const;
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidericonurl();
::enterprise_management::StringPolicyProto* release_defaultsearchprovidericonurl();
void set_allocated_defaultsearchprovidericonurl(::enterprise_management::StringPolicyProto* defaultsearchprovidericonurl);

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderEncodings = 49;
bool has_defaultsearchproviderencodings() const;
void clear_defaultsearchproviderencodings();
static const int kDefaultSearchProviderEncodingsFieldNumber = 49;
const ::enterprise_management::StringListPolicyProto& defaultsearchproviderencodings() const;
::enterprise_management::StringListPolicyProto* mutable_defaultsearchproviderencodings();
::enterprise_management::StringListPolicyProto* release_defaultsearchproviderencodings();
void set_allocated_defaultsearchproviderencodings(::enterprise_management::StringListPolicyProto* defaultsearchproviderencodings);

// optional .enterprise_management.IntegerPolicyProto DefaultCookiesSetting = 50;
bool has_defaultcookiessetting() const;
void clear_defaultcookiessetting();
static const int kDefaultCookiesSettingFieldNumber = 50;
const ::enterprise_management::IntegerPolicyProto& defaultcookiessetting() const;
::enterprise_management::IntegerPolicyProto* mutable_defaultcookiessetting();
::enterprise_management::IntegerPolicyProto* release_defaultcookiessetting();
void set_allocated_defaultcookiessetting(::enterprise_management::IntegerPolicyProto* defaultcookiessetting);

// optional .enterprise_management.IntegerPolicyProto DefaultImagesSetting = 51;
bool has_defaultimagessetting() const;
void clear_defaultimagessetting();
static const int kDefaultImagesSettingFieldNumber = 51;
const ::enterprise_management::IntegerPolicyProto& defaultimagessetting() const;
::enterprise_management::IntegerPolicyProto* mutable_defaultimagessetting();
::enterprise_management::IntegerPolicyProto* release_defaultimagessetting();
void set_allocated_defaultimagessetting(::enterprise_management::IntegerPolicyProto* defaultimagessetting);

// optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptSetting = 52;
bool has_defaultjavascriptsetting() const;
void clear_defaultjavascriptsetting();
static const int kDefaultJavaScriptSettingFieldNumber = 52;
const ::enterprise_management::IntegerPolicyProto& defaultjavascriptsetting() const;
::enterprise_management::IntegerPolicyProto* mutable_defaultjavascriptsetting();
::enterprise_management::IntegerPolicyProto* release_defaultjavascriptsetting();
void set_allocated_defaultjavascriptsetting(::enterprise_management::IntegerPolicyProto* defaultjavascriptsetting);

// optional .enterprise_management.IntegerPolicyProto DefaultPluginsSetting = 53;
bool has_defaultpluginssetting() const;
void clear_defaultpluginssetting();
static const int kDefaultPluginsSettingFieldNumber = 53;
const ::enterprise_management::IntegerPolicyProto& defaultpluginssetting() const;
::enterprise_management::IntegerPolicyProto* mutable_defaultpluginssetting();
::enterprise_management::IntegerPolicyProto* release_defaultpluginssetting();
void set_allocated_defaultpluginssetting(::enterprise_management::IntegerPolicyProto* defaultpluginssetting);

// optional .enterprise_management.IntegerPolicyProto DefaultPopupsSetting = 54;
bool has_defaultpopupssetting() const;
void clear_defaultpopupssetting();
static const int kDefaultPopupsSettingFieldNumber = 54;
const ::enterprise_management::IntegerPolicyProto& defaultpopupssetting() const;
::enterprise_management::IntegerPolicyProto* mutable_defaultpopupssetting();
::enterprise_management::IntegerPolicyProto* release_defaultpopupssetting();
void set_allocated_defaultpopupssetting(::enterprise_management::IntegerPolicyProto* defaultpopupssetting);

// optional .enterprise_management.IntegerPolicyProto DefaultNotificationsSetting = 55;
bool has_defaultnotificationssetting() const;
void clear_defaultnotificationssetting();
static const int kDefaultNotificationsSettingFieldNumber = 55;
const ::enterprise_management::IntegerPolicyProto& defaultnotificationssetting() const;
::enterprise_management::IntegerPolicyProto* mutable_defaultnotificationssetting();
::enterprise_management::IntegerPolicyProto* release_defaultnotificationssetting();
void set_allocated_defaultnotificationssetting(::enterprise_management::IntegerPolicyProto* defaultnotificationssetting);

// optional .enterprise_management.IntegerPolicyProto DefaultGeolocationSetting = 56;
bool has_defaultgeolocationsetting() const;
void clear_defaultgeolocationsetting();
static const int kDefaultGeolocationSettingFieldNumber = 56;
const ::enterprise_management::IntegerPolicyProto& defaultgeolocationsetting() const;
::enterprise_management::IntegerPolicyProto* mutable_defaultgeolocationsetting();
::enterprise_management::IntegerPolicyProto* release_defaultgeolocationsetting();
void set_allocated_defaultgeolocationsetting(::enterprise_management::IntegerPolicyProto* defaultgeolocationsetting);

// optional .enterprise_management.BooleanPolicyProto Disable3DAPIs = 57;
bool has_disable3dapis() const;
void clear_disable3dapis();
static const int kDisable3DAPIsFieldNumber = 57;
const ::enterprise_management::BooleanPolicyProto& disable3dapis() const;
::enterprise_management::BooleanPolicyProto* mutable_disable3dapis();
::enterprise_management::BooleanPolicyProto* release_disable3dapis();
void set_allocated_disable3dapis(::enterprise_management::BooleanPolicyProto* disable3dapis);

// optional .enterprise_management.StringPolicyProto DownloadDirectory = 66;
bool has_downloaddirectory() const;
void clear_downloaddirectory();
static const int kDownloadDirectoryFieldNumber = 66;
const ::enterprise_management::StringPolicyProto& downloaddirectory() const;
::enterprise_management::StringPolicyProto* mutable_downloaddirectory();
::enterprise_management::StringPolicyProto* release_downloaddirectory();
void set_allocated_downloaddirectory(::enterprise_management::StringPolicyProto* downloaddirectory);

// optional .enterprise_management.StringListPolicyProto CookiesBlockedForUrls = 69;
bool has_cookiesblockedforurls() const;
void clear_cookiesblockedforurls();
static const int kCookiesBlockedForUrlsFieldNumber = 69;
const ::enterprise_management::StringListPolicyProto& cookiesblockedforurls() const;
::enterprise_management::StringListPolicyProto* mutable_cookiesblockedforurls();
::enterprise_management::StringListPolicyProto* release_cookiesblockedforurls();
void set_allocated_cookiesblockedforurls(::enterprise_management::StringListPolicyProto* cookiesblockedforurls);

// optional .enterprise_management.StringListPolicyProto CookiesSessionOnlyForUrls = 70;
bool has_cookiessessiononlyforurls() const;
void clear_cookiessessiononlyforurls();
static const int kCookiesSessionOnlyForUrlsFieldNumber = 70;
const ::enterprise_management::StringListPolicyProto& cookiessessiononlyforurls() const;
::enterprise_management::StringListPolicyProto* mutable_cookiessessiononlyforurls();
::enterprise_management::StringListPolicyProto* release_cookiessessiononlyforurls();
void set_allocated_cookiessessiononlyforurls(::enterprise_management::StringListPolicyProto* cookiessessiononlyforurls);

// optional .enterprise_management.StringListPolicyProto ImagesAllowedForUrls = 71;
bool has_imagesallowedforurls() const;
void clear_imagesallowedforurls();
static const int kImagesAllowedForUrlsFieldNumber = 71;
const ::enterprise_management::StringListPolicyProto& imagesallowedforurls() const;
::enterprise_management::StringListPolicyProto* mutable_imagesallowedforurls();
::enterprise_management::StringListPolicyProto* release_imagesallowedforurls();
void set_allocated_imagesallowedforurls(::enterprise_management::StringListPolicyProto* imagesallowedforurls);

// optional .enterprise_management.StringListPolicyProto ImagesBlockedForUrls = 72;
bool has_imagesblockedforurls() const;
void clear_imagesblockedforurls();
static const int kImagesBlockedForUrlsFieldNumber = 72;
const ::enterprise_management::StringListPolicyProto& imagesblockedforurls() const;
::enterprise_management::StringListPolicyProto* mutable_imagesblockedforurls();
::enterprise_management::StringListPolicyProto* release_imagesblockedforurls();
void set_allocated_imagesblockedforurls(::enterprise_management::StringListPolicyProto* imagesblockedforurls);

// optional .enterprise_management.StringListPolicyProto JavaScriptAllowedForUrls = 73;
bool has_javascriptallowedforurls() const;
void clear_javascriptallowedforurls();
static const int kJavaScriptAllowedForUrlsFieldNumber = 73;
const ::enterprise_management::StringListPolicyProto& javascriptallowedforurls() const;
::enterprise_management::StringListPolicyProto* mutable_javascriptallowedforurls();
::enterprise_management::StringListPolicyProto* release_javascriptallowedforurls();
void set_allocated_javascriptallowedforurls(::enterprise_management::StringListPolicyProto* javascriptallowedforurls);

// optional .enterprise_management.StringListPolicyProto JavaScriptBlockedForUrls = 74;
bool has_javascriptblockedforurls() const;
void clear_javascriptblockedforurls();
static const int kJavaScriptBlockedForUrlsFieldNumber = 74;
const ::enterprise_management::StringListPolicyProto& javascriptblockedforurls() const;
::enterprise_management::StringListPolicyProto* mutable_javascriptblockedforurls();
::enterprise_management::StringListPolicyProto* release_javascriptblockedforurls();
void set_allocated_javascriptblockedforurls(::enterprise_management::StringListPolicyProto* javascriptblockedforurls);

// optional .enterprise_management.StringListPolicyProto PluginsAllowedForUrls = 75;
bool has_pluginsallowedforurls() const;
void clear_pluginsallowedforurls();
static const int kPluginsAllowedForUrlsFieldNumber = 75;
const ::enterprise_management::StringListPolicyProto& pluginsallowedforurls() const;
::enterprise_management::StringListPolicyProto* mutable_pluginsallowedforurls();
::enterprise_management::StringListPolicyProto* release_pluginsallowedforurls();
void set_allocated_pluginsallowedforurls(::enterprise_management::StringListPolicyProto* pluginsallowedforurls);

// optional .enterprise_management.StringListPolicyProto PluginsBlockedForUrls = 76;
bool has_pluginsblockedforurls() const;
void clear_pluginsblockedforurls();
static const int kPluginsBlockedForUrlsFieldNumber = 76;
const ::enterprise_management::StringListPolicyProto& pluginsblockedforurls() const;
::enterprise_management::StringListPolicyProto* mutable_pluginsblockedforurls();
::enterprise_management::StringListPolicyProto* release_pluginsblockedforurls();
void set_allocated_pluginsblockedforurls(::enterprise_management::StringListPolicyProto* pluginsblockedforurls);

// optional .enterprise_management.StringListPolicyProto PopupsAllowedForUrls = 77;
bool has_popupsallowedforurls() const;
void clear_popupsallowedforurls();
static const int kPopupsAllowedForUrlsFieldNumber = 77;
const ::enterprise_management::StringListPolicyProto& popupsallowedforurls() const;
::enterprise_management::StringListPolicyProto* mutable_popupsallowedforurls();
::enterprise_management::StringListPolicyProto* release_popupsallowedforurls();
void set_allocated_popupsallowedforurls(::enterprise_management::StringListPolicyProto* popupsallowedforurls);

// optional .enterprise_management.StringListPolicyProto PopupsBlockedForUrls = 78;
bool has_popupsblockedforurls() const;
void clear_popupsblockedforurls();
static const int kPopupsBlockedForUrlsFieldNumber = 78;
const ::enterprise_management::StringListPolicyProto& popupsblockedforurls() const;
::enterprise_management::StringListPolicyProto* mutable_popupsblockedforurls();
::enterprise_management::StringListPolicyProto* release_popupsblockedforurls();
void set_allocated_popupsblockedforurls(::enterprise_management::StringListPolicyProto* popupsblockedforurls);

// optional .enterprise_management.StringListPolicyProto CookiesAllowedForUrls = 79;
bool has_cookiesallowedforurls() const;
void clear_cookiesallowedforurls();
static const int kCookiesAllowedForUrlsFieldNumber = 79;
const ::enterprise_management::StringListPolicyProto& cookiesallowedforurls() const;
::enterprise_management::StringListPolicyProto* mutable_cookiesallowedforurls();
::enterprise_management::StringListPolicyProto* release_cookiesallowedforurls();
void set_allocated_cookiesallowedforurls(::enterprise_management::StringListPolicyProto* cookiesallowedforurls);

// optional .enterprise_management.StringListPolicyProto EnabledPlugins = 80;
bool has_enabledplugins() const;
void clear_enabledplugins();
static const int kEnabledPluginsFieldNumber = 80;
const ::enterprise_management::StringListPolicyProto& enabledplugins() const;
::enterprise_management::StringListPolicyProto* mutable_enabledplugins();
::enterprise_management::StringListPolicyProto* release_enabledplugins();
void set_allocated_enabledplugins(::enterprise_management::StringListPolicyProto* enabledplugins);

// optional .enterprise_management.StringListPolicyProto DisabledPluginsExceptions = 81;
bool has_disabledpluginsexceptions() const;
void clear_disabledpluginsexceptions();
static const int kDisabledPluginsExceptionsFieldNumber = 81;
const ::enterprise_management::StringListPolicyProto& disabledpluginsexceptions() const;
::enterprise_management::StringListPolicyProto* mutable_disabledpluginsexceptions();
::enterprise_management::StringListPolicyProto* release_disabledpluginsexceptions();
void set_allocated_disabledpluginsexceptions(::enterprise_management::StringListPolicyProto* disabledpluginsexceptions);

// optional .enterprise_management.BooleanPolicyProto TranslateEnabled = 82;
bool has_translateenabled() const;
void clear_translateenabled();
static const int kTranslateEnabledFieldNumber = 82;
const ::enterprise_management::BooleanPolicyProto& translateenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_translateenabled();
::enterprise_management::BooleanPolicyProto* release_translateenabled();
void set_allocated_translateenabled(::enterprise_management::BooleanPolicyProto* translateenabled);

// optional .enterprise_management.BooleanPolicyProto AllowOutdatedPlugins = 83;
bool has_allowoutdatedplugins() const;
void clear_allowoutdatedplugins();
static const int kAllowOutdatedPluginsFieldNumber = 83;
const ::enterprise_management::BooleanPolicyProto& allowoutdatedplugins() const;
::enterprise_management::BooleanPolicyProto* mutable_allowoutdatedplugins();
::enterprise_management::BooleanPolicyProto* release_allowoutdatedplugins();
void set_allocated_allowoutdatedplugins(::enterprise_management::BooleanPolicyProto* allowoutdatedplugins);

// optional .enterprise_management.BooleanPolicyProto BookmarkBarEnabled = 84;
bool has_bookmarkbarenabled() const;
void clear_bookmarkbarenabled();
static const int kBookmarkBarEnabledFieldNumber = 84;
const ::enterprise_management::BooleanPolicyProto& bookmarkbarenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_bookmarkbarenabled();
::enterprise_management::BooleanPolicyProto* release_bookmarkbarenabled();
void set_allocated_bookmarkbarenabled(::enterprise_management::BooleanPolicyProto* bookmarkbarenabled);

// optional .enterprise_management.BooleanPolicyProto EditBookmarksEnabled = 85;
bool has_editbookmarksenabled() const;
void clear_editbookmarksenabled();
static const int kEditBookmarksEnabledFieldNumber = 85;
const ::enterprise_management::BooleanPolicyProto& editbookmarksenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_editbookmarksenabled();
::enterprise_management::BooleanPolicyProto* release_editbookmarksenabled();
void set_allocated_editbookmarksenabled(::enterprise_management::BooleanPolicyProto* editbookmarksenabled);

// optional .enterprise_management.BooleanPolicyProto AllowFileSelectionDialogs = 86;
bool has_allowfileselectiondialogs() const;
void clear_allowfileselectiondialogs();
static const int kAllowFileSelectionDialogsFieldNumber = 86;
const ::enterprise_management::BooleanPolicyProto& allowfileselectiondialogs() const;
::enterprise_management::BooleanPolicyProto* mutable_allowfileselectiondialogs();
::enterprise_management::BooleanPolicyProto* release_allowfileselectiondialogs();
void set_allocated_allowfileselectiondialogs(::enterprise_management::BooleanPolicyProto* allowfileselectiondialogs);

// optional .enterprise_management.StringListPolicyProto DisabledSchemes = 87;
bool has_disabledschemes() const;
void clear_disabledschemes();
static const int kDisabledSchemesFieldNumber = 87;
const ::enterprise_management::StringListPolicyProto& disabledschemes() const;
::enterprise_management::StringListPolicyProto* mutable_disabledschemes();
::enterprise_management::StringListPolicyProto* release_disabledschemes();
void set_allocated_disabledschemes(::enterprise_management::StringListPolicyProto* disabledschemes);

// optional .enterprise_management.StringPolicyProto DiskCacheDir = 90;
bool has_diskcachedir() const;
void clear_diskcachedir();
static const int kDiskCacheDirFieldNumber = 90;
const ::enterprise_management::StringPolicyProto& diskcachedir() const;
::enterprise_management::StringPolicyProto* mutable_diskcachedir();
::enterprise_management::StringPolicyProto* release_diskcachedir();
void set_allocated_diskcachedir(::enterprise_management::StringPolicyProto* diskcachedir);

// optional .enterprise_management.BooleanPolicyProto AllowCrossOriginAuthPrompt = 91;
bool has_allowcrossoriginauthprompt() const;
void clear_allowcrossoriginauthprompt();
static const int kAllowCrossOriginAuthPromptFieldNumber = 91;
const ::enterprise_management::BooleanPolicyProto& allowcrossoriginauthprompt() const;
::enterprise_management::BooleanPolicyProto* mutable_allowcrossoriginauthprompt();
::enterprise_management::BooleanPolicyProto* release_allowcrossoriginauthprompt();
void set_allocated_allowcrossoriginauthprompt(::enterprise_management::BooleanPolicyProto* allowcrossoriginauthprompt);

// optional .enterprise_management.IntegerPolicyProto MaxConnectionsPerProxy = 94;
bool has_maxconnectionsperproxy() const;
void clear_maxconnectionsperproxy();
static const int kMaxConnectionsPerProxyFieldNumber = 94;
const ::enterprise_management::IntegerPolicyProto& maxconnectionsperproxy() const;
::enterprise_management::IntegerPolicyProto* mutable_maxconnectionsperproxy();
::enterprise_management::IntegerPolicyProto* release_maxconnectionsperproxy();
void set_allocated_maxconnectionsperproxy(::enterprise_management::IntegerPolicyProto* maxconnectionsperproxy);

// optional .enterprise_management.IntegerPolicyProto IncognitoModeAvailability = 95;
bool has_incognitomodeavailability() const;
void clear_incognitomodeavailability();
static const int kIncognitoModeAvailabilityFieldNumber = 95;
const ::enterprise_management::IntegerPolicyProto& incognitomodeavailability() const;
::enterprise_management::IntegerPolicyProto* mutable_incognitomodeavailability();
::enterprise_management::IntegerPolicyProto* release_incognitomodeavailability();
void set_allocated_incognitomodeavailability(::enterprise_management::IntegerPolicyProto* incognitomodeavailability);

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostFirewallTraversal = 97;
bool has_remoteaccesshostfirewalltraversal() const;
void clear_remoteaccesshostfirewalltraversal();
static const int kRemoteAccessHostFirewallTraversalFieldNumber = 97;
const ::enterprise_management::BooleanPolicyProto& remoteaccesshostfirewalltraversal() const;
::enterprise_management::BooleanPolicyProto* mutable_remoteaccesshostfirewalltraversal();
::enterprise_management::BooleanPolicyProto* release_remoteaccesshostfirewalltraversal();
void set_allocated_remoteaccesshostfirewalltraversal(::enterprise_management::BooleanPolicyProto* remoteaccesshostfirewalltraversal);

// optional .enterprise_management.BooleanPolicyProto ImportBookmarks = 99;
bool has_importbookmarks() const;
void clear_importbookmarks();
static const int kImportBookmarksFieldNumber = 99;
const ::enterprise_management::BooleanPolicyProto& importbookmarks() const;
::enterprise_management::BooleanPolicyProto* mutable_importbookmarks();
::enterprise_management::BooleanPolicyProto* release_importbookmarks();
void set_allocated_importbookmarks(::enterprise_management::BooleanPolicyProto* importbookmarks);

// optional .enterprise_management.BooleanPolicyProto ImportHistory = 100;
bool has_importhistory() const;
void clear_importhistory();
static const int kImportHistoryFieldNumber = 100;
const ::enterprise_management::BooleanPolicyProto& importhistory() const;
::enterprise_management::BooleanPolicyProto* mutable_importhistory();
::enterprise_management::BooleanPolicyProto* release_importhistory();
void set_allocated_importhistory(::enterprise_management::BooleanPolicyProto* importhistory);

// optional .enterprise_management.BooleanPolicyProto ImportHomepage = 101;
bool has_importhomepage() const;
void clear_importhomepage();
static const int kImportHomepageFieldNumber = 101;
const ::enterprise_management::BooleanPolicyProto& importhomepage() const;
::enterprise_management::BooleanPolicyProto* mutable_importhomepage();
::enterprise_management::BooleanPolicyProto* release_importhomepage();
void set_allocated_importhomepage(::enterprise_management::BooleanPolicyProto* importhomepage);

// optional .enterprise_management.BooleanPolicyProto ImportSearchEngine = 102;
bool has_importsearchengine() const;
void clear_importsearchengine();
static const int kImportSearchEngineFieldNumber = 102;
const ::enterprise_management::BooleanPolicyProto& importsearchengine() const;
::enterprise_management::BooleanPolicyProto* mutable_importsearchengine();
::enterprise_management::BooleanPolicyProto* release_importsearchengine();
void set_allocated_importsearchengine(::enterprise_management::BooleanPolicyProto* importsearchengine);

// optional .enterprise_management.BooleanPolicyProto ImportSavedPasswords = 103;
bool has_importsavedpasswords() const;
void clear_importsavedpasswords();
static const int kImportSavedPasswordsFieldNumber = 103;
const ::enterprise_management::BooleanPolicyProto& importsavedpasswords() const;
::enterprise_management::BooleanPolicyProto* mutable_importsavedpasswords();
::enterprise_management::BooleanPolicyProto* release_importsavedpasswords();
void set_allocated_importsavedpasswords(::enterprise_management::BooleanPolicyProto* importsavedpasswords);

// optional .enterprise_management.StringListPolicyProto AutoSelectCertificateForUrls = 104;
bool has_autoselectcertificateforurls() const;
void clear_autoselectcertificateforurls();
static const int kAutoSelectCertificateForUrlsFieldNumber = 104;
const ::enterprise_management::StringListPolicyProto& autoselectcertificateforurls() const;
::enterprise_management::StringListPolicyProto* mutable_autoselectcertificateforurls();
::enterprise_management::StringListPolicyProto* release_autoselectcertificateforurls();
void set_allocated_autoselectcertificateforurls(::enterprise_management::StringListPolicyProto* autoselectcertificateforurls);

// optional .enterprise_management.StringListPolicyProto URLBlacklist = 105;
bool has_urlblacklist() const;
void clear_urlblacklist();
static const int kURLBlacklistFieldNumber = 105;
const ::enterprise_management::StringListPolicyProto& urlblacklist() const;
::enterprise_management::StringListPolicyProto* mutable_urlblacklist();
::enterprise_management::StringListPolicyProto* release_urlblacklist();
void set_allocated_urlblacklist(::enterprise_management::StringListPolicyProto* urlblacklist);

// optional .enterprise_management.StringListPolicyProto URLWhitelist = 106;
bool has_urlwhitelist() const;
void clear_urlwhitelist();
static const int kURLWhitelistFieldNumber = 106;
const ::enterprise_management::StringListPolicyProto& urlwhitelist() const;
::enterprise_management::StringListPolicyProto* mutable_urlwhitelist();
::enterprise_management::StringListPolicyProto* release_urlwhitelist();
void set_allocated_urlwhitelist(::enterprise_management::StringListPolicyProto* urlwhitelist);

// optional .enterprise_management.StringListPolicyProto NotificationsAllowedForUrls = 107;
bool has_notificationsallowedforurls() const;
void clear_notificationsallowedforurls();
static const int kNotificationsAllowedForUrlsFieldNumber = 107;
const ::enterprise_management::StringListPolicyProto& notificationsallowedforurls() const;
::enterprise_management::StringListPolicyProto* mutable_notificationsallowedforurls();
::enterprise_management::StringListPolicyProto* release_notificationsallowedforurls();
void set_allocated_notificationsallowedforurls(::enterprise_management::StringListPolicyProto* notificationsallowedforurls);

// optional .enterprise_management.StringListPolicyProto NotificationsBlockedForUrls = 108;
bool has_notificationsblockedforurls() const;
void clear_notificationsblockedforurls();
static const int kNotificationsBlockedForUrlsFieldNumber = 108;
const ::enterprise_management::StringListPolicyProto& notificationsblockedforurls() const;
::enterprise_management::StringListPolicyProto* mutable_notificationsblockedforurls();
::enterprise_management::StringListPolicyProto* release_notificationsblockedforurls();
void set_allocated_notificationsblockedforurls(::enterprise_management::StringListPolicyProto* notificationsblockedforurls);

// optional .enterprise_management.BooleanPolicyProto CloudPrintSubmitEnabled = 111;
bool has_cloudprintsubmitenabled() const;
void clear_cloudprintsubmitenabled();
static const int kCloudPrintSubmitEnabledFieldNumber = 111;
const ::enterprise_management::BooleanPolicyProto& cloudprintsubmitenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_cloudprintsubmitenabled();
::enterprise_management::BooleanPolicyProto* release_cloudprintsubmitenabled();
void set_allocated_cloudprintsubmitenabled(::enterprise_management::BooleanPolicyProto* cloudprintsubmitenabled);

// optional .enterprise_management.IntegerPolicyProto DiskCacheSize = 112;
bool has_diskcachesize() const;
void clear_diskcachesize();
static const int kDiskCacheSizeFieldNumber = 112;
const ::enterprise_management::IntegerPolicyProto& diskcachesize() const;
::enterprise_management::IntegerPolicyProto* mutable_diskcachesize();
::enterprise_management::IntegerPolicyProto* release_diskcachesize();
void set_allocated_diskcachesize(::enterprise_management::IntegerPolicyProto* diskcachesize);

// optional .enterprise_management.IntegerPolicyProto MediaCacheSize = 113;
bool has_mediacachesize() const;
void clear_mediacachesize();
static const int kMediaCacheSizeFieldNumber = 113;
const ::enterprise_management::IntegerPolicyProto& mediacachesize() const;
::enterprise_management::IntegerPolicyProto* mutable_mediacachesize();
::enterprise_management::IntegerPolicyProto* release_mediacachesize();
void set_allocated_mediacachesize(::enterprise_management::IntegerPolicyProto* mediacachesize);

// optional .enterprise_management.StringPolicyProto ProxySettings = 118;
bool has_proxysettings() const;
void clear_proxysettings();
static const int kProxySettingsFieldNumber = 118;
const ::enterprise_management::StringPolicyProto& proxysettings() const;
::enterprise_management::StringPolicyProto* mutable_proxysettings();
::enterprise_management::StringPolicyProto* release_proxysettings();
void set_allocated_proxysettings(::enterprise_management::StringPolicyProto* proxysettings);

// optional .enterprise_management.BooleanPolicyProto DisablePrintPreview = 119;
bool has_disableprintpreview() const;
void clear_disableprintpreview();
static const int kDisablePrintPreviewFieldNumber = 119;
const ::enterprise_management::BooleanPolicyProto& disableprintpreview() const;
::enterprise_management::BooleanPolicyProto* mutable_disableprintpreview();
::enterprise_management::BooleanPolicyProto* release_disableprintpreview();
void set_allocated_disableprintpreview(::enterprise_management::BooleanPolicyProto* disableprintpreview);

// optional .enterprise_management.BooleanPolicyProto EnableOnlineRevocationChecks = 131;
bool has_enableonlinerevocationchecks() const;
void clear_enableonlinerevocationchecks();
static const int kEnableOnlineRevocationChecksFieldNumber = 131;
const ::enterprise_management::BooleanPolicyProto& enableonlinerevocationchecks() const;
::enterprise_management::BooleanPolicyProto* mutable_enableonlinerevocationchecks();
::enterprise_management::BooleanPolicyProto* release_enableonlinerevocationchecks();
void set_allocated_enableonlinerevocationchecks(::enterprise_management::BooleanPolicyProto* enableonlinerevocationchecks);

// optional .enterprise_management.BooleanPolicyProto BackgroundModeEnabled = 140;
bool has_backgroundmodeenabled() const;
void clear_backgroundmodeenabled();
static const int kBackgroundModeEnabledFieldNumber = 140;
const ::enterprise_management::BooleanPolicyProto& backgroundmodeenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_backgroundmodeenabled();
::enterprise_management::BooleanPolicyProto* release_backgroundmodeenabled();
void set_allocated_backgroundmodeenabled(::enterprise_management::BooleanPolicyProto* backgroundmodeenabled);

// optional .enterprise_management.StringPolicyProto RestrictSigninToPattern = 149;
bool has_restrictsignintopattern() const;
void clear_restrictsignintopattern();
static const int kRestrictSigninToPatternFieldNumber = 149;
const ::enterprise_management::StringPolicyProto& restrictsignintopattern() const;
::enterprise_management::StringPolicyProto* mutable_restrictsignintopattern();
::enterprise_management::StringPolicyProto* release_restrictsignintopattern();
void set_allocated_restrictsignintopattern(::enterprise_management::StringPolicyProto* restrictsignintopattern);

// optional .enterprise_management.StringListPolicyProto ExtensionInstallSources = 150;
bool has_extensioninstallsources() const;
void clear_extensioninstallsources();
static const int kExtensionInstallSourcesFieldNumber = 150;
const ::enterprise_management::StringListPolicyProto& extensioninstallsources() const;
::enterprise_management::StringListPolicyProto* mutable_extensioninstallsources();
::enterprise_management::StringListPolicyProto* release_extensioninstallsources();
void set_allocated_extensioninstallsources(::enterprise_management::StringListPolicyProto* extensioninstallsources);

// optional .enterprise_management.IntegerPolicyProto DefaultMediaStreamSetting = 151;
bool has_defaultmediastreamsetting() const;
void clear_defaultmediastreamsetting();
static const int kDefaultMediaStreamSettingFieldNumber = 151;
const ::enterprise_management::IntegerPolicyProto& defaultmediastreamsetting() const;
::enterprise_management::IntegerPolicyProto* mutable_defaultmediastreamsetting();
::enterprise_management::IntegerPolicyProto* release_defaultmediastreamsetting();
void set_allocated_defaultmediastreamsetting(::enterprise_management::IntegerPolicyProto* defaultmediastreamsetting);

// optional .enterprise_management.BooleanPolicyProto DisableSafeBrowsingProceedAnyway = 152;
bool has_disablesafebrowsingproceedanyway() const;
void clear_disablesafebrowsingproceedanyway();
static const int kDisableSafeBrowsingProceedAnywayFieldNumber = 152;
const ::enterprise_management::BooleanPolicyProto& disablesafebrowsingproceedanyway() const;
::enterprise_management::BooleanPolicyProto* mutable_disablesafebrowsingproceedanyway();
::enterprise_management::BooleanPolicyProto* release_disablesafebrowsingproceedanyway();
void set_allocated_disablesafebrowsingproceedanyway(::enterprise_management::BooleanPolicyProto* disablesafebrowsingproceedanyway);

// optional .enterprise_management.BooleanPolicyProto SpellCheckServiceEnabled = 153;
bool has_spellcheckserviceenabled() const;
void clear_spellcheckserviceenabled();
static const int kSpellCheckServiceEnabledFieldNumber = 153;
const ::enterprise_management::BooleanPolicyProto& spellcheckserviceenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_spellcheckserviceenabled();
::enterprise_management::BooleanPolicyProto* release_spellcheckserviceenabled();
void set_allocated_spellcheckserviceenabled(::enterprise_management::BooleanPolicyProto* spellcheckserviceenabled);

// optional .enterprise_management.BooleanPolicyProto DisableScreenshots = 155;
bool has_disablescreenshots() const;
void clear_disablescreenshots();
static const int kDisableScreenshotsFieldNumber = 155;
const ::enterprise_management::BooleanPolicyProto& disablescreenshots() const;
::enterprise_management::BooleanPolicyProto* mutable_disablescreenshots();
::enterprise_management::BooleanPolicyProto* release_disablescreenshots();
void set_allocated_disablescreenshots(::enterprise_management::BooleanPolicyProto* disablescreenshots);

// optional .enterprise_management.StringPolicyProto RemoteAccessHostDomain = 156;
bool has_remoteaccesshostdomain() const;
void clear_remoteaccesshostdomain();
static const int kRemoteAccessHostDomainFieldNumber = 156;
const ::enterprise_management::StringPolicyProto& remoteaccesshostdomain() const;
::enterprise_management::StringPolicyProto* mutable_remoteaccesshostdomain();
::enterprise_management::StringPolicyProto* release_remoteaccesshostdomain();
void set_allocated_remoteaccesshostdomain(::enterprise_management::StringPolicyProto* remoteaccesshostdomain);

// optional .enterprise_management.StringPolicyProto RemoteAccessHostTalkGadgetPrefix = 158;
bool has_remoteaccesshosttalkgadgetprefix() const;
void clear_remoteaccesshosttalkgadgetprefix();
static const int kRemoteAccessHostTalkGadgetPrefixFieldNumber = 158;
const ::enterprise_management::StringPolicyProto& remoteaccesshosttalkgadgetprefix() const;
::enterprise_management::StringPolicyProto* mutable_remoteaccesshosttalkgadgetprefix();
::enterprise_management::StringPolicyProto* release_remoteaccesshosttalkgadgetprefix();
void set_allocated_remoteaccesshosttalkgadgetprefix(::enterprise_management::StringPolicyProto* remoteaccesshosttalkgadgetprefix);

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostRequireCurtain = 159;
bool has_remoteaccesshostrequirecurtain() const;
void clear_remoteaccesshostrequirecurtain();
static const int kRemoteAccessHostRequireCurtainFieldNumber = 159;
const ::enterprise_management::BooleanPolicyProto& remoteaccesshostrequirecurtain() const;
::enterprise_management::BooleanPolicyProto* mutable_remoteaccesshostrequirecurtain();
::enterprise_management::BooleanPolicyProto* release_remoteaccesshostrequirecurtain();
void set_allocated_remoteaccesshostrequirecurtain(::enterprise_management::BooleanPolicyProto* remoteaccesshostrequirecurtain);

// optional .enterprise_management.BooleanPolicyProto AudioCaptureAllowed = 162;
bool has_audiocaptureallowed() const;
void clear_audiocaptureallowed();
static const int kAudioCaptureAllowedFieldNumber = 162;
const ::enterprise_management::BooleanPolicyProto& audiocaptureallowed() const;
::enterprise_management::BooleanPolicyProto* mutable_audiocaptureallowed();
::enterprise_management::BooleanPolicyProto* release_audiocaptureallowed();
void set_allocated_audiocaptureallowed(::enterprise_management::BooleanPolicyProto* audiocaptureallowed);

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderAlternateURLs = 163;
bool has_defaultsearchprovideralternateurls() const;
void clear_defaultsearchprovideralternateurls();
static const int kDefaultSearchProviderAlternateURLsFieldNumber = 163;
const ::enterprise_management::StringListPolicyProto& defaultsearchprovideralternateurls() const;
::enterprise_management::StringListPolicyProto* mutable_defaultsearchprovideralternateurls();
::enterprise_management::StringListPolicyProto* release_defaultsearchprovideralternateurls();
void set_allocated_defaultsearchprovideralternateurls(::enterprise_management::StringListPolicyProto* defaultsearchprovideralternateurls);

// optional .enterprise_management.BooleanPolicyProto ForceSafeSearch = 164;
bool has_forcesafesearch() const;
void clear_forcesafesearch();
static const int kForceSafeSearchFieldNumber = 164;
const ::enterprise_management::BooleanPolicyProto& forcesafesearch() const;
::enterprise_management::BooleanPolicyProto* mutable_forcesafesearch();
::enterprise_management::BooleanPolicyProto* release_forcesafesearch();
void set_allocated_forcesafesearch(::enterprise_management::BooleanPolicyProto* forcesafesearch);

// optional .enterprise_management.BooleanPolicyProto BuiltInDnsClientEnabled = 167;
bool has_builtindnsclientenabled() const;
void clear_builtindnsclientenabled();
static const int kBuiltInDnsClientEnabledFieldNumber = 167;
const ::enterprise_management::BooleanPolicyProto& builtindnsclientenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_builtindnsclientenabled();
::enterprise_management::BooleanPolicyProto* release_builtindnsclientenabled();
void set_allocated_builtindnsclientenabled(::enterprise_management::BooleanPolicyProto* builtindnsclientenabled);

// optional .enterprise_management.BooleanPolicyProto VideoCaptureAllowed = 169;
bool has_videocaptureallowed() const;
void clear_videocaptureallowed();
static const int kVideoCaptureAllowedFieldNumber = 169;
const ::enterprise_management::BooleanPolicyProto& videocaptureallowed() const;
::enterprise_management::BooleanPolicyProto* mutable_videocaptureallowed();
::enterprise_management::BooleanPolicyProto* release_videocaptureallowed();
void set_allocated_videocaptureallowed(::enterprise_management::BooleanPolicyProto* videocaptureallowed);

// optional .enterprise_management.StringListPolicyProto ExtensionAllowedTypes = 170;
bool has_extensionallowedtypes() const;
void clear_extensionallowedtypes();
static const int kExtensionAllowedTypesFieldNumber = 170;
const ::enterprise_management::StringListPolicyProto& extensionallowedtypes() const;
::enterprise_management::StringListPolicyProto* mutable_extensionallowedtypes();
::enterprise_management::StringListPolicyProto* release_extensionallowedtypes();
void set_allocated_extensionallowedtypes(::enterprise_management::StringListPolicyProto* extensionallowedtypes);

// optional .enterprise_management.BooleanPolicyProto AllowDeletingBrowserHistory = 189;
bool has_allowdeletingbrowserhistory() const;
void clear_allowdeletingbrowserhistory();
static const int kAllowDeletingBrowserHistoryFieldNumber = 189;
const ::enterprise_management::BooleanPolicyProto& allowdeletingbrowserhistory() const;
::enterprise_management::BooleanPolicyProto* mutable_allowdeletingbrowserhistory();
::enterprise_management::BooleanPolicyProto* release_allowdeletingbrowserhistory();
void set_allocated_allowdeletingbrowserhistory(::enterprise_management::BooleanPolicyProto* allowdeletingbrowserhistory);

// optional .enterprise_management.BooleanPolicyProto HideWebStoreIcon = 191;
bool has_hidewebstoreicon() const;
void clear_hidewebstoreicon();
static const int kHideWebStoreIconFieldNumber = 191;
const ::enterprise_management::BooleanPolicyProto& hidewebstoreicon() const;
::enterprise_management::BooleanPolicyProto* mutable_hidewebstoreicon();
::enterprise_management::BooleanPolicyProto* release_hidewebstoreicon();
void set_allocated_hidewebstoreicon(::enterprise_management::BooleanPolicyProto* hidewebstoreicon);

// optional .enterprise_management.BooleanPolicyProto SigninAllowed = 192;
bool has_signinallowed() const;
void clear_signinallowed();
static const int kSigninAllowedFieldNumber = 192;
const ::enterprise_management::BooleanPolicyProto& signinallowed() const;
::enterprise_management::BooleanPolicyProto* mutable_signinallowed();
::enterprise_management::BooleanPolicyProto* release_signinallowed();
void set_allocated_signinallowed(::enterprise_management::BooleanPolicyProto* signinallowed);

// optional .enterprise_management.StringPolicyProto VariationsRestrictParameter = 198;
bool has_variationsrestrictparameter() const;
void clear_variationsrestrictparameter();
static const int kVariationsRestrictParameterFieldNumber = 198;
const ::enterprise_management::StringPolicyProto& variationsrestrictparameter() const;
::enterprise_management::StringPolicyProto* mutable_variationsrestrictparameter();
::enterprise_management::StringPolicyProto* release_variationsrestrictparameter();
void set_allocated_variationsrestrictparameter(::enterprise_management::StringPolicyProto* variationsrestrictparameter);

// optional .enterprise_management.IntegerPolicyProto ContentPackDefaultFilteringBehavior = 206;
bool has_contentpackdefaultfilteringbehavior() const;
void clear_contentpackdefaultfilteringbehavior();
static const int kContentPackDefaultFilteringBehaviorFieldNumber = 206;
const ::enterprise_management::IntegerPolicyProto& contentpackdefaultfilteringbehavior() const;
::enterprise_management::IntegerPolicyProto* mutable_contentpackdefaultfilteringbehavior();
::enterprise_management::IntegerPolicyProto* release_contentpackdefaultfilteringbehavior();
void set_allocated_contentpackdefaultfilteringbehavior(::enterprise_management::IntegerPolicyProto* contentpackdefaultfilteringbehavior);

// optional .enterprise_management.StringPolicyProto ContentPackManualBehaviorHosts = 207;
bool has_contentpackmanualbehaviorhosts() const;
void clear_contentpackmanualbehaviorhosts();
static const int kContentPackManualBehaviorHostsFieldNumber = 207;
const ::enterprise_management::StringPolicyProto& contentpackmanualbehaviorhosts() const;
::enterprise_management::StringPolicyProto* mutable_contentpackmanualbehaviorhosts();
::enterprise_management::StringPolicyProto* release_contentpackmanualbehaviorhosts();
void set_allocated_contentpackmanualbehaviorhosts(::enterprise_management::StringPolicyProto* contentpackmanualbehaviorhosts);

// optional .enterprise_management.StringPolicyProto ContentPackManualBehaviorURLs = 208;
bool has_contentpackmanualbehaviorurls() const;
void clear_contentpackmanualbehaviorurls();
static const int kContentPackManualBehaviorURLsFieldNumber = 208;
const ::enterprise_management::StringPolicyProto& contentpackmanualbehaviorurls() const;
::enterprise_management::StringPolicyProto* mutable_contentpackmanualbehaviorurls();
::enterprise_management::StringPolicyProto* release_contentpackmanualbehaviorurls();
void set_allocated_contentpackmanualbehaviorurls(::enterprise_management::StringPolicyProto* contentpackmanualbehaviorurls);

// optional .enterprise_management.StringListPolicyProto AudioCaptureAllowedUrls = 210;
bool has_audiocaptureallowedurls() const;
void clear_audiocaptureallowedurls();
static const int kAudioCaptureAllowedUrlsFieldNumber = 210;
const ::enterprise_management::StringListPolicyProto& audiocaptureallowedurls() const;
::enterprise_management::StringListPolicyProto* mutable_audiocaptureallowedurls();
::enterprise_management::StringListPolicyProto* release_audiocaptureallowedurls();
void set_allocated_audiocaptureallowedurls(::enterprise_management::StringListPolicyProto* audiocaptureallowedurls);

// optional .enterprise_management.StringListPolicyProto VideoCaptureAllowedUrls = 211;
bool has_videocaptureallowedurls() const;
void clear_videocaptureallowedurls();
static const int kVideoCaptureAllowedUrlsFieldNumber = 211;
const ::enterprise_management::StringListPolicyProto& videocaptureallowedurls() const;
::enterprise_management::StringListPolicyProto* mutable_videocaptureallowedurls();
::enterprise_management::StringListPolicyProto* release_videocaptureallowedurls();
void set_allocated_videocaptureallowedurls(::enterprise_management::StringListPolicyProto* videocaptureallowedurls);

// optional .enterprise_management.BooleanPolicyProto SupervisedUserCreationEnabled = 225;
bool has_supervisedusercreationenabled() const;
void clear_supervisedusercreationenabled();
static const int kSupervisedUserCreationEnabledFieldNumber = 225;
const ::enterprise_management::BooleanPolicyProto& supervisedusercreationenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_supervisedusercreationenabled();
::enterprise_management::BooleanPolicyProto* release_supervisedusercreationenabled();
void set_allocated_supervisedusercreationenabled(::enterprise_management::BooleanPolicyProto* supervisedusercreationenabled);

// optional .enterprise_management.StringPolicyProto ManagedBookmarks = 229;
bool has_managedbookmarks() const;
void clear_managedbookmarks();
static const int kManagedBookmarksFieldNumber = 229;
const ::enterprise_management::StringPolicyProto& managedbookmarks() const;
::enterprise_management::StringPolicyProto* mutable_managedbookmarks();
::enterprise_management::StringPolicyProto* release_managedbookmarks();
void set_allocated_managedbookmarks(::enterprise_management::StringPolicyProto* managedbookmarks);

// optional .enterprise_management.IntegerPolicyProto MaxInvalidationFetchDelay = 230;
bool has_maxinvalidationfetchdelay() const;
void clear_maxinvalidationfetchdelay();
static const int kMaxInvalidationFetchDelayFieldNumber = 230;
const ::enterprise_management::IntegerPolicyProto& maxinvalidationfetchdelay() const;
::enterprise_management::IntegerPolicyProto* mutable_maxinvalidationfetchdelay();
::enterprise_management::IntegerPolicyProto* release_maxinvalidationfetchdelay();
void set_allocated_maxinvalidationfetchdelay(::enterprise_management::IntegerPolicyProto* maxinvalidationfetchdelay);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURL = 231;
bool has_defaultsearchproviderimageurl() const;
void clear_defaultsearchproviderimageurl();
static const int kDefaultSearchProviderImageURLFieldNumber = 231;
const ::enterprise_management::StringPolicyProto& defaultsearchproviderimageurl() const;
::enterprise_management::StringPolicyProto* mutable_defaultsearchproviderimageurl();
::enterprise_management::StringPolicyProto* release_defaultsearchproviderimageurl();
void set_allocated_defaultsearchproviderimageurl(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurl);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURLPostParams = 232;
bool has_defaultsearchprovidersearchurlpostparams() const;
void clear_defaultsearchprovidersearchurlpostparams();
static const int kDefaultSearchProviderSearchURLPostParamsFieldNumber = 232;
const ::enterprise_management::StringPolicyProto& defaultsearchprovidersearchurlpostparams() const;
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidersearchurlpostparams();
::enterprise_management::StringPolicyProto* release_defaultsearchprovidersearchurlpostparams();
void set_allocated_defaultsearchprovidersearchurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurlpostparams);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURLPostParams = 233;
bool has_defaultsearchprovidersuggesturlpostparams() const;
void clear_defaultsearchprovidersuggesturlpostparams();
static const int kDefaultSearchProviderSuggestURLPostParamsFieldNumber = 233;
const ::enterprise_management::StringPolicyProto& defaultsearchprovidersuggesturlpostparams() const;
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidersuggesturlpostparams();
::enterprise_management::StringPolicyProto* release_defaultsearchprovidersuggesturlpostparams();
void set_allocated_defaultsearchprovidersuggesturlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturlpostparams);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURLPostParams = 235;
bool has_defaultsearchproviderimageurlpostparams() const;
void clear_defaultsearchproviderimageurlpostparams();
static const int kDefaultSearchProviderImageURLPostParamsFieldNumber = 235;
const ::enterprise_management::StringPolicyProto& defaultsearchproviderimageurlpostparams() const;
::enterprise_management::StringPolicyProto* mutable_defaultsearchproviderimageurlpostparams();
::enterprise_management::StringPolicyProto* release_defaultsearchproviderimageurlpostparams();
void set_allocated_defaultsearchproviderimageurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurlpostparams);

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowClientPairing = 236;
bool has_remoteaccesshostallowclientpairing() const;
void clear_remoteaccesshostallowclientpairing();
static const int kRemoteAccessHostAllowClientPairingFieldNumber = 236;
const ::enterprise_management::BooleanPolicyProto& remoteaccesshostallowclientpairing() const;
::enterprise_management::BooleanPolicyProto* mutable_remoteaccesshostallowclientpairing();
::enterprise_management::BooleanPolicyProto* release_remoteaccesshostallowclientpairing();
void set_allocated_remoteaccesshostallowclientpairing(::enterprise_management::BooleanPolicyProto* remoteaccesshostallowclientpairing);

// optional .enterprise_management.BooleanPolicyProto RequireOnlineRevocationChecksForLocalAnchors = 237;
bool has_requireonlinerevocationchecksforlocalanchors() const;
void clear_requireonlinerevocationchecksforlocalanchors();
static const int kRequireOnlineRevocationChecksForLocalAnchorsFieldNumber = 237;
const ::enterprise_management::BooleanPolicyProto& requireonlinerevocationchecksforlocalanchors() const;
::enterprise_management::BooleanPolicyProto* mutable_requireonlinerevocationchecksforlocalanchors();
::enterprise_management::BooleanPolicyProto* release_requireonlinerevocationchecksforlocalanchors();
void set_allocated_requireonlinerevocationchecksforlocalanchors(::enterprise_management::BooleanPolicyProto* requireonlinerevocationchecksforlocalanchors);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderNewTabURL = 239;
bool has_defaultsearchprovidernewtaburl() const;
void clear_defaultsearchprovidernewtaburl();
static const int kDefaultSearchProviderNewTabURLFieldNumber = 239;
const ::enterprise_management::StringPolicyProto& defaultsearchprovidernewtaburl() const;
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidernewtaburl();
::enterprise_management::StringPolicyProto* release_defaultsearchprovidernewtaburl();
void set_allocated_defaultsearchprovidernewtaburl(::enterprise_management::StringPolicyProto* defaultsearchprovidernewtaburl);

// optional .enterprise_management.BooleanPolicyProto FullscreenAllowed = 242;
bool has_fullscreenallowed() const;
void clear_fullscreenallowed();
static const int kFullscreenAllowedFieldNumber = 242;
const ::enterprise_management::BooleanPolicyProto& fullscreenallowed() const;
::enterprise_management::BooleanPolicyProto* mutable_fullscreenallowed();
::enterprise_management::BooleanPolicyProto* release_fullscreenallowed();
void set_allocated_fullscreenallowed(::enterprise_management::BooleanPolicyProto* fullscreenallowed);

// optional .enterprise_management.BooleanPolicyProto ForceEphemeralProfiles = 247;
bool has_forceephemeralprofiles() const;
void clear_forceephemeralprofiles();
static const int kForceEphemeralProfilesFieldNumber = 247;
const ::enterprise_management::BooleanPolicyProto& forceephemeralprofiles() const;
::enterprise_management::BooleanPolicyProto* mutable_forceephemeralprofiles();
::enterprise_management::BooleanPolicyProto* release_forceephemeralprofiles();
void set_allocated_forceephemeralprofiles(::enterprise_management::BooleanPolicyProto* forceephemeralprofiles);

// optional .enterprise_management.StringListPolicyProto NativeMessagingBlacklist = 253;
bool has_nativemessagingblacklist() const;
void clear_nativemessagingblacklist();
static const int kNativeMessagingBlacklistFieldNumber = 253;
const ::enterprise_management::StringListPolicyProto& nativemessagingblacklist() const;
::enterprise_management::StringListPolicyProto* mutable_nativemessagingblacklist();
::enterprise_management::StringListPolicyProto* release_nativemessagingblacklist();
void set_allocated_nativemessagingblacklist(::enterprise_management::StringListPolicyProto* nativemessagingblacklist);

// optional .enterprise_management.StringListPolicyProto NativeMessagingWhitelist = 254;
bool has_nativemessagingwhitelist() const;
void clear_nativemessagingwhitelist();
static const int kNativeMessagingWhitelistFieldNumber = 254;
const ::enterprise_management::StringListPolicyProto& nativemessagingwhitelist() const;
::enterprise_management::StringListPolicyProto* mutable_nativemessagingwhitelist();
::enterprise_management::StringListPolicyProto* release_nativemessagingwhitelist();
void set_allocated_nativemessagingwhitelist(::enterprise_management::StringListPolicyProto* nativemessagingwhitelist);

// optional .enterprise_management.BooleanPolicyProto NativeMessagingUserLevelHosts = 255;
bool has_nativemessaginguserlevelhosts() const;
void clear_nativemessaginguserlevelhosts();
static const int kNativeMessagingUserLevelHostsFieldNumber = 255;
const ::enterprise_management::BooleanPolicyProto& nativemessaginguserlevelhosts() const;
::enterprise_management::BooleanPolicyProto* mutable_nativemessaginguserlevelhosts();
::enterprise_management::BooleanPolicyProto* release_nativemessaginguserlevelhosts();
void set_allocated_nativemessaginguserlevelhosts(::enterprise_management::BooleanPolicyProto* nativemessaginguserlevelhosts);

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowGnubbyAuth = 259;
bool has_remoteaccesshostallowgnubbyauth() const;
void clear_remoteaccesshostallowgnubbyauth();
static const int kRemoteAccessHostAllowGnubbyAuthFieldNumber = 259;
const ::enterprise_management::BooleanPolicyProto& remoteaccesshostallowgnubbyauth() const;
::enterprise_management::BooleanPolicyProto* mutable_remoteaccesshostallowgnubbyauth();
::enterprise_management::BooleanPolicyProto* release_remoteaccesshostallowgnubbyauth();
void set_allocated_remoteaccesshostallowgnubbyauth(::enterprise_management::BooleanPolicyProto* remoteaccesshostallowgnubbyauth);

// optional .enterprise_management.BooleanPolicyProto WPADQuickCheckEnabled = 263;
bool has_wpadquickcheckenabled() const;
void clear_wpadquickcheckenabled();
static const int kWPADQuickCheckEnabledFieldNumber = 263;
const ::enterprise_management::BooleanPolicyProto& wpadquickcheckenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_wpadquickcheckenabled();
::enterprise_management::BooleanPolicyProto* release_wpadquickcheckenabled();
void set_allocated_wpadquickcheckenabled(::enterprise_management::BooleanPolicyProto* wpadquickcheckenabled);

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowRelayedConnection = 265;
bool has_remoteaccesshostallowrelayedconnection() const;
void clear_remoteaccesshostallowrelayedconnection();
static const int kRemoteAccessHostAllowRelayedConnectionFieldNumber = 265;
const ::enterprise_management::BooleanPolicyProto& remoteaccesshostallowrelayedconnection() const;
::enterprise_management::BooleanPolicyProto* mutable_remoteaccesshostallowrelayedconnection();
::enterprise_management::BooleanPolicyProto* release_remoteaccesshostallowrelayedconnection();
void set_allocated_remoteaccesshostallowrelayedconnection(::enterprise_management::BooleanPolicyProto* remoteaccesshostallowrelayedconnection);

// optional .enterprise_management.StringPolicyProto RemoteAccessHostUdpPortRange = 266;
bool has_remoteaccesshostudpportrange() const;
void clear_remoteaccesshostudpportrange();
static const int kRemoteAccessHostUdpPortRangeFieldNumber = 266;
const ::enterprise_management::StringPolicyProto& remoteaccesshostudpportrange() const;
::enterprise_management::StringPolicyProto* mutable_remoteaccesshostudpportrange();
::enterprise_management::StringPolicyProto* release_remoteaccesshostudpportrange();
void set_allocated_remoteaccesshostudpportrange(::enterprise_management::StringPolicyProto* remoteaccesshostudpportrange);

// optional .enterprise_management.BooleanPolicyProto ShowAppsShortcutInBookmarkBar = 269;
bool has_showappsshortcutinbookmarkbar() const;
void clear_showappsshortcutinbookmarkbar();
static const int kShowAppsShortcutInBookmarkBarFieldNumber = 269;
const ::enterprise_management::BooleanPolicyProto& showappsshortcutinbookmarkbar() const;
::enterprise_management::BooleanPolicyProto* mutable_showappsshortcutinbookmarkbar();
::enterprise_management::BooleanPolicyProto* release_showappsshortcutinbookmarkbar();
void set_allocated_showappsshortcutinbookmarkbar(::enterprise_management::BooleanPolicyProto* showappsshortcutinbookmarkbar);

// optional .enterprise_management.StringPolicyProto RegisteredProtocolHandlers = 270;
bool has_registeredprotocolhandlers() const;
void clear_registeredprotocolhandlers();
static const int kRegisteredProtocolHandlersFieldNumber = 270;
const ::enterprise_management::StringPolicyProto& registeredprotocolhandlers() const;
::enterprise_management::StringPolicyProto* mutable_registeredprotocolhandlers();
::enterprise_management::StringPolicyProto* release_registeredprotocolhandlers();
void set_allocated_registeredprotocolhandlers(::enterprise_management::StringPolicyProto* registeredprotocolhandlers);

// optional .enterprise_management.StringListPolicyProto EnableDeprecatedWebPlatformFeatures = 272;
bool has_enabledeprecatedwebplatformfeatures() const;
void clear_enabledeprecatedwebplatformfeatures();
static const int kEnableDeprecatedWebPlatformFeaturesFieldNumber = 272;
const ::enterprise_management::StringListPolicyProto& enabledeprecatedwebplatformfeatures() const;
::enterprise_management::StringListPolicyProto* mutable_enabledeprecatedwebplatformfeatures();
::enterprise_management::StringListPolicyProto* release_enabledeprecatedwebplatformfeatures();
void set_allocated_enabledeprecatedwebplatformfeatures(::enterprise_management::StringListPolicyProto* enabledeprecatedwebplatformfeatures);

// optional .enterprise_management.IntegerPolicyProto NetworkPredictionOptions = 275;
bool has_networkpredictionoptions() const;
void clear_networkpredictionoptions();
static const int kNetworkPredictionOptionsFieldNumber = 275;
const ::enterprise_management::IntegerPolicyProto& networkpredictionoptions() const;
::enterprise_management::IntegerPolicyProto* mutable_networkpredictionoptions();
::enterprise_management::IntegerPolicyProto* release_networkpredictionoptions();
void set_allocated_networkpredictionoptions(::enterprise_management::IntegerPolicyProto* networkpredictionoptions);

// optional .enterprise_management.BooleanPolicyProto BrowserGuestModeEnabled = 277;
bool has_browserguestmodeenabled() const;
void clear_browserguestmodeenabled();
static const int kBrowserGuestModeEnabledFieldNumber = 277;
const ::enterprise_management::BooleanPolicyProto& browserguestmodeenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_browserguestmodeenabled();
::enterprise_management::BooleanPolicyProto* release_browserguestmodeenabled();
void set_allocated_browserguestmodeenabled(::enterprise_management::BooleanPolicyProto* browserguestmodeenabled);

// optional .enterprise_management.BooleanPolicyProto BrowserAddPersonEnabled = 278;
bool has_browseraddpersonenabled() const;
void clear_browseraddpersonenabled();
static const int kBrowserAddPersonEnabledFieldNumber = 278;
const ::enterprise_management::BooleanPolicyProto& browseraddpersonenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_browseraddpersonenabled();
::enterprise_management::BooleanPolicyProto* release_browseraddpersonenabled();
void set_allocated_browseraddpersonenabled(::enterprise_management::BooleanPolicyProto* browseraddpersonenabled);

// optional .enterprise_management.BooleanPolicyProto ImportAutofillFormData = 279;
bool has_importautofillformdata() const;
void clear_importautofillformdata();
static const int kImportAutofillFormDataFieldNumber = 279;
const ::enterprise_management::BooleanPolicyProto& importautofillformdata() const;
::enterprise_management::BooleanPolicyProto* mutable_importautofillformdata();
::enterprise_management::BooleanPolicyProto* release_importautofillformdata();
void set_allocated_importautofillformdata(::enterprise_management::BooleanPolicyProto* importautofillformdata);

// optional .enterprise_management.StringPolicyProto ExtensionSettings = 280;
bool has_extensionsettings() const;
void clear_extensionsettings();
static const int kExtensionSettingsFieldNumber = 280;
const ::enterprise_management::StringPolicyProto& extensionsettings() const;
::enterprise_management::StringPolicyProto* mutable_extensionsettings();
::enterprise_management::StringPolicyProto* release_extensionsettings();
void set_allocated_extensionsettings(::enterprise_management::StringPolicyProto* extensionsettings);

// optional .enterprise_management.StringPolicyProto SSLVersionMin = 281;
bool has_sslversionmin() const;
void clear_sslversionmin();
static const int kSSLVersionMinFieldNumber = 281;
const ::enterprise_management::StringPolicyProto& sslversionmin() const;
::enterprise_management::StringPolicyProto* mutable_sslversionmin();
::enterprise_management::StringPolicyProto* release_sslversionmin();
void set_allocated_sslversionmin(::enterprise_management::StringPolicyProto* sslversionmin);

// optional .enterprise_management.BooleanPolicyProto ForceGoogleSafeSearch = 284;
bool has_forcegooglesafesearch() const;
void clear_forcegooglesafesearch();
static const int kForceGoogleSafeSearchFieldNumber = 284;
const ::enterprise_management::BooleanPolicyProto& forcegooglesafesearch() const;
::enterprise_management::BooleanPolicyProto* mutable_forcegooglesafesearch();
::enterprise_management::BooleanPolicyProto* release_forcegooglesafesearch();
void set_allocated_forcegooglesafesearch(::enterprise_management::BooleanPolicyProto* forcegooglesafesearch);

// optional .enterprise_management.BooleanPolicyProto ForceYouTubeSafetyMode = 285;
bool has_forceyoutubesafetymode() const;
void clear_forceyoutubesafetymode();
static const int kForceYouTubeSafetyModeFieldNumber = 285;
const ::enterprise_management::BooleanPolicyProto& forceyoutubesafetymode() const;
::enterprise_management::BooleanPolicyProto* mutable_forceyoutubesafetymode();
::enterprise_management::BooleanPolicyProto* release_forceyoutubesafetymode();
void set_allocated_forceyoutubesafetymode(::enterprise_management::BooleanPolicyProto* forceyoutubesafetymode);

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostMatchUsername = 287;
bool has_remoteaccesshostmatchusername() const;
void clear_remoteaccesshostmatchusername();
static const int kRemoteAccessHostMatchUsernameFieldNumber = 287;
const ::enterprise_management::BooleanPolicyProto& remoteaccesshostmatchusername() const;
::enterprise_management::BooleanPolicyProto* mutable_remoteaccesshostmatchusername();
::enterprise_management::BooleanPolicyProto* release_remoteaccesshostmatchusername();
void set_allocated_remoteaccesshostmatchusername(::enterprise_management::BooleanPolicyProto* remoteaccesshostmatchusername);

// optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenUrl = 288;
bool has_remoteaccesshosttokenurl() const;
void clear_remoteaccesshosttokenurl();
static const int kRemoteAccessHostTokenUrlFieldNumber = 288;
const ::enterprise_management::StringPolicyProto& remoteaccesshosttokenurl() const;
::enterprise_management::StringPolicyProto* mutable_remoteaccesshosttokenurl();
::enterprise_management::StringPolicyProto* release_remoteaccesshosttokenurl();
void set_allocated_remoteaccesshosttokenurl(::enterprise_management::StringPolicyProto* remoteaccesshosttokenurl);

// optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenValidationUrl = 289;
bool has_remoteaccesshosttokenvalidationurl() const;
void clear_remoteaccesshosttokenvalidationurl();
static const int kRemoteAccessHostTokenValidationUrlFieldNumber = 289;
const ::enterprise_management::StringPolicyProto& remoteaccesshosttokenvalidationurl() const;
::enterprise_management::StringPolicyProto* mutable_remoteaccesshosttokenvalidationurl();
::enterprise_management::StringPolicyProto* release_remoteaccesshosttokenvalidationurl();
void set_allocated_remoteaccesshosttokenvalidationurl(::enterprise_management::StringPolicyProto* remoteaccesshosttokenvalidationurl);

// optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenValidationCertificateIssuer = 290;
bool has_remoteaccesshosttokenvalidationcertificateissuer() const;
void clear_remoteaccesshosttokenvalidationcertificateissuer();
static const int kRemoteAccessHostTokenValidationCertificateIssuerFieldNumber = 290;
const ::enterprise_management::StringPolicyProto& remoteaccesshosttokenvalidationcertificateissuer() const;
::enterprise_management::StringPolicyProto* mutable_remoteaccesshosttokenvalidationcertificateissuer();
::enterprise_management::StringPolicyProto* release_remoteaccesshosttokenvalidationcertificateissuer();
void set_allocated_remoteaccesshosttokenvalidationcertificateissuer(::enterprise_management::StringPolicyProto* remoteaccesshosttokenvalidationcertificateissuer);

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingExtendedReportingOptInAllowed = 301;
bool has_safebrowsingextendedreportingoptinallowed() const;
void clear_safebrowsingextendedreportingoptinallowed();
static const int kSafeBrowsingExtendedReportingOptInAllowedFieldNumber = 301;
const ::enterprise_management::BooleanPolicyProto& safebrowsingextendedreportingoptinallowed() const;
::enterprise_management::BooleanPolicyProto* mutable_safebrowsingextendedreportingoptinallowed();
::enterprise_management::BooleanPolicyProto* release_safebrowsingextendedreportingoptinallowed();
void set_allocated_safebrowsingextendedreportingoptinallowed(::enterprise_management::BooleanPolicyProto* safebrowsingextendedreportingoptinallowed);

// optional .enterprise_management.BooleanPolicyProto SSLErrorOverrideAllowed = 302;
bool has_sslerroroverrideallowed() const;
void clear_sslerroroverrideallowed();
static const int kSSLErrorOverrideAllowedFieldNumber = 302;
const ::enterprise_management::BooleanPolicyProto& sslerroroverrideallowed() const;
::enterprise_management::BooleanPolicyProto* mutable_sslerroroverrideallowed();
::enterprise_management::BooleanPolicyProto* release_sslerroroverrideallowed();
void set_allocated_sslerroroverrideallowed(::enterprise_management::BooleanPolicyProto* sslerroroverrideallowed);

// optional .enterprise_management.BooleanPolicyProto QuicAllowed = 303;
bool has_quicallowed() const;
void clear_quicallowed();
static const int kQuicAllowedFieldNumber = 303;
const ::enterprise_management::BooleanPolicyProto& quicallowed() const;
::enterprise_management::BooleanPolicyProto* mutable_quicallowed();
::enterprise_management::BooleanPolicyProto* release_quicallowed();
void set_allocated_quicallowed(::enterprise_management::BooleanPolicyProto* quicallowed);

// optional .enterprise_management.BooleanPolicyProto HardwareAccelerationModeEnabled = 306;
bool has_hardwareaccelerationmodeenabled() const;
void clear_hardwareaccelerationmodeenabled();
static const int kHardwareAccelerationModeEnabledFieldNumber = 306;
const ::enterprise_management::BooleanPolicyProto& hardwareaccelerationmodeenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_hardwareaccelerationmodeenabled();
::enterprise_management::BooleanPolicyProto* release_hardwareaccelerationmodeenabled();
void set_allocated_hardwareaccelerationmodeenabled(::enterprise_management::BooleanPolicyProto* hardwareaccelerationmodeenabled);

// optional .enterprise_management.StringPolicyProto DefaultPrinterSelection = 310;
bool has_defaultprinterselection() const;
void clear_defaultprinterselection();
static const int kDefaultPrinterSelectionFieldNumber = 310;
const ::enterprise_management::StringPolicyProto& defaultprinterselection() const;
::enterprise_management::StringPolicyProto* mutable_defaultprinterselection();
::enterprise_management::StringPolicyProto* release_defaultprinterselection();
void set_allocated_defaultprinterselection(::enterprise_management::StringPolicyProto* defaultprinterselection);

// optional .enterprise_management.BooleanPolicyProto AllowDinosaurEasterEgg = 311;
bool has_allowdinosaureasteregg() const;
void clear_allowdinosaureasteregg();
static const int kAllowDinosaurEasterEggFieldNumber = 311;
const ::enterprise_management::BooleanPolicyProto& allowdinosaureasteregg() const;
::enterprise_management::BooleanPolicyProto* mutable_allowdinosaureasteregg();
::enterprise_management::BooleanPolicyProto* release_allowdinosaureasteregg();
void set_allocated_allowdinosaureasteregg(::enterprise_management::BooleanPolicyProto* allowdinosaureasteregg);

// optional .enterprise_management.StringPolicyProto RemoteAccessHostClientDomain = 318;
bool has_remoteaccesshostclientdomain() const;
void clear_remoteaccesshostclientdomain();
static const int kRemoteAccessHostClientDomainFieldNumber = 318;
const ::enterprise_management::StringPolicyProto& remoteaccesshostclientdomain() const;
::enterprise_management::StringPolicyProto* mutable_remoteaccesshostclientdomain();
::enterprise_management::StringPolicyProto* release_remoteaccesshostclientdomain();
void set_allocated_remoteaccesshostclientdomain(::enterprise_management::StringPolicyProto* remoteaccesshostclientdomain);

// optional .enterprise_management.IntegerPolicyProto DefaultWebBluetoothGuardSetting = 322;
bool has_defaultwebbluetoothguardsetting() const;
void clear_defaultwebbluetoothguardsetting();
static const int kDefaultWebBluetoothGuardSettingFieldNumber = 322;
const ::enterprise_management::IntegerPolicyProto& defaultwebbluetoothguardsetting() const;
::enterprise_management::IntegerPolicyProto* mutable_defaultwebbluetoothguardsetting();
::enterprise_management::IntegerPolicyProto* release_defaultwebbluetoothguardsetting();
void set_allocated_defaultwebbluetoothguardsetting(::enterprise_management::IntegerPolicyProto* defaultwebbluetoothguardsetting);

// optional .enterprise_management.BooleanPolicyProto SuppressUnsupportedOSWarning = 326;
bool has_suppressunsupportedoswarning() const;
void clear_suppressunsupportedoswarning();
static const int kSuppressUnsupportedOSWarningFieldNumber = 326;
const ::enterprise_management::BooleanPolicyProto& suppressunsupportedoswarning() const;
::enterprise_management::BooleanPolicyProto* mutable_suppressunsupportedoswarning();
::enterprise_management::BooleanPolicyProto* release_suppressunsupportedoswarning();
void set_allocated_suppressunsupportedoswarning(::enterprise_management::BooleanPolicyProto* suppressunsupportedoswarning);

// optional .enterprise_management.BooleanPolicyProto TaskManagerEndProcessEnabled = 329;
bool has_taskmanagerendprocessenabled() const;
void clear_taskmanagerendprocessenabled();
static const int kTaskManagerEndProcessEnabledFieldNumber = 329;
const ::enterprise_management::BooleanPolicyProto& taskmanagerendprocessenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_taskmanagerendprocessenabled();
::enterprise_management::BooleanPolicyProto* release_taskmanagerendprocessenabled();
void set_allocated_taskmanagerendprocessenabled(::enterprise_management::BooleanPolicyProto* taskmanagerendprocessenabled);

// optional .enterprise_management.StringPolicyProto AllowedDomainsForApps = 333;
bool has_alloweddomainsforapps() const;
void clear_alloweddomainsforapps();
static const int kAllowedDomainsForAppsFieldNumber = 333;
const ::enterprise_management::StringPolicyProto& alloweddomainsforapps() const;
::enterprise_management::StringPolicyProto* mutable_alloweddomainsforapps();
::enterprise_management::StringPolicyProto* release_alloweddomainsforapps();
void set_allocated_alloweddomainsforapps(::enterprise_management::StringPolicyProto* alloweddomainsforapps);

// optional .enterprise_management.BooleanPolicyProto PacHttpsUrlStrippingEnabled = 334;
bool has_pachttpsurlstrippingenabled() const;
void clear_pachttpsurlstrippingenabled();
static const int kPacHttpsUrlStrippingEnabledFieldNumber = 334;
const ::enterprise_management::BooleanPolicyProto& pachttpsurlstrippingenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_pachttpsurlstrippingenabled();
::enterprise_management::BooleanPolicyProto* release_pachttpsurlstrippingenabled();
void set_allocated_pachttpsurlstrippingenabled(::enterprise_management::BooleanPolicyProto* pachttpsurlstrippingenabled);

// optional .enterprise_management.BooleanPolicyProto EnableMediaRouter = 335;
bool has_enablemediarouter() const;
void clear_enablemediarouter();
static const int kEnableMediaRouterFieldNumber = 335;
const ::enterprise_management::BooleanPolicyProto& enablemediarouter() const;
::enterprise_management::BooleanPolicyProto* mutable_enablemediarouter();
::enterprise_management::BooleanPolicyProto* release_enablemediarouter();
void set_allocated_enablemediarouter(::enterprise_management::BooleanPolicyProto* enablemediarouter);

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForUrls = 337;
bool has_certificatetransparencyenforcementdisabledforurls() const;
void clear_certificatetransparencyenforcementdisabledforurls();
static const int kCertificateTransparencyEnforcementDisabledForUrlsFieldNumber = 337;
const ::enterprise_management::StringListPolicyProto& certificatetransparencyenforcementdisabledforurls() const;
::enterprise_management::StringListPolicyProto* mutable_certificatetransparencyenforcementdisabledforurls();
::enterprise_management::StringListPolicyProto* release_certificatetransparencyenforcementdisabledforurls();
void set_allocated_certificatetransparencyenforcementdisabledforurls(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforurls);

// optional .enterprise_management.StringPolicyProto WebRtcUdpPortRange = 341;
bool has_webrtcudpportrange() const;
void clear_webrtcudpportrange();
static const int kWebRtcUdpPortRangeFieldNumber = 341;
const ::enterprise_management::StringPolicyProto& webrtcudpportrange() const;
::enterprise_management::StringPolicyProto* mutable_webrtcudpportrange();
::enterprise_management::StringPolicyProto* release_webrtcudpportrange();
void set_allocated_webrtcudpportrange(::enterprise_management::StringPolicyProto* webrtcudpportrange);

// optional .enterprise_management.BooleanPolicyProto EnableSha1ForLocalAnchors = 342;
bool has_enablesha1forlocalanchors() const;
void clear_enablesha1forlocalanchors();
static const int kEnableSha1ForLocalAnchorsFieldNumber = 342;
const ::enterprise_management::BooleanPolicyProto& enablesha1forlocalanchors() const;
::enterprise_management::BooleanPolicyProto* mutable_enablesha1forlocalanchors();
::enterprise_management::BooleanPolicyProto* release_enablesha1forlocalanchors();
void set_allocated_enablesha1forlocalanchors(::enterprise_management::BooleanPolicyProto* enablesha1forlocalanchors);

// optional .enterprise_management.BooleanPolicyProto ComponentUpdatesEnabled = 344;
bool has_componentupdatesenabled() const;
void clear_componentupdatesenabled();
static const int kComponentUpdatesEnabledFieldNumber = 344;
const ::enterprise_management::BooleanPolicyProto& componentupdatesenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_componentupdatesenabled();
::enterprise_management::BooleanPolicyProto* release_componentupdatesenabled();
void set_allocated_componentupdatesenabled(::enterprise_management::BooleanPolicyProto* componentupdatesenabled);

// optional .enterprise_management.BooleanPolicyProto Http09OnNonDefaultPortsEnabled = 347;
bool has_http09onnondefaultportsenabled() const;
void clear_http09onnondefaultportsenabled();
static const int kHttp09OnNonDefaultPortsEnabledFieldNumber = 347;
const ::enterprise_management::BooleanPolicyProto& http09onnondefaultportsenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_http09onnondefaultportsenabled();
::enterprise_management::BooleanPolicyProto* release_http09onnondefaultportsenabled();
void set_allocated_http09onnondefaultportsenabled(::enterprise_management::BooleanPolicyProto* http09onnondefaultportsenabled);

// optional .enterprise_management.BooleanPolicyProto AlwaysOpenPdfExternally = 349;
bool has_alwaysopenpdfexternally() const;
void clear_alwaysopenpdfexternally();
static const int kAlwaysOpenPdfExternallyFieldNumber = 349;
const ::enterprise_management::BooleanPolicyProto& alwaysopenpdfexternally() const;
::enterprise_management::BooleanPolicyProto* mutable_alwaysopenpdfexternally();
::enterprise_management::BooleanPolicyProto* release_alwaysopenpdfexternally();
void set_allocated_alwaysopenpdfexternally(::enterprise_management::BooleanPolicyProto* alwaysopenpdfexternally);

// optional .enterprise_management.IntegerPolicyProto ForceYouTubeRestrict = 350;
bool has_forceyoutuberestrict() const;
void clear_forceyoutuberestrict();
static const int kForceYouTubeRestrictFieldNumber = 350;
const ::enterprise_management::IntegerPolicyProto& forceyoutuberestrict() const;
::enterprise_management::IntegerPolicyProto* mutable_forceyoutuberestrict();
::enterprise_management::IntegerPolicyProto* release_forceyoutuberestrict();
void set_allocated_forceyoutuberestrict(::enterprise_management::IntegerPolicyProto* forceyoutuberestrict);

// optional .enterprise_management.StringPolicyProto NewTabPageLocation = 362;
bool has_newtabpagelocation() const;
void clear_newtabpagelocation();
static const int kNewTabPageLocationFieldNumber = 362;
const ::enterprise_management::StringPolicyProto& newtabpagelocation() const;
::enterprise_management::StringPolicyProto* mutable_newtabpagelocation();
::enterprise_management::StringPolicyProto* release_newtabpagelocation();
void set_allocated_newtabpagelocation(::enterprise_management::StringPolicyProto* newtabpagelocation);

// optional .enterprise_management.StringPolicyProto SSLVersionMax = 363;
bool has_sslversionmax() const;
void clear_sslversionmax();
static const int kSSLVersionMaxFieldNumber = 363;
const ::enterprise_management::StringPolicyProto& sslversionmax() const;
::enterprise_management::StringPolicyProto* mutable_sslversionmax();
::enterprise_management::StringPolicyProto* release_sslversionmax();
void set_allocated_sslversionmax(::enterprise_management::StringPolicyProto* sslversionmax);

// optional .enterprise_management.BooleanPolicyProto ShowCastIconInToolbar = 364;
bool has_showcasticonintoolbar() const;
void clear_showcasticonintoolbar();
static const int kShowCastIconInToolbarFieldNumber = 364;
const ::enterprise_management::BooleanPolicyProto& showcasticonintoolbar() const;
::enterprise_management::BooleanPolicyProto* mutable_showcasticonintoolbar();
::enterprise_management::BooleanPolicyProto* release_showcasticonintoolbar();
void set_allocated_showcasticonintoolbar(::enterprise_management::BooleanPolicyProto* showcasticonintoolbar);

// optional .enterprise_management.StringListPolicyProto RemoteAccessHostDomainList = 370;
bool has_remoteaccesshostdomainlist() const;
void clear_remoteaccesshostdomainlist();
static const int kRemoteAccessHostDomainListFieldNumber = 370;
const ::enterprise_management::StringListPolicyProto& remoteaccesshostdomainlist() const;
::enterprise_management::StringListPolicyProto* mutable_remoteaccesshostdomainlist();
::enterprise_management::StringListPolicyProto* release_remoteaccesshostdomainlist();
void set_allocated_remoteaccesshostdomainlist(::enterprise_management::StringListPolicyProto* remoteaccesshostdomainlist);

// optional .enterprise_management.StringListPolicyProto RemoteAccessHostClientDomainList = 371;
bool has_remoteaccesshostclientdomainlist() const;
void clear_remoteaccesshostclientdomainlist();
static const int kRemoteAccessHostClientDomainListFieldNumber = 371;
const ::enterprise_management::StringListPolicyProto& remoteaccesshostclientdomainlist() const;
::enterprise_management::StringListPolicyProto* mutable_remoteaccesshostclientdomainlist();
::enterprise_management::StringListPolicyProto* release_remoteaccesshostclientdomainlist();
void set_allocated_remoteaccesshostclientdomainlist(::enterprise_management::StringListPolicyProto* remoteaccesshostclientdomainlist);

// optional .enterprise_management.BooleanPolicyProto BrowserNetworkTimeQueriesEnabled = 372;
bool has_browsernetworktimequeriesenabled() const;
void clear_browsernetworktimequeriesenabled();
static const int kBrowserNetworkTimeQueriesEnabledFieldNumber = 372;
const ::enterprise_management::BooleanPolicyProto& browsernetworktimequeriesenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_browsernetworktimequeriesenabled();
::enterprise_management::BooleanPolicyProto* release_browsernetworktimequeriesenabled();
void set_allocated_browsernetworktimequeriesenabled(::enterprise_management::BooleanPolicyProto* browsernetworktimequeriesenabled);

// optional .enterprise_management.IntegerPolicyProto DownloadRestrictions = 373;
bool has_downloadrestrictions() const;
void clear_downloadrestrictions();
static const int kDownloadRestrictionsFieldNumber = 373;
const ::enterprise_management::IntegerPolicyProto& downloadrestrictions() const;
::enterprise_management::IntegerPolicyProto* mutable_downloadrestrictions();
::enterprise_management::IntegerPolicyProto* release_downloadrestrictions();
void set_allocated_downloadrestrictions(::enterprise_management::IntegerPolicyProto* downloadrestrictions);

// optional .enterprise_management.BooleanPolicyProto PrintPreviewUseSystemDefaultPrinter = 375;
bool has_printpreviewusesystemdefaultprinter() const;
void clear_printpreviewusesystemdefaultprinter();
static const int kPrintPreviewUseSystemDefaultPrinterFieldNumber = 375;
const ::enterprise_management::BooleanPolicyProto& printpreviewusesystemdefaultprinter() const;
::enterprise_management::BooleanPolicyProto* mutable_printpreviewusesystemdefaultprinter();
::enterprise_management::BooleanPolicyProto* release_printpreviewusesystemdefaultprinter();
void set_allocated_printpreviewusesystemdefaultprinter(::enterprise_management::BooleanPolicyProto* printpreviewusesystemdefaultprinter);

// optional .enterprise_management.BooleanPolicyProto CloudPolicyOverridesMachinePolicy = 383;
bool has_cloudpolicyoverridesmachinepolicy() const;
void clear_cloudpolicyoverridesmachinepolicy();
static const int kCloudPolicyOverridesMachinePolicyFieldNumber = 383;
const ::enterprise_management::BooleanPolicyProto& cloudpolicyoverridesmachinepolicy() const;
::enterprise_management::BooleanPolicyProto* mutable_cloudpolicyoverridesmachinepolicy();
::enterprise_management::BooleanPolicyProto* release_cloudpolicyoverridesmachinepolicy();
void set_allocated_cloudpolicyoverridesmachinepolicy(::enterprise_management::BooleanPolicyProto* cloudpolicyoverridesmachinepolicy);

// optional .enterprise_management.BooleanPolicyProto RunAllFlashInAllowMode = 393;
bool has_runallflashinallowmode() const;
void clear_runallflashinallowmode();
static const int kRunAllFlashInAllowModeFieldNumber = 393;
const ::enterprise_management::BooleanPolicyProto& runallflashinallowmode() const;
::enterprise_management::BooleanPolicyProto* mutable_runallflashinallowmode();
::enterprise_management::BooleanPolicyProto* release_runallflashinallowmode();
void set_allocated_runallflashinallowmode(::enterprise_management::BooleanPolicyProto* runallflashinallowmode);

// optional .enterprise_management.BooleanPolicyProto AutofillCreditCardEnabled = 394;
bool has_autofillcreditcardenabled() const;
void clear_autofillcreditcardenabled();
static const int kAutofillCreditCardEnabledFieldNumber = 394;
const ::enterprise_management::BooleanPolicyProto& autofillcreditcardenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_autofillcreditcardenabled();
::enterprise_management::BooleanPolicyProto* release_autofillcreditcardenabled();
void set_allocated_autofillcreditcardenabled(::enterprise_management::BooleanPolicyProto* autofillcreditcardenabled);

// optional .enterprise_management.BooleanPolicyProto NtlmV2Enabled = 395;
bool has_ntlmv2enabled() const;
void clear_ntlmv2enabled();
static const int kNtlmV2EnabledFieldNumber = 395;
const ::enterprise_management::BooleanPolicyProto& ntlmv2enabled() const;
::enterprise_management::BooleanPolicyProto* mutable_ntlmv2enabled();
::enterprise_management::BooleanPolicyProto* release_ntlmv2enabled();
void set_allocated_ntlmv2enabled(::enterprise_management::BooleanPolicyProto* ntlmv2enabled);

// optional .enterprise_management.BooleanPolicyProto PromptForDownloadLocation = 397;
bool has_promptfordownloadlocation() const;
void clear_promptfordownloadlocation();
static const int kPromptForDownloadLocationFieldNumber = 397;
const ::enterprise_management::BooleanPolicyProto& promptfordownloadlocation() const;
::enterprise_management::BooleanPolicyProto* mutable_promptfordownloadlocation();
::enterprise_management::BooleanPolicyProto* release_promptfordownloadlocation();
void set_allocated_promptfordownloadlocation(::enterprise_management::BooleanPolicyProto* promptfordownloadlocation);

// optional .enterprise_management.StringPolicyProto IsolateOrigins = 400;
bool has_isolateorigins() const;
void clear_isolateorigins();
static const int kIsolateOriginsFieldNumber = 400;
const ::enterprise_management::StringPolicyProto& isolateorigins() const;
::enterprise_management::StringPolicyProto* mutable_isolateorigins();
::enterprise_management::StringPolicyProto* release_isolateorigins();
void set_allocated_isolateorigins(::enterprise_management::StringPolicyProto* isolateorigins);

// optional .enterprise_management.BooleanPolicyProto SitePerProcess = 401;
bool has_siteperprocess() const;
void clear_siteperprocess();
static const int kSitePerProcessFieldNumber = 401;
const ::enterprise_management::BooleanPolicyProto& siteperprocess() const;
::enterprise_management::BooleanPolicyProto* mutable_siteperprocess();
::enterprise_management::BooleanPolicyProto* release_siteperprocess();
void set_allocated_siteperprocess(::enterprise_management::BooleanPolicyProto* siteperprocess);

// optional .enterprise_management.StringListPolicyProto UnsafelyTreatInsecureOriginAsSecure = 402;
bool has_unsafelytreatinsecureoriginassecure() const;
void clear_unsafelytreatinsecureoriginassecure();
static const int kUnsafelyTreatInsecureOriginAsSecureFieldNumber = 402;
const ::enterprise_management::StringListPolicyProto& unsafelytreatinsecureoriginassecure() const;
::enterprise_management::StringListPolicyProto* mutable_unsafelytreatinsecureoriginassecure();
::enterprise_management::StringListPolicyProto* release_unsafelytreatinsecureoriginassecure();
void set_allocated_unsafelytreatinsecureoriginassecure(::enterprise_management::StringListPolicyProto* unsafelytreatinsecureoriginassecure);

// optional .enterprise_management.StringPolicyProto DefaultDownloadDirectory = 403;
bool has_defaultdownloaddirectory() const;
void clear_defaultdownloaddirectory();
static const int kDefaultDownloadDirectoryFieldNumber = 403;
const ::enterprise_management::StringPolicyProto& defaultdownloaddirectory() const;
::enterprise_management::StringPolicyProto* mutable_defaultdownloaddirectory();
::enterprise_management::StringPolicyProto* release_defaultdownloaddirectory();
void set_allocated_defaultdownloaddirectory(::enterprise_management::StringPolicyProto* defaultdownloaddirectory);

// optional .enterprise_management.StringListPolicyProto SecurityKeyPermitAttestation = 404;
bool has_securitykeypermitattestation() const;
void clear_securitykeypermitattestation();
static const int kSecurityKeyPermitAttestationFieldNumber = 404;
const ::enterprise_management::StringListPolicyProto& securitykeypermitattestation() const;
::enterprise_management::StringListPolicyProto* mutable_securitykeypermitattestation();
::enterprise_management::StringListPolicyProto* release_securitykeypermitattestation();
void set_allocated_securitykeypermitattestation(::enterprise_management::StringListPolicyProto* securitykeypermitattestation);

// optional .enterprise_management.BooleanPolicyProto AbusiveExperienceInterventionEnforce = 406;
bool has_abusiveexperienceinterventionenforce() const;
void clear_abusiveexperienceinterventionenforce();
static const int kAbusiveExperienceInterventionEnforceFieldNumber = 406;
const ::enterprise_management::BooleanPolicyProto& abusiveexperienceinterventionenforce() const;
::enterprise_management::BooleanPolicyProto* mutable_abusiveexperienceinterventionenforce();
::enterprise_management::BooleanPolicyProto* release_abusiveexperienceinterventionenforce();
void set_allocated_abusiveexperienceinterventionenforce(::enterprise_management::BooleanPolicyProto* abusiveexperienceinterventionenforce);

// optional .enterprise_management.StringListPolicyProto SpellcheckLanguage = 407;
bool has_spellchecklanguage() const;
void clear_spellchecklanguage();
static const int kSpellcheckLanguageFieldNumber = 407;
const ::enterprise_management::StringListPolicyProto& spellchecklanguage() const;
::enterprise_management::StringListPolicyProto* mutable_spellchecklanguage();
::enterprise_management::StringListPolicyProto* release_spellchecklanguage();
void set_allocated_spellchecklanguage(::enterprise_management::StringListPolicyProto* spellchecklanguage);

// optional .enterprise_management.BooleanPolicyProto SpellcheckEnabled = 410;
bool has_spellcheckenabled() const;
void clear_spellcheckenabled();
static const int kSpellcheckEnabledFieldNumber = 410;
const ::enterprise_management::BooleanPolicyProto& spellcheckenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_spellcheckenabled();
::enterprise_management::BooleanPolicyProto* release_spellcheckenabled();
void set_allocated_spellcheckenabled(::enterprise_management::BooleanPolicyProto* spellcheckenabled);

// optional .enterprise_management.IntegerPolicyProto AdsSettingForIntrusiveAdsSites = 411;
bool has_adssettingforintrusiveadssites() const;
void clear_adssettingforintrusiveadssites();
static const int kAdsSettingForIntrusiveAdsSitesFieldNumber = 411;
const ::enterprise_management::IntegerPolicyProto& adssettingforintrusiveadssites() const;
::enterprise_management::IntegerPolicyProto* mutable_adssettingforintrusiveadssites();
::enterprise_management::IntegerPolicyProto* release_adssettingforintrusiveadssites();
void set_allocated_adssettingforintrusiveadssites(::enterprise_management::IntegerPolicyProto* adssettingforintrusiveadssites);

// optional .enterprise_management.IntegerPolicyProto PasswordProtectionWarningTrigger = 413;
bool has_passwordprotectionwarningtrigger() const;
void clear_passwordprotectionwarningtrigger();
static const int kPasswordProtectionWarningTriggerFieldNumber = 413;
const ::enterprise_management::IntegerPolicyProto& passwordprotectionwarningtrigger() const;
::enterprise_management::IntegerPolicyProto* mutable_passwordprotectionwarningtrigger();
::enterprise_management::IntegerPolicyProto* release_passwordprotectionwarningtrigger();
void set_allocated_passwordprotectionwarningtrigger(::enterprise_management::IntegerPolicyProto* passwordprotectionwarningtrigger);

// optional .enterprise_management.BooleanPolicyProto EnableSymantecLegacyInfrastructure = 415;
bool has_enablesymanteclegacyinfrastructure() const;
void clear_enablesymanteclegacyinfrastructure();
static const int kEnableSymantecLegacyInfrastructureFieldNumber = 415;
const ::enterprise_management::BooleanPolicyProto& enablesymanteclegacyinfrastructure() const;
::enterprise_management::BooleanPolicyProto* mutable_enablesymanteclegacyinfrastructure();
::enterprise_management::BooleanPolicyProto* release_enablesymanteclegacyinfrastructure();
void set_allocated_enablesymanteclegacyinfrastructure(::enterprise_management::BooleanPolicyProto* enablesymanteclegacyinfrastructure);

// optional .enterprise_management.BooleanPolicyProto WebDriverOverridesIncompatiblePolicies = 416;
bool has_webdriveroverridesincompatiblepolicies() const;
void clear_webdriveroverridesincompatiblepolicies();
static const int kWebDriverOverridesIncompatiblePoliciesFieldNumber = 416;
const ::enterprise_management::BooleanPolicyProto& webdriveroverridesincompatiblepolicies() const;
::enterprise_management::BooleanPolicyProto* mutable_webdriveroverridesincompatiblepolicies();
::enterprise_management::BooleanPolicyProto* release_webdriveroverridesincompatiblepolicies();
void set_allocated_webdriveroverridesincompatiblepolicies(::enterprise_management::BooleanPolicyProto* webdriveroverridesincompatiblepolicies);

// optional .enterprise_management.IntegerPolicyProto RelaunchNotification = 421;
bool has_relaunchnotification() const;
void clear_relaunchnotification();
static const int kRelaunchNotificationFieldNumber = 421;
const ::enterprise_management::IntegerPolicyProto& relaunchnotification() const;
::enterprise_management::IntegerPolicyProto* mutable_relaunchnotification();
::enterprise_management::IntegerPolicyProto* release_relaunchnotification();
void set_allocated_relaunchnotification(::enterprise_management::IntegerPolicyProto* relaunchnotification);

// optional .enterprise_management.IntegerPolicyProto RelaunchNotificationPeriod = 422;
bool has_relaunchnotificationperiod() const;
void clear_relaunchnotificationperiod();
static const int kRelaunchNotificationPeriodFieldNumber = 422;
const ::enterprise_management::IntegerPolicyProto& relaunchnotificationperiod() const;
::enterprise_management::IntegerPolicyProto* mutable_relaunchnotificationperiod();
::enterprise_management::IntegerPolicyProto* release_relaunchnotificationperiod();
void set_allocated_relaunchnotificationperiod(::enterprise_management::IntegerPolicyProto* relaunchnotificationperiod);

// optional .enterprise_management.StringListPolicyProto SafeBrowsingWhitelistDomains = 424;
bool has_safebrowsingwhitelistdomains() const;
void clear_safebrowsingwhitelistdomains();
static const int kSafeBrowsingWhitelistDomainsFieldNumber = 424;
const ::enterprise_management::StringListPolicyProto& safebrowsingwhitelistdomains() const;
::enterprise_management::StringListPolicyProto* mutable_safebrowsingwhitelistdomains();
::enterprise_management::StringListPolicyProto* release_safebrowsingwhitelistdomains();
void set_allocated_safebrowsingwhitelistdomains(::enterprise_management::StringListPolicyProto* safebrowsingwhitelistdomains);

// optional .enterprise_management.StringListPolicyProto PasswordProtectionLoginURLs = 425;
bool has_passwordprotectionloginurls() const;
void clear_passwordprotectionloginurls();
static const int kPasswordProtectionLoginURLsFieldNumber = 425;
const ::enterprise_management::StringListPolicyProto& passwordprotectionloginurls() const;
::enterprise_management::StringListPolicyProto* mutable_passwordprotectionloginurls();
::enterprise_management::StringListPolicyProto* release_passwordprotectionloginurls();
void set_allocated_passwordprotectionloginurls(::enterprise_management::StringListPolicyProto* passwordprotectionloginurls);

// optional .enterprise_management.StringPolicyProto PasswordProtectionChangePasswordURL = 426;
bool has_passwordprotectionchangepasswordurl() const;
void clear_passwordprotectionchangepasswordurl();
static const int kPasswordProtectionChangePasswordURLFieldNumber = 426;
const ::enterprise_management::StringPolicyProto& passwordprotectionchangepasswordurl() const;
::enterprise_management::StringPolicyProto* mutable_passwordprotectionchangepasswordurl();
::enterprise_management::StringPolicyProto* release_passwordprotectionchangepasswordurl();
void set_allocated_passwordprotectionchangepasswordurl(::enterprise_management::StringPolicyProto* passwordprotectionchangepasswordurl);

// optional .enterprise_management.StringPolicyProto MachineLevelUserCloudPolicyEnrollmentToken = 430;
bool has_machinelevelusercloudpolicyenrollmenttoken() const;
void clear_machinelevelusercloudpolicyenrollmenttoken();
static const int kMachineLevelUserCloudPolicyEnrollmentTokenFieldNumber = 430;
const ::enterprise_management::StringPolicyProto& machinelevelusercloudpolicyenrollmenttoken() const;
::enterprise_management::StringPolicyProto* mutable_machinelevelusercloudpolicyenrollmenttoken();
::enterprise_management::StringPolicyProto* release_machinelevelusercloudpolicyenrollmenttoken();
void set_allocated_machinelevelusercloudpolicyenrollmenttoken(::enterprise_management::StringPolicyProto* machinelevelusercloudpolicyenrollmenttoken);

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingExtendedReportingEnabled = 431;
bool has_safebrowsingextendedreportingenabled() const;
void clear_safebrowsingextendedreportingenabled();
static const int kSafeBrowsingExtendedReportingEnabledFieldNumber = 431;
const ::enterprise_management::BooleanPolicyProto& safebrowsingextendedreportingenabled() const;
::enterprise_management::BooleanPolicyProto* mutable_safebrowsingextendedreportingenabled();
::enterprise_management::BooleanPolicyProto* release_safebrowsingextendedreportingenabled();
void set_allocated_safebrowsingextendedreportingenabled(::enterprise_management::BooleanPolicyProto* safebrowsingextendedreportingenabled);

// optional .enterprise_management.BooleanPolicyProto AutoplayAllowed = 432;
bool has_autoplayallowed() const;
void clear_autoplayallowed();
static const int kAutoplayAllowedFieldNumber = 432;
const ::enterprise_management::BooleanPolicyProto& autoplayallowed() const;
::enterprise_management::BooleanPolicyProto* mutable_autoplayallowed();
::enterprise_management::BooleanPolicyProto* release_autoplayallowed();
void set_allocated_autoplayallowed(::enterprise_management::BooleanPolicyProto* autoplayallowed);

// optional .enterprise_management.StringListPolicyProto AutoplayWhitelist = 433;
bool has_autoplaywhitelist() const;
void clear_autoplaywhitelist();
static const int kAutoplayWhitelistFieldNumber = 433;
const ::enterprise_management::StringListPolicyProto& autoplaywhitelist() const;
::enterprise_management::StringListPolicyProto* mutable_autoplaywhitelist();
::enterprise_management::StringListPolicyProto* release_autoplaywhitelist();
void set_allocated_autoplaywhitelist(::enterprise_management::StringListPolicyProto* autoplaywhitelist);

// optional .enterprise_management.IntegerPolicyProto DefaultWebUsbGuardSetting = 436;
bool has_defaultwebusbguardsetting() const;
void clear_defaultwebusbguardsetting();
static const int kDefaultWebUsbGuardSettingFieldNumber = 436;
const ::enterprise_management::IntegerPolicyProto& defaultwebusbguardsetting() const;
::enterprise_management::IntegerPolicyProto* mutable_defaultwebusbguardsetting();
::enterprise_management::IntegerPolicyProto* release_defaultwebusbguardsetting();
void set_allocated_defaultwebusbguardsetting(::enterprise_management::IntegerPolicyProto* defaultwebusbguardsetting);

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForCas = 437;
bool has_certificatetransparencyenforcementdisabledforcas() const;
void clear_certificatetransparencyenforcementdisabledforcas();
static const int kCertificateTransparencyEnforcementDisabledForCasFieldNumber = 437;
const ::enterprise_management::StringListPolicyProto& certificatetransparencyenforcementdisabledforcas() const;
::enterprise_management::StringListPolicyProto* mutable_certificatetransparencyenforcementdisabledforcas();
::enterprise_management::StringListPolicyProto* release_certificatetransparencyenforcementdisabledforcas();
void set_allocated_certificatetransparencyenforcementdisabledforcas(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforcas);

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForLegacyCas = 438;
bool has_certificatetransparencyenforcementdisabledforlegacycas() const;
void clear_certificatetransparencyenforcementdisabledforlegacycas();
static const int kCertificateTransparencyEnforcementDisabledForLegacyCasFieldNumber = 438;
const ::enterprise_management::StringListPolicyProto& certificatetransparencyenforcementdisabledforlegacycas() const;
::enterprise_management::StringListPolicyProto* mutable_certificatetransparencyenforcementdisabledforlegacycas();
::enterprise_management::StringListPolicyProto* release_certificatetransparencyenforcementdisabledforlegacycas();
void set_allocated_certificatetransparencyenforcementdisabledforlegacycas(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforlegacycas);

// optional .enterprise_management.BooleanPolicyProto MediaRouterCastAllowAllIPs = 439;
bool has_mediaroutercastallowallips() const;
void clear_mediaroutercastallowallips();
static const int kMediaRouterCastAllowAllIPsFieldNumber = 439;
const ::enterprise_management::BooleanPolicyProto& mediaroutercastallowallips() const;
::enterprise_management::BooleanPolicyProto* mutable_mediaroutercastallowallips();
::enterprise_management::BooleanPolicyProto* release_mediaroutercastallowallips();
void set_allocated_mediaroutercastallowallips(::enterprise_management::BooleanPolicyProto* mediaroutercastallowallips);

// optional .enterprise_management.StringListPolicyProto WebUsbAskForUrls = 441;
bool has_webusbaskforurls() const;
void clear_webusbaskforurls();
static const int kWebUsbAskForUrlsFieldNumber = 441;
const ::enterprise_management::StringListPolicyProto& webusbaskforurls() const;
::enterprise_management::StringListPolicyProto* mutable_webusbaskforurls();
::enterprise_management::StringListPolicyProto* release_webusbaskforurls();
void set_allocated_webusbaskforurls(::enterprise_management::StringListPolicyProto* webusbaskforurls);

// optional .enterprise_management.StringListPolicyProto WebUsbBlockedForUrls = 442;
bool has_webusbblockedforurls() const;
void clear_webusbblockedforurls();
static const int kWebUsbBlockedForUrlsFieldNumber = 442;
const ::enterprise_management::StringListPolicyProto& webusbblockedforurls() const;
::enterprise_management::StringListPolicyProto* mutable_webusbblockedforurls();
::enterprise_management::StringListPolicyProto* release_webusbblockedforurls();
void set_allocated_webusbblockedforurls(::enterprise_management::StringListPolicyProto* webusbblockedforurls);

// optional .enterprise_management.IntegerPolicyProto DeveloperToolsAvailability = 445;
bool has_developertoolsavailability() const;
void clear_developertoolsavailability();
static const int kDeveloperToolsAvailabilityFieldNumber = 445;
const ::enterprise_management::IntegerPolicyProto& developertoolsavailability() const;
::enterprise_management::IntegerPolicyProto* mutable_developertoolsavailability();
::enterprise_management::IntegerPolicyProto* release_developertoolsavailability();
void set_allocated_developertoolsavailability(::enterprise_management::IntegerPolicyProto* developertoolsavailability);

// @@protoc_insertion_point(class_scope:enterprise_management.CloudPolicySettings)
private:
void set_has_homepagelocation();
void clear_has_homepagelocation();
void set_has_homepageisnewtabpage();
void clear_has_homepageisnewtabpage();
void set_has_newtabpagelocation();
void clear_has_newtabpagelocation();
void set_has_defaultbrowsersettingenabled();
void clear_has_defaultbrowsersettingenabled();
void set_has_alternateerrorpagesenabled();
void clear_has_alternateerrorpagesenabled();
void set_has_searchsuggestenabled();
void clear_has_searchsuggestenabled();
void set_has_networkpredictionoptions();
void clear_has_networkpredictionoptions();
void set_has_wpadquickcheckenabled();
void clear_has_wpadquickcheckenabled();
void set_has_disabledschemes();
void clear_has_disabledschemes();
void set_has_http09onnondefaultportsenabled();
void clear_has_http09onnondefaultportsenabled();
void set_has_javascriptenabled();
void clear_has_javascriptenabled();
void set_has_incognitoenabled();
void clear_has_incognitoenabled();
void set_has_incognitomodeavailability();
void clear_has_incognitomodeavailability();
void set_has_savingbrowserhistorydisabled();
void clear_has_savingbrowserhistorydisabled();
void set_has_allowdeletingbrowserhistory();
void clear_has_allowdeletingbrowserhistory();
void set_has_allowdinosaureasteregg();
void clear_has_allowdinosaureasteregg();
void set_has_remoteaccesshostclientdomain();
void clear_has_remoteaccesshostclientdomain();
void set_has_remoteaccesshostclientdomainlist();
void clear_has_remoteaccesshostclientdomainlist();
void set_has_remoteaccesshostfirewalltraversal();
void clear_has_remoteaccesshostfirewalltraversal();
void set_has_remoteaccesshostdomain();
void clear_has_remoteaccesshostdomain();
void set_has_remoteaccesshostdomainlist();
void clear_has_remoteaccesshostdomainlist();
void set_has_remoteaccesshosttalkgadgetprefix();
void clear_has_remoteaccesshosttalkgadgetprefix();
void set_has_remoteaccesshostrequirecurtain();
void clear_has_remoteaccesshostrequirecurtain();
void set_has_remoteaccesshostallowclientpairing();
void clear_has_remoteaccesshostallowclientpairing();
void set_has_remoteaccesshostallowgnubbyauth();
void clear_has_remoteaccesshostallowgnubbyauth();
void set_has_remoteaccesshostallowrelayedconnection();
void clear_has_remoteaccesshostallowrelayedconnection();
void set_has_remoteaccesshostudpportrange();
void clear_has_remoteaccesshostudpportrange();
void set_has_remoteaccesshostmatchusername();
void clear_has_remoteaccesshostmatchusername();
void set_has_remoteaccesshosttokenurl();
void clear_has_remoteaccesshosttokenurl();
void set_has_remoteaccesshosttokenvalidationurl();
void clear_has_remoteaccesshosttokenvalidationurl();
void set_has_remoteaccesshosttokenvalidationcertificateissuer();
void clear_has_remoteaccesshosttokenvalidationcertificateissuer();
void set_has_printingenabled();
void clear_has_printingenabled();
void set_has_cloudprintproxyenabled();
void clear_has_cloudprintproxyenabled();
void set_has_forcesafesearch();
void clear_has_forcesafesearch();
void set_has_forcegooglesafesearch();
void clear_has_forcegooglesafesearch();
void set_has_forceyoutubesafetymode();
void clear_has_forceyoutubesafetymode();
void set_has_forceyoutuberestrict();
void clear_has_forceyoutuberestrict();
void set_has_safebrowsingenabled();
void clear_has_safebrowsingenabled();
void set_has_metricsreportingenabled();
void clear_has_metricsreportingenabled();
void set_has_passwordmanagerenabled();
void clear_has_passwordmanagerenabled();
void set_has_autofillenabled();
void clear_has_autofillenabled();
void set_has_autofillcreditcardenabled();
void clear_has_autofillcreditcardenabled();
void set_has_disabledplugins();
void clear_has_disabledplugins();
void set_has_enabledplugins();
void clear_has_enabledplugins();
void set_has_disabledpluginsexceptions();
void clear_has_disabledpluginsexceptions();
void set_has_alwaysopenpdfexternally();
void clear_has_alwaysopenpdfexternally();
void set_has_syncdisabled();
void clear_has_syncdisabled();
void set_has_signinallowed();
void clear_has_signinallowed();
void set_has_diskcachedir();
void clear_has_diskcachedir();
void set_has_diskcachesize();
void clear_has_diskcachesize();
void set_has_mediacachesize();
void clear_has_mediacachesize();
void set_has_downloadrestrictions();
void clear_has_downloadrestrictions();
void set_has_downloaddirectory();
void clear_has_downloaddirectory();
void set_has_proxymode();
void clear_has_proxymode();
void set_has_proxyservermode();
void clear_has_proxyservermode();
void set_has_proxyserver();
void clear_has_proxyserver();
void set_has_proxypacurl();
void clear_has_proxypacurl();
void set_has_proxybypasslist();
void clear_has_proxybypasslist();
void set_has_proxysettings();
void clear_has_proxysettings();
void set_has_authschemes();
void clear_has_authschemes();
void set_has_disableauthnegotiatecnamelookup();
void clear_has_disableauthnegotiatecnamelookup();
void set_has_enableauthnegotiateport();
void clear_has_enableauthnegotiateport();
void set_has_authserverwhitelist();
void clear_has_authserverwhitelist();
void set_has_authnegotiatedelegatewhitelist();
void clear_has_authnegotiatedelegatewhitelist();
void set_has_gssapilibraryname();
void clear_has_gssapilibraryname();
void set_has_allowcrossoriginauthprompt();
void clear_has_allowcrossoriginauthprompt();
void set_has_ntlmv2enabled();
void clear_has_ntlmv2enabled();
void set_has_extensioninstallblacklist();
void clear_has_extensioninstallblacklist();
void set_has_extensioninstallwhitelist();
void clear_has_extensioninstallwhitelist();
void set_has_extensioninstallforcelist();
void clear_has_extensioninstallforcelist();
void set_has_extensioninstallsources();
void clear_has_extensioninstallsources();
void set_has_extensionallowedtypes();
void clear_has_extensionallowedtypes();
void set_has_extensionsettings();
void clear_has_extensionsettings();
void set_has_showhomebutton();
void clear_has_showhomebutton();
void set_has_developertoolsdisabled();
void clear_has_developertoolsdisabled();
void set_has_developertoolsavailability();
void clear_has_developertoolsavailability();
void set_has_restoreonstartup();
void clear_has_restoreonstartup();
void set_has_restoreonstartupurls();
void clear_has_restoreonstartupurls();
void set_has_blockthirdpartycookies();
void clear_has_blockthirdpartycookies();
void set_has_defaultsearchproviderenabled();
void clear_has_defaultsearchproviderenabled();
void set_has_defaultsearchprovidername();
void clear_has_defaultsearchprovidername();
void set_has_defaultsearchproviderkeyword();
void clear_has_defaultsearchproviderkeyword();
void set_has_defaultsearchprovidersearchurl();
void clear_has_defaultsearchprovidersearchurl();
void set_has_defaultsearchprovidersuggesturl();
void clear_has_defaultsearchprovidersuggesturl();
void set_has_defaultsearchprovidericonurl();
void clear_has_defaultsearchprovidericonurl();
void set_has_defaultsearchproviderencodings();
void clear_has_defaultsearchproviderencodings();
void set_has_defaultsearchprovideralternateurls();
void clear_has_defaultsearchprovideralternateurls();
void set_has_defaultsearchproviderimageurl();
void clear_has_defaultsearchproviderimageurl();
void set_has_defaultsearchprovidernewtaburl();
void clear_has_defaultsearchprovidernewtaburl();
void set_has_defaultsearchprovidersearchurlpostparams();
void clear_has_defaultsearchprovidersearchurlpostparams();
void set_has_defaultsearchprovidersuggesturlpostparams();
void clear_has_defaultsearchprovidersuggesturlpostparams();
void set_has_defaultsearchproviderimageurlpostparams();
void clear_has_defaultsearchproviderimageurlpostparams();
void set_has_defaultcookiessetting();
void clear_has_defaultcookiessetting();
void set_has_defaultimagessetting();
void clear_has_defaultimagessetting();
void set_has_defaultjavascriptsetting();
void clear_has_defaultjavascriptsetting();
void set_has_defaultpluginssetting();
void clear_has_defaultpluginssetting();
void set_has_defaultpopupssetting();
void clear_has_defaultpopupssetting();
void set_has_defaultnotificationssetting();
void clear_has_defaultnotificationssetting();
void set_has_defaultgeolocationsetting();
void clear_has_defaultgeolocationsetting();
void set_has_defaultmediastreamsetting();
void clear_has_defaultmediastreamsetting();
void set_has_defaultwebbluetoothguardsetting();
void clear_has_defaultwebbluetoothguardsetting();
void set_has_defaultwebusbguardsetting();
void clear_has_defaultwebusbguardsetting();
void set_has_webusbaskforurls();
void clear_has_webusbaskforurls();
void set_has_webusbblockedforurls();
void clear_has_webusbblockedforurls();
void set_has_autoselectcertificateforurls();
void clear_has_autoselectcertificateforurls();
void set_has_cookiesallowedforurls();
void clear_has_cookiesallowedforurls();
void set_has_cookiesblockedforurls();
void clear_has_cookiesblockedforurls();
void set_has_cookiessessiononlyforurls();
void clear_has_cookiessessiononlyforurls();
void set_has_imagesallowedforurls();
void clear_has_imagesallowedforurls();
void set_has_imagesblockedforurls();
void clear_has_imagesblockedforurls();
void set_has_javascriptallowedforurls();
void clear_has_javascriptallowedforurls();
void set_has_javascriptblockedforurls();
void clear_has_javascriptblockedforurls();
void set_has_pluginsallowedforurls();
void clear_has_pluginsallowedforurls();
void set_has_pluginsblockedforurls();
void clear_has_pluginsblockedforurls();
void set_has_popupsallowedforurls();
void clear_has_popupsallowedforurls();
void set_has_registeredprotocolhandlers();
void clear_has_registeredprotocolhandlers();
void set_has_popupsblockedforurls();
void clear_has_popupsblockedforurls();
void set_has_notificationsallowedforurls();
void clear_has_notificationsallowedforurls();
void set_has_notificationsblockedforurls();
void clear_has_notificationsblockedforurls();
void set_has_nativemessagingblacklist();
void clear_has_nativemessagingblacklist();
void set_has_nativemessagingwhitelist();
void clear_has_nativemessagingwhitelist();
void set_has_nativemessaginguserlevelhosts();
void clear_has_nativemessaginguserlevelhosts();
void set_has_disable3dapis();
void clear_has_disable3dapis();
void set_has_maxinvalidationfetchdelay();
void clear_has_maxinvalidationfetchdelay();
void set_has_translateenabled();
void clear_has_translateenabled();
void set_has_allowoutdatedplugins();
void clear_has_allowoutdatedplugins();
void set_has_runallflashinallowmode();
void clear_has_runallflashinallowmode();
void set_has_bookmarkbarenabled();
void clear_has_bookmarkbarenabled();
void set_has_editbookmarksenabled();
void clear_has_editbookmarksenabled();
void set_has_showappsshortcutinbookmarkbar();
void clear_has_showappsshortcutinbookmarkbar();
void set_has_allowfileselectiondialogs();
void clear_has_allowfileselectiondialogs();
void set_has_securitykeypermitattestation();
void clear_has_securitykeypermitattestation();
void set_has_importbookmarks();
void clear_has_importbookmarks();
void set_has_importhistory();
void clear_has_importhistory();
void set_has_importhomepage();
void clear_has_importhomepage();
void set_has_importsearchengine();
void clear_has_importsearchengine();
void set_has_importsavedpasswords();
void clear_has_importsavedpasswords();
void set_has_importautofillformdata();
void clear_has_importautofillformdata();
void set_has_maxconnectionsperproxy();
void clear_has_maxconnectionsperproxy();
void set_has_urlblacklist();
void clear_has_urlblacklist();
void set_has_urlwhitelist();
void clear_has_urlwhitelist();
void set_has_cloudprintsubmitenabled();
void clear_has_cloudprintsubmitenabled();
void set_has_disableprintpreview();
void clear_has_disableprintpreview();
void set_has_defaultprinterselection();
void clear_has_defaultprinterselection();
void set_has_enableonlinerevocationchecks();
void clear_has_enableonlinerevocationchecks();
void set_has_requireonlinerevocationchecksforlocalanchors();
void clear_has_requireonlinerevocationchecksforlocalanchors();
void set_has_enablesha1forlocalanchors();
void clear_has_enablesha1forlocalanchors();
void set_has_enablesymanteclegacyinfrastructure();
void clear_has_enablesymanteclegacyinfrastructure();
void set_has_forceephemeralprofiles();
void clear_has_forceephemeralprofiles();
void set_has_backgroundmodeenabled();
void clear_has_backgroundmodeenabled();
void set_has_restrictsignintopattern();
void clear_has_restrictsignintopattern();
void set_has_disablesafebrowsingproceedanyway();
void clear_has_disablesafebrowsingproceedanyway();
void set_has_safebrowsingextendedreportingoptinallowed();
void clear_has_safebrowsingextendedreportingoptinallowed();
void set_has_spellcheckserviceenabled();
void clear_has_spellcheckserviceenabled();
void set_has_audiocaptureallowed();
void clear_has_audiocaptureallowed();
void set_has_audiocaptureallowedurls();
void clear_has_audiocaptureallowedurls();
void set_has_videocaptureallowed();
void clear_has_videocaptureallowed();
void set_has_videocaptureallowedurls();
void clear_has_videocaptureallowedurls();
void set_has_disablescreenshots();
void clear_has_disablescreenshots();
void set_has_builtindnsclientenabled();
void clear_has_builtindnsclientenabled();
void set_has_fullscreenallowed();
void clear_has_fullscreenallowed();
void set_has_hidewebstoreicon();
void clear_has_hidewebstoreicon();
void set_has_variationsrestrictparameter();
void clear_has_variationsrestrictparameter();
void set_has_contentpackdefaultfilteringbehavior();
void clear_has_contentpackdefaultfilteringbehavior();
void set_has_contentpackmanualbehaviorhosts();
void clear_has_contentpackmanualbehaviorhosts();
void set_has_contentpackmanualbehaviorurls();
void clear_has_contentpackmanualbehaviorurls();
void set_has_supervisedusercreationenabled();
void clear_has_supervisedusercreationenabled();
void set_has_managedbookmarks();
void clear_has_managedbookmarks();
void set_has_enabledeprecatedwebplatformfeatures();
void clear_has_enabledeprecatedwebplatformfeatures();
void set_has_browserguestmodeenabled();
void clear_has_browserguestmodeenabled();
void set_has_browseraddpersonenabled();
void clear_has_browseraddpersonenabled();
void set_has_sslversionmin();
void clear_has_sslversionmin();
void set_has_sslversionmax();
void clear_has_sslversionmax();
void set_has_certificatetransparencyenforcementdisabledforurls();
void clear_has_certificatetransparencyenforcementdisabledforurls();
void set_has_certificatetransparencyenforcementdisabledforcas();
void clear_has_certificatetransparencyenforcementdisabledforcas();
void set_has_certificatetransparencyenforcementdisabledforlegacycas();
void clear_has_certificatetransparencyenforcementdisabledforlegacycas();
void set_has_sslerroroverrideallowed();
void clear_has_sslerroroverrideallowed();
void set_has_quicallowed();
void clear_has_quicallowed();
void set_has_hardwareaccelerationmodeenabled();
void clear_has_hardwareaccelerationmodeenabled();
void set_has_suppressunsupportedoswarning();
void clear_has_suppressunsupportedoswarning();
void set_has_taskmanagerendprocessenabled();
void clear_has_taskmanagerendprocessenabled();
void set_has_alloweddomainsforapps();
void clear_has_alloweddomainsforapps();
void set_has_pachttpsurlstrippingenabled();
void clear_has_pachttpsurlstrippingenabled();
void set_has_enablemediarouter();
void clear_has_enablemediarouter();
void set_has_showcasticonintoolbar();
void clear_has_showcasticonintoolbar();
void set_has_mediaroutercastallowallips();
void clear_has_mediaroutercastallowallips();
void set_has_webrtcudpportrange();
void clear_has_webrtcudpportrange();
void set_has_componentupdatesenabled();
void clear_has_componentupdatesenabled();
void set_has_browsernetworktimequeriesenabled();
void clear_has_browsernetworktimequeriesenabled();
void set_has_printpreviewusesystemdefaultprinter();
void clear_has_printpreviewusesystemdefaultprinter();
void set_has_cloudpolicyoverridesmachinepolicy();
void clear_has_cloudpolicyoverridesmachinepolicy();
void set_has_promptfordownloadlocation();
void clear_has_promptfordownloadlocation();
void set_has_isolateorigins();
void clear_has_isolateorigins();
void set_has_siteperprocess();
void clear_has_siteperprocess();
void set_has_webdriveroverridesincompatiblepolicies();
void clear_has_webdriveroverridesincompatiblepolicies();
void set_has_unsafelytreatinsecureoriginassecure();
void clear_has_unsafelytreatinsecureoriginassecure();
void set_has_defaultdownloaddirectory();
void clear_has_defaultdownloaddirectory();
void set_has_abusiveexperienceinterventionenforce();
void clear_has_abusiveexperienceinterventionenforce();
void set_has_spellchecklanguage();
void clear_has_spellchecklanguage();
void set_has_spellcheckenabled();
void clear_has_spellcheckenabled();
void set_has_adssettingforintrusiveadssites();
void clear_has_adssettingforintrusiveadssites();
void set_has_passwordprotectionwarningtrigger();
void clear_has_passwordprotectionwarningtrigger();
void set_has_relaunchnotification();
void clear_has_relaunchnotification();
void set_has_relaunchnotificationperiod();
void clear_has_relaunchnotificationperiod();
void set_has_safebrowsingwhitelistdomains();
void clear_has_safebrowsingwhitelistdomains();
void set_has_passwordprotectionloginurls();
void clear_has_passwordprotectionloginurls();
void set_has_passwordprotectionchangepasswordurl();
void clear_has_passwordprotectionchangepasswordurl();
void set_has_safebrowsingextendedreportingenabled();
void clear_has_safebrowsingextendedreportingenabled();
void set_has_machinelevelusercloudpolicyenrollmenttoken();
void clear_has_machinelevelusercloudpolicyenrollmenttoken();
void set_has_autoplayallowed();
void clear_has_autoplayallowed();
void set_has_autoplaywhitelist();
void clear_has_autoplaywhitelist();

::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
::google::protobuf::internal::HasBits<7> _has_bits_;
mutable int _cached_size_;
::enterprise_management::StringPolicyProto* homepagelocation_;
::enterprise_management::BooleanPolicyProto* homepageisnewtabpage_;
::enterprise_management::BooleanPolicyProto* defaultbrowsersettingenabled_;
::enterprise_management::BooleanPolicyProto* alternateerrorpagesenabled_;
::enterprise_management::BooleanPolicyProto* searchsuggestenabled_;
::enterprise_management::BooleanPolicyProto* javascriptenabled_;
::enterprise_management::BooleanPolicyProto* incognitoenabled_;
::enterprise_management::BooleanPolicyProto* savingbrowserhistorydisabled_;
::enterprise_management::BooleanPolicyProto* printingenabled_;
::enterprise_management::BooleanPolicyProto* cloudprintproxyenabled_;
::enterprise_management::BooleanPolicyProto* safebrowsingenabled_;
::enterprise_management::BooleanPolicyProto* metricsreportingenabled_;
::enterprise_management::BooleanPolicyProto* passwordmanagerenabled_;
::enterprise_management::BooleanPolicyProto* autofillenabled_;
::enterprise_management::StringListPolicyProto* disabledplugins_;
::enterprise_management::BooleanPolicyProto* syncdisabled_;
::enterprise_management::StringPolicyProto* proxymode_;
::enterprise_management::IntegerPolicyProto* proxyservermode_;
::enterprise_management::StringPolicyProto* proxyserver_;
::enterprise_management::StringPolicyProto* proxypacurl_;
::enterprise_management::StringPolicyProto* proxybypasslist_;
::enterprise_management::StringPolicyProto* authschemes_;
::enterprise_management::BooleanPolicyProto* disableauthnegotiatecnamelookup_;
::enterprise_management::BooleanPolicyProto* enableauthnegotiateport_;
::enterprise_management::StringPolicyProto* authserverwhitelist_;
::enterprise_management::StringPolicyProto* authnegotiatedelegatewhitelist_;
::enterprise_management::StringPolicyProto* gssapilibraryname_;
::enterprise_management::StringListPolicyProto* extensioninstallblacklist_;
::enterprise_management::StringListPolicyProto* extensioninstallwhitelist_;
::enterprise_management::StringListPolicyProto* extensioninstallforcelist_;
::enterprise_management::BooleanPolicyProto* showhomebutton_;
::enterprise_management::BooleanPolicyProto* developertoolsdisabled_;
::enterprise_management::IntegerPolicyProto* restoreonstartup_;
::enterprise_management::StringListPolicyProto* restoreonstartupurls_;
::enterprise_management::BooleanPolicyProto* blockthirdpartycookies_;
::enterprise_management::BooleanPolicyProto* defaultsearchproviderenabled_;
::enterprise_management::StringPolicyProto* defaultsearchprovidername_;
::enterprise_management::StringPolicyProto* defaultsearchproviderkeyword_;
::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurl_;
::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturl_;
::enterprise_management::StringPolicyProto* defaultsearchprovidericonurl_;
::enterprise_management::StringListPolicyProto* defaultsearchproviderencodings_;
::enterprise_management::IntegerPolicyProto* defaultcookiessetting_;
::enterprise_management::IntegerPolicyProto* defaultimagessetting_;
::enterprise_management::IntegerPolicyProto* defaultjavascriptsetting_;
::enterprise_management::IntegerPolicyProto* defaultpluginssetting_;
::enterprise_management::IntegerPolicyProto* defaultpopupssetting_;
::enterprise_management::IntegerPolicyProto* defaultnotificationssetting_;
::enterprise_management::IntegerPolicyProto* defaultgeolocationsetting_;
::enterprise_management::BooleanPolicyProto* disable3dapis_;
::enterprise_management::StringPolicyProto* downloaddirectory_;
::enterprise_management::StringListPolicyProto* cookiesblockedforurls_;
::enterprise_management::StringListPolicyProto* cookiessessiononlyforurls_;
::enterprise_management::StringListPolicyProto* imagesallowedforurls_;
::enterprise_management::StringListPolicyProto* imagesblockedforurls_;
::enterprise_management::StringListPolicyProto* javascriptallowedforurls_;
::enterprise_management::StringListPolicyProto* javascriptblockedforurls_;
::enterprise_management::StringListPolicyProto* pluginsallowedforurls_;
::enterprise_management::StringListPolicyProto* pluginsblockedforurls_;
::enterprise_management::StringListPolicyProto* popupsallowedforurls_;
::enterprise_management::StringListPolicyProto* popupsblockedforurls_;
::enterprise_management::StringListPolicyProto* cookiesallowedforurls_;
::enterprise_management::StringListPolicyProto* enabledplugins_;
::enterprise_management::StringListPolicyProto* disabledpluginsexceptions_;
::enterprise_management::BooleanPolicyProto* translateenabled_;
::enterprise_management::BooleanPolicyProto* allowoutdatedplugins_;
::enterprise_management::BooleanPolicyProto* bookmarkbarenabled_;
::enterprise_management::BooleanPolicyProto* editbookmarksenabled_;
::enterprise_management::BooleanPolicyProto* allowfileselectiondialogs_;
::enterprise_management::StringListPolicyProto* disabledschemes_;
::enterprise_management::StringPolicyProto* diskcachedir_;
::enterprise_management::BooleanPolicyProto* allowcrossoriginauthprompt_;
::enterprise_management::IntegerPolicyProto* maxconnectionsperproxy_;
::enterprise_management::IntegerPolicyProto* incognitomodeavailability_;
::enterprise_management::BooleanPolicyProto* remoteaccesshostfirewalltraversal_;
::enterprise_management::BooleanPolicyProto* importbookmarks_;
::enterprise_management::BooleanPolicyProto* importhistory_;
::enterprise_management::BooleanPolicyProto* importhomepage_;
::enterprise_management::BooleanPolicyProto* importsearchengine_;
::enterprise_management::BooleanPolicyProto* importsavedpasswords_;
::enterprise_management::StringListPolicyProto* autoselectcertificateforurls_;
::enterprise_management::StringListPolicyProto* urlblacklist_;
::enterprise_management::StringListPolicyProto* urlwhitelist_;
::enterprise_management::StringListPolicyProto* notificationsallowedforurls_;
::enterprise_management::StringListPolicyProto* notificationsblockedforurls_;
::enterprise_management::BooleanPolicyProto* cloudprintsubmitenabled_;
::enterprise_management::IntegerPolicyProto* diskcachesize_;
::enterprise_management::IntegerPolicyProto* mediacachesize_;
::enterprise_management::StringPolicyProto* proxysettings_;
::enterprise_management::BooleanPolicyProto* disableprintpreview_;
::enterprise_management::BooleanPolicyProto* enableonlinerevocationchecks_;
::enterprise_management::BooleanPolicyProto* backgroundmodeenabled_;
::enterprise_management::StringPolicyProto* restrictsignintopattern_;
::enterprise_management::StringListPolicyProto* extensioninstallsources_;
::enterprise_management::IntegerPolicyProto* defaultmediastreamsetting_;
::enterprise_management::BooleanPolicyProto* disablesafebrowsingproceedanyway_;
::enterprise_management::BooleanPolicyProto* spellcheckserviceenabled_;
::enterprise_management::BooleanPolicyProto* disablescreenshots_;
::enterprise_management::StringPolicyProto* remoteaccesshostdomain_;
::enterprise_management::StringPolicyProto* remoteaccesshosttalkgadgetprefix_;
::enterprise_management::BooleanPolicyProto* remoteaccesshostrequirecurtain_;
::enterprise_management::BooleanPolicyProto* audiocaptureallowed_;
::enterprise_management::StringListPolicyProto* defaultsearchprovideralternateurls_;
::enterprise_management::BooleanPolicyProto* forcesafesearch_;
::enterprise_management::BooleanPolicyProto* builtindnsclientenabled_;
::enterprise_management::BooleanPolicyProto* videocaptureallowed_;
::enterprise_management::StringListPolicyProto* extensionallowedtypes_;
::enterprise_management::BooleanPolicyProto* allowdeletingbrowserhistory_;
::enterprise_management::BooleanPolicyProto* hidewebstoreicon_;
::enterprise_management::BooleanPolicyProto* signinallowed_;
::enterprise_management::StringPolicyProto* variationsrestrictparameter_;
::enterprise_management::IntegerPolicyProto* contentpackdefaultfilteringbehavior_;
::enterprise_management::StringPolicyProto* contentpackmanualbehaviorhosts_;
::enterprise_management::StringPolicyProto* contentpackmanualbehaviorurls_;
::enterprise_management::StringListPolicyProto* audiocaptureallowedurls_;
::enterprise_management::StringListPolicyProto* videocaptureallowedurls_;
::enterprise_management::BooleanPolicyProto* supervisedusercreationenabled_;
::enterprise_management::StringPolicyProto* managedbookmarks_;
::enterprise_management::IntegerPolicyProto* maxinvalidationfetchdelay_;
::enterprise_management::StringPolicyProto* defaultsearchproviderimageurl_;
::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurlpostparams_;
::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturlpostparams_;
::enterprise_management::StringPolicyProto* defaultsearchproviderimageurlpostparams_;
::enterprise_management::BooleanPolicyProto* remoteaccesshostallowclientpairing_;
::enterprise_management::BooleanPolicyProto* requireonlinerevocationchecksforlocalanchors_;
::enterprise_management::StringPolicyProto* defaultsearchprovidernewtaburl_;
::enterprise_management::BooleanPolicyProto* fullscreenallowed_;
::enterprise_management::BooleanPolicyProto* forceephemeralprofiles_;
::enterprise_management::StringListPolicyProto* nativemessagingblacklist_;
::enterprise_management::StringListPolicyProto* nativemessagingwhitelist_;
::enterprise_management::BooleanPolicyProto* nativemessaginguserlevelhosts_;
::enterprise_management::BooleanPolicyProto* remoteaccesshostallowgnubbyauth_;
::enterprise_management::BooleanPolicyProto* wpadquickcheckenabled_;
::enterprise_management::BooleanPolicyProto* remoteaccesshostallowrelayedconnection_;
::enterprise_management::StringPolicyProto* remoteaccesshostudpportrange_;
::enterprise_management::BooleanPolicyProto* showappsshortcutinbookmarkbar_;
::enterprise_management::StringPolicyProto* registeredprotocolhandlers_;
::enterprise_management::StringListPolicyProto* enabledeprecatedwebplatformfeatures_;
::enterprise_management::IntegerPolicyProto* networkpredictionoptions_;
::enterprise_management::BooleanPolicyProto* browserguestmodeenabled_;
::enterprise_management::BooleanPolicyProto* browseraddpersonenabled_;
::enterprise_management::BooleanPolicyProto* importautofillformdata_;
::enterprise_management::StringPolicyProto* extensionsettings_;
::enterprise_management::StringPolicyProto* sslversionmin_;
::enterprise_management::BooleanPolicyProto* forcegooglesafesearch_;
::enterprise_management::BooleanPolicyProto* forceyoutubesafetymode_;
::enterprise_management::BooleanPolicyProto* remoteaccesshostmatchusername_;
::enterprise_management::StringPolicyProto* remoteaccesshosttokenurl_;
::enterprise_management::StringPolicyProto* remoteaccesshosttokenvalidationurl_;
::enterprise_management::StringPolicyProto* remoteaccesshosttokenvalidationcertificateissuer_;
::enterprise_management::BooleanPolicyProto* safebrowsingextendedreportingoptinallowed_;
::enterprise_management::BooleanPolicyProto* sslerroroverrideallowed_;
::enterprise_management::BooleanPolicyProto* quicallowed_;
::enterprise_management::BooleanPolicyProto* hardwareaccelerationmodeenabled_;
::enterprise_management::StringPolicyProto* defaultprinterselection_;
::enterprise_management::BooleanPolicyProto* allowdinosaureasteregg_;
::enterprise_management::StringPolicyProto* remoteaccesshostclientdomain_;
::enterprise_management::IntegerPolicyProto* defaultwebbluetoothguardsetting_;
::enterprise_management::BooleanPolicyProto* suppressunsupportedoswarning_;
::enterprise_management::BooleanPolicyProto* taskmanagerendprocessenabled_;
::enterprise_management::StringPolicyProto* alloweddomainsforapps_;
::enterprise_management::BooleanPolicyProto* pachttpsurlstrippingenabled_;
::enterprise_management::BooleanPolicyProto* enablemediarouter_;
::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforurls_;
::enterprise_management::StringPolicyProto* webrtcudpportrange_;
::enterprise_management::BooleanPolicyProto* enablesha1forlocalanchors_;
::enterprise_management::BooleanPolicyProto* componentupdatesenabled_;
::enterprise_management::BooleanPolicyProto* http09onnondefaultportsenabled_;
::enterprise_management::BooleanPolicyProto* alwaysopenpdfexternally_;
::enterprise_management::IntegerPolicyProto* forceyoutuberestrict_;
::enterprise_management::StringPolicyProto* newtabpagelocation_;
::enterprise_management::StringPolicyProto* sslversionmax_;
::enterprise_management::BooleanPolicyProto* showcasticonintoolbar_;
::enterprise_management::StringListPolicyProto* remoteaccesshostdomainlist_;
::enterprise_management::StringListPolicyProto* remoteaccesshostclientdomainlist_;
::enterprise_management::BooleanPolicyProto* browsernetworktimequeriesenabled_;
::enterprise_management::IntegerPolicyProto* downloadrestrictions_;
::enterprise_management::BooleanPolicyProto* printpreviewusesystemdefaultprinter_;
::enterprise_management::BooleanPolicyProto* cloudpolicyoverridesmachinepolicy_;
::enterprise_management::BooleanPolicyProto* runallflashinallowmode_;
::enterprise_management::BooleanPolicyProto* autofillcreditcardenabled_;
::enterprise_management::BooleanPolicyProto* ntlmv2enabled_;
::enterprise_management::BooleanPolicyProto* promptfordownloadlocation_;
::enterprise_management::StringPolicyProto* isolateorigins_;
::enterprise_management::BooleanPolicyProto* siteperprocess_;
::enterprise_management::StringListPolicyProto* unsafelytreatinsecureoriginassecure_;
::enterprise_management::StringPolicyProto* defaultdownloaddirectory_;
::enterprise_management::StringListPolicyProto* securitykeypermitattestation_;
::enterprise_management::BooleanPolicyProto* abusiveexperienceinterventionenforce_;
::enterprise_management::StringListPolicyProto* spellchecklanguage_;
::enterprise_management::BooleanPolicyProto* spellcheckenabled_;
::enterprise_management::IntegerPolicyProto* adssettingforintrusiveadssites_;
::enterprise_management::IntegerPolicyProto* passwordprotectionwarningtrigger_;
::enterprise_management::BooleanPolicyProto* enablesymanteclegacyinfrastructure_;
::enterprise_management::BooleanPolicyProto* webdriveroverridesincompatiblepolicies_;
::enterprise_management::IntegerPolicyProto* relaunchnotification_;
::enterprise_management::IntegerPolicyProto* relaunchnotificationperiod_;
::enterprise_management::StringListPolicyProto* safebrowsingwhitelistdomains_;
::enterprise_management::StringListPolicyProto* passwordprotectionloginurls_;
::enterprise_management::StringPolicyProto* passwordprotectionchangepasswordurl_;
::enterprise_management::StringPolicyProto* machinelevelusercloudpolicyenrollmenttoken_;
::enterprise_management::BooleanPolicyProto* safebrowsingextendedreportingenabled_;
::enterprise_management::BooleanPolicyProto* autoplayallowed_;
::enterprise_management::StringListPolicyProto* autoplaywhitelist_;
::enterprise_management::IntegerPolicyProto* defaultwebusbguardsetting_;
::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforcas_;
::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforlegacycas_;
::enterprise_management::BooleanPolicyProto* mediaroutercastallowallips_;
::enterprise_management::StringListPolicyProto* webusbaskforurls_;
::enterprise_management::StringListPolicyProto* webusbblockedforurls_;
::enterprise_management::IntegerPolicyProto* developertoolsavailability_;
friend struct protobuf_cloud_5fpolicy_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// StringList

// repeated string entries = 1;
inline int StringList::entries_size() const {
return entries_.size();
}
inline void StringList::clear_entries() {
entries_.Clear();
}
inline const ::std::string& StringList::entries(int index) const {
// @@protoc_insertion_point(field_get:enterprise_management.StringList.entries)
return entries_.Get(index);
}
inline ::std::string* StringList::mutable_entries(int index) {
// @@protoc_insertion_point(field_mutable:enterprise_management.StringList.entries)
return entries_.Mutable(index);
}
inline void StringList::set_entries(int index, const ::std::string& value) {
// @@protoc_insertion_point(field_set:enterprise_management.StringList.entries)
entries_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void StringList::set_entries(int index, ::std::string&& value) {
// @@protoc_insertion_point(field_set:enterprise_management.StringList.entries)
entries_.Mutable(index)->assign(std::move(value));
}
#endif
inline void StringList::set_entries(int index, const char* value) {
GOOGLE_DCHECK(value != NULL);
entries_.Mutable(index)->assign(value);
// @@protoc_insertion_point(field_set_char:enterprise_management.StringList.entries)
}
inline void StringList::set_entries(int index, const char* value, size_t size) {
entries_.Mutable(index)->assign(
reinterpret_cast<const char*>(value), size);
// @@protoc_insertion_point(field_set_pointer:enterprise_management.StringList.entries)
}
inline ::std::string* StringList::add_entries() {
// @@protoc_insertion_point(field_add_mutable:enterprise_management.StringList.entries)
return entries_.Add();
}
inline void StringList::add_entries(const ::std::string& value) {
entries_.Add()->assign(value);
// @@protoc_insertion_point(field_add:enterprise_management.StringList.entries)
}
#if LANG_CXX11
inline void StringList::add_entries(::std::string&& value) {
entries_.Add(std::move(value));
// @@protoc_insertion_point(field_add:enterprise_management.StringList.entries)
}
#endif
inline void StringList::add_entries(const char* value) {
GOOGLE_DCHECK(value != NULL);
entries_.Add()->assign(value);
// @@protoc_insertion_point(field_add_char:enterprise_management.StringList.entries)
}
inline void StringList::add_entries(const char* value, size_t size) {
entries_.Add()->assign(reinterpret_cast<const char*>(value), size);
// @@protoc_insertion_point(field_add_pointer:enterprise_management.StringList.entries)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringList::entries() const {
// @@protoc_insertion_point(field_list:enterprise_management.StringList.entries)
return entries_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StringList::mutable_entries() {
// @@protoc_insertion_point(field_mutable_list:enterprise_management.StringList.entries)
return &entries_;
}

// -------------------------------------------------------------------

// PolicyOptions

// optional .enterprise_management.PolicyOptions.PolicyMode mode = 1 [default = MANDATORY];
inline bool PolicyOptions::has_mode() const {
return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PolicyOptions::set_has_mode() {
_has_bits_[0] |= 0x00000001u;
}
inline void PolicyOptions::clear_has_mode() {
_has_bits_[0] &= ~0x00000001u;
}
inline void PolicyOptions::clear_mode() {
mode_ = 0;
clear_has_mode();
}
inline ::enterprise_management::PolicyOptions_PolicyMode PolicyOptions::mode() const {
// @@protoc_insertion_point(field_get:enterprise_management.PolicyOptions.mode)
return static_cast< ::enterprise_management::PolicyOptions_PolicyMode >(mode_);
}
inline void PolicyOptions::set_mode(::enterprise_management::PolicyOptions_PolicyMode value) {
assert(::enterprise_management::PolicyOptions_PolicyMode_IsValid(value));
set_has_mode();
mode_ = value;
// @@protoc_insertion_point(field_set:enterprise_management.PolicyOptions.mode)
}

// -------------------------------------------------------------------

// BooleanPolicyProto

// optional .enterprise_management.PolicyOptions policy_options = 1;
inline bool BooleanPolicyProto::has_policy_options() const {
return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BooleanPolicyProto::set_has_policy_options() {
_has_bits_[0] |= 0x00000001u;
}
inline void BooleanPolicyProto::clear_has_policy_options() {
_has_bits_[0] &= ~0x00000001u;
}
inline void BooleanPolicyProto::clear_policy_options() {
if (policy_options_ != NULL) policy_options_->::enterprise_management::PolicyOptions::Clear();
clear_has_policy_options();
}
inline const ::enterprise_management::PolicyOptions& BooleanPolicyProto::policy_options() const {
// @@protoc_insertion_point(field_get:enterprise_management.BooleanPolicyProto.policy_options)
return policy_options_ != NULL ? *policy_options_
: *::enterprise_management::PolicyOptions::internal_default_instance();
}
inline ::enterprise_management::PolicyOptions* BooleanPolicyProto::mutable_policy_options() {
set_has_policy_options();
if (policy_options_ == NULL) {
policy_options_ = new ::enterprise_management::PolicyOptions;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.BooleanPolicyProto.policy_options)
return policy_options_;
}
inline ::enterprise_management::PolicyOptions* BooleanPolicyProto::release_policy_options() {
// @@protoc_insertion_point(field_release:enterprise_management.BooleanPolicyProto.policy_options)
clear_has_policy_options();
::enterprise_management::PolicyOptions* temp = policy_options_;
policy_options_ = NULL;
return temp;
}
inline void BooleanPolicyProto::set_allocated_policy_options(::enterprise_management::PolicyOptions* policy_options) {
delete policy_options_;
policy_options_ = policy_options;
if (policy_options) {
set_has_policy_options();
} else {
clear_has_policy_options();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.BooleanPolicyProto.policy_options)
}

// optional bool value = 2;
inline bool BooleanPolicyProto::has_value() const {
return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BooleanPolicyProto::set_has_value() {
_has_bits_[0] |= 0x00000002u;
}
inline void BooleanPolicyProto::clear_has_value() {
_has_bits_[0] &= ~0x00000002u;
}
inline void BooleanPolicyProto::clear_value() {
value_ = false;
clear_has_value();
}
inline bool BooleanPolicyProto::value() const {
// @@protoc_insertion_point(field_get:enterprise_management.BooleanPolicyProto.value)
return value_;
}
inline void BooleanPolicyProto::set_value(bool value) {
set_has_value();
value_ = value;
// @@protoc_insertion_point(field_set:enterprise_management.BooleanPolicyProto.value)
}

// -------------------------------------------------------------------

// IntegerPolicyProto

// optional .enterprise_management.PolicyOptions policy_options = 1;
inline bool IntegerPolicyProto::has_policy_options() const {
return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntegerPolicyProto::set_has_policy_options() {
_has_bits_[0] |= 0x00000001u;
}
inline void IntegerPolicyProto::clear_has_policy_options() {
_has_bits_[0] &= ~0x00000001u;
}
inline void IntegerPolicyProto::clear_policy_options() {
if (policy_options_ != NULL) policy_options_->::enterprise_management::PolicyOptions::Clear();
clear_has_policy_options();
}
inline const ::enterprise_management::PolicyOptions& IntegerPolicyProto::policy_options() const {
// @@protoc_insertion_point(field_get:enterprise_management.IntegerPolicyProto.policy_options)
return policy_options_ != NULL ? *policy_options_
: *::enterprise_management::PolicyOptions::internal_default_instance();
}
inline ::enterprise_management::PolicyOptions* IntegerPolicyProto::mutable_policy_options() {
set_has_policy_options();
if (policy_options_ == NULL) {
policy_options_ = new ::enterprise_management::PolicyOptions;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.IntegerPolicyProto.policy_options)
return policy_options_;
}
inline ::enterprise_management::PolicyOptions* IntegerPolicyProto::release_policy_options() {
// @@protoc_insertion_point(field_release:enterprise_management.IntegerPolicyProto.policy_options)
clear_has_policy_options();
::enterprise_management::PolicyOptions* temp = policy_options_;
policy_options_ = NULL;
return temp;
}
inline void IntegerPolicyProto::set_allocated_policy_options(::enterprise_management::PolicyOptions* policy_options) {
delete policy_options_;
policy_options_ = policy_options;
if (policy_options) {
set_has_policy_options();
} else {
clear_has_policy_options();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.IntegerPolicyProto.policy_options)
}

// optional int64 value = 2;
inline bool IntegerPolicyProto::has_value() const {
return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntegerPolicyProto::set_has_value() {
_has_bits_[0] |= 0x00000002u;
}
inline void IntegerPolicyProto::clear_has_value() {
_has_bits_[0] &= ~0x00000002u;
}
inline void IntegerPolicyProto::clear_value() {
value_ = GOOGLE_LONGLONG(0);
clear_has_value();
}
inline ::google::protobuf::int64 IntegerPolicyProto::value() const {
// @@protoc_insertion_point(field_get:enterprise_management.IntegerPolicyProto.value)
return value_;
}
inline void IntegerPolicyProto::set_value(::google::protobuf::int64 value) {
set_has_value();
value_ = value;
// @@protoc_insertion_point(field_set:enterprise_management.IntegerPolicyProto.value)
}

// -------------------------------------------------------------------

// StringPolicyProto

// optional .enterprise_management.PolicyOptions policy_options = 1;
inline bool StringPolicyProto::has_policy_options() const {
return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StringPolicyProto::set_has_policy_options() {
_has_bits_[0] |= 0x00000002u;
}
inline void StringPolicyProto::clear_has_policy_options() {
_has_bits_[0] &= ~0x00000002u;
}
inline void StringPolicyProto::clear_policy_options() {
if (policy_options_ != NULL) policy_options_->::enterprise_management::PolicyOptions::Clear();
clear_has_policy_options();
}
inline const ::enterprise_management::PolicyOptions& StringPolicyProto::policy_options() const {
// @@protoc_insertion_point(field_get:enterprise_management.StringPolicyProto.policy_options)
return policy_options_ != NULL ? *policy_options_
: *::enterprise_management::PolicyOptions::internal_default_instance();
}
inline ::enterprise_management::PolicyOptions* StringPolicyProto::mutable_policy_options() {
set_has_policy_options();
if (policy_options_ == NULL) {
policy_options_ = new ::enterprise_management::PolicyOptions;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.StringPolicyProto.policy_options)
return policy_options_;
}
inline ::enterprise_management::PolicyOptions* StringPolicyProto::release_policy_options() {
// @@protoc_insertion_point(field_release:enterprise_management.StringPolicyProto.policy_options)
clear_has_policy_options();
::enterprise_management::PolicyOptions* temp = policy_options_;
policy_options_ = NULL;
return temp;
}
inline void StringPolicyProto::set_allocated_policy_options(::enterprise_management::PolicyOptions* policy_options) {
delete policy_options_;
policy_options_ = policy_options;
if (policy_options) {
set_has_policy_options();
} else {
clear_has_policy_options();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.StringPolicyProto.policy_options)
}

// optional string value = 2;
inline bool StringPolicyProto::has_value() const {
return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StringPolicyProto::set_has_value() {
_has_bits_[0] |= 0x00000001u;
}
inline void StringPolicyProto::clear_has_value() {
_has_bits_[0] &= ~0x00000001u;
}
inline void StringPolicyProto::clear_value() {
value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
clear_has_value();
}
inline const ::std::string& StringPolicyProto::value() const {
// @@protoc_insertion_point(field_get:enterprise_management.StringPolicyProto.value)
return value_.GetNoArena();
}
inline void StringPolicyProto::set_value(const ::std::string& value) {
set_has_value();
value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
// @@protoc_insertion_point(field_set:enterprise_management.StringPolicyProto.value)
}
#if LANG_CXX11
inline void StringPolicyProto::set_value(::std::string&& value) {
set_has_value();
value_.SetNoArena(
&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
// @@protoc_insertion_point(field_set_rvalue:enterprise_management.StringPolicyProto.value)
}
#endif
inline void StringPolicyProto::set_value(const char* value) {
GOOGLE_DCHECK(value != NULL);
set_has_value();
value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
// @@protoc_insertion_point(field_set_char:enterprise_management.StringPolicyProto.value)
}
inline void StringPolicyProto::set_value(const char* value, size_t size) {
set_has_value();
value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
::std::string(reinterpret_cast<const char*>(value), size));
// @@protoc_insertion_point(field_set_pointer:enterprise_management.StringPolicyProto.value)
}
inline ::std::string* StringPolicyProto::mutable_value() {
set_has_value();
// @@protoc_insertion_point(field_mutable:enterprise_management.StringPolicyProto.value)
return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StringPolicyProto::release_value() {
// @@protoc_insertion_point(field_release:enterprise_management.StringPolicyProto.value)
clear_has_value();
return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringPolicyProto::set_allocated_value(::std::string* value) {
if (value != NULL) {
set_has_value();
} else {
clear_has_value();
}
value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
// @@protoc_insertion_point(field_set_allocated:enterprise_management.StringPolicyProto.value)
}

// -------------------------------------------------------------------

// StringListPolicyProto

// optional .enterprise_management.PolicyOptions policy_options = 1;
inline bool StringListPolicyProto::has_policy_options() const {
return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StringListPolicyProto::set_has_policy_options() {
_has_bits_[0] |= 0x00000001u;
}
inline void StringListPolicyProto::clear_has_policy_options() {
_has_bits_[0] &= ~0x00000001u;
}
inline void StringListPolicyProto::clear_policy_options() {
if (policy_options_ != NULL) policy_options_->::enterprise_management::PolicyOptions::Clear();
clear_has_policy_options();
}
inline const ::enterprise_management::PolicyOptions& StringListPolicyProto::policy_options() const {
// @@protoc_insertion_point(field_get:enterprise_management.StringListPolicyProto.policy_options)
return policy_options_ != NULL ? *policy_options_
: *::enterprise_management::PolicyOptions::internal_default_instance();
}
inline ::enterprise_management::PolicyOptions* StringListPolicyProto::mutable_policy_options() {
set_has_policy_options();
if (policy_options_ == NULL) {
policy_options_ = new ::enterprise_management::PolicyOptions;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.StringListPolicyProto.policy_options)
return policy_options_;
}
inline ::enterprise_management::PolicyOptions* StringListPolicyProto::release_policy_options() {
// @@protoc_insertion_point(field_release:enterprise_management.StringListPolicyProto.policy_options)
clear_has_policy_options();
::enterprise_management::PolicyOptions* temp = policy_options_;
policy_options_ = NULL;
return temp;
}
inline void StringListPolicyProto::set_allocated_policy_options(::enterprise_management::PolicyOptions* policy_options) {
delete policy_options_;
policy_options_ = policy_options;
if (policy_options) {
set_has_policy_options();
} else {
clear_has_policy_options();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.StringListPolicyProto.policy_options)
}

// optional .enterprise_management.StringList value = 2;
inline bool StringListPolicyProto::has_value() const {
return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StringListPolicyProto::set_has_value() {
_has_bits_[0] |= 0x00000002u;
}
inline void StringListPolicyProto::clear_has_value() {
_has_bits_[0] &= ~0x00000002u;
}
inline void StringListPolicyProto::clear_value() {
if (value_ != NULL) value_->::enterprise_management::StringList::Clear();
clear_has_value();
}
inline const ::enterprise_management::StringList& StringListPolicyProto::value() const {
// @@protoc_insertion_point(field_get:enterprise_management.StringListPolicyProto.value)
return value_ != NULL ? *value_
: *::enterprise_management::StringList::internal_default_instance();
}
inline ::enterprise_management::StringList* StringListPolicyProto::mutable_value() {
set_has_value();
if (value_ == NULL) {
value_ = new ::enterprise_management::StringList;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.StringListPolicyProto.value)
return value_;
}
inline ::enterprise_management::StringList* StringListPolicyProto::release_value() {
// @@protoc_insertion_point(field_release:enterprise_management.StringListPolicyProto.value)
clear_has_value();
::enterprise_management::StringList* temp = value_;
value_ = NULL;
return temp;
}
inline void StringListPolicyProto::set_allocated_value(::enterprise_management::StringList* value) {
delete value_;
value_ = value;
if (value) {
set_has_value();
} else {
clear_has_value();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.StringListPolicyProto.value)
}

// -------------------------------------------------------------------

// CloudPolicySettings

// optional .enterprise_management.StringPolicyProto HomepageLocation = 3;
inline bool CloudPolicySettings::has_homepagelocation() const {
return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CloudPolicySettings::set_has_homepagelocation() {
_has_bits_[0] |= 0x00000001u;
}
inline void CloudPolicySettings::clear_has_homepagelocation() {
_has_bits_[0] &= ~0x00000001u;
}
inline void CloudPolicySettings::clear_homepagelocation() {
if (homepagelocation_ != NULL) homepagelocation_->::enterprise_management::StringPolicyProto::Clear();
clear_has_homepagelocation();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::homepagelocation() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.HomepageLocation)
return homepagelocation_ != NULL ? *homepagelocation_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_homepagelocation() {
set_has_homepagelocation();
if (homepagelocation_ == NULL) {
homepagelocation_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.HomepageLocation)
return homepagelocation_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_homepagelocation() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.HomepageLocation)
clear_has_homepagelocation();
::enterprise_management::StringPolicyProto* temp = homepagelocation_;
homepagelocation_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_homepagelocation(::enterprise_management::StringPolicyProto* homepagelocation) {
delete homepagelocation_;
homepagelocation_ = homepagelocation;
if (homepagelocation) {
set_has_homepagelocation();
} else {
clear_has_homepagelocation();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.HomepageLocation)
}

// optional .enterprise_management.BooleanPolicyProto HomepageIsNewTabPage = 4;
inline bool CloudPolicySettings::has_homepageisnewtabpage() const {
return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CloudPolicySettings::set_has_homepageisnewtabpage() {
_has_bits_[0] |= 0x00000002u;
}
inline void CloudPolicySettings::clear_has_homepageisnewtabpage() {
_has_bits_[0] &= ~0x00000002u;
}
inline void CloudPolicySettings::clear_homepageisnewtabpage() {
if (homepageisnewtabpage_ != NULL) homepageisnewtabpage_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_homepageisnewtabpage();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::homepageisnewtabpage() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.HomepageIsNewTabPage)
return homepageisnewtabpage_ != NULL ? *homepageisnewtabpage_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_homepageisnewtabpage() {
set_has_homepageisnewtabpage();
if (homepageisnewtabpage_ == NULL) {
homepageisnewtabpage_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.HomepageIsNewTabPage)
return homepageisnewtabpage_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_homepageisnewtabpage() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.HomepageIsNewTabPage)
clear_has_homepageisnewtabpage();
::enterprise_management::BooleanPolicyProto* temp = homepageisnewtabpage_;
homepageisnewtabpage_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_homepageisnewtabpage(::enterprise_management::BooleanPolicyProto* homepageisnewtabpage) {
delete homepageisnewtabpage_;
homepageisnewtabpage_ = homepageisnewtabpage;
if (homepageisnewtabpage) {
set_has_homepageisnewtabpage();
} else {
clear_has_homepageisnewtabpage();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.HomepageIsNewTabPage)
}

// optional .enterprise_management.StringPolicyProto NewTabPageLocation = 362;
inline bool CloudPolicySettings::has_newtabpagelocation() const {
return (_has_bits_[5] & 0x00000400u) != 0;
}
inline void CloudPolicySettings::set_has_newtabpagelocation() {
_has_bits_[5] |= 0x00000400u;
}
inline void CloudPolicySettings::clear_has_newtabpagelocation() {
_has_bits_[5] &= ~0x00000400u;
}
inline void CloudPolicySettings::clear_newtabpagelocation() {
if (newtabpagelocation_ != NULL) newtabpagelocation_->::enterprise_management::StringPolicyProto::Clear();
clear_has_newtabpagelocation();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::newtabpagelocation() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NewTabPageLocation)
return newtabpagelocation_ != NULL ? *newtabpagelocation_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_newtabpagelocation() {
set_has_newtabpagelocation();
if (newtabpagelocation_ == NULL) {
newtabpagelocation_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NewTabPageLocation)
return newtabpagelocation_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_newtabpagelocation() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NewTabPageLocation)
clear_has_newtabpagelocation();
::enterprise_management::StringPolicyProto* temp = newtabpagelocation_;
newtabpagelocation_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_newtabpagelocation(::enterprise_management::StringPolicyProto* newtabpagelocation) {
delete newtabpagelocation_;
newtabpagelocation_ = newtabpagelocation;
if (newtabpagelocation) {
set_has_newtabpagelocation();
} else {
clear_has_newtabpagelocation();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NewTabPageLocation)
}

// optional .enterprise_management.BooleanPolicyProto DefaultBrowserSettingEnabled = 5;
inline bool CloudPolicySettings::has_defaultbrowsersettingenabled() const {
return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CloudPolicySettings::set_has_defaultbrowsersettingenabled() {
_has_bits_[0] |= 0x00000004u;
}
inline void CloudPolicySettings::clear_has_defaultbrowsersettingenabled() {
_has_bits_[0] &= ~0x00000004u;
}
inline void CloudPolicySettings::clear_defaultbrowsersettingenabled() {
if (defaultbrowsersettingenabled_ != NULL) defaultbrowsersettingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_defaultbrowsersettingenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::defaultbrowsersettingenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultBrowserSettingEnabled)
return defaultbrowsersettingenabled_ != NULL ? *defaultbrowsersettingenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_defaultbrowsersettingenabled() {
set_has_defaultbrowsersettingenabled();
if (defaultbrowsersettingenabled_ == NULL) {
defaultbrowsersettingenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultBrowserSettingEnabled)
return defaultbrowsersettingenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_defaultbrowsersettingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultBrowserSettingEnabled)
clear_has_defaultbrowsersettingenabled();
::enterprise_management::BooleanPolicyProto* temp = defaultbrowsersettingenabled_;
defaultbrowsersettingenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultbrowsersettingenabled(::enterprise_management::BooleanPolicyProto* defaultbrowsersettingenabled) {
delete defaultbrowsersettingenabled_;
defaultbrowsersettingenabled_ = defaultbrowsersettingenabled;
if (defaultbrowsersettingenabled) {
set_has_defaultbrowsersettingenabled();
} else {
clear_has_defaultbrowsersettingenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultBrowserSettingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AlternateErrorPagesEnabled = 7;
inline bool CloudPolicySettings::has_alternateerrorpagesenabled() const {
return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CloudPolicySettings::set_has_alternateerrorpagesenabled() {
_has_bits_[0] |= 0x00000008u;
}
inline void CloudPolicySettings::clear_has_alternateerrorpagesenabled() {
_has_bits_[0] &= ~0x00000008u;
}
inline void CloudPolicySettings::clear_alternateerrorpagesenabled() {
if (alternateerrorpagesenabled_ != NULL) alternateerrorpagesenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_alternateerrorpagesenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::alternateerrorpagesenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
return alternateerrorpagesenabled_ != NULL ? *alternateerrorpagesenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_alternateerrorpagesenabled() {
set_has_alternateerrorpagesenabled();
if (alternateerrorpagesenabled_ == NULL) {
alternateerrorpagesenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
return alternateerrorpagesenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_alternateerrorpagesenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
clear_has_alternateerrorpagesenabled();
::enterprise_management::BooleanPolicyProto* temp = alternateerrorpagesenabled_;
alternateerrorpagesenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_alternateerrorpagesenabled(::enterprise_management::BooleanPolicyProto* alternateerrorpagesenabled) {
delete alternateerrorpagesenabled_;
alternateerrorpagesenabled_ = alternateerrorpagesenabled;
if (alternateerrorpagesenabled) {
set_has_alternateerrorpagesenabled();
} else {
clear_has_alternateerrorpagesenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
}

// optional .enterprise_management.BooleanPolicyProto SearchSuggestEnabled = 8;
inline bool CloudPolicySettings::has_searchsuggestenabled() const {
return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CloudPolicySettings::set_has_searchsuggestenabled() {
_has_bits_[0] |= 0x00000010u;
}
inline void CloudPolicySettings::clear_has_searchsuggestenabled() {
_has_bits_[0] &= ~0x00000010u;
}
inline void CloudPolicySettings::clear_searchsuggestenabled() {
if (searchsuggestenabled_ != NULL) searchsuggestenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_searchsuggestenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::searchsuggestenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
return searchsuggestenabled_ != NULL ? *searchsuggestenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_searchsuggestenabled() {
set_has_searchsuggestenabled();
if (searchsuggestenabled_ == NULL) {
searchsuggestenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
return searchsuggestenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_searchsuggestenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
clear_has_searchsuggestenabled();
::enterprise_management::BooleanPolicyProto* temp = searchsuggestenabled_;
searchsuggestenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_searchsuggestenabled(::enterprise_management::BooleanPolicyProto* searchsuggestenabled) {
delete searchsuggestenabled_;
searchsuggestenabled_ = searchsuggestenabled;
if (searchsuggestenabled) {
set_has_searchsuggestenabled();
} else {
clear_has_searchsuggestenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
}

// optional .enterprise_management.IntegerPolicyProto NetworkPredictionOptions = 275;
inline bool CloudPolicySettings::has_networkpredictionoptions() const {
return (_has_bits_[4] & 0x00000400u) != 0;
}
inline void CloudPolicySettings::set_has_networkpredictionoptions() {
_has_bits_[4] |= 0x00000400u;
}
inline void CloudPolicySettings::clear_has_networkpredictionoptions() {
_has_bits_[4] &= ~0x00000400u;
}
inline void CloudPolicySettings::clear_networkpredictionoptions() {
if (networkpredictionoptions_ != NULL) networkpredictionoptions_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_networkpredictionoptions();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::networkpredictionoptions() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
return networkpredictionoptions_ != NULL ? *networkpredictionoptions_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_networkpredictionoptions() {
set_has_networkpredictionoptions();
if (networkpredictionoptions_ == NULL) {
networkpredictionoptions_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
return networkpredictionoptions_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_networkpredictionoptions() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
clear_has_networkpredictionoptions();
::enterprise_management::IntegerPolicyProto* temp = networkpredictionoptions_;
networkpredictionoptions_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_networkpredictionoptions(::enterprise_management::IntegerPolicyProto* networkpredictionoptions) {
delete networkpredictionoptions_;
networkpredictionoptions_ = networkpredictionoptions;
if (networkpredictionoptions) {
set_has_networkpredictionoptions();
} else {
clear_has_networkpredictionoptions();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
}

// optional .enterprise_management.BooleanPolicyProto WPADQuickCheckEnabled = 263;
inline bool CloudPolicySettings::has_wpadquickcheckenabled() const {
return (_has_bits_[4] & 0x00000010u) != 0;
}
inline void CloudPolicySettings::set_has_wpadquickcheckenabled() {
_has_bits_[4] |= 0x00000010u;
}
inline void CloudPolicySettings::clear_has_wpadquickcheckenabled() {
_has_bits_[4] &= ~0x00000010u;
}
inline void CloudPolicySettings::clear_wpadquickcheckenabled() {
if (wpadquickcheckenabled_ != NULL) wpadquickcheckenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_wpadquickcheckenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::wpadquickcheckenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WPADQuickCheckEnabled)
return wpadquickcheckenabled_ != NULL ? *wpadquickcheckenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_wpadquickcheckenabled() {
set_has_wpadquickcheckenabled();
if (wpadquickcheckenabled_ == NULL) {
wpadquickcheckenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WPADQuickCheckEnabled)
return wpadquickcheckenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_wpadquickcheckenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WPADQuickCheckEnabled)
clear_has_wpadquickcheckenabled();
::enterprise_management::BooleanPolicyProto* temp = wpadquickcheckenabled_;
wpadquickcheckenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_wpadquickcheckenabled(::enterprise_management::BooleanPolicyProto* wpadquickcheckenabled) {
delete wpadquickcheckenabled_;
wpadquickcheckenabled_ = wpadquickcheckenabled;
if (wpadquickcheckenabled) {
set_has_wpadquickcheckenabled();
} else {
clear_has_wpadquickcheckenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WPADQuickCheckEnabled)
}

// optional .enterprise_management.StringListPolicyProto DisabledSchemes = 87;
inline bool CloudPolicySettings::has_disabledschemes() const {
return (_has_bits_[2] & 0x00000020u) != 0;
}
inline void CloudPolicySettings::set_has_disabledschemes() {
_has_bits_[2] |= 0x00000020u;
}
inline void CloudPolicySettings::clear_has_disabledschemes() {
_has_bits_[2] &= ~0x00000020u;
}
inline void CloudPolicySettings::clear_disabledschemes() {
if (disabledschemes_ != NULL) disabledschemes_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_disabledschemes();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::disabledschemes() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisabledSchemes)
return disabledschemes_ != NULL ? *disabledschemes_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_disabledschemes() {
set_has_disabledschemes();
if (disabledschemes_ == NULL) {
disabledschemes_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisabledSchemes)
return disabledschemes_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_disabledschemes() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisabledSchemes)
clear_has_disabledschemes();
::enterprise_management::StringListPolicyProto* temp = disabledschemes_;
disabledschemes_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_disabledschemes(::enterprise_management::StringListPolicyProto* disabledschemes) {
delete disabledschemes_;
disabledschemes_ = disabledschemes;
if (disabledschemes) {
set_has_disabledschemes();
} else {
clear_has_disabledschemes();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisabledSchemes)
}

// optional .enterprise_management.BooleanPolicyProto Http09OnNonDefaultPortsEnabled = 347;
inline bool CloudPolicySettings::has_http09onnondefaultportsenabled() const {
return (_has_bits_[5] & 0x00000080u) != 0;
}
inline void CloudPolicySettings::set_has_http09onnondefaultportsenabled() {
_has_bits_[5] |= 0x00000080u;
}
inline void CloudPolicySettings::clear_has_http09onnondefaultportsenabled() {
_has_bits_[5] &= ~0x00000080u;
}
inline void CloudPolicySettings::clear_http09onnondefaultportsenabled() {
if (http09onnondefaultportsenabled_ != NULL) http09onnondefaultportsenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_http09onnondefaultportsenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::http09onnondefaultportsenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.Http09OnNonDefaultPortsEnabled)
return http09onnondefaultportsenabled_ != NULL ? *http09onnondefaultportsenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_http09onnondefaultportsenabled() {
set_has_http09onnondefaultportsenabled();
if (http09onnondefaultportsenabled_ == NULL) {
http09onnondefaultportsenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.Http09OnNonDefaultPortsEnabled)
return http09onnondefaultportsenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_http09onnondefaultportsenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.Http09OnNonDefaultPortsEnabled)
clear_has_http09onnondefaultportsenabled();
::enterprise_management::BooleanPolicyProto* temp = http09onnondefaultportsenabled_;
http09onnondefaultportsenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_http09onnondefaultportsenabled(::enterprise_management::BooleanPolicyProto* http09onnondefaultportsenabled) {
delete http09onnondefaultportsenabled_;
http09onnondefaultportsenabled_ = http09onnondefaultportsenabled;
if (http09onnondefaultportsenabled) {
set_has_http09onnondefaultportsenabled();
} else {
clear_has_http09onnondefaultportsenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.Http09OnNonDefaultPortsEnabled)
}

// optional .enterprise_management.BooleanPolicyProto JavascriptEnabled = 11;
inline bool CloudPolicySettings::has_javascriptenabled() const {
return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CloudPolicySettings::set_has_javascriptenabled() {
_has_bits_[0] |= 0x00000020u;
}
inline void CloudPolicySettings::clear_has_javascriptenabled() {
_has_bits_[0] &= ~0x00000020u;
}
inline void CloudPolicySettings::clear_javascriptenabled() {
if (javascriptenabled_ != NULL) javascriptenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_javascriptenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::javascriptenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavascriptEnabled)
return javascriptenabled_ != NULL ? *javascriptenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_javascriptenabled() {
set_has_javascriptenabled();
if (javascriptenabled_ == NULL) {
javascriptenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavascriptEnabled)
return javascriptenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_javascriptenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavascriptEnabled)
clear_has_javascriptenabled();
::enterprise_management::BooleanPolicyProto* temp = javascriptenabled_;
javascriptenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_javascriptenabled(::enterprise_management::BooleanPolicyProto* javascriptenabled) {
delete javascriptenabled_;
javascriptenabled_ = javascriptenabled;
if (javascriptenabled) {
set_has_javascriptenabled();
} else {
clear_has_javascriptenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavascriptEnabled)
}

// optional .enterprise_management.BooleanPolicyProto IncognitoEnabled = 12;
inline bool CloudPolicySettings::has_incognitoenabled() const {
return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CloudPolicySettings::set_has_incognitoenabled() {
_has_bits_[0] |= 0x00000040u;
}
inline void CloudPolicySettings::clear_has_incognitoenabled() {
_has_bits_[0] &= ~0x00000040u;
}
inline void CloudPolicySettings::clear_incognitoenabled() {
if (incognitoenabled_ != NULL) incognitoenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_incognitoenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::incognitoenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.IncognitoEnabled)
return incognitoenabled_ != NULL ? *incognitoenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_incognitoenabled() {
set_has_incognitoenabled();
if (incognitoenabled_ == NULL) {
incognitoenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.IncognitoEnabled)
return incognitoenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_incognitoenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.IncognitoEnabled)
clear_has_incognitoenabled();
::enterprise_management::BooleanPolicyProto* temp = incognitoenabled_;
incognitoenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_incognitoenabled(::enterprise_management::BooleanPolicyProto* incognitoenabled) {
delete incognitoenabled_;
incognitoenabled_ = incognitoenabled;
if (incognitoenabled) {
set_has_incognitoenabled();
} else {
clear_has_incognitoenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.IncognitoEnabled)
}

// optional .enterprise_management.IntegerPolicyProto IncognitoModeAvailability = 95;
inline bool CloudPolicySettings::has_incognitomodeavailability() const {
return (_has_bits_[2] & 0x00000200u) != 0;
}
inline void CloudPolicySettings::set_has_incognitomodeavailability() {
_has_bits_[2] |= 0x00000200u;
}
inline void CloudPolicySettings::clear_has_incognitomodeavailability() {
_has_bits_[2] &= ~0x00000200u;
}
inline void CloudPolicySettings::clear_incognitomodeavailability() {
if (incognitomodeavailability_ != NULL) incognitomodeavailability_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_incognitomodeavailability();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::incognitomodeavailability() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
return incognitomodeavailability_ != NULL ? *incognitomodeavailability_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_incognitomodeavailability() {
set_has_incognitomodeavailability();
if (incognitomodeavailability_ == NULL) {
incognitomodeavailability_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
return incognitomodeavailability_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_incognitomodeavailability() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
clear_has_incognitomodeavailability();
::enterprise_management::IntegerPolicyProto* temp = incognitomodeavailability_;
incognitomodeavailability_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_incognitomodeavailability(::enterprise_management::IntegerPolicyProto* incognitomodeavailability) {
delete incognitomodeavailability_;
incognitomodeavailability_ = incognitomodeavailability;
if (incognitomodeavailability) {
set_has_incognitomodeavailability();
} else {
clear_has_incognitomodeavailability();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
}

// optional .enterprise_management.BooleanPolicyProto SavingBrowserHistoryDisabled = 13;
inline bool CloudPolicySettings::has_savingbrowserhistorydisabled() const {
return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CloudPolicySettings::set_has_savingbrowserhistorydisabled() {
_has_bits_[0] |= 0x00000080u;
}
inline void CloudPolicySettings::clear_has_savingbrowserhistorydisabled() {
_has_bits_[0] &= ~0x00000080u;
}
inline void CloudPolicySettings::clear_savingbrowserhistorydisabled() {
if (savingbrowserhistorydisabled_ != NULL) savingbrowserhistorydisabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_savingbrowserhistorydisabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::savingbrowserhistorydisabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
return savingbrowserhistorydisabled_ != NULL ? *savingbrowserhistorydisabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_savingbrowserhistorydisabled() {
set_has_savingbrowserhistorydisabled();
if (savingbrowserhistorydisabled_ == NULL) {
savingbrowserhistorydisabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
return savingbrowserhistorydisabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_savingbrowserhistorydisabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
clear_has_savingbrowserhistorydisabled();
::enterprise_management::BooleanPolicyProto* temp = savingbrowserhistorydisabled_;
savingbrowserhistorydisabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_savingbrowserhistorydisabled(::enterprise_management::BooleanPolicyProto* savingbrowserhistorydisabled) {
delete savingbrowserhistorydisabled_;
savingbrowserhistorydisabled_ = savingbrowserhistorydisabled;
if (savingbrowserhistorydisabled) {
set_has_savingbrowserhistorydisabled();
} else {
clear_has_savingbrowserhistorydisabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
}

// optional .enterprise_management.BooleanPolicyProto AllowDeletingBrowserHistory = 189;
inline bool CloudPolicySettings::has_allowdeletingbrowserhistory() const {
return (_has_bits_[3] & 0x00000800u) != 0;
}
inline void CloudPolicySettings::set_has_allowdeletingbrowserhistory() {
_has_bits_[3] |= 0x00000800u;
}
inline void CloudPolicySettings::clear_has_allowdeletingbrowserhistory() {
_has_bits_[3] &= ~0x00000800u;
}
inline void CloudPolicySettings::clear_allowdeletingbrowserhistory() {
if (allowdeletingbrowserhistory_ != NULL) allowdeletingbrowserhistory_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_allowdeletingbrowserhistory();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allowdeletingbrowserhistory() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowDeletingBrowserHistory)
return allowdeletingbrowserhistory_ != NULL ? *allowdeletingbrowserhistory_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allowdeletingbrowserhistory() {
set_has_allowdeletingbrowserhistory();
if (allowdeletingbrowserhistory_ == NULL) {
allowdeletingbrowserhistory_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowDeletingBrowserHistory)
return allowdeletingbrowserhistory_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allowdeletingbrowserhistory() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowDeletingBrowserHistory)
clear_has_allowdeletingbrowserhistory();
::enterprise_management::BooleanPolicyProto* temp = allowdeletingbrowserhistory_;
allowdeletingbrowserhistory_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_allowdeletingbrowserhistory(::enterprise_management::BooleanPolicyProto* allowdeletingbrowserhistory) {
delete allowdeletingbrowserhistory_;
allowdeletingbrowserhistory_ = allowdeletingbrowserhistory;
if (allowdeletingbrowserhistory) {
set_has_allowdeletingbrowserhistory();
} else {
clear_has_allowdeletingbrowserhistory();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowDeletingBrowserHistory)
}

// optional .enterprise_management.BooleanPolicyProto AllowDinosaurEasterEgg = 311;
inline bool CloudPolicySettings::has_allowdinosaureasteregg() const {
return (_has_bits_[4] & 0x08000000u) != 0;
}
inline void CloudPolicySettings::set_has_allowdinosaureasteregg() {
_has_bits_[4] |= 0x08000000u;
}
inline void CloudPolicySettings::clear_has_allowdinosaureasteregg() {
_has_bits_[4] &= ~0x08000000u;
}
inline void CloudPolicySettings::clear_allowdinosaureasteregg() {
if (allowdinosaureasteregg_ != NULL) allowdinosaureasteregg_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_allowdinosaureasteregg();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allowdinosaureasteregg() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowDinosaurEasterEgg)
return allowdinosaureasteregg_ != NULL ? *allowdinosaureasteregg_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allowdinosaureasteregg() {
set_has_allowdinosaureasteregg();
if (allowdinosaureasteregg_ == NULL) {
allowdinosaureasteregg_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowDinosaurEasterEgg)
return allowdinosaureasteregg_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allowdinosaureasteregg() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowDinosaurEasterEgg)
clear_has_allowdinosaureasteregg();
::enterprise_management::BooleanPolicyProto* temp = allowdinosaureasteregg_;
allowdinosaureasteregg_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_allowdinosaureasteregg(::enterprise_management::BooleanPolicyProto* allowdinosaureasteregg) {
delete allowdinosaureasteregg_;
allowdinosaureasteregg_ = allowdinosaureasteregg;
if (allowdinosaureasteregg) {
set_has_allowdinosaureasteregg();
} else {
clear_has_allowdinosaureasteregg();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowDinosaurEasterEgg)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostClientDomain = 318;
inline bool CloudPolicySettings::has_remoteaccesshostclientdomain() const {
return (_has_bits_[4] & 0x10000000u) != 0;
}
inline void CloudPolicySettings::set_has_remoteaccesshostclientdomain() {
_has_bits_[4] |= 0x10000000u;
}
inline void CloudPolicySettings::clear_has_remoteaccesshostclientdomain() {
_has_bits_[4] &= ~0x10000000u;
}
inline void CloudPolicySettings::clear_remoteaccesshostclientdomain() {
if (remoteaccesshostclientdomain_ != NULL) remoteaccesshostclientdomain_->::enterprise_management::StringPolicyProto::Clear();
clear_has_remoteaccesshostclientdomain();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshostclientdomain() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomain)
return remoteaccesshostclientdomain_ != NULL ? *remoteaccesshostclientdomain_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshostclientdomain() {
set_has_remoteaccesshostclientdomain();
if (remoteaccesshostclientdomain_ == NULL) {
remoteaccesshostclientdomain_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomain)
return remoteaccesshostclientdomain_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshostclientdomain() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomain)
clear_has_remoteaccesshostclientdomain();
::enterprise_management::StringPolicyProto* temp = remoteaccesshostclientdomain_;
remoteaccesshostclientdomain_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostclientdomain(::enterprise_management::StringPolicyProto* remoteaccesshostclientdomain) {
delete remoteaccesshostclientdomain_;
remoteaccesshostclientdomain_ = remoteaccesshostclientdomain;
if (remoteaccesshostclientdomain) {
set_has_remoteaccesshostclientdomain();
} else {
clear_has_remoteaccesshostclientdomain();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomain)
}

// optional .enterprise_management.StringListPolicyProto RemoteAccessHostClientDomainList = 371;
inline bool CloudPolicySettings::has_remoteaccesshostclientdomainlist() const {
return (_has_bits_[5] & 0x00004000u) != 0;
}
inline void CloudPolicySettings::set_has_remoteaccesshostclientdomainlist() {
_has_bits_[5] |= 0x00004000u;
}
inline void CloudPolicySettings::clear_has_remoteaccesshostclientdomainlist() {
_has_bits_[5] &= ~0x00004000u;
}
inline void CloudPolicySettings::clear_remoteaccesshostclientdomainlist() {
if (remoteaccesshostclientdomainlist_ != NULL) remoteaccesshostclientdomainlist_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_remoteaccesshostclientdomainlist();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::remoteaccesshostclientdomainlist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomainList)
return remoteaccesshostclientdomainlist_ != NULL ? *remoteaccesshostclientdomainlist_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_remoteaccesshostclientdomainlist() {
set_has_remoteaccesshostclientdomainlist();
if (remoteaccesshostclientdomainlist_ == NULL) {
remoteaccesshostclientdomainlist_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomainList)
return remoteaccesshostclientdomainlist_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_remoteaccesshostclientdomainlist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomainList)
clear_has_remoteaccesshostclientdomainlist();
::enterprise_management::StringListPolicyProto* temp = remoteaccesshostclientdomainlist_;
remoteaccesshostclientdomainlist_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostclientdomainlist(::enterprise_management::StringListPolicyProto* remoteaccesshostclientdomainlist) {
delete remoteaccesshostclientdomainlist_;
remoteaccesshostclientdomainlist_ = remoteaccesshostclientdomainlist;
if (remoteaccesshostclientdomainlist) {
set_has_remoteaccesshostclientdomainlist();
} else {
clear_has_remoteaccesshostclientdomainlist();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomainList)
}

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostFirewallTraversal = 97;
inline bool CloudPolicySettings::has_remoteaccesshostfirewalltraversal() const {
return (_has_bits_[2] & 0x00000400u) != 0;
}
inline void CloudPolicySettings::set_has_remoteaccesshostfirewalltraversal() {
_has_bits_[2] |= 0x00000400u;
}
inline void CloudPolicySettings::clear_has_remoteaccesshostfirewalltraversal() {
_has_bits_[2] &= ~0x00000400u;
}
inline void CloudPolicySettings::clear_remoteaccesshostfirewalltraversal() {
if (remoteaccesshostfirewalltraversal_ != NULL) remoteaccesshostfirewalltraversal_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_remoteaccesshostfirewalltraversal();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::remoteaccesshostfirewalltraversal() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostFirewallTraversal)
return remoteaccesshostfirewalltraversal_ != NULL ? *remoteaccesshostfirewalltraversal_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_remoteaccesshostfirewalltraversal() {
set_has_remoteaccesshostfirewalltraversal();
if (remoteaccesshostfirewalltraversal_ == NULL) {
remoteaccesshostfirewalltraversal_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostFirewallTraversal)
return remoteaccesshostfirewalltraversal_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_remoteaccesshostfirewalltraversal() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostFirewallTraversal)
clear_has_remoteaccesshostfirewalltraversal();
::enterprise_management::BooleanPolicyProto* temp = remoteaccesshostfirewalltraversal_;
remoteaccesshostfirewalltraversal_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostfirewalltraversal(::enterprise_management::BooleanPolicyProto* remoteaccesshostfirewalltraversal) {
delete remoteaccesshostfirewalltraversal_;
remoteaccesshostfirewalltraversal_ = remoteaccesshostfirewalltraversal;
if (remoteaccesshostfirewalltraversal) {
set_has_remoteaccesshostfirewalltraversal();
} else {
clear_has_remoteaccesshostfirewalltraversal();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostFirewallTraversal)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostDomain = 156;
inline bool CloudPolicySettings::has_remoteaccesshostdomain() const {
return (_has_bits_[3] & 0x00000004u) != 0;
}
inline void CloudPolicySettings::set_has_remoteaccesshostdomain() {
_has_bits_[3] |= 0x00000004u;
}
inline void CloudPolicySettings::clear_has_remoteaccesshostdomain() {
_has_bits_[3] &= ~0x00000004u;
}
inline void CloudPolicySettings::clear_remoteaccesshostdomain() {
if (remoteaccesshostdomain_ != NULL) remoteaccesshostdomain_->::enterprise_management::StringPolicyProto::Clear();
clear_has_remoteaccesshostdomain();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshostdomain() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostDomain)
return remoteaccesshostdomain_ != NULL ? *remoteaccesshostdomain_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshostdomain() {
set_has_remoteaccesshostdomain();
if (remoteaccesshostdomain_ == NULL) {
remoteaccesshostdomain_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostDomain)
return remoteaccesshostdomain_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshostdomain() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostDomain)
clear_has_remoteaccesshostdomain();
::enterprise_management::StringPolicyProto* temp = remoteaccesshostdomain_;
remoteaccesshostdomain_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostdomain(::enterprise_management::StringPolicyProto* remoteaccesshostdomain) {
delete remoteaccesshostdomain_;
remoteaccesshostdomain_ = remoteaccesshostdomain;
if (remoteaccesshostdomain) {
set_has_remoteaccesshostdomain();
} else {
clear_has_remoteaccesshostdomain();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostDomain)
}

// optional .enterprise_management.StringListPolicyProto RemoteAccessHostDomainList = 370;
inline bool CloudPolicySettings::has_remoteaccesshostdomainlist() const {
return (_has_bits_[5] & 0x00002000u) != 0;
}
inline void CloudPolicySettings::set_has_remoteaccesshostdomainlist() {
_has_bits_[5] |= 0x00002000u;
}
inline void CloudPolicySettings::clear_has_remoteaccesshostdomainlist() {
_has_bits_[5] &= ~0x00002000u;
}
inline void CloudPolicySettings::clear_remoteaccesshostdomainlist() {
if (remoteaccesshostdomainlist_ != NULL) remoteaccesshostdomainlist_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_remoteaccesshostdomainlist();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::remoteaccesshostdomainlist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostDomainList)
return remoteaccesshostdomainlist_ != NULL ? *remoteaccesshostdomainlist_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_remoteaccesshostdomainlist() {
set_has_remoteaccesshostdomainlist();
if (remoteaccesshostdomainlist_ == NULL) {
remoteaccesshostdomainlist_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostDomainList)
return remoteaccesshostdomainlist_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_remoteaccesshostdomainlist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostDomainList)
clear_has_remoteaccesshostdomainlist();
::enterprise_management::StringListPolicyProto* temp = remoteaccesshostdomainlist_;
remoteaccesshostdomainlist_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostdomainlist(::enterprise_management::StringListPolicyProto* remoteaccesshostdomainlist) {
delete remoteaccesshostdomainlist_;
remoteaccesshostdomainlist_ = remoteaccesshostdomainlist;
if (remoteaccesshostdomainlist) {
set_has_remoteaccesshostdomainlist();
} else {
clear_has_remoteaccesshostdomainlist();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostDomainList)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostTalkGadgetPrefix = 158;
inline bool CloudPolicySettings::has_remoteaccesshosttalkgadgetprefix() const {
return (_has_bits_[3] & 0x00000008u) != 0;
}
inline void CloudPolicySettings::set_has_remoteaccesshosttalkgadgetprefix() {
_has_bits_[3] |= 0x00000008u;
}
inline void CloudPolicySettings::clear_has_remoteaccesshosttalkgadgetprefix() {
_has_bits_[3] &= ~0x00000008u;
}
inline void CloudPolicySettings::clear_remoteaccesshosttalkgadgetprefix() {
if (remoteaccesshosttalkgadgetprefix_ != NULL) remoteaccesshosttalkgadgetprefix_->::enterprise_management::StringPolicyProto::Clear();
clear_has_remoteaccesshosttalkgadgetprefix();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshosttalkgadgetprefix() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostTalkGadgetPrefix)
return remoteaccesshosttalkgadgetprefix_ != NULL ? *remoteaccesshosttalkgadgetprefix_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshosttalkgadgetprefix() {
set_has_remoteaccesshosttalkgadgetprefix();
if (remoteaccesshosttalkgadgetprefix_ == NULL) {
remoteaccesshosttalkgadgetprefix_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostTalkGadgetPrefix)
return remoteaccesshosttalkgadgetprefix_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshosttalkgadgetprefix() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostTalkGadgetPrefix)
clear_has_remoteaccesshosttalkgadgetprefix();
::enterprise_management::StringPolicyProto* temp = remoteaccesshosttalkgadgetprefix_;
remoteaccesshosttalkgadgetprefix_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshosttalkgadgetprefix(::enterprise_management::StringPolicyProto* remoteaccesshosttalkgadgetprefix) {
delete remoteaccesshosttalkgadgetprefix_;
remoteaccesshosttalkgadgetprefix_ = remoteaccesshosttalkgadgetprefix;
if (remoteaccesshosttalkgadgetprefix) {
set_has_remoteaccesshosttalkgadgetprefix();
} else {
clear_has_remoteaccesshosttalkgadgetprefix();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostTalkGadgetPrefix)
}

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostRequireCurtain = 159;
inline bool CloudPolicySettings::has_remoteaccesshostrequirecurtain() const {
return (_has_bits_[3] & 0x00000010u) != 0;
}
inline void CloudPolicySettings::set_has_remoteaccesshostrequirecurtain() {
_has_bits_[3] |= 0x00000010u;
}
inline void CloudPolicySettings::clear_has_remoteaccesshostrequirecurtain() {
_has_bits_[3] &= ~0x00000010u;
}
inline void CloudPolicySettings::clear_remoteaccesshostrequirecurtain() {
if (remoteaccesshostrequirecurtain_ != NULL) remoteaccesshostrequirecurtain_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_remoteaccesshostrequirecurtain();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::remoteaccesshostrequirecurtain() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostRequireCurtain)
return remoteaccesshostrequirecurtain_ != NULL ? *remoteaccesshostrequirecurtain_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_remoteaccesshostrequirecurtain() {
set_has_remoteaccesshostrequirecurtain();
if (remoteaccesshostrequirecurtain_ == NULL) {
remoteaccesshostrequirecurtain_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostRequireCurtain)
return remoteaccesshostrequirecurtain_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_remoteaccesshostrequirecurtain() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostRequireCurtain)
clear_has_remoteaccesshostrequirecurtain();
::enterprise_management::BooleanPolicyProto* temp = remoteaccesshostrequirecurtain_;
remoteaccesshostrequirecurtain_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostrequirecurtain(::enterprise_management::BooleanPolicyProto* remoteaccesshostrequirecurtain) {
delete remoteaccesshostrequirecurtain_;
remoteaccesshostrequirecurtain_ = remoteaccesshostrequirecurtain;
if (remoteaccesshostrequirecurtain) {
set_has_remoteaccesshostrequirecurtain();
} else {
clear_has_remoteaccesshostrequirecurtain();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostRequireCurtain)
}

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowClientPairing = 236;
inline bool CloudPolicySettings::has_remoteaccesshostallowclientpairing() const {
return (_has_bits_[3] & 0x08000000u) != 0;
}
inline void CloudPolicySettings::set_has_remoteaccesshostallowclientpairing() {
_has_bits_[3] |= 0x08000000u;
}
inline void CloudPolicySettings::clear_has_remoteaccesshostallowclientpairing() {
_has_bits_[3] &= ~0x08000000u;
}
inline void CloudPolicySettings::clear_remoteaccesshostallowclientpairing() {
if (remoteaccesshostallowclientpairing_ != NULL) remoteaccesshostallowclientpairing_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_remoteaccesshostallowclientpairing();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::remoteaccesshostallowclientpairing() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowClientPairing)
return remoteaccesshostallowclientpairing_ != NULL ? *remoteaccesshostallowclientpairing_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_remoteaccesshostallowclientpairing() {
set_has_remoteaccesshostallowclientpairing();
if (remoteaccesshostallowclientpairing_ == NULL) {
remoteaccesshostallowclientpairing_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowClientPairing)
return remoteaccesshostallowclientpairing_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_remoteaccesshostallowclientpairing() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowClientPairing)
clear_has_remoteaccesshostallowclientpairing();
::enterprise_management::BooleanPolicyProto* temp = remoteaccesshostallowclientpairing_;
remoteaccesshostallowclientpairing_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostallowclientpairing(::enterprise_management::BooleanPolicyProto* remoteaccesshostallowclientpairing) {
delete remoteaccesshostallowclientpairing_;
remoteaccesshostallowclientpairing_ = remoteaccesshostallowclientpairing;
if (remoteaccesshostallowclientpairing) {
set_has_remoteaccesshostallowclientpairing();
} else {
clear_has_remoteaccesshostallowclientpairing();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowClientPairing)
}

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowGnubbyAuth = 259;
inline bool CloudPolicySettings::has_remoteaccesshostallowgnubbyauth() const {
return (_has_bits_[4] & 0x00000008u) != 0;
}
inline void CloudPolicySettings::set_has_remoteaccesshostallowgnubbyauth() {
_has_bits_[4] |= 0x00000008u;
}
inline void CloudPolicySettings::clear_has_remoteaccesshostallowgnubbyauth() {
_has_bits_[4] &= ~0x00000008u;
}
inline void CloudPolicySettings::clear_remoteaccesshostallowgnubbyauth() {
if (remoteaccesshostallowgnubbyauth_ != NULL) remoteaccesshostallowgnubbyauth_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_remoteaccesshostallowgnubbyauth();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::remoteaccesshostallowgnubbyauth() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowGnubbyAuth)
return remoteaccesshostallowgnubbyauth_ != NULL ? *remoteaccesshostallowgnubbyauth_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_remoteaccesshostallowgnubbyauth() {
set_has_remoteaccesshostallowgnubbyauth();
if (remoteaccesshostallowgnubbyauth_ == NULL) {
remoteaccesshostallowgnubbyauth_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowGnubbyAuth)
return remoteaccesshostallowgnubbyauth_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_remoteaccesshostallowgnubbyauth() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowGnubbyAuth)
clear_has_remoteaccesshostallowgnubbyauth();
::enterprise_management::BooleanPolicyProto* temp = remoteaccesshostallowgnubbyauth_;
remoteaccesshostallowgnubbyauth_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostallowgnubbyauth(::enterprise_management::BooleanPolicyProto* remoteaccesshostallowgnubbyauth) {
delete remoteaccesshostallowgnubbyauth_;
remoteaccesshostallowgnubbyauth_ = remoteaccesshostallowgnubbyauth;
if (remoteaccesshostallowgnubbyauth) {
set_has_remoteaccesshostallowgnubbyauth();
} else {
clear_has_remoteaccesshostallowgnubbyauth();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowGnubbyAuth)
}

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowRelayedConnection = 265;
inline bool CloudPolicySettings::has_remoteaccesshostallowrelayedconnection() const {
return (_has_bits_[4] & 0x00000020u) != 0;
}
inline void CloudPolicySettings::set_has_remoteaccesshostallowrelayedconnection() {
_has_bits_[4] |= 0x00000020u;
}
inline void CloudPolicySettings::clear_has_remoteaccesshostallowrelayedconnection() {
_has_bits_[4] &= ~0x00000020u;
}
inline void CloudPolicySettings::clear_remoteaccesshostallowrelayedconnection() {
if (remoteaccesshostallowrelayedconnection_ != NULL) remoteaccesshostallowrelayedconnection_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_remoteaccesshostallowrelayedconnection();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::remoteaccesshostallowrelayedconnection() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowRelayedConnection)
return remoteaccesshostallowrelayedconnection_ != NULL ? *remoteaccesshostallowrelayedconnection_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_remoteaccesshostallowrelayedconnection() {
set_has_remoteaccesshostallowrelayedconnection();
if (remoteaccesshostallowrelayedconnection_ == NULL) {
remoteaccesshostallowrelayedconnection_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowRelayedConnection)
return remoteaccesshostallowrelayedconnection_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_remoteaccesshostallowrelayedconnection() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowRelayedConnection)
clear_has_remoteaccesshostallowrelayedconnection();
::enterprise_management::BooleanPolicyProto* temp = remoteaccesshostallowrelayedconnection_;
remoteaccesshostallowrelayedconnection_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostallowrelayedconnection(::enterprise_management::BooleanPolicyProto* remoteaccesshostallowrelayedconnection) {
delete remoteaccesshostallowrelayedconnection_;
remoteaccesshostallowrelayedconnection_ = remoteaccesshostallowrelayedconnection;
if (remoteaccesshostallowrelayedconnection) {
set_has_remoteaccesshostallowrelayedconnection();
} else {
clear_has_remoteaccesshostallowrelayedconnection();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowRelayedConnection)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostUdpPortRange = 266;
inline bool CloudPolicySettings::has_remoteaccesshostudpportrange() const {
return (_has_bits_[4] & 0x00000040u) != 0;
}
inline void CloudPolicySettings::set_has_remoteaccesshostudpportrange() {
_has_bits_[4] |= 0x00000040u;
}
inline void CloudPolicySettings::clear_has_remoteaccesshostudpportrange() {
_has_bits_[4] &= ~0x00000040u;
}
inline void CloudPolicySettings::clear_remoteaccesshostudpportrange() {
if (remoteaccesshostudpportrange_ != NULL) remoteaccesshostudpportrange_->::enterprise_management::StringPolicyProto::Clear();
clear_has_remoteaccesshostudpportrange();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshostudpportrange() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostUdpPortRange)
return remoteaccesshostudpportrange_ != NULL ? *remoteaccesshostudpportrange_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshostudpportrange() {
set_has_remoteaccesshostudpportrange();
if (remoteaccesshostudpportrange_ == NULL) {
remoteaccesshostudpportrange_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostUdpPortRange)
return remoteaccesshostudpportrange_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshostudpportrange() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostUdpPortRange)
clear_has_remoteaccesshostudpportrange();
::enterprise_management::StringPolicyProto* temp = remoteaccesshostudpportrange_;
remoteaccesshostudpportrange_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostudpportrange(::enterprise_management::StringPolicyProto* remoteaccesshostudpportrange) {
delete remoteaccesshostudpportrange_;
remoteaccesshostudpportrange_ = remoteaccesshostudpportrange;
if (remoteaccesshostudpportrange) {
set_has_remoteaccesshostudpportrange();
} else {
clear_has_remoteaccesshostudpportrange();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostUdpPortRange)
}

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostMatchUsername = 287;
inline bool CloudPolicySettings::has_remoteaccesshostmatchusername() const {
return (_has_bits_[4] & 0x00040000u) != 0;
}
inline void CloudPolicySettings::set_has_remoteaccesshostmatchusername() {
_has_bits_[4] |= 0x00040000u;
}
inline void CloudPolicySettings::clear_has_remoteaccesshostmatchusername() {
_has_bits_[4] &= ~0x00040000u;
}
inline void CloudPolicySettings::clear_remoteaccesshostmatchusername() {
if (remoteaccesshostmatchusername_ != NULL) remoteaccesshostmatchusername_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_remoteaccesshostmatchusername();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::remoteaccesshostmatchusername() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostMatchUsername)
return remoteaccesshostmatchusername_ != NULL ? *remoteaccesshostmatchusername_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_remoteaccesshostmatchusername() {
set_has_remoteaccesshostmatchusername();
if (remoteaccesshostmatchusername_ == NULL) {
remoteaccesshostmatchusername_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostMatchUsername)
return remoteaccesshostmatchusername_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_remoteaccesshostmatchusername() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostMatchUsername)
clear_has_remoteaccesshostmatchusername();
::enterprise_management::BooleanPolicyProto* temp = remoteaccesshostmatchusername_;
remoteaccesshostmatchusername_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostmatchusername(::enterprise_management::BooleanPolicyProto* remoteaccesshostmatchusername) {
delete remoteaccesshostmatchusername_;
remoteaccesshostmatchusername_ = remoteaccesshostmatchusername;
if (remoteaccesshostmatchusername) {
set_has_remoteaccesshostmatchusername();
} else {
clear_has_remoteaccesshostmatchusername();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostMatchUsername)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenUrl = 288;
inline bool CloudPolicySettings::has_remoteaccesshosttokenurl() const {
return (_has_bits_[4] & 0x00080000u) != 0;
}
inline void CloudPolicySettings::set_has_remoteaccesshosttokenurl() {
_has_bits_[4] |= 0x00080000u;
}
inline void CloudPolicySettings::clear_has_remoteaccesshosttokenurl() {
_has_bits_[4] &= ~0x00080000u;
}
inline void CloudPolicySettings::clear_remoteaccesshosttokenurl() {
if (remoteaccesshosttokenurl_ != NULL) remoteaccesshosttokenurl_->::enterprise_management::StringPolicyProto::Clear();
clear_has_remoteaccesshosttokenurl();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshosttokenurl() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenUrl)
return remoteaccesshosttokenurl_ != NULL ? *remoteaccesshosttokenurl_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshosttokenurl() {
set_has_remoteaccesshosttokenurl();
if (remoteaccesshosttokenurl_ == NULL) {
remoteaccesshosttokenurl_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenUrl)
return remoteaccesshosttokenurl_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshosttokenurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenUrl)
clear_has_remoteaccesshosttokenurl();
::enterprise_management::StringPolicyProto* temp = remoteaccesshosttokenurl_;
remoteaccesshosttokenurl_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshosttokenurl(::enterprise_management::StringPolicyProto* remoteaccesshosttokenurl) {
delete remoteaccesshosttokenurl_;
remoteaccesshosttokenurl_ = remoteaccesshosttokenurl;
if (remoteaccesshosttokenurl) {
set_has_remoteaccesshosttokenurl();
} else {
clear_has_remoteaccesshosttokenurl();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenUrl)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenValidationUrl = 289;
inline bool CloudPolicySettings::has_remoteaccesshosttokenvalidationurl() const {
return (_has_bits_[4] & 0x00100000u) != 0;
}
inline void CloudPolicySettings::set_has_remoteaccesshosttokenvalidationurl() {
_has_bits_[4] |= 0x00100000u;
}
inline void CloudPolicySettings::clear_has_remoteaccesshosttokenvalidationurl() {
_has_bits_[4] &= ~0x00100000u;
}
inline void CloudPolicySettings::clear_remoteaccesshosttokenvalidationurl() {
if (remoteaccesshosttokenvalidationurl_ != NULL) remoteaccesshosttokenvalidationurl_->::enterprise_management::StringPolicyProto::Clear();
clear_has_remoteaccesshosttokenvalidationurl();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshosttokenvalidationurl() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationUrl)
return remoteaccesshosttokenvalidationurl_ != NULL ? *remoteaccesshosttokenvalidationurl_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshosttokenvalidationurl() {
set_has_remoteaccesshosttokenvalidationurl();
if (remoteaccesshosttokenvalidationurl_ == NULL) {
remoteaccesshosttokenvalidationurl_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationUrl)
return remoteaccesshosttokenvalidationurl_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshosttokenvalidationurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationUrl)
clear_has_remoteaccesshosttokenvalidationurl();
::enterprise_management::StringPolicyProto* temp = remoteaccesshosttokenvalidationurl_;
remoteaccesshosttokenvalidationurl_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshosttokenvalidationurl(::enterprise_management::StringPolicyProto* remoteaccesshosttokenvalidationurl) {
delete remoteaccesshosttokenvalidationurl_;
remoteaccesshosttokenvalidationurl_ = remoteaccesshosttokenvalidationurl;
if (remoteaccesshosttokenvalidationurl) {
set_has_remoteaccesshosttokenvalidationurl();
} else {
clear_has_remoteaccesshosttokenvalidationurl();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationUrl)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenValidationCertificateIssuer = 290;
inline bool CloudPolicySettings::has_remoteaccesshosttokenvalidationcertificateissuer() const {
return (_has_bits_[4] & 0x00200000u) != 0;
}
inline void CloudPolicySettings::set_has_remoteaccesshosttokenvalidationcertificateissuer() {
_has_bits_[4] |= 0x00200000u;
}
inline void CloudPolicySettings::clear_has_remoteaccesshosttokenvalidationcertificateissuer() {
_has_bits_[4] &= ~0x00200000u;
}
inline void CloudPolicySettings::clear_remoteaccesshosttokenvalidationcertificateissuer() {
if (remoteaccesshosttokenvalidationcertificateissuer_ != NULL) remoteaccesshosttokenvalidationcertificateissuer_->::enterprise_management::StringPolicyProto::Clear();
clear_has_remoteaccesshosttokenvalidationcertificateissuer();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshosttokenvalidationcertificateissuer() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationCertificateIssuer)
return remoteaccesshosttokenvalidationcertificateissuer_ != NULL ? *remoteaccesshosttokenvalidationcertificateissuer_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshosttokenvalidationcertificateissuer() {
set_has_remoteaccesshosttokenvalidationcertificateissuer();
if (remoteaccesshosttokenvalidationcertificateissuer_ == NULL) {
remoteaccesshosttokenvalidationcertificateissuer_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationCertificateIssuer)
return remoteaccesshosttokenvalidationcertificateissuer_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshosttokenvalidationcertificateissuer() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationCertificateIssuer)
clear_has_remoteaccesshosttokenvalidationcertificateissuer();
::enterprise_management::StringPolicyProto* temp = remoteaccesshosttokenvalidationcertificateissuer_;
remoteaccesshosttokenvalidationcertificateissuer_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshosttokenvalidationcertificateissuer(::enterprise_management::StringPolicyProto* remoteaccesshosttokenvalidationcertificateissuer) {
delete remoteaccesshosttokenvalidationcertificateissuer_;
remoteaccesshosttokenvalidationcertificateissuer_ = remoteaccesshosttokenvalidationcertificateissuer;
if (remoteaccesshosttokenvalidationcertificateissuer) {
set_has_remoteaccesshosttokenvalidationcertificateissuer();
} else {
clear_has_remoteaccesshosttokenvalidationcertificateissuer();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationCertificateIssuer)
}

// optional .enterprise_management.BooleanPolicyProto PrintingEnabled = 14;
inline bool CloudPolicySettings::has_printingenabled() const {
return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CloudPolicySettings::set_has_printingenabled() {
_has_bits_[0] |= 0x00000100u;
}
inline void CloudPolicySettings::clear_has_printingenabled() {
_has_bits_[0] &= ~0x00000100u;
}
inline void CloudPolicySettings::clear_printingenabled() {
if (printingenabled_ != NULL) printingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_printingenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::printingenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PrintingEnabled)
return printingenabled_ != NULL ? *printingenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_printingenabled() {
set_has_printingenabled();
if (printingenabled_ == NULL) {
printingenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PrintingEnabled)
return printingenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_printingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PrintingEnabled)
clear_has_printingenabled();
::enterprise_management::BooleanPolicyProto* temp = printingenabled_;
printingenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_printingenabled(::enterprise_management::BooleanPolicyProto* printingenabled) {
delete printingenabled_;
printingenabled_ = printingenabled;
if (printingenabled) {
set_has_printingenabled();
} else {
clear_has_printingenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PrintingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto CloudPrintProxyEnabled = 15;
inline bool CloudPolicySettings::has_cloudprintproxyenabled() const {
return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CloudPolicySettings::set_has_cloudprintproxyenabled() {
_has_bits_[0] |= 0x00000200u;
}
inline void CloudPolicySettings::clear_has_cloudprintproxyenabled() {
_has_bits_[0] &= ~0x00000200u;
}
inline void CloudPolicySettings::clear_cloudprintproxyenabled() {
if (cloudprintproxyenabled_ != NULL) cloudprintproxyenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_cloudprintproxyenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::cloudprintproxyenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudPrintProxyEnabled)
return cloudprintproxyenabled_ != NULL ? *cloudprintproxyenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_cloudprintproxyenabled() {
set_has_cloudprintproxyenabled();
if (cloudprintproxyenabled_ == NULL) {
cloudprintproxyenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudPrintProxyEnabled)
return cloudprintproxyenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_cloudprintproxyenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudPrintProxyEnabled)
clear_has_cloudprintproxyenabled();
::enterprise_management::BooleanPolicyProto* temp = cloudprintproxyenabled_;
cloudprintproxyenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_cloudprintproxyenabled(::enterprise_management::BooleanPolicyProto* cloudprintproxyenabled) {
delete cloudprintproxyenabled_;
cloudprintproxyenabled_ = cloudprintproxyenabled;
if (cloudprintproxyenabled) {
set_has_cloudprintproxyenabled();
} else {
clear_has_cloudprintproxyenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudPrintProxyEnabled)
}

// optional .enterprise_management.BooleanPolicyProto ForceSafeSearch = 164;
inline bool CloudPolicySettings::has_forcesafesearch() const {
return (_has_bits_[3] & 0x00000080u) != 0;
}
inline void CloudPolicySettings::set_has_forcesafesearch() {
_has_bits_[3] |= 0x00000080u;
}
inline void CloudPolicySettings::clear_has_forcesafesearch() {
_has_bits_[3] &= ~0x00000080u;
}
inline void CloudPolicySettings::clear_forcesafesearch() {
if (forcesafesearch_ != NULL) forcesafesearch_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_forcesafesearch();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forcesafesearch() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceSafeSearch)
return forcesafesearch_ != NULL ? *forcesafesearch_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forcesafesearch() {
set_has_forcesafesearch();
if (forcesafesearch_ == NULL) {
forcesafesearch_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceSafeSearch)
return forcesafesearch_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forcesafesearch() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceSafeSearch)
clear_has_forcesafesearch();
::enterprise_management::BooleanPolicyProto* temp = forcesafesearch_;
forcesafesearch_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_forcesafesearch(::enterprise_management::BooleanPolicyProto* forcesafesearch) {
delete forcesafesearch_;
forcesafesearch_ = forcesafesearch;
if (forcesafesearch) {
set_has_forcesafesearch();
} else {
clear_has_forcesafesearch();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceSafeSearch)
}

// optional .enterprise_management.BooleanPolicyProto ForceGoogleSafeSearch = 284;
inline bool CloudPolicySettings::has_forcegooglesafesearch() const {
return (_has_bits_[4] & 0x00010000u) != 0;
}
inline void CloudPolicySettings::set_has_forcegooglesafesearch() {
_has_bits_[4] |= 0x00010000u;
}
inline void CloudPolicySettings::clear_has_forcegooglesafesearch() {
_has_bits_[4] &= ~0x00010000u;
}
inline void CloudPolicySettings::clear_forcegooglesafesearch() {
if (forcegooglesafesearch_ != NULL) forcegooglesafesearch_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_forcegooglesafesearch();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forcegooglesafesearch() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
return forcegooglesafesearch_ != NULL ? *forcegooglesafesearch_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forcegooglesafesearch() {
set_has_forcegooglesafesearch();
if (forcegooglesafesearch_ == NULL) {
forcegooglesafesearch_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
return forcegooglesafesearch_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forcegooglesafesearch() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
clear_has_forcegooglesafesearch();
::enterprise_management::BooleanPolicyProto* temp = forcegooglesafesearch_;
forcegooglesafesearch_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_forcegooglesafesearch(::enterprise_management::BooleanPolicyProto* forcegooglesafesearch) {
delete forcegooglesafesearch_;
forcegooglesafesearch_ = forcegooglesafesearch;
if (forcegooglesafesearch) {
set_has_forcegooglesafesearch();
} else {
clear_has_forcegooglesafesearch();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
}

// optional .enterprise_management.BooleanPolicyProto ForceYouTubeSafetyMode = 285;
inline bool CloudPolicySettings::has_forceyoutubesafetymode() const {
return (_has_bits_[4] & 0x00020000u) != 0;
}
inline void CloudPolicySettings::set_has_forceyoutubesafetymode() {
_has_bits_[4] |= 0x00020000u;
}
inline void CloudPolicySettings::clear_has_forceyoutubesafetymode() {
_has_bits_[4] &= ~0x00020000u;
}
inline void CloudPolicySettings::clear_forceyoutubesafetymode() {
if (forceyoutubesafetymode_ != NULL) forceyoutubesafetymode_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_forceyoutubesafetymode();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forceyoutubesafetymode() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
return forceyoutubesafetymode_ != NULL ? *forceyoutubesafetymode_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forceyoutubesafetymode() {
set_has_forceyoutubesafetymode();
if (forceyoutubesafetymode_ == NULL) {
forceyoutubesafetymode_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
return forceyoutubesafetymode_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forceyoutubesafetymode() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
clear_has_forceyoutubesafetymode();
::enterprise_management::BooleanPolicyProto* temp = forceyoutubesafetymode_;
forceyoutubesafetymode_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_forceyoutubesafetymode(::enterprise_management::BooleanPolicyProto* forceyoutubesafetymode) {
delete forceyoutubesafetymode_;
forceyoutubesafetymode_ = forceyoutubesafetymode;
if (forceyoutubesafetymode) {
set_has_forceyoutubesafetymode();
} else {
clear_has_forceyoutubesafetymode();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
}

// optional .enterprise_management.IntegerPolicyProto ForceYouTubeRestrict = 350;
inline bool CloudPolicySettings::has_forceyoutuberestrict() const {
return (_has_bits_[5] & 0x00000200u) != 0;
}
inline void CloudPolicySettings::set_has_forceyoutuberestrict() {
_has_bits_[5] |= 0x00000200u;
}
inline void CloudPolicySettings::clear_has_forceyoutuberestrict() {
_has_bits_[5] &= ~0x00000200u;
}
inline void CloudPolicySettings::clear_forceyoutuberestrict() {
if (forceyoutuberestrict_ != NULL) forceyoutuberestrict_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_forceyoutuberestrict();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::forceyoutuberestrict() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
return forceyoutuberestrict_ != NULL ? *forceyoutuberestrict_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_forceyoutuberestrict() {
set_has_forceyoutuberestrict();
if (forceyoutuberestrict_ == NULL) {
forceyoutuberestrict_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
return forceyoutuberestrict_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_forceyoutuberestrict() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
clear_has_forceyoutuberestrict();
::enterprise_management::IntegerPolicyProto* temp = forceyoutuberestrict_;
forceyoutuberestrict_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_forceyoutuberestrict(::enterprise_management::IntegerPolicyProto* forceyoutuberestrict) {
delete forceyoutuberestrict_;
forceyoutuberestrict_ = forceyoutuberestrict;
if (forceyoutuberestrict) {
set_has_forceyoutuberestrict();
} else {
clear_has_forceyoutuberestrict();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
}

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingEnabled = 16;
inline bool CloudPolicySettings::has_safebrowsingenabled() const {
return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CloudPolicySettings::set_has_safebrowsingenabled() {
_has_bits_[0] |= 0x00000400u;
}
inline void CloudPolicySettings::clear_has_safebrowsingenabled() {
_has_bits_[0] &= ~0x00000400u;
}
inline void CloudPolicySettings::clear_safebrowsingenabled() {
if (safebrowsingenabled_ != NULL) safebrowsingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_safebrowsingenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::safebrowsingenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
return safebrowsingenabled_ != NULL ? *safebrowsingenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_safebrowsingenabled() {
set_has_safebrowsingenabled();
if (safebrowsingenabled_ == NULL) {
safebrowsingenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
return safebrowsingenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_safebrowsingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
clear_has_safebrowsingenabled();
::enterprise_management::BooleanPolicyProto* temp = safebrowsingenabled_;
safebrowsingenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_safebrowsingenabled(::enterprise_management::BooleanPolicyProto* safebrowsingenabled) {
delete safebrowsingenabled_;
safebrowsingenabled_ = safebrowsingenabled;
if (safebrowsingenabled) {
set_has_safebrowsingenabled();
} else {
clear_has_safebrowsingenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto MetricsReportingEnabled = 17;
inline bool CloudPolicySettings::has_metricsreportingenabled() const {
return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CloudPolicySettings::set_has_metricsreportingenabled() {
_has_bits_[0] |= 0x00000800u;
}
inline void CloudPolicySettings::clear_has_metricsreportingenabled() {
_has_bits_[0] &= ~0x00000800u;
}
inline void CloudPolicySettings::clear_metricsreportingenabled() {
if (metricsreportingenabled_ != NULL) metricsreportingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_metricsreportingenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::metricsreportingenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.MetricsReportingEnabled)
return metricsreportingenabled_ != NULL ? *metricsreportingenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_metricsreportingenabled() {
set_has_metricsreportingenabled();
if (metricsreportingenabled_ == NULL) {
metricsreportingenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.MetricsReportingEnabled)
return metricsreportingenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_metricsreportingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.MetricsReportingEnabled)
clear_has_metricsreportingenabled();
::enterprise_management::BooleanPolicyProto* temp = metricsreportingenabled_;
metricsreportingenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_metricsreportingenabled(::enterprise_management::BooleanPolicyProto* metricsreportingenabled) {
delete metricsreportingenabled_;
metricsreportingenabled_ = metricsreportingenabled;
if (metricsreportingenabled) {
set_has_metricsreportingenabled();
} else {
clear_has_metricsreportingenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.MetricsReportingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto PasswordManagerEnabled = 18;
inline bool CloudPolicySettings::has_passwordmanagerenabled() const {
return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CloudPolicySettings::set_has_passwordmanagerenabled() {
_has_bits_[0] |= 0x00001000u;
}
inline void CloudPolicySettings::clear_has_passwordmanagerenabled() {
_has_bits_[0] &= ~0x00001000u;
}
inline void CloudPolicySettings::clear_passwordmanagerenabled() {
if (passwordmanagerenabled_ != NULL) passwordmanagerenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_passwordmanagerenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::passwordmanagerenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
return passwordmanagerenabled_ != NULL ? *passwordmanagerenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_passwordmanagerenabled() {
set_has_passwordmanagerenabled();
if (passwordmanagerenabled_ == NULL) {
passwordmanagerenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
return passwordmanagerenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_passwordmanagerenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
clear_has_passwordmanagerenabled();
::enterprise_management::BooleanPolicyProto* temp = passwordmanagerenabled_;
passwordmanagerenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_passwordmanagerenabled(::enterprise_management::BooleanPolicyProto* passwordmanagerenabled) {
delete passwordmanagerenabled_;
passwordmanagerenabled_ = passwordmanagerenabled;
if (passwordmanagerenabled) {
set_has_passwordmanagerenabled();
} else {
clear_has_passwordmanagerenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AutoFillEnabled = 20;
inline bool CloudPolicySettings::has_autofillenabled() const {
return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CloudPolicySettings::set_has_autofillenabled() {
_has_bits_[0] |= 0x00002000u;
}
inline void CloudPolicySettings::clear_has_autofillenabled() {
_has_bits_[0] &= ~0x00002000u;
}
inline void CloudPolicySettings::clear_autofillenabled() {
if (autofillenabled_ != NULL) autofillenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_autofillenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::autofillenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutoFillEnabled)
return autofillenabled_ != NULL ? *autofillenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_autofillenabled() {
set_has_autofillenabled();
if (autofillenabled_ == NULL) {
autofillenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutoFillEnabled)
return autofillenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_autofillenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutoFillEnabled)
clear_has_autofillenabled();
::enterprise_management::BooleanPolicyProto* temp = autofillenabled_;
autofillenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_autofillenabled(::enterprise_management::BooleanPolicyProto* autofillenabled) {
delete autofillenabled_;
autofillenabled_ = autofillenabled;
if (autofillenabled) {
set_has_autofillenabled();
} else {
clear_has_autofillenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutoFillEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AutofillCreditCardEnabled = 394;
inline bool CloudPolicySettings::has_autofillcreditcardenabled() const {
return (_has_bits_[5] & 0x00100000u) != 0;
}
inline void CloudPolicySettings::set_has_autofillcreditcardenabled() {
_has_bits_[5] |= 0x00100000u;
}
inline void CloudPolicySettings::clear_has_autofillcreditcardenabled() {
_has_bits_[5] &= ~0x00100000u;
}
inline void CloudPolicySettings::clear_autofillcreditcardenabled() {
if (autofillcreditcardenabled_ != NULL) autofillcreditcardenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_autofillcreditcardenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::autofillcreditcardenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
return autofillcreditcardenabled_ != NULL ? *autofillcreditcardenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_autofillcreditcardenabled() {
set_has_autofillcreditcardenabled();
if (autofillcreditcardenabled_ == NULL) {
autofillcreditcardenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
return autofillcreditcardenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_autofillcreditcardenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
clear_has_autofillcreditcardenabled();
::enterprise_management::BooleanPolicyProto* temp = autofillcreditcardenabled_;
autofillcreditcardenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_autofillcreditcardenabled(::enterprise_management::BooleanPolicyProto* autofillcreditcardenabled) {
delete autofillcreditcardenabled_;
autofillcreditcardenabled_ = autofillcreditcardenabled;
if (autofillcreditcardenabled) {
set_has_autofillcreditcardenabled();
} else {
clear_has_autofillcreditcardenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
}

// optional .enterprise_management.StringListPolicyProto DisabledPlugins = 21;
inline bool CloudPolicySettings::has_disabledplugins() const {
return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CloudPolicySettings::set_has_disabledplugins() {
_has_bits_[0] |= 0x00004000u;
}
inline void CloudPolicySettings::clear_has_disabledplugins() {
_has_bits_[0] &= ~0x00004000u;
}
inline void CloudPolicySettings::clear_disabledplugins() {
if (disabledplugins_ != NULL) disabledplugins_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_disabledplugins();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::disabledplugins() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisabledPlugins)
return disabledplugins_ != NULL ? *disabledplugins_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_disabledplugins() {
set_has_disabledplugins();
if (disabledplugins_ == NULL) {
disabledplugins_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisabledPlugins)
return disabledplugins_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_disabledplugins() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisabledPlugins)
clear_has_disabledplugins();
::enterprise_management::StringListPolicyProto* temp = disabledplugins_;
disabledplugins_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_disabledplugins(::enterprise_management::StringListPolicyProto* disabledplugins) {
delete disabledplugins_;
disabledplugins_ = disabledplugins;
if (disabledplugins) {
set_has_disabledplugins();
} else {
clear_has_disabledplugins();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisabledPlugins)
}

// optional .enterprise_management.StringListPolicyProto EnabledPlugins = 80;
inline bool CloudPolicySettings::has_enabledplugins() const {
return (_has_bits_[1] & 0x40000000u) != 0;
}
inline void CloudPolicySettings::set_has_enabledplugins() {
_has_bits_[1] |= 0x40000000u;
}
inline void CloudPolicySettings::clear_has_enabledplugins() {
_has_bits_[1] &= ~0x40000000u;
}
inline void CloudPolicySettings::clear_enabledplugins() {
if (enabledplugins_ != NULL) enabledplugins_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_enabledplugins();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::enabledplugins() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnabledPlugins)
return enabledplugins_ != NULL ? *enabledplugins_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_enabledplugins() {
set_has_enabledplugins();
if (enabledplugins_ == NULL) {
enabledplugins_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnabledPlugins)
return enabledplugins_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_enabledplugins() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnabledPlugins)
clear_has_enabledplugins();
::enterprise_management::StringListPolicyProto* temp = enabledplugins_;
enabledplugins_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_enabledplugins(::enterprise_management::StringListPolicyProto* enabledplugins) {
delete enabledplugins_;
enabledplugins_ = enabledplugins;
if (enabledplugins) {
set_has_enabledplugins();
} else {
clear_has_enabledplugins();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnabledPlugins)
}

// optional .enterprise_management.StringListPolicyProto DisabledPluginsExceptions = 81;
inline bool CloudPolicySettings::has_disabledpluginsexceptions() const {
return (_has_bits_[1] & 0x80000000u) != 0;
}
inline void CloudPolicySettings::set_has_disabledpluginsexceptions() {
_has_bits_[1] |= 0x80000000u;
}
inline void CloudPolicySettings::clear_has_disabledpluginsexceptions() {
_has_bits_[1] &= ~0x80000000u;
}
inline void CloudPolicySettings::clear_disabledpluginsexceptions() {
if (disabledpluginsexceptions_ != NULL) disabledpluginsexceptions_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_disabledpluginsexceptions();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::disabledpluginsexceptions() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisabledPluginsExceptions)
return disabledpluginsexceptions_ != NULL ? *disabledpluginsexceptions_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_disabledpluginsexceptions() {
set_has_disabledpluginsexceptions();
if (disabledpluginsexceptions_ == NULL) {
disabledpluginsexceptions_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisabledPluginsExceptions)
return disabledpluginsexceptions_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_disabledpluginsexceptions() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisabledPluginsExceptions)
clear_has_disabledpluginsexceptions();
::enterprise_management::StringListPolicyProto* temp = disabledpluginsexceptions_;
disabledpluginsexceptions_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_disabledpluginsexceptions(::enterprise_management::StringListPolicyProto* disabledpluginsexceptions) {
delete disabledpluginsexceptions_;
disabledpluginsexceptions_ = disabledpluginsexceptions;
if (disabledpluginsexceptions) {
set_has_disabledpluginsexceptions();
} else {
clear_has_disabledpluginsexceptions();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisabledPluginsExceptions)
}

// optional .enterprise_management.BooleanPolicyProto AlwaysOpenPdfExternally = 349;
inline bool CloudPolicySettings::has_alwaysopenpdfexternally() const {
return (_has_bits_[5] & 0x00000100u) != 0;
}
inline void CloudPolicySettings::set_has_alwaysopenpdfexternally() {
_has_bits_[5] |= 0x00000100u;
}
inline void CloudPolicySettings::clear_has_alwaysopenpdfexternally() {
_has_bits_[5] &= ~0x00000100u;
}
inline void CloudPolicySettings::clear_alwaysopenpdfexternally() {
if (alwaysopenpdfexternally_ != NULL) alwaysopenpdfexternally_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_alwaysopenpdfexternally();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::alwaysopenpdfexternally() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AlwaysOpenPdfExternally)
return alwaysopenpdfexternally_ != NULL ? *alwaysopenpdfexternally_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_alwaysopenpdfexternally() {
set_has_alwaysopenpdfexternally();
if (alwaysopenpdfexternally_ == NULL) {
alwaysopenpdfexternally_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AlwaysOpenPdfExternally)
return alwaysopenpdfexternally_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_alwaysopenpdfexternally() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AlwaysOpenPdfExternally)
clear_has_alwaysopenpdfexternally();
::enterprise_management::BooleanPolicyProto* temp = alwaysopenpdfexternally_;
alwaysopenpdfexternally_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_alwaysopenpdfexternally(::enterprise_management::BooleanPolicyProto* alwaysopenpdfexternally) {
delete alwaysopenpdfexternally_;
alwaysopenpdfexternally_ = alwaysopenpdfexternally;
if (alwaysopenpdfexternally) {
set_has_alwaysopenpdfexternally();
} else {
clear_has_alwaysopenpdfexternally();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AlwaysOpenPdfExternally)
}

// optional .enterprise_management.BooleanPolicyProto SyncDisabled = 22;
inline bool CloudPolicySettings::has_syncdisabled() const {
return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CloudPolicySettings::set_has_syncdisabled() {
_has_bits_[0] |= 0x00008000u;
}
inline void CloudPolicySettings::clear_has_syncdisabled() {
_has_bits_[0] &= ~0x00008000u;
}
inline void CloudPolicySettings::clear_syncdisabled() {
if (syncdisabled_ != NULL) syncdisabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_syncdisabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::syncdisabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SyncDisabled)
return syncdisabled_ != NULL ? *syncdisabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_syncdisabled() {
set_has_syncdisabled();
if (syncdisabled_ == NULL) {
syncdisabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SyncDisabled)
return syncdisabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_syncdisabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SyncDisabled)
clear_has_syncdisabled();
::enterprise_management::BooleanPolicyProto* temp = syncdisabled_;
syncdisabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_syncdisabled(::enterprise_management::BooleanPolicyProto* syncdisabled) {
delete syncdisabled_;
syncdisabled_ = syncdisabled;
if (syncdisabled) {
set_has_syncdisabled();
} else {
clear_has_syncdisabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SyncDisabled)
}

// optional .enterprise_management.BooleanPolicyProto SigninAllowed = 192;
inline bool CloudPolicySettings::has_signinallowed() const {
return (_has_bits_[3] & 0x00002000u) != 0;
}
inline void CloudPolicySettings::set_has_signinallowed() {
_has_bits_[3] |= 0x00002000u;
}
inline void CloudPolicySettings::clear_has_signinallowed() {
_has_bits_[3] &= ~0x00002000u;
}
inline void CloudPolicySettings::clear_signinallowed() {
if (signinallowed_ != NULL) signinallowed_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_signinallowed();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::signinallowed() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SigninAllowed)
return signinallowed_ != NULL ? *signinallowed_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_signinallowed() {
set_has_signinallowed();
if (signinallowed_ == NULL) {
signinallowed_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SigninAllowed)
return signinallowed_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_signinallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SigninAllowed)
clear_has_signinallowed();
::enterprise_management::BooleanPolicyProto* temp = signinallowed_;
signinallowed_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_signinallowed(::enterprise_management::BooleanPolicyProto* signinallowed) {
delete signinallowed_;
signinallowed_ = signinallowed;
if (signinallowed) {
set_has_signinallowed();
} else {
clear_has_signinallowed();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SigninAllowed)
}

// optional .enterprise_management.StringPolicyProto DiskCacheDir = 90;
inline bool CloudPolicySettings::has_diskcachedir() const {
return (_has_bits_[2] & 0x00000040u) != 0;
}
inline void CloudPolicySettings::set_has_diskcachedir() {
_has_bits_[2] |= 0x00000040u;
}
inline void CloudPolicySettings::clear_has_diskcachedir() {
_has_bits_[2] &= ~0x00000040u;
}
inline void CloudPolicySettings::clear_diskcachedir() {
if (diskcachedir_ != NULL) diskcachedir_->::enterprise_management::StringPolicyProto::Clear();
clear_has_diskcachedir();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::diskcachedir() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DiskCacheDir)
return diskcachedir_ != NULL ? *diskcachedir_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_diskcachedir() {
set_has_diskcachedir();
if (diskcachedir_ == NULL) {
diskcachedir_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DiskCacheDir)
return diskcachedir_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_diskcachedir() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DiskCacheDir)
clear_has_diskcachedir();
::enterprise_management::StringPolicyProto* temp = diskcachedir_;
diskcachedir_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_diskcachedir(::enterprise_management::StringPolicyProto* diskcachedir) {
delete diskcachedir_;
diskcachedir_ = diskcachedir;
if (diskcachedir) {
set_has_diskcachedir();
} else {
clear_has_diskcachedir();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DiskCacheDir)
}

// optional .enterprise_management.IntegerPolicyProto DiskCacheSize = 112;
inline bool CloudPolicySettings::has_diskcachesize() const {
return (_has_bits_[2] & 0x00400000u) != 0;
}
inline void CloudPolicySettings::set_has_diskcachesize() {
_has_bits_[2] |= 0x00400000u;
}
inline void CloudPolicySettings::clear_has_diskcachesize() {
_has_bits_[2] &= ~0x00400000u;
}
inline void CloudPolicySettings::clear_diskcachesize() {
if (diskcachesize_ != NULL) diskcachesize_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_diskcachesize();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::diskcachesize() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DiskCacheSize)
return diskcachesize_ != NULL ? *diskcachesize_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_diskcachesize() {
set_has_diskcachesize();
if (diskcachesize_ == NULL) {
diskcachesize_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DiskCacheSize)
return diskcachesize_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_diskcachesize() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DiskCacheSize)
clear_has_diskcachesize();
::enterprise_management::IntegerPolicyProto* temp = diskcachesize_;
diskcachesize_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_diskcachesize(::enterprise_management::IntegerPolicyProto* diskcachesize) {
delete diskcachesize_;
diskcachesize_ = diskcachesize;
if (diskcachesize) {
set_has_diskcachesize();
} else {
clear_has_diskcachesize();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DiskCacheSize)
}

// optional .enterprise_management.IntegerPolicyProto MediaCacheSize = 113;
inline bool CloudPolicySettings::has_mediacachesize() const {
return (_has_bits_[2] & 0x00800000u) != 0;
}
inline void CloudPolicySettings::set_has_mediacachesize() {
_has_bits_[2] |= 0x00800000u;
}
inline void CloudPolicySettings::clear_has_mediacachesize() {
_has_bits_[2] &= ~0x00800000u;
}
inline void CloudPolicySettings::clear_mediacachesize() {
if (mediacachesize_ != NULL) mediacachesize_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_mediacachesize();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::mediacachesize() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.MediaCacheSize)
return mediacachesize_ != NULL ? *mediacachesize_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_mediacachesize() {
set_has_mediacachesize();
if (mediacachesize_ == NULL) {
mediacachesize_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.MediaCacheSize)
return mediacachesize_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_mediacachesize() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.MediaCacheSize)
clear_has_mediacachesize();
::enterprise_management::IntegerPolicyProto* temp = mediacachesize_;
mediacachesize_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_mediacachesize(::enterprise_management::IntegerPolicyProto* mediacachesize) {
delete mediacachesize_;
mediacachesize_ = mediacachesize;
if (mediacachesize) {
set_has_mediacachesize();
} else {
clear_has_mediacachesize();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.MediaCacheSize)
}

// optional .enterprise_management.IntegerPolicyProto DownloadRestrictions = 373;
inline bool CloudPolicySettings::has_downloadrestrictions() const {
return (_has_bits_[5] & 0x00010000u) != 0;
}
inline void CloudPolicySettings::set_has_downloadrestrictions() {
_has_bits_[5] |= 0x00010000u;
}
inline void CloudPolicySettings::clear_has_downloadrestrictions() {
_has_bits_[5] &= ~0x00010000u;
}
inline void CloudPolicySettings::clear_downloadrestrictions() {
if (downloadrestrictions_ != NULL) downloadrestrictions_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_downloadrestrictions();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::downloadrestrictions() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DownloadRestrictions)
return downloadrestrictions_ != NULL ? *downloadrestrictions_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_downloadrestrictions() {
set_has_downloadrestrictions();
if (downloadrestrictions_ == NULL) {
downloadrestrictions_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DownloadRestrictions)
return downloadrestrictions_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_downloadrestrictions() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DownloadRestrictions)
clear_has_downloadrestrictions();
::enterprise_management::IntegerPolicyProto* temp = downloadrestrictions_;
downloadrestrictions_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_downloadrestrictions(::enterprise_management::IntegerPolicyProto* downloadrestrictions) {
delete downloadrestrictions_;
downloadrestrictions_ = downloadrestrictions;
if (downloadrestrictions) {
set_has_downloadrestrictions();
} else {
clear_has_downloadrestrictions();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DownloadRestrictions)
}

// optional .enterprise_management.StringPolicyProto DownloadDirectory = 66;
inline bool CloudPolicySettings::has_downloaddirectory() const {
return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void CloudPolicySettings::set_has_downloaddirectory() {
_has_bits_[1] |= 0x00040000u;
}
inline void CloudPolicySettings::clear_has_downloaddirectory() {
_has_bits_[1] &= ~0x00040000u;
}
inline void CloudPolicySettings::clear_downloaddirectory() {
if (downloaddirectory_ != NULL) downloaddirectory_->::enterprise_management::StringPolicyProto::Clear();
clear_has_downloaddirectory();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::downloaddirectory() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DownloadDirectory)
return downloaddirectory_ != NULL ? *downloaddirectory_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_downloaddirectory() {
set_has_downloaddirectory();
if (downloaddirectory_ == NULL) {
downloaddirectory_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DownloadDirectory)
return downloaddirectory_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_downloaddirectory() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DownloadDirectory)
clear_has_downloaddirectory();
::enterprise_management::StringPolicyProto* temp = downloaddirectory_;
downloaddirectory_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_downloaddirectory(::enterprise_management::StringPolicyProto* downloaddirectory) {
delete downloaddirectory_;
downloaddirectory_ = downloaddirectory;
if (downloaddirectory) {
set_has_downloaddirectory();
} else {
clear_has_downloaddirectory();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DownloadDirectory)
}

// optional .enterprise_management.StringPolicyProto ProxyMode = 23;
inline bool CloudPolicySettings::has_proxymode() const {
return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CloudPolicySettings::set_has_proxymode() {
_has_bits_[0] |= 0x00010000u;
}
inline void CloudPolicySettings::clear_has_proxymode() {
_has_bits_[0] &= ~0x00010000u;
}
inline void CloudPolicySettings::clear_proxymode() {
if (proxymode_ != NULL) proxymode_->::enterprise_management::StringPolicyProto::Clear();
clear_has_proxymode();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxymode() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyMode)
return proxymode_ != NULL ? *proxymode_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxymode() {
set_has_proxymode();
if (proxymode_ == NULL) {
proxymode_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyMode)
return proxymode_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxymode() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyMode)
clear_has_proxymode();
::enterprise_management::StringPolicyProto* temp = proxymode_;
proxymode_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_proxymode(::enterprise_management::StringPolicyProto* proxymode) {
delete proxymode_;
proxymode_ = proxymode;
if (proxymode) {
set_has_proxymode();
} else {
clear_has_proxymode();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyMode)
}

// optional .enterprise_management.IntegerPolicyProto ProxyServerMode = 24;
inline bool CloudPolicySettings::has_proxyservermode() const {
return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CloudPolicySettings::set_has_proxyservermode() {
_has_bits_[0] |= 0x00020000u;
}
inline void CloudPolicySettings::clear_has_proxyservermode() {
_has_bits_[0] &= ~0x00020000u;
}
inline void CloudPolicySettings::clear_proxyservermode() {
if (proxyservermode_ != NULL) proxyservermode_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_proxyservermode();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::proxyservermode() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyServerMode)
return proxyservermode_ != NULL ? *proxyservermode_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_proxyservermode() {
set_has_proxyservermode();
if (proxyservermode_ == NULL) {
proxyservermode_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyServerMode)
return proxyservermode_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_proxyservermode() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyServerMode)
clear_has_proxyservermode();
::enterprise_management::IntegerPolicyProto* temp = proxyservermode_;
proxyservermode_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_proxyservermode(::enterprise_management::IntegerPolicyProto* proxyservermode) {
delete proxyservermode_;
proxyservermode_ = proxyservermode;
if (proxyservermode) {
set_has_proxyservermode();
} else {
clear_has_proxyservermode();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyServerMode)
}

// optional .enterprise_management.StringPolicyProto ProxyServer = 25;
inline bool CloudPolicySettings::has_proxyserver() const {
return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CloudPolicySettings::set_has_proxyserver() {
_has_bits_[0] |= 0x00040000u;
}
inline void CloudPolicySettings::clear_has_proxyserver() {
_has_bits_[0] &= ~0x00040000u;
}
inline void CloudPolicySettings::clear_proxyserver() {
if (proxyserver_ != NULL) proxyserver_->::enterprise_management::StringPolicyProto::Clear();
clear_has_proxyserver();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxyserver() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyServer)
return proxyserver_ != NULL ? *proxyserver_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxyserver() {
set_has_proxyserver();
if (proxyserver_ == NULL) {
proxyserver_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyServer)
return proxyserver_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxyserver() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyServer)
clear_has_proxyserver();
::enterprise_management::StringPolicyProto* temp = proxyserver_;
proxyserver_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_proxyserver(::enterprise_management::StringPolicyProto* proxyserver) {
delete proxyserver_;
proxyserver_ = proxyserver;
if (proxyserver) {
set_has_proxyserver();
} else {
clear_has_proxyserver();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyServer)
}

// optional .enterprise_management.StringPolicyProto ProxyPacUrl = 26;
inline bool CloudPolicySettings::has_proxypacurl() const {
return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CloudPolicySettings::set_has_proxypacurl() {
_has_bits_[0] |= 0x00080000u;
}
inline void CloudPolicySettings::clear_has_proxypacurl() {
_has_bits_[0] &= ~0x00080000u;
}
inline void CloudPolicySettings::clear_proxypacurl() {
if (proxypacurl_ != NULL) proxypacurl_->::enterprise_management::StringPolicyProto::Clear();
clear_has_proxypacurl();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxypacurl() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyPacUrl)
return proxypacurl_ != NULL ? *proxypacurl_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxypacurl() {
set_has_proxypacurl();
if (proxypacurl_ == NULL) {
proxypacurl_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyPacUrl)
return proxypacurl_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxypacurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyPacUrl)
clear_has_proxypacurl();
::enterprise_management::StringPolicyProto* temp = proxypacurl_;
proxypacurl_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_proxypacurl(::enterprise_management::StringPolicyProto* proxypacurl) {
delete proxypacurl_;
proxypacurl_ = proxypacurl;
if (proxypacurl) {
set_has_proxypacurl();
} else {
clear_has_proxypacurl();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyPacUrl)
}

// optional .enterprise_management.StringPolicyProto ProxyBypassList = 27;
inline bool CloudPolicySettings::has_proxybypasslist() const {
return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CloudPolicySettings::set_has_proxybypasslist() {
_has_bits_[0] |= 0x00100000u;
}
inline void CloudPolicySettings::clear_has_proxybypasslist() {
_has_bits_[0] &= ~0x00100000u;
}
inline void CloudPolicySettings::clear_proxybypasslist() {
if (proxybypasslist_ != NULL) proxybypasslist_->::enterprise_management::StringPolicyProto::Clear();
clear_has_proxybypasslist();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxybypasslist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyBypassList)
return proxybypasslist_ != NULL ? *proxybypasslist_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxybypasslist() {
set_has_proxybypasslist();
if (proxybypasslist_ == NULL) {
proxybypasslist_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyBypassList)
return proxybypasslist_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxybypasslist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyBypassList)
clear_has_proxybypasslist();
::enterprise_management::StringPolicyProto* temp = proxybypasslist_;
proxybypasslist_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_proxybypasslist(::enterprise_management::StringPolicyProto* proxybypasslist) {
delete proxybypasslist_;
proxybypasslist_ = proxybypasslist;
if (proxybypasslist) {
set_has_proxybypasslist();
} else {
clear_has_proxybypasslist();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyBypassList)
}

// optional .enterprise_management.StringPolicyProto ProxySettings = 118;
inline bool CloudPolicySettings::has_proxysettings() const {
return (_has_bits_[2] & 0x01000000u) != 0;
}
inline void CloudPolicySettings::set_has_proxysettings() {
_has_bits_[2] |= 0x01000000u;
}
inline void CloudPolicySettings::clear_has_proxysettings() {
_has_bits_[2] &= ~0x01000000u;
}
inline void CloudPolicySettings::clear_proxysettings() {
if (proxysettings_ != NULL) proxysettings_->::enterprise_management::StringPolicyProto::Clear();
clear_has_proxysettings();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxysettings() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxySettings)
return proxysettings_ != NULL ? *proxysettings_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxysettings() {
set_has_proxysettings();
if (proxysettings_ == NULL) {
proxysettings_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxySettings)
return proxysettings_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxysettings() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxySettings)
clear_has_proxysettings();
::enterprise_management::StringPolicyProto* temp = proxysettings_;
proxysettings_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_proxysettings(::enterprise_management::StringPolicyProto* proxysettings) {
delete proxysettings_;
proxysettings_ = proxysettings;
if (proxysettings) {
set_has_proxysettings();
} else {
clear_has_proxysettings();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxySettings)
}

// optional .enterprise_management.StringPolicyProto AuthSchemes = 28;
inline bool CloudPolicySettings::has_authschemes() const {
return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CloudPolicySettings::set_has_authschemes() {
_has_bits_[0] |= 0x00200000u;
}
inline void CloudPolicySettings::clear_has_authschemes() {
_has_bits_[0] &= ~0x00200000u;
}
inline void CloudPolicySettings::clear_authschemes() {
if (authschemes_ != NULL) authschemes_->::enterprise_management::StringPolicyProto::Clear();
clear_has_authschemes();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authschemes() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthSchemes)
return authschemes_ != NULL ? *authschemes_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authschemes() {
set_has_authschemes();
if (authschemes_ == NULL) {
authschemes_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthSchemes)
return authschemes_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authschemes() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthSchemes)
clear_has_authschemes();
::enterprise_management::StringPolicyProto* temp = authschemes_;
authschemes_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_authschemes(::enterprise_management::StringPolicyProto* authschemes) {
delete authschemes_;
authschemes_ = authschemes;
if (authschemes) {
set_has_authschemes();
} else {
clear_has_authschemes();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthSchemes)
}

// optional .enterprise_management.BooleanPolicyProto DisableAuthNegotiateCnameLookup = 29;
inline bool CloudPolicySettings::has_disableauthnegotiatecnamelookup() const {
return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CloudPolicySettings::set_has_disableauthnegotiatecnamelookup() {
_has_bits_[0] |= 0x00400000u;
}
inline void CloudPolicySettings::clear_has_disableauthnegotiatecnamelookup() {
_has_bits_[0] &= ~0x00400000u;
}
inline void CloudPolicySettings::clear_disableauthnegotiatecnamelookup() {
if (disableauthnegotiatecnamelookup_ != NULL) disableauthnegotiatecnamelookup_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_disableauthnegotiatecnamelookup();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disableauthnegotiatecnamelookup() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
return disableauthnegotiatecnamelookup_ != NULL ? *disableauthnegotiatecnamelookup_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disableauthnegotiatecnamelookup() {
set_has_disableauthnegotiatecnamelookup();
if (disableauthnegotiatecnamelookup_ == NULL) {
disableauthnegotiatecnamelookup_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
return disableauthnegotiatecnamelookup_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disableauthnegotiatecnamelookup() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
clear_has_disableauthnegotiatecnamelookup();
::enterprise_management::BooleanPolicyProto* temp = disableauthnegotiatecnamelookup_;
disableauthnegotiatecnamelookup_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_disableauthnegotiatecnamelookup(::enterprise_management::BooleanPolicyProto* disableauthnegotiatecnamelookup) {
delete disableauthnegotiatecnamelookup_;
disableauthnegotiatecnamelookup_ = disableauthnegotiatecnamelookup;
if (disableauthnegotiatecnamelookup) {
set_has_disableauthnegotiatecnamelookup();
} else {
clear_has_disableauthnegotiatecnamelookup();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
}

// optional .enterprise_management.BooleanPolicyProto EnableAuthNegotiatePort = 30;
inline bool CloudPolicySettings::has_enableauthnegotiateport() const {
return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CloudPolicySettings::set_has_enableauthnegotiateport() {
_has_bits_[0] |= 0x00800000u;
}
inline void CloudPolicySettings::clear_has_enableauthnegotiateport() {
_has_bits_[0] &= ~0x00800000u;
}
inline void CloudPolicySettings::clear_enableauthnegotiateport() {
if (enableauthnegotiateport_ != NULL) enableauthnegotiateport_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_enableauthnegotiateport();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enableauthnegotiateport() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableAuthNegotiatePort)
return enableauthnegotiateport_ != NULL ? *enableauthnegotiateport_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enableauthnegotiateport() {
set_has_enableauthnegotiateport();
if (enableauthnegotiateport_ == NULL) {
enableauthnegotiateport_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableAuthNegotiatePort)
return enableauthnegotiateport_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enableauthnegotiateport() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableAuthNegotiatePort)
clear_has_enableauthnegotiateport();
::enterprise_management::BooleanPolicyProto* temp = enableauthnegotiateport_;
enableauthnegotiateport_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_enableauthnegotiateport(::enterprise_management::BooleanPolicyProto* enableauthnegotiateport) {
delete enableauthnegotiateport_;
enableauthnegotiateport_ = enableauthnegotiateport;
if (enableauthnegotiateport) {
set_has_enableauthnegotiateport();
} else {
clear_has_enableauthnegotiateport();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableAuthNegotiatePort)
}

// optional .enterprise_management.StringPolicyProto AuthServerWhitelist = 31;
inline bool CloudPolicySettings::has_authserverwhitelist() const {
return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CloudPolicySettings::set_has_authserverwhitelist() {
_has_bits_[0] |= 0x01000000u;
}
inline void CloudPolicySettings::clear_has_authserverwhitelist() {
_has_bits_[0] &= ~0x01000000u;
}
inline void CloudPolicySettings::clear_authserverwhitelist() {
if (authserverwhitelist_ != NULL) authserverwhitelist_->::enterprise_management::StringPolicyProto::Clear();
clear_has_authserverwhitelist();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authserverwhitelist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
return authserverwhitelist_ != NULL ? *authserverwhitelist_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authserverwhitelist() {
set_has_authserverwhitelist();
if (authserverwhitelist_ == NULL) {
authserverwhitelist_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
return authserverwhitelist_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authserverwhitelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
clear_has_authserverwhitelist();
::enterprise_management::StringPolicyProto* temp = authserverwhitelist_;
authserverwhitelist_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_authserverwhitelist(::enterprise_management::StringPolicyProto* authserverwhitelist) {
delete authserverwhitelist_;
authserverwhitelist_ = authserverwhitelist;
if (authserverwhitelist) {
set_has_authserverwhitelist();
} else {
clear_has_authserverwhitelist();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
}

// optional .enterprise_management.StringPolicyProto AuthNegotiateDelegateWhitelist = 32;
inline bool CloudPolicySettings::has_authnegotiatedelegatewhitelist() const {
return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CloudPolicySettings::set_has_authnegotiatedelegatewhitelist() {
_has_bits_[0] |= 0x02000000u;
}
inline void CloudPolicySettings::clear_has_authnegotiatedelegatewhitelist() {
_has_bits_[0] &= ~0x02000000u;
}
inline void CloudPolicySettings::clear_authnegotiatedelegatewhitelist() {
if (authnegotiatedelegatewhitelist_ != NULL) authnegotiatedelegatewhitelist_->::enterprise_management::StringPolicyProto::Clear();
clear_has_authnegotiatedelegatewhitelist();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authnegotiatedelegatewhitelist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
return authnegotiatedelegatewhitelist_ != NULL ? *authnegotiatedelegatewhitelist_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authnegotiatedelegatewhitelist() {
set_has_authnegotiatedelegatewhitelist();
if (authnegotiatedelegatewhitelist_ == NULL) {
authnegotiatedelegatewhitelist_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
return authnegotiatedelegatewhitelist_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authnegotiatedelegatewhitelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
clear_has_authnegotiatedelegatewhitelist();
::enterprise_management::StringPolicyProto* temp = authnegotiatedelegatewhitelist_;
authnegotiatedelegatewhitelist_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_authnegotiatedelegatewhitelist(::enterprise_management::StringPolicyProto* authnegotiatedelegatewhitelist) {
delete authnegotiatedelegatewhitelist_;
authnegotiatedelegatewhitelist_ = authnegotiatedelegatewhitelist;
if (authnegotiatedelegatewhitelist) {
set_has_authnegotiatedelegatewhitelist();
} else {
clear_has_authnegotiatedelegatewhitelist();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
}

// optional .enterprise_management.StringPolicyProto GSSAPILibraryName = 33;
inline bool CloudPolicySettings::has_gssapilibraryname() const {
return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CloudPolicySettings::set_has_gssapilibraryname() {
_has_bits_[0] |= 0x04000000u;
}
inline void CloudPolicySettings::clear_has_gssapilibraryname() {
_has_bits_[0] &= ~0x04000000u;
}
inline void CloudPolicySettings::clear_gssapilibraryname() {
if (gssapilibraryname_ != NULL) gssapilibraryname_->::enterprise_management::StringPolicyProto::Clear();
clear_has_gssapilibraryname();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::gssapilibraryname() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.GSSAPILibraryName)
return gssapilibraryname_ != NULL ? *gssapilibraryname_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_gssapilibraryname() {
set_has_gssapilibraryname();
if (gssapilibraryname_ == NULL) {
gssapilibraryname_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.GSSAPILibraryName)
return gssapilibraryname_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_gssapilibraryname() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.GSSAPILibraryName)
clear_has_gssapilibraryname();
::enterprise_management::StringPolicyProto* temp = gssapilibraryname_;
gssapilibraryname_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_gssapilibraryname(::enterprise_management::StringPolicyProto* gssapilibraryname) {
delete gssapilibraryname_;
gssapilibraryname_ = gssapilibraryname;
if (gssapilibraryname) {
set_has_gssapilibraryname();
} else {
clear_has_gssapilibraryname();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.GSSAPILibraryName)
}

// optional .enterprise_management.BooleanPolicyProto AllowCrossOriginAuthPrompt = 91;
inline bool CloudPolicySettings::has_allowcrossoriginauthprompt() const {
return (_has_bits_[2] & 0x00000080u) != 0;
}
inline void CloudPolicySettings::set_has_allowcrossoriginauthprompt() {
_has_bits_[2] |= 0x00000080u;
}
inline void CloudPolicySettings::clear_has_allowcrossoriginauthprompt() {
_has_bits_[2] &= ~0x00000080u;
}
inline void CloudPolicySettings::clear_allowcrossoriginauthprompt() {
if (allowcrossoriginauthprompt_ != NULL) allowcrossoriginauthprompt_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_allowcrossoriginauthprompt();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allowcrossoriginauthprompt() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowCrossOriginAuthPrompt)
return allowcrossoriginauthprompt_ != NULL ? *allowcrossoriginauthprompt_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allowcrossoriginauthprompt() {
set_has_allowcrossoriginauthprompt();
if (allowcrossoriginauthprompt_ == NULL) {
allowcrossoriginauthprompt_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowCrossOriginAuthPrompt)
return allowcrossoriginauthprompt_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allowcrossoriginauthprompt() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowCrossOriginAuthPrompt)
clear_has_allowcrossoriginauthprompt();
::enterprise_management::BooleanPolicyProto* temp = allowcrossoriginauthprompt_;
allowcrossoriginauthprompt_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_allowcrossoriginauthprompt(::enterprise_management::BooleanPolicyProto* allowcrossoriginauthprompt) {
delete allowcrossoriginauthprompt_;
allowcrossoriginauthprompt_ = allowcrossoriginauthprompt;
if (allowcrossoriginauthprompt) {
set_has_allowcrossoriginauthprompt();
} else {
clear_has_allowcrossoriginauthprompt();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowCrossOriginAuthPrompt)
}

// optional .enterprise_management.BooleanPolicyProto NtlmV2Enabled = 395;
inline bool CloudPolicySettings::has_ntlmv2enabled() const {
return (_has_bits_[5] & 0x00200000u) != 0;
}
inline void CloudPolicySettings::set_has_ntlmv2enabled() {
_has_bits_[5] |= 0x00200000u;
}
inline void CloudPolicySettings::clear_has_ntlmv2enabled() {
_has_bits_[5] &= ~0x00200000u;
}
inline void CloudPolicySettings::clear_ntlmv2enabled() {
if (ntlmv2enabled_ != NULL) ntlmv2enabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_ntlmv2enabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::ntlmv2enabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
return ntlmv2enabled_ != NULL ? *ntlmv2enabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_ntlmv2enabled() {
set_has_ntlmv2enabled();
if (ntlmv2enabled_ == NULL) {
ntlmv2enabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
return ntlmv2enabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_ntlmv2enabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
clear_has_ntlmv2enabled();
::enterprise_management::BooleanPolicyProto* temp = ntlmv2enabled_;
ntlmv2enabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_ntlmv2enabled(::enterprise_management::BooleanPolicyProto* ntlmv2enabled) {
delete ntlmv2enabled_;
ntlmv2enabled_ = ntlmv2enabled;
if (ntlmv2enabled) {
set_has_ntlmv2enabled();
} else {
clear_has_ntlmv2enabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
}

// optional .enterprise_management.StringListPolicyProto ExtensionInstallBlacklist = 34;
inline bool CloudPolicySettings::has_extensioninstallblacklist() const {
return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CloudPolicySettings::set_has_extensioninstallblacklist() {
_has_bits_[0] |= 0x08000000u;
}
inline void CloudPolicySettings::clear_has_extensioninstallblacklist() {
_has_bits_[0] &= ~0x08000000u;
}
inline void CloudPolicySettings::clear_extensioninstallblacklist() {
if (extensioninstallblacklist_ != NULL) extensioninstallblacklist_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_extensioninstallblacklist();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::extensioninstallblacklist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExtensionInstallBlacklist)
return extensioninstallblacklist_ != NULL ? *extensioninstallblacklist_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_extensioninstallblacklist() {
set_has_extensioninstallblacklist();
if (extensioninstallblacklist_ == NULL) {
extensioninstallblacklist_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExtensionInstallBlacklist)
return extensioninstallblacklist_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_extensioninstallblacklist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExtensionInstallBlacklist)
clear_has_extensioninstallblacklist();
::enterprise_management::StringListPolicyProto* temp = extensioninstallblacklist_;
extensioninstallblacklist_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_extensioninstallblacklist(::enterprise_management::StringListPolicyProto* extensioninstallblacklist) {
delete extensioninstallblacklist_;
extensioninstallblacklist_ = extensioninstallblacklist;
if (extensioninstallblacklist) {
set_has_extensioninstallblacklist();
} else {
clear_has_extensioninstallblacklist();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExtensionInstallBlacklist)
}

// optional .enterprise_management.StringListPolicyProto ExtensionInstallWhitelist = 35;
inline bool CloudPolicySettings::has_extensioninstallwhitelist() const {
return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CloudPolicySettings::set_has_extensioninstallwhitelist() {
_has_bits_[0] |= 0x10000000u;
}
inline void CloudPolicySettings::clear_has_extensioninstallwhitelist() {
_has_bits_[0] &= ~0x10000000u;
}
inline void CloudPolicySettings::clear_extensioninstallwhitelist() {
if (extensioninstallwhitelist_ != NULL) extensioninstallwhitelist_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_extensioninstallwhitelist();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::extensioninstallwhitelist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExtensionInstallWhitelist)
return extensioninstallwhitelist_ != NULL ? *extensioninstallwhitelist_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_extensioninstallwhitelist() {
set_has_extensioninstallwhitelist();
if (extensioninstallwhitelist_ == NULL) {
extensioninstallwhitelist_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExtensionInstallWhitelist)
return extensioninstallwhitelist_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_extensioninstallwhitelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExtensionInstallWhitelist)
clear_has_extensioninstallwhitelist();
::enterprise_management::StringListPolicyProto* temp = extensioninstallwhitelist_;
extensioninstallwhitelist_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_extensioninstallwhitelist(::enterprise_management::StringListPolicyProto* extensioninstallwhitelist) {
delete extensioninstallwhitelist_;
extensioninstallwhitelist_ = extensioninstallwhitelist;
if (extensioninstallwhitelist) {
set_has_extensioninstallwhitelist();
} else {
clear_has_extensioninstallwhitelist();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExtensionInstallWhitelist)
}

// optional .enterprise_management.StringListPolicyProto ExtensionInstallForcelist = 36;
inline bool CloudPolicySettings::has_extensioninstallforcelist() const {
return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CloudPolicySettings::set_has_extensioninstallforcelist() {
_has_bits_[0] |= 0x20000000u;
}
inline void CloudPolicySettings::clear_has_extensioninstallforcelist() {
_has_bits_[0] &= ~0x20000000u;
}
inline void CloudPolicySettings::clear_extensioninstallforcelist() {
if (extensioninstallforcelist_ != NULL) extensioninstallforcelist_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_extensioninstallforcelist();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::extensioninstallforcelist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExtensionInstallForcelist)
return extensioninstallforcelist_ != NULL ? *extensioninstallforcelist_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_extensioninstallforcelist() {
set_has_extensioninstallforcelist();
if (extensioninstallforcelist_ == NULL) {
extensioninstallforcelist_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExtensionInstallForcelist)
return extensioninstallforcelist_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_extensioninstallforcelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExtensionInstallForcelist)
clear_has_extensioninstallforcelist();
::enterprise_management::StringListPolicyProto* temp = extensioninstallforcelist_;
extensioninstallforcelist_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_extensioninstallforcelist(::enterprise_management::StringListPolicyProto* extensioninstallforcelist) {
delete extensioninstallforcelist_;
extensioninstallforcelist_ = extensioninstallforcelist;
if (extensioninstallforcelist) {
set_has_extensioninstallforcelist();
} else {
clear_has_extensioninstallforcelist();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExtensionInstallForcelist)
}

// optional .enterprise_management.StringListPolicyProto ExtensionInstallSources = 150;
inline bool CloudPolicySettings::has_extensioninstallsources() const {
return (_has_bits_[2] & 0x20000000u) != 0;
}
inline void CloudPolicySettings::set_has_extensioninstallsources() {
_has_bits_[2] |= 0x20000000u;
}
inline void CloudPolicySettings::clear_has_extensioninstallsources() {
_has_bits_[2] &= ~0x20000000u;
}
inline void CloudPolicySettings::clear_extensioninstallsources() {
if (extensioninstallsources_ != NULL) extensioninstallsources_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_extensioninstallsources();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::extensioninstallsources() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExtensionInstallSources)
return extensioninstallsources_ != NULL ? *extensioninstallsources_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_extensioninstallsources() {
set_has_extensioninstallsources();
if (extensioninstallsources_ == NULL) {
extensioninstallsources_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExtensionInstallSources)
return extensioninstallsources_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_extensioninstallsources() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExtensionInstallSources)
clear_has_extensioninstallsources();
::enterprise_management::StringListPolicyProto* temp = extensioninstallsources_;
extensioninstallsources_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_extensioninstallsources(::enterprise_management::StringListPolicyProto* extensioninstallsources) {
delete extensioninstallsources_;
extensioninstallsources_ = extensioninstallsources;
if (extensioninstallsources) {
set_has_extensioninstallsources();
} else {
clear_has_extensioninstallsources();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExtensionInstallSources)
}

// optional .enterprise_management.StringListPolicyProto ExtensionAllowedTypes = 170;
inline bool CloudPolicySettings::has_extensionallowedtypes() const {
return (_has_bits_[3] & 0x00000400u) != 0;
}
inline void CloudPolicySettings::set_has_extensionallowedtypes() {
_has_bits_[3] |= 0x00000400u;
}
inline void CloudPolicySettings::clear_has_extensionallowedtypes() {
_has_bits_[3] &= ~0x00000400u;
}
inline void CloudPolicySettings::clear_extensionallowedtypes() {
if (extensionallowedtypes_ != NULL) extensionallowedtypes_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_extensionallowedtypes();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::extensionallowedtypes() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExtensionAllowedTypes)
return extensionallowedtypes_ != NULL ? *extensionallowedtypes_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_extensionallowedtypes() {
set_has_extensionallowedtypes();
if (extensionallowedtypes_ == NULL) {
extensionallowedtypes_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExtensionAllowedTypes)
return extensionallowedtypes_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_extensionallowedtypes() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExtensionAllowedTypes)
clear_has_extensionallowedtypes();
::enterprise_management::StringListPolicyProto* temp = extensionallowedtypes_;
extensionallowedtypes_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_extensionallowedtypes(::enterprise_management::StringListPolicyProto* extensionallowedtypes) {
delete extensionallowedtypes_;
extensionallowedtypes_ = extensionallowedtypes;
if (extensionallowedtypes) {
set_has_extensionallowedtypes();
} else {
clear_has_extensionallowedtypes();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExtensionAllowedTypes)
}

// optional .enterprise_management.StringPolicyProto ExtensionSettings = 280;
inline bool CloudPolicySettings::has_extensionsettings() const {
return (_has_bits_[4] & 0x00004000u) != 0;
}
inline void CloudPolicySettings::set_has_extensionsettings() {
_has_bits_[4] |= 0x00004000u;
}
inline void CloudPolicySettings::clear_has_extensionsettings() {
_has_bits_[4] &= ~0x00004000u;
}
inline void CloudPolicySettings::clear_extensionsettings() {
if (extensionsettings_ != NULL) extensionsettings_->::enterprise_management::StringPolicyProto::Clear();
clear_has_extensionsettings();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::extensionsettings() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExtensionSettings)
return extensionsettings_ != NULL ? *extensionsettings_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_extensionsettings() {
set_has_extensionsettings();
if (extensionsettings_ == NULL) {
extensionsettings_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExtensionSettings)
return extensionsettings_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_extensionsettings() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExtensionSettings)
clear_has_extensionsettings();
::enterprise_management::StringPolicyProto* temp = extensionsettings_;
extensionsettings_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_extensionsettings(::enterprise_management::StringPolicyProto* extensionsettings) {
delete extensionsettings_;
extensionsettings_ = extensionsettings;
if (extensionsettings) {
set_has_extensionsettings();
} else {
clear_has_extensionsettings();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExtensionSettings)
}

// optional .enterprise_management.BooleanPolicyProto ShowHomeButton = 37;
inline bool CloudPolicySettings::has_showhomebutton() const {
return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void CloudPolicySettings::set_has_showhomebutton() {
_has_bits_[0] |= 0x40000000u;
}
inline void CloudPolicySettings::clear_has_showhomebutton() {
_has_bits_[0] &= ~0x40000000u;
}
inline void CloudPolicySettings::clear_showhomebutton() {
if (showhomebutton_ != NULL) showhomebutton_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_showhomebutton();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::showhomebutton() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ShowHomeButton)
return showhomebutton_ != NULL ? *showhomebutton_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_showhomebutton() {
set_has_showhomebutton();
if (showhomebutton_ == NULL) {
showhomebutton_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ShowHomeButton)
return showhomebutton_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_showhomebutton() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ShowHomeButton)
clear_has_showhomebutton();
::enterprise_management::BooleanPolicyProto* temp = showhomebutton_;
showhomebutton_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_showhomebutton(::enterprise_management::BooleanPolicyProto* showhomebutton) {
delete showhomebutton_;
showhomebutton_ = showhomebutton;
if (showhomebutton) {
set_has_showhomebutton();
} else {
clear_has_showhomebutton();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ShowHomeButton)
}

// optional .enterprise_management.BooleanPolicyProto DeveloperToolsDisabled = 38;
inline bool CloudPolicySettings::has_developertoolsdisabled() const {
return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void CloudPolicySettings::set_has_developertoolsdisabled() {
_has_bits_[0] |= 0x80000000u;
}
inline void CloudPolicySettings::clear_has_developertoolsdisabled() {
_has_bits_[0] &= ~0x80000000u;
}
inline void CloudPolicySettings::clear_developertoolsdisabled() {
if (developertoolsdisabled_ != NULL) developertoolsdisabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_developertoolsdisabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::developertoolsdisabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DeveloperToolsDisabled)
return developertoolsdisabled_ != NULL ? *developertoolsdisabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_developertoolsdisabled() {
set_has_developertoolsdisabled();
if (developertoolsdisabled_ == NULL) {
developertoolsdisabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DeveloperToolsDisabled)
return developertoolsdisabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_developertoolsdisabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DeveloperToolsDisabled)
clear_has_developertoolsdisabled();
::enterprise_management::BooleanPolicyProto* temp = developertoolsdisabled_;
developertoolsdisabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_developertoolsdisabled(::enterprise_management::BooleanPolicyProto* developertoolsdisabled) {
delete developertoolsdisabled_;
developertoolsdisabled_ = developertoolsdisabled;
if (developertoolsdisabled) {
set_has_developertoolsdisabled();
} else {
clear_has_developertoolsdisabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DeveloperToolsDisabled)
}

// optional .enterprise_management.IntegerPolicyProto DeveloperToolsAvailability = 445;
inline bool CloudPolicySettings::has_developertoolsavailability() const {
return (_has_bits_[6] & 0x00040000u) != 0;
}
inline void CloudPolicySettings::set_has_developertoolsavailability() {
_has_bits_[6] |= 0x00040000u;
}
inline void CloudPolicySettings::clear_has_developertoolsavailability() {
_has_bits_[6] &= ~0x00040000u;
}
inline void CloudPolicySettings::clear_developertoolsavailability() {
if (developertoolsavailability_ != NULL) developertoolsavailability_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_developertoolsavailability();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::developertoolsavailability() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DeveloperToolsAvailability)
return developertoolsavailability_ != NULL ? *developertoolsavailability_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_developertoolsavailability() {
set_has_developertoolsavailability();
if (developertoolsavailability_ == NULL) {
developertoolsavailability_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DeveloperToolsAvailability)
return developertoolsavailability_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_developertoolsavailability() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DeveloperToolsAvailability)
clear_has_developertoolsavailability();
::enterprise_management::IntegerPolicyProto* temp = developertoolsavailability_;
developertoolsavailability_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_developertoolsavailability(::enterprise_management::IntegerPolicyProto* developertoolsavailability) {
delete developertoolsavailability_;
developertoolsavailability_ = developertoolsavailability;
if (developertoolsavailability) {
set_has_developertoolsavailability();
} else {
clear_has_developertoolsavailability();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DeveloperToolsAvailability)
}

// optional .enterprise_management.IntegerPolicyProto RestoreOnStartup = 39;
inline bool CloudPolicySettings::has_restoreonstartup() const {
return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void CloudPolicySettings::set_has_restoreonstartup() {
_has_bits_[1] |= 0x00000001u;
}
inline void CloudPolicySettings::clear_has_restoreonstartup() {
_has_bits_[1] &= ~0x00000001u;
}
inline void CloudPolicySettings::clear_restoreonstartup() {
if (restoreonstartup_ != NULL) restoreonstartup_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_restoreonstartup();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::restoreonstartup() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RestoreOnStartup)
return restoreonstartup_ != NULL ? *restoreonstartup_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_restoreonstartup() {
set_has_restoreonstartup();
if (restoreonstartup_ == NULL) {
restoreonstartup_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RestoreOnStartup)
return restoreonstartup_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_restoreonstartup() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RestoreOnStartup)
clear_has_restoreonstartup();
::enterprise_management::IntegerPolicyProto* temp = restoreonstartup_;
restoreonstartup_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_restoreonstartup(::enterprise_management::IntegerPolicyProto* restoreonstartup) {
delete restoreonstartup_;
restoreonstartup_ = restoreonstartup;
if (restoreonstartup) {
set_has_restoreonstartup();
} else {
clear_has_restoreonstartup();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RestoreOnStartup)
}

// optional .enterprise_management.StringListPolicyProto RestoreOnStartupURLs = 40;
inline bool CloudPolicySettings::has_restoreonstartupurls() const {
return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void CloudPolicySettings::set_has_restoreonstartupurls() {
_has_bits_[1] |= 0x00000002u;
}
inline void CloudPolicySettings::clear_has_restoreonstartupurls() {
_has_bits_[1] &= ~0x00000002u;
}
inline void CloudPolicySettings::clear_restoreonstartupurls() {
if (restoreonstartupurls_ != NULL) restoreonstartupurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_restoreonstartupurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::restoreonstartupurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RestoreOnStartupURLs)
return restoreonstartupurls_ != NULL ? *restoreonstartupurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_restoreonstartupurls() {
set_has_restoreonstartupurls();
if (restoreonstartupurls_ == NULL) {
restoreonstartupurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RestoreOnStartupURLs)
return restoreonstartupurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_restoreonstartupurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RestoreOnStartupURLs)
clear_has_restoreonstartupurls();
::enterprise_management::StringListPolicyProto* temp = restoreonstartupurls_;
restoreonstartupurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_restoreonstartupurls(::enterprise_management::StringListPolicyProto* restoreonstartupurls) {
delete restoreonstartupurls_;
restoreonstartupurls_ = restoreonstartupurls;
if (restoreonstartupurls) {
set_has_restoreonstartupurls();
} else {
clear_has_restoreonstartupurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RestoreOnStartupURLs)
}

// optional .enterprise_management.BooleanPolicyProto BlockThirdPartyCookies = 41;
inline bool CloudPolicySettings::has_blockthirdpartycookies() const {
return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void CloudPolicySettings::set_has_blockthirdpartycookies() {
_has_bits_[1] |= 0x00000004u;
}
inline void CloudPolicySettings::clear_has_blockthirdpartycookies() {
_has_bits_[1] &= ~0x00000004u;
}
inline void CloudPolicySettings::clear_blockthirdpartycookies() {
if (blockthirdpartycookies_ != NULL) blockthirdpartycookies_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_blockthirdpartycookies();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::blockthirdpartycookies() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BlockThirdPartyCookies)
return blockthirdpartycookies_ != NULL ? *blockthirdpartycookies_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_blockthirdpartycookies() {
set_has_blockthirdpartycookies();
if (blockthirdpartycookies_ == NULL) {
blockthirdpartycookies_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BlockThirdPartyCookies)
return blockthirdpartycookies_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_blockthirdpartycookies() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BlockThirdPartyCookies)
clear_has_blockthirdpartycookies();
::enterprise_management::BooleanPolicyProto* temp = blockthirdpartycookies_;
blockthirdpartycookies_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_blockthirdpartycookies(::enterprise_management::BooleanPolicyProto* blockthirdpartycookies) {
delete blockthirdpartycookies_;
blockthirdpartycookies_ = blockthirdpartycookies;
if (blockthirdpartycookies) {
set_has_blockthirdpartycookies();
} else {
clear_has_blockthirdpartycookies();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BlockThirdPartyCookies)
}

// optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderEnabled = 42;
inline bool CloudPolicySettings::has_defaultsearchproviderenabled() const {
return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void CloudPolicySettings::set_has_defaultsearchproviderenabled() {
_has_bits_[1] |= 0x00000008u;
}
inline void CloudPolicySettings::clear_has_defaultsearchproviderenabled() {
_has_bits_[1] &= ~0x00000008u;
}
inline void CloudPolicySettings::clear_defaultsearchproviderenabled() {
if (defaultsearchproviderenabled_ != NULL) defaultsearchproviderenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_defaultsearchproviderenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::defaultsearchproviderenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
return defaultsearchproviderenabled_ != NULL ? *defaultsearchproviderenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderenabled() {
set_has_defaultsearchproviderenabled();
if (defaultsearchproviderenabled_ == NULL) {
defaultsearchproviderenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
return defaultsearchproviderenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_defaultsearchproviderenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
clear_has_defaultsearchproviderenabled();
::enterprise_management::BooleanPolicyProto* temp = defaultsearchproviderenabled_;
defaultsearchproviderenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderenabled(::enterprise_management::BooleanPolicyProto* defaultsearchproviderenabled) {
delete defaultsearchproviderenabled_;
defaultsearchproviderenabled_ = defaultsearchproviderenabled;
if (defaultsearchproviderenabled) {
set_has_defaultsearchproviderenabled();
} else {
clear_has_defaultsearchproviderenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderName = 43;
inline bool CloudPolicySettings::has_defaultsearchprovidername() const {
return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void CloudPolicySettings::set_has_defaultsearchprovidername() {
_has_bits_[1] |= 0x00000010u;
}
inline void CloudPolicySettings::clear_has_defaultsearchprovidername() {
_has_bits_[1] &= ~0x00000010u;
}
inline void CloudPolicySettings::clear_defaultsearchprovidername() {
if (defaultsearchprovidername_ != NULL) defaultsearchprovidername_->::enterprise_management::StringPolicyProto::Clear();
clear_has_defaultsearchprovidername();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidername() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
return defaultsearchprovidername_ != NULL ? *defaultsearchprovidername_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidername() {
set_has_defaultsearchprovidername();
if (defaultsearchprovidername_ == NULL) {
defaultsearchprovidername_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
return defaultsearchprovidername_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidername() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
clear_has_defaultsearchprovidername();
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidername_;
defaultsearchprovidername_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidername(::enterprise_management::StringPolicyProto* defaultsearchprovidername) {
delete defaultsearchprovidername_;
defaultsearchprovidername_ = defaultsearchprovidername;
if (defaultsearchprovidername) {
set_has_defaultsearchprovidername();
} else {
clear_has_defaultsearchprovidername();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderKeyword = 44;
inline bool CloudPolicySettings::has_defaultsearchproviderkeyword() const {
return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void CloudPolicySettings::set_has_defaultsearchproviderkeyword() {
_has_bits_[1] |= 0x00000020u;
}
inline void CloudPolicySettings::clear_has_defaultsearchproviderkeyword() {
_has_bits_[1] &= ~0x00000020u;
}
inline void CloudPolicySettings::clear_defaultsearchproviderkeyword() {
if (defaultsearchproviderkeyword_ != NULL) defaultsearchproviderkeyword_->::enterprise_management::StringPolicyProto::Clear();
clear_has_defaultsearchproviderkeyword();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderkeyword() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
return defaultsearchproviderkeyword_ != NULL ? *defaultsearchproviderkeyword_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderkeyword() {
set_has_defaultsearchproviderkeyword();
if (defaultsearchproviderkeyword_ == NULL) {
defaultsearchproviderkeyword_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
return defaultsearchproviderkeyword_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderkeyword() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
clear_has_defaultsearchproviderkeyword();
::enterprise_management::StringPolicyProto* temp = defaultsearchproviderkeyword_;
defaultsearchproviderkeyword_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderkeyword(::enterprise_management::StringPolicyProto* defaultsearchproviderkeyword) {
delete defaultsearchproviderkeyword_;
defaultsearchproviderkeyword_ = defaultsearchproviderkeyword;
if (defaultsearchproviderkeyword) {
set_has_defaultsearchproviderkeyword();
} else {
clear_has_defaultsearchproviderkeyword();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURL = 45;
inline bool CloudPolicySettings::has_defaultsearchprovidersearchurl() const {
return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void CloudPolicySettings::set_has_defaultsearchprovidersearchurl() {
_has_bits_[1] |= 0x00000040u;
}
inline void CloudPolicySettings::clear_has_defaultsearchprovidersearchurl() {
_has_bits_[1] &= ~0x00000040u;
}
inline void CloudPolicySettings::clear_defaultsearchprovidersearchurl() {
if (defaultsearchprovidersearchurl_ != NULL) defaultsearchprovidersearchurl_->::enterprise_management::StringPolicyProto::Clear();
clear_has_defaultsearchprovidersearchurl();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersearchurl() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
return defaultsearchprovidersearchurl_ != NULL ? *defaultsearchprovidersearchurl_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersearchurl() {
set_has_defaultsearchprovidersearchurl();
if (defaultsearchprovidersearchurl_ == NULL) {
defaultsearchprovidersearchurl_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
return defaultsearchprovidersearchurl_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersearchurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
clear_has_defaultsearchprovidersearchurl();
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersearchurl_;
defaultsearchprovidersearchurl_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidersearchurl(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurl) {
delete defaultsearchprovidersearchurl_;
defaultsearchprovidersearchurl_ = defaultsearchprovidersearchurl;
if (defaultsearchprovidersearchurl) {
set_has_defaultsearchprovidersearchurl();
} else {
clear_has_defaultsearchprovidersearchurl();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURL = 46;
inline bool CloudPolicySettings::has_defaultsearchprovidersuggesturl() const {
return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void CloudPolicySettings::set_has_defaultsearchprovidersuggesturl() {
_has_bits_[1] |= 0x00000080u;
}
inline void CloudPolicySettings::clear_has_defaultsearchprovidersuggesturl() {
_has_bits_[1] &= ~0x00000080u;
}
inline void CloudPolicySettings::clear_defaultsearchprovidersuggesturl() {
if (defaultsearchprovidersuggesturl_ != NULL) defaultsearchprovidersuggesturl_->::enterprise_management::StringPolicyProto::Clear();
clear_has_defaultsearchprovidersuggesturl();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersuggesturl() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
return defaultsearchprovidersuggesturl_ != NULL ? *defaultsearchprovidersuggesturl_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersuggesturl() {
set_has_defaultsearchprovidersuggesturl();
if (defaultsearchprovidersuggesturl_ == NULL) {
defaultsearchprovidersuggesturl_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
return defaultsearchprovidersuggesturl_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersuggesturl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
clear_has_defaultsearchprovidersuggesturl();
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersuggesturl_;
defaultsearchprovidersuggesturl_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidersuggesturl(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturl) {
delete defaultsearchprovidersuggesturl_;
defaultsearchprovidersuggesturl_ = defaultsearchprovidersuggesturl;
if (defaultsearchprovidersuggesturl) {
set_has_defaultsearchprovidersuggesturl();
} else {
clear_has_defaultsearchprovidersuggesturl();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderIconURL = 48;
inline bool CloudPolicySettings::has_defaultsearchprovidericonurl() const {
return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void CloudPolicySettings::set_has_defaultsearchprovidericonurl() {
_has_bits_[1] |= 0x00000100u;
}
inline void CloudPolicySettings::clear_has_defaultsearchprovidericonurl() {
_has_bits_[1] &= ~0x00000100u;
}
inline void CloudPolicySettings::clear_defaultsearchprovidericonurl() {
if (defaultsearchprovidericonurl_ != NULL) defaultsearchprovidericonurl_->::enterprise_management::StringPolicyProto::Clear();
clear_has_defaultsearchprovidericonurl();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidericonurl() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
return defaultsearchprovidericonurl_ != NULL ? *defaultsearchprovidericonurl_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidericonurl() {
set_has_defaultsearchprovidericonurl();
if (defaultsearchprovidericonurl_ == NULL) {
defaultsearchprovidericonurl_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
return defaultsearchprovidericonurl_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidericonurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
clear_has_defaultsearchprovidericonurl();
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidericonurl_;
defaultsearchprovidericonurl_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidericonurl(::enterprise_management::StringPolicyProto* defaultsearchprovidericonurl) {
delete defaultsearchprovidericonurl_;
defaultsearchprovidericonurl_ = defaultsearchprovidericonurl;
if (defaultsearchprovidericonurl) {
set_has_defaultsearchprovidericonurl();
} else {
clear_has_defaultsearchprovidericonurl();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
}

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderEncodings = 49;
inline bool CloudPolicySettings::has_defaultsearchproviderencodings() const {
return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void CloudPolicySettings::set_has_defaultsearchproviderencodings() {
_has_bits_[1] |= 0x00000200u;
}
inline void CloudPolicySettings::clear_has_defaultsearchproviderencodings() {
_has_bits_[1] &= ~0x00000200u;
}
inline void CloudPolicySettings::clear_defaultsearchproviderencodings() {
if (defaultsearchproviderencodings_ != NULL) defaultsearchproviderencodings_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_defaultsearchproviderencodings();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::defaultsearchproviderencodings() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
return defaultsearchproviderencodings_ != NULL ? *defaultsearchproviderencodings_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderencodings() {
set_has_defaultsearchproviderencodings();
if (defaultsearchproviderencodings_ == NULL) {
defaultsearchproviderencodings_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
return defaultsearchproviderencodings_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_defaultsearchproviderencodings() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
clear_has_defaultsearchproviderencodings();
::enterprise_management::StringListPolicyProto* temp = defaultsearchproviderencodings_;
defaultsearchproviderencodings_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderencodings(::enterprise_management::StringListPolicyProto* defaultsearchproviderencodings) {
delete defaultsearchproviderencodings_;
defaultsearchproviderencodings_ = defaultsearchproviderencodings;
if (defaultsearchproviderencodings) {
set_has_defaultsearchproviderencodings();
} else {
clear_has_defaultsearchproviderencodings();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
}

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderAlternateURLs = 163;
inline bool CloudPolicySettings::has_defaultsearchprovideralternateurls() const {
return (_has_bits_[3] & 0x00000040u) != 0;
}
inline void CloudPolicySettings::set_has_defaultsearchprovideralternateurls() {
_has_bits_[3] |= 0x00000040u;
}
inline void CloudPolicySettings::clear_has_defaultsearchprovideralternateurls() {
_has_bits_[3] &= ~0x00000040u;
}
inline void CloudPolicySettings::clear_defaultsearchprovideralternateurls() {
if (defaultsearchprovideralternateurls_ != NULL) defaultsearchprovideralternateurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_defaultsearchprovideralternateurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::defaultsearchprovideralternateurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
return defaultsearchprovideralternateurls_ != NULL ? *defaultsearchprovideralternateurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_defaultsearchprovideralternateurls() {
set_has_defaultsearchprovideralternateurls();
if (defaultsearchprovideralternateurls_ == NULL) {
defaultsearchprovideralternateurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
return defaultsearchprovideralternateurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_defaultsearchprovideralternateurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
clear_has_defaultsearchprovideralternateurls();
::enterprise_management::StringListPolicyProto* temp = defaultsearchprovideralternateurls_;
defaultsearchprovideralternateurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovideralternateurls(::enterprise_management::StringListPolicyProto* defaultsearchprovideralternateurls) {
delete defaultsearchprovideralternateurls_;
defaultsearchprovideralternateurls_ = defaultsearchprovideralternateurls;
if (defaultsearchprovideralternateurls) {
set_has_defaultsearchprovideralternateurls();
} else {
clear_has_defaultsearchprovideralternateurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURL = 231;
inline bool CloudPolicySettings::has_defaultsearchproviderimageurl() const {
return (_has_bits_[3] & 0x00800000u) != 0;
}
inline void CloudPolicySettings::set_has_defaultsearchproviderimageurl() {
_has_bits_[3] |= 0x00800000u;
}
inline void CloudPolicySettings::clear_has_defaultsearchproviderimageurl() {
_has_bits_[3] &= ~0x00800000u;
}
inline void CloudPolicySettings::clear_defaultsearchproviderimageurl() {
if (defaultsearchproviderimageurl_ != NULL) defaultsearchproviderimageurl_->::enterprise_management::StringPolicyProto::Clear();
clear_has_defaultsearchproviderimageurl();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderimageurl() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
return defaultsearchproviderimageurl_ != NULL ? *defaultsearchproviderimageurl_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderimageurl() {
set_has_defaultsearchproviderimageurl();
if (defaultsearchproviderimageurl_ == NULL) {
defaultsearchproviderimageurl_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
return defaultsearchproviderimageurl_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderimageurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
clear_has_defaultsearchproviderimageurl();
::enterprise_management::StringPolicyProto* temp = defaultsearchproviderimageurl_;
defaultsearchproviderimageurl_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderimageurl(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurl) {
delete defaultsearchproviderimageurl_;
defaultsearchproviderimageurl_ = defaultsearchproviderimageurl;
if (defaultsearchproviderimageurl) {
set_has_defaultsearchproviderimageurl();
} else {
clear_has_defaultsearchproviderimageurl();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderNewTabURL = 239;
inline bool CloudPolicySettings::has_defaultsearchprovidernewtaburl() const {
return (_has_bits_[3] & 0x20000000u) != 0;
}
inline void CloudPolicySettings::set_has_defaultsearchprovidernewtaburl() {
_has_bits_[3] |= 0x20000000u;
}
inline void CloudPolicySettings::clear_has_defaultsearchprovidernewtaburl() {
_has_bits_[3] &= ~0x20000000u;
}
inline void CloudPolicySettings::clear_defaultsearchprovidernewtaburl() {
if (defaultsearchprovidernewtaburl_ != NULL) defaultsearchprovidernewtaburl_->::enterprise_management::StringPolicyProto::Clear();
clear_has_defaultsearchprovidernewtaburl();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidernewtaburl() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
return defaultsearchprovidernewtaburl_ != NULL ? *defaultsearchprovidernewtaburl_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidernewtaburl() {
set_has_defaultsearchprovidernewtaburl();
if (defaultsearchprovidernewtaburl_ == NULL) {
defaultsearchprovidernewtaburl_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
return defaultsearchprovidernewtaburl_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidernewtaburl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
clear_has_defaultsearchprovidernewtaburl();
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidernewtaburl_;
defaultsearchprovidernewtaburl_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidernewtaburl(::enterprise_management::StringPolicyProto* defaultsearchprovidernewtaburl) {
delete defaultsearchprovidernewtaburl_;
defaultsearchprovidernewtaburl_ = defaultsearchprovidernewtaburl;
if (defaultsearchprovidernewtaburl) {
set_has_defaultsearchprovidernewtaburl();
} else {
clear_has_defaultsearchprovidernewtaburl();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURLPostParams = 232;
inline bool CloudPolicySettings::has_defaultsearchprovidersearchurlpostparams() const {
return (_has_bits_[3] & 0x01000000u) != 0;
}
inline void CloudPolicySettings::set_has_defaultsearchprovidersearchurlpostparams() {
_has_bits_[3] |= 0x01000000u;
}
inline void CloudPolicySettings::clear_has_defaultsearchprovidersearchurlpostparams() {
_has_bits_[3] &= ~0x01000000u;
}
inline void CloudPolicySettings::clear_defaultsearchprovidersearchurlpostparams() {
if (defaultsearchprovidersearchurlpostparams_ != NULL) defaultsearchprovidersearchurlpostparams_->::enterprise_management::StringPolicyProto::Clear();
clear_has_defaultsearchprovidersearchurlpostparams();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersearchurlpostparams() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
return defaultsearchprovidersearchurlpostparams_ != NULL ? *defaultsearchprovidersearchurlpostparams_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersearchurlpostparams() {
set_has_defaultsearchprovidersearchurlpostparams();
if (defaultsearchprovidersearchurlpostparams_ == NULL) {
defaultsearchprovidersearchurlpostparams_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
return defaultsearchprovidersearchurlpostparams_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersearchurlpostparams() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
clear_has_defaultsearchprovidersearchurlpostparams();
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersearchurlpostparams_;
defaultsearchprovidersearchurlpostparams_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidersearchurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurlpostparams) {
delete defaultsearchprovidersearchurlpostparams_;
defaultsearchprovidersearchurlpostparams_ = defaultsearchprovidersearchurlpostparams;
if (defaultsearchprovidersearchurlpostparams) {
set_has_defaultsearchprovidersearchurlpostparams();
} else {
clear_has_defaultsearchprovidersearchurlpostparams();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURLPostParams = 233;
inline bool CloudPolicySettings::has_defaultsearchprovidersuggesturlpostparams() const {
return (_has_bits_[3] & 0x02000000u) != 0;
}
inline void CloudPolicySettings::set_has_defaultsearchprovidersuggesturlpostparams() {
_has_bits_[3] |= 0x02000000u;
}
inline void CloudPolicySettings::clear_has_defaultsearchprovidersuggesturlpostparams() {
_has_bits_[3] &= ~0x02000000u;
}
inline void CloudPolicySettings::clear_defaultsearchprovidersuggesturlpostparams() {
if (defaultsearchprovidersuggesturlpostparams_ != NULL) defaultsearchprovidersuggesturlpostparams_->::enterprise_management::StringPolicyProto::Clear();
clear_has_defaultsearchprovidersuggesturlpostparams();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersuggesturlpostparams() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
return defaultsearchprovidersuggesturlpostparams_ != NULL ? *defaultsearchprovidersuggesturlpostparams_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersuggesturlpostparams() {
set_has_defaultsearchprovidersuggesturlpostparams();
if (defaultsearchprovidersuggesturlpostparams_ == NULL) {
defaultsearchprovidersuggesturlpostparams_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
return defaultsearchprovidersuggesturlpostparams_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersuggesturlpostparams() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
clear_has_defaultsearchprovidersuggesturlpostparams();
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersuggesturlpostparams_;
defaultsearchprovidersuggesturlpostparams_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidersuggesturlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturlpostparams) {
delete defaultsearchprovidersuggesturlpostparams_;
defaultsearchprovidersuggesturlpostparams_ = defaultsearchprovidersuggesturlpostparams;
if (defaultsearchprovidersuggesturlpostparams) {
set_has_defaultsearchprovidersuggesturlpostparams();
} else {
clear_has_defaultsearchprovidersuggesturlpostparams();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURLPostParams = 235;
inline bool CloudPolicySettings::has_defaultsearchproviderimageurlpostparams() const {
return (_has_bits_[3] & 0x04000000u) != 0;
}
inline void CloudPolicySettings::set_has_defaultsearchproviderimageurlpostparams() {
_has_bits_[3] |= 0x04000000u;
}
inline void CloudPolicySettings::clear_has_defaultsearchproviderimageurlpostparams() {
_has_bits_[3] &= ~0x04000000u;
}
inline void CloudPolicySettings::clear_defaultsearchproviderimageurlpostparams() {
if (defaultsearchproviderimageurlpostparams_ != NULL) defaultsearchproviderimageurlpostparams_->::enterprise_management::StringPolicyProto::Clear();
clear_has_defaultsearchproviderimageurlpostparams();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderimageurlpostparams() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
return defaultsearchproviderimageurlpostparams_ != NULL ? *defaultsearchproviderimageurlpostparams_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderimageurlpostparams() {
set_has_defaultsearchproviderimageurlpostparams();
if (defaultsearchproviderimageurlpostparams_ == NULL) {
defaultsearchproviderimageurlpostparams_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
return defaultsearchproviderimageurlpostparams_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderimageurlpostparams() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
clear_has_defaultsearchproviderimageurlpostparams();
::enterprise_management::StringPolicyProto* temp = defaultsearchproviderimageurlpostparams_;
defaultsearchproviderimageurlpostparams_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderimageurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurlpostparams) {
delete defaultsearchproviderimageurlpostparams_;
defaultsearchproviderimageurlpostparams_ = defaultsearchproviderimageurlpostparams;
if (defaultsearchproviderimageurlpostparams) {
set_has_defaultsearchproviderimageurlpostparams();
} else {
clear_has_defaultsearchproviderimageurlpostparams();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
}

// optional .enterprise_management.IntegerPolicyProto DefaultCookiesSetting = 50;
inline bool CloudPolicySettings::has_defaultcookiessetting() const {
return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void CloudPolicySettings::set_has_defaultcookiessetting() {
_has_bits_[1] |= 0x00000400u;
}
inline void CloudPolicySettings::clear_has_defaultcookiessetting() {
_has_bits_[1] &= ~0x00000400u;
}
inline void CloudPolicySettings::clear_defaultcookiessetting() {
if (defaultcookiessetting_ != NULL) defaultcookiessetting_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_defaultcookiessetting();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultcookiessetting() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
return defaultcookiessetting_ != NULL ? *defaultcookiessetting_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultcookiessetting() {
set_has_defaultcookiessetting();
if (defaultcookiessetting_ == NULL) {
defaultcookiessetting_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
return defaultcookiessetting_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultcookiessetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
clear_has_defaultcookiessetting();
::enterprise_management::IntegerPolicyProto* temp = defaultcookiessetting_;
defaultcookiessetting_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultcookiessetting(::enterprise_management::IntegerPolicyProto* defaultcookiessetting) {
delete defaultcookiessetting_;
defaultcookiessetting_ = defaultcookiessetting;
if (defaultcookiessetting) {
set_has_defaultcookiessetting();
} else {
clear_has_defaultcookiessetting();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultImagesSetting = 51;
inline bool CloudPolicySettings::has_defaultimagessetting() const {
return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void CloudPolicySettings::set_has_defaultimagessetting() {
_has_bits_[1] |= 0x00000800u;
}
inline void CloudPolicySettings::clear_has_defaultimagessetting() {
_has_bits_[1] &= ~0x00000800u;
}
inline void CloudPolicySettings::clear_defaultimagessetting() {
if (defaultimagessetting_ != NULL) defaultimagessetting_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_defaultimagessetting();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultimagessetting() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultImagesSetting)
return defaultimagessetting_ != NULL ? *defaultimagessetting_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultimagessetting() {
set_has_defaultimagessetting();
if (defaultimagessetting_ == NULL) {
defaultimagessetting_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultImagesSetting)
return defaultimagessetting_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultimagessetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultImagesSetting)
clear_has_defaultimagessetting();
::enterprise_management::IntegerPolicyProto* temp = defaultimagessetting_;
defaultimagessetting_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultimagessetting(::enterprise_management::IntegerPolicyProto* defaultimagessetting) {
delete defaultimagessetting_;
defaultimagessetting_ = defaultimagessetting;
if (defaultimagessetting) {
set_has_defaultimagessetting();
} else {
clear_has_defaultimagessetting();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultImagesSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptSetting = 52;
inline bool CloudPolicySettings::has_defaultjavascriptsetting() const {
return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void CloudPolicySettings::set_has_defaultjavascriptsetting() {
_has_bits_[1] |= 0x00001000u;
}
inline void CloudPolicySettings::clear_has_defaultjavascriptsetting() {
_has_bits_[1] &= ~0x00001000u;
}
inline void CloudPolicySettings::clear_defaultjavascriptsetting() {
if (defaultjavascriptsetting_ != NULL) defaultjavascriptsetting_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_defaultjavascriptsetting();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultjavascriptsetting() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
return defaultjavascriptsetting_ != NULL ? *defaultjavascriptsetting_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultjavascriptsetting() {
set_has_defaultjavascriptsetting();
if (defaultjavascriptsetting_ == NULL) {
defaultjavascriptsetting_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
return defaultjavascriptsetting_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultjavascriptsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
clear_has_defaultjavascriptsetting();
::enterprise_management::IntegerPolicyProto* temp = defaultjavascriptsetting_;
defaultjavascriptsetting_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultjavascriptsetting(::enterprise_management::IntegerPolicyProto* defaultjavascriptsetting) {
delete defaultjavascriptsetting_;
defaultjavascriptsetting_ = defaultjavascriptsetting;
if (defaultjavascriptsetting) {
set_has_defaultjavascriptsetting();
} else {
clear_has_defaultjavascriptsetting();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultPluginsSetting = 53;
inline bool CloudPolicySettings::has_defaultpluginssetting() const {
return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void CloudPolicySettings::set_has_defaultpluginssetting() {
_has_bits_[1] |= 0x00002000u;
}
inline void CloudPolicySettings::clear_has_defaultpluginssetting() {
_has_bits_[1] &= ~0x00002000u;
}
inline void CloudPolicySettings::clear_defaultpluginssetting() {
if (defaultpluginssetting_ != NULL) defaultpluginssetting_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_defaultpluginssetting();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultpluginssetting() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultPluginsSetting)
return defaultpluginssetting_ != NULL ? *defaultpluginssetting_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultpluginssetting() {
set_has_defaultpluginssetting();
if (defaultpluginssetting_ == NULL) {
defaultpluginssetting_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultPluginsSetting)
return defaultpluginssetting_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultpluginssetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultPluginsSetting)
clear_has_defaultpluginssetting();
::enterprise_management::IntegerPolicyProto* temp = defaultpluginssetting_;
defaultpluginssetting_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultpluginssetting(::enterprise_management::IntegerPolicyProto* defaultpluginssetting) {
delete defaultpluginssetting_;
defaultpluginssetting_ = defaultpluginssetting;
if (defaultpluginssetting) {
set_has_defaultpluginssetting();
} else {
clear_has_defaultpluginssetting();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultPluginsSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultPopupsSetting = 54;
inline bool CloudPolicySettings::has_defaultpopupssetting() const {
return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void CloudPolicySettings::set_has_defaultpopupssetting() {
_has_bits_[1] |= 0x00004000u;
}
inline void CloudPolicySettings::clear_has_defaultpopupssetting() {
_has_bits_[1] &= ~0x00004000u;
}
inline void CloudPolicySettings::clear_defaultpopupssetting() {
if (defaultpopupssetting_ != NULL) defaultpopupssetting_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_defaultpopupssetting();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultpopupssetting() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
return defaultpopupssetting_ != NULL ? *defaultpopupssetting_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultpopupssetting() {
set_has_defaultpopupssetting();
if (defaultpopupssetting_ == NULL) {
defaultpopupssetting_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
return defaultpopupssetting_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultpopupssetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
clear_has_defaultpopupssetting();
::enterprise_management::IntegerPolicyProto* temp = defaultpopupssetting_;
defaultpopupssetting_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultpopupssetting(::enterprise_management::IntegerPolicyProto* defaultpopupssetting) {
delete defaultpopupssetting_;
defaultpopupssetting_ = defaultpopupssetting;
if (defaultpopupssetting) {
set_has_defaultpopupssetting();
} else {
clear_has_defaultpopupssetting();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultNotificationsSetting = 55;
inline bool CloudPolicySettings::has_defaultnotificationssetting() const {
return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void CloudPolicySettings::set_has_defaultnotificationssetting() {
_has_bits_[1] |= 0x00008000u;
}
inline void CloudPolicySettings::clear_has_defaultnotificationssetting() {
_has_bits_[1] &= ~0x00008000u;
}
inline void CloudPolicySettings::clear_defaultnotificationssetting() {
if (defaultnotificationssetting_ != NULL) defaultnotificationssetting_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_defaultnotificationssetting();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultnotificationssetting() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultNotificationsSetting)
return defaultnotificationssetting_ != NULL ? *defaultnotificationssetting_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultnotificationssetting() {
set_has_defaultnotificationssetting();
if (defaultnotificationssetting_ == NULL) {
defaultnotificationssetting_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultNotificationsSetting)
return defaultnotificationssetting_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultnotificationssetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultNotificationsSetting)
clear_has_defaultnotificationssetting();
::enterprise_management::IntegerPolicyProto* temp = defaultnotificationssetting_;
defaultnotificationssetting_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultnotificationssetting(::enterprise_management::IntegerPolicyProto* defaultnotificationssetting) {
delete defaultnotificationssetting_;
defaultnotificationssetting_ = defaultnotificationssetting;
if (defaultnotificationssetting) {
set_has_defaultnotificationssetting();
} else {
clear_has_defaultnotificationssetting();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultNotificationsSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultGeolocationSetting = 56;
inline bool CloudPolicySettings::has_defaultgeolocationsetting() const {
return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void CloudPolicySettings::set_has_defaultgeolocationsetting() {
_has_bits_[1] |= 0x00010000u;
}
inline void CloudPolicySettings::clear_has_defaultgeolocationsetting() {
_has_bits_[1] &= ~0x00010000u;
}
inline void CloudPolicySettings::clear_defaultgeolocationsetting() {
if (defaultgeolocationsetting_ != NULL) defaultgeolocationsetting_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_defaultgeolocationsetting();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultgeolocationsetting() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
return defaultgeolocationsetting_ != NULL ? *defaultgeolocationsetting_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultgeolocationsetting() {
set_has_defaultgeolocationsetting();
if (defaultgeolocationsetting_ == NULL) {
defaultgeolocationsetting_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
return defaultgeolocationsetting_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultgeolocationsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
clear_has_defaultgeolocationsetting();
::enterprise_management::IntegerPolicyProto* temp = defaultgeolocationsetting_;
defaultgeolocationsetting_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultgeolocationsetting(::enterprise_management::IntegerPolicyProto* defaultgeolocationsetting) {
delete defaultgeolocationsetting_;
defaultgeolocationsetting_ = defaultgeolocationsetting;
if (defaultgeolocationsetting) {
set_has_defaultgeolocationsetting();
} else {
clear_has_defaultgeolocationsetting();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultMediaStreamSetting = 151;
inline bool CloudPolicySettings::has_defaultmediastreamsetting() const {
return (_has_bits_[2] & 0x40000000u) != 0;
}
inline void CloudPolicySettings::set_has_defaultmediastreamsetting() {
_has_bits_[2] |= 0x40000000u;
}
inline void CloudPolicySettings::clear_has_defaultmediastreamsetting() {
_has_bits_[2] &= ~0x40000000u;
}
inline void CloudPolicySettings::clear_defaultmediastreamsetting() {
if (defaultmediastreamsetting_ != NULL) defaultmediastreamsetting_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_defaultmediastreamsetting();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultmediastreamsetting() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultMediaStreamSetting)
return defaultmediastreamsetting_ != NULL ? *defaultmediastreamsetting_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultmediastreamsetting() {
set_has_defaultmediastreamsetting();
if (defaultmediastreamsetting_ == NULL) {
defaultmediastreamsetting_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultMediaStreamSetting)
return defaultmediastreamsetting_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultmediastreamsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultMediaStreamSetting)
clear_has_defaultmediastreamsetting();
::enterprise_management::IntegerPolicyProto* temp = defaultmediastreamsetting_;
defaultmediastreamsetting_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultmediastreamsetting(::enterprise_management::IntegerPolicyProto* defaultmediastreamsetting) {
delete defaultmediastreamsetting_;
defaultmediastreamsetting_ = defaultmediastreamsetting;
if (defaultmediastreamsetting) {
set_has_defaultmediastreamsetting();
} else {
clear_has_defaultmediastreamsetting();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultMediaStreamSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultWebBluetoothGuardSetting = 322;
inline bool CloudPolicySettings::has_defaultwebbluetoothguardsetting() const {
return (_has_bits_[4] & 0x20000000u) != 0;
}
inline void CloudPolicySettings::set_has_defaultwebbluetoothguardsetting() {
_has_bits_[4] |= 0x20000000u;
}
inline void CloudPolicySettings::clear_has_defaultwebbluetoothguardsetting() {
_has_bits_[4] &= ~0x20000000u;
}
inline void CloudPolicySettings::clear_defaultwebbluetoothguardsetting() {
if (defaultwebbluetoothguardsetting_ != NULL) defaultwebbluetoothguardsetting_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_defaultwebbluetoothguardsetting();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultwebbluetoothguardsetting() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
return defaultwebbluetoothguardsetting_ != NULL ? *defaultwebbluetoothguardsetting_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultwebbluetoothguardsetting() {
set_has_defaultwebbluetoothguardsetting();
if (defaultwebbluetoothguardsetting_ == NULL) {
defaultwebbluetoothguardsetting_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
return defaultwebbluetoothguardsetting_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultwebbluetoothguardsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
clear_has_defaultwebbluetoothguardsetting();
::enterprise_management::IntegerPolicyProto* temp = defaultwebbluetoothguardsetting_;
defaultwebbluetoothguardsetting_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultwebbluetoothguardsetting(::enterprise_management::IntegerPolicyProto* defaultwebbluetoothguardsetting) {
delete defaultwebbluetoothguardsetting_;
defaultwebbluetoothguardsetting_ = defaultwebbluetoothguardsetting;
if (defaultwebbluetoothguardsetting) {
set_has_defaultwebbluetoothguardsetting();
} else {
clear_has_defaultwebbluetoothguardsetting();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultWebUsbGuardSetting = 436;
inline bool CloudPolicySettings::has_defaultwebusbguardsetting() const {
return (_has_bits_[6] & 0x00001000u) != 0;
}
inline void CloudPolicySettings::set_has_defaultwebusbguardsetting() {
_has_bits_[6] |= 0x00001000u;
}
inline void CloudPolicySettings::clear_has_defaultwebusbguardsetting() {
_has_bits_[6] &= ~0x00001000u;
}
inline void CloudPolicySettings::clear_defaultwebusbguardsetting() {
if (defaultwebusbguardsetting_ != NULL) defaultwebusbguardsetting_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_defaultwebusbguardsetting();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultwebusbguardsetting() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
return defaultwebusbguardsetting_ != NULL ? *defaultwebusbguardsetting_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultwebusbguardsetting() {
set_has_defaultwebusbguardsetting();
if (defaultwebusbguardsetting_ == NULL) {
defaultwebusbguardsetting_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
return defaultwebusbguardsetting_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultwebusbguardsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
clear_has_defaultwebusbguardsetting();
::enterprise_management::IntegerPolicyProto* temp = defaultwebusbguardsetting_;
defaultwebusbguardsetting_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultwebusbguardsetting(::enterprise_management::IntegerPolicyProto* defaultwebusbguardsetting) {
delete defaultwebusbguardsetting_;
defaultwebusbguardsetting_ = defaultwebusbguardsetting;
if (defaultwebusbguardsetting) {
set_has_defaultwebusbguardsetting();
} else {
clear_has_defaultwebusbguardsetting();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
}

// optional .enterprise_management.StringListPolicyProto WebUsbAskForUrls = 441;
inline bool CloudPolicySettings::has_webusbaskforurls() const {
return (_has_bits_[6] & 0x00010000u) != 0;
}
inline void CloudPolicySettings::set_has_webusbaskforurls() {
_has_bits_[6] |= 0x00010000u;
}
inline void CloudPolicySettings::clear_has_webusbaskforurls() {
_has_bits_[6] &= ~0x00010000u;
}
inline void CloudPolicySettings::clear_webusbaskforurls() {
if (webusbaskforurls_ != NULL) webusbaskforurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_webusbaskforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::webusbaskforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
return webusbaskforurls_ != NULL ? *webusbaskforurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_webusbaskforurls() {
set_has_webusbaskforurls();
if (webusbaskforurls_ == NULL) {
webusbaskforurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
return webusbaskforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_webusbaskforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
clear_has_webusbaskforurls();
::enterprise_management::StringListPolicyProto* temp = webusbaskforurls_;
webusbaskforurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_webusbaskforurls(::enterprise_management::StringListPolicyProto* webusbaskforurls) {
delete webusbaskforurls_;
webusbaskforurls_ = webusbaskforurls;
if (webusbaskforurls) {
set_has_webusbaskforurls();
} else {
clear_has_webusbaskforurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
}

// optional .enterprise_management.StringListPolicyProto WebUsbBlockedForUrls = 442;
inline bool CloudPolicySettings::has_webusbblockedforurls() const {
return (_has_bits_[6] & 0x00020000u) != 0;
}
inline void CloudPolicySettings::set_has_webusbblockedforurls() {
_has_bits_[6] |= 0x00020000u;
}
inline void CloudPolicySettings::clear_has_webusbblockedforurls() {
_has_bits_[6] &= ~0x00020000u;
}
inline void CloudPolicySettings::clear_webusbblockedforurls() {
if (webusbblockedforurls_ != NULL) webusbblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_webusbblockedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::webusbblockedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
return webusbblockedforurls_ != NULL ? *webusbblockedforurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_webusbblockedforurls() {
set_has_webusbblockedforurls();
if (webusbblockedforurls_ == NULL) {
webusbblockedforurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
return webusbblockedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_webusbblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
clear_has_webusbblockedforurls();
::enterprise_management::StringListPolicyProto* temp = webusbblockedforurls_;
webusbblockedforurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_webusbblockedforurls(::enterprise_management::StringListPolicyProto* webusbblockedforurls) {
delete webusbblockedforurls_;
webusbblockedforurls_ = webusbblockedforurls;
if (webusbblockedforurls) {
set_has_webusbblockedforurls();
} else {
clear_has_webusbblockedforurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto AutoSelectCertificateForUrls = 104;
inline bool CloudPolicySettings::has_autoselectcertificateforurls() const {
return (_has_bits_[2] & 0x00010000u) != 0;
}
inline void CloudPolicySettings::set_has_autoselectcertificateforurls() {
_has_bits_[2] |= 0x00010000u;
}
inline void CloudPolicySettings::clear_has_autoselectcertificateforurls() {
_has_bits_[2] &= ~0x00010000u;
}
inline void CloudPolicySettings::clear_autoselectcertificateforurls() {
if (autoselectcertificateforurls_ != NULL) autoselectcertificateforurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_autoselectcertificateforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::autoselectcertificateforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutoSelectCertificateForUrls)
return autoselectcertificateforurls_ != NULL ? *autoselectcertificateforurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_autoselectcertificateforurls() {
set_has_autoselectcertificateforurls();
if (autoselectcertificateforurls_ == NULL) {
autoselectcertificateforurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutoSelectCertificateForUrls)
return autoselectcertificateforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_autoselectcertificateforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutoSelectCertificateForUrls)
clear_has_autoselectcertificateforurls();
::enterprise_management::StringListPolicyProto* temp = autoselectcertificateforurls_;
autoselectcertificateforurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_autoselectcertificateforurls(::enterprise_management::StringListPolicyProto* autoselectcertificateforurls) {
delete autoselectcertificateforurls_;
autoselectcertificateforurls_ = autoselectcertificateforurls;
if (autoselectcertificateforurls) {
set_has_autoselectcertificateforurls();
} else {
clear_has_autoselectcertificateforurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutoSelectCertificateForUrls)
}

// optional .enterprise_management.StringListPolicyProto CookiesAllowedForUrls = 79;
inline bool CloudPolicySettings::has_cookiesallowedforurls() const {
return (_has_bits_[1] & 0x20000000u) != 0;
}
inline void CloudPolicySettings::set_has_cookiesallowedforurls() {
_has_bits_[1] |= 0x20000000u;
}
inline void CloudPolicySettings::clear_has_cookiesallowedforurls() {
_has_bits_[1] &= ~0x20000000u;
}
inline void CloudPolicySettings::clear_cookiesallowedforurls() {
if (cookiesallowedforurls_ != NULL) cookiesallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_cookiesallowedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::cookiesallowedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
return cookiesallowedforurls_ != NULL ? *cookiesallowedforurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_cookiesallowedforurls() {
set_has_cookiesallowedforurls();
if (cookiesallowedforurls_ == NULL) {
cookiesallowedforurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
return cookiesallowedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_cookiesallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
clear_has_cookiesallowedforurls();
::enterprise_management::StringListPolicyProto* temp = cookiesallowedforurls_;
cookiesallowedforurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_cookiesallowedforurls(::enterprise_management::StringListPolicyProto* cookiesallowedforurls) {
delete cookiesallowedforurls_;
cookiesallowedforurls_ = cookiesallowedforurls;
if (cookiesallowedforurls) {
set_has_cookiesallowedforurls();
} else {
clear_has_cookiesallowedforurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto CookiesBlockedForUrls = 69;
inline bool CloudPolicySettings::has_cookiesblockedforurls() const {
return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void CloudPolicySettings::set_has_cookiesblockedforurls() {
_has_bits_[1] |= 0x00080000u;
}
inline void CloudPolicySettings::clear_has_cookiesblockedforurls() {
_has_bits_[1] &= ~0x00080000u;
}
inline void CloudPolicySettings::clear_cookiesblockedforurls() {
if (cookiesblockedforurls_ != NULL) cookiesblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_cookiesblockedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::cookiesblockedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
return cookiesblockedforurls_ != NULL ? *cookiesblockedforurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_cookiesblockedforurls() {
set_has_cookiesblockedforurls();
if (cookiesblockedforurls_ == NULL) {
cookiesblockedforurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
return cookiesblockedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_cookiesblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
clear_has_cookiesblockedforurls();
::enterprise_management::StringListPolicyProto* temp = cookiesblockedforurls_;
cookiesblockedforurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_cookiesblockedforurls(::enterprise_management::StringListPolicyProto* cookiesblockedforurls) {
delete cookiesblockedforurls_;
cookiesblockedforurls_ = cookiesblockedforurls;
if (cookiesblockedforurls) {
set_has_cookiesblockedforurls();
} else {
clear_has_cookiesblockedforurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto CookiesSessionOnlyForUrls = 70;
inline bool CloudPolicySettings::has_cookiessessiononlyforurls() const {
return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void CloudPolicySettings::set_has_cookiessessiononlyforurls() {
_has_bits_[1] |= 0x00100000u;
}
inline void CloudPolicySettings::clear_has_cookiessessiononlyforurls() {
_has_bits_[1] &= ~0x00100000u;
}
inline void CloudPolicySettings::clear_cookiessessiononlyforurls() {
if (cookiessessiononlyforurls_ != NULL) cookiessessiononlyforurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_cookiessessiononlyforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::cookiessessiononlyforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
return cookiessessiononlyforurls_ != NULL ? *cookiessessiononlyforurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_cookiessessiononlyforurls() {
set_has_cookiessessiononlyforurls();
if (cookiessessiononlyforurls_ == NULL) {
cookiessessiononlyforurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
return cookiessessiononlyforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_cookiessessiononlyforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
clear_has_cookiessessiononlyforurls();
::enterprise_management::StringListPolicyProto* temp = cookiessessiononlyforurls_;
cookiessessiononlyforurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_cookiessessiononlyforurls(::enterprise_management::StringListPolicyProto* cookiessessiononlyforurls) {
delete cookiessessiononlyforurls_;
cookiessessiononlyforurls_ = cookiessessiononlyforurls;
if (cookiessessiononlyforurls) {
set_has_cookiessessiononlyforurls();
} else {
clear_has_cookiessessiononlyforurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
}

// optional .enterprise_management.StringListPolicyProto ImagesAllowedForUrls = 71;
inline bool CloudPolicySettings::has_imagesallowedforurls() const {
return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void CloudPolicySettings::set_has_imagesallowedforurls() {
_has_bits_[1] |= 0x00200000u;
}
inline void CloudPolicySettings::clear_has_imagesallowedforurls() {
_has_bits_[1] &= ~0x00200000u;
}
inline void CloudPolicySettings::clear_imagesallowedforurls() {
if (imagesallowedforurls_ != NULL) imagesallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_imagesallowedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::imagesallowedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImagesAllowedForUrls)
return imagesallowedforurls_ != NULL ? *imagesallowedforurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_imagesallowedforurls() {
set_has_imagesallowedforurls();
if (imagesallowedforurls_ == NULL) {
imagesallowedforurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImagesAllowedForUrls)
return imagesallowedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_imagesallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImagesAllowedForUrls)
clear_has_imagesallowedforurls();
::enterprise_management::StringListPolicyProto* temp = imagesallowedforurls_;
imagesallowedforurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_imagesallowedforurls(::enterprise_management::StringListPolicyProto* imagesallowedforurls) {
delete imagesallowedforurls_;
imagesallowedforurls_ = imagesallowedforurls;
if (imagesallowedforurls) {
set_has_imagesallowedforurls();
} else {
clear_has_imagesallowedforurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImagesAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto ImagesBlockedForUrls = 72;
inline bool CloudPolicySettings::has_imagesblockedforurls() const {
return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void CloudPolicySettings::set_has_imagesblockedforurls() {
_has_bits_[1] |= 0x00400000u;
}
inline void CloudPolicySettings::clear_has_imagesblockedforurls() {
_has_bits_[1] &= ~0x00400000u;
}
inline void CloudPolicySettings::clear_imagesblockedforurls() {
if (imagesblockedforurls_ != NULL) imagesblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_imagesblockedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::imagesblockedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImagesBlockedForUrls)
return imagesblockedforurls_ != NULL ? *imagesblockedforurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_imagesblockedforurls() {
set_has_imagesblockedforurls();
if (imagesblockedforurls_ == NULL) {
imagesblockedforurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImagesBlockedForUrls)
return imagesblockedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_imagesblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImagesBlockedForUrls)
clear_has_imagesblockedforurls();
::enterprise_management::StringListPolicyProto* temp = imagesblockedforurls_;
imagesblockedforurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_imagesblockedforurls(::enterprise_management::StringListPolicyProto* imagesblockedforurls) {
delete imagesblockedforurls_;
imagesblockedforurls_ = imagesblockedforurls;
if (imagesblockedforurls) {
set_has_imagesblockedforurls();
} else {
clear_has_imagesblockedforurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImagesBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto JavaScriptAllowedForUrls = 73;
inline bool CloudPolicySettings::has_javascriptallowedforurls() const {
return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void CloudPolicySettings::set_has_javascriptallowedforurls() {
_has_bits_[1] |= 0x00800000u;
}
inline void CloudPolicySettings::clear_has_javascriptallowedforurls() {
_has_bits_[1] &= ~0x00800000u;
}
inline void CloudPolicySettings::clear_javascriptallowedforurls() {
if (javascriptallowedforurls_ != NULL) javascriptallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_javascriptallowedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::javascriptallowedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
return javascriptallowedforurls_ != NULL ? *javascriptallowedforurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_javascriptallowedforurls() {
set_has_javascriptallowedforurls();
if (javascriptallowedforurls_ == NULL) {
javascriptallowedforurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
return javascriptallowedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_javascriptallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
clear_has_javascriptallowedforurls();
::enterprise_management::StringListPolicyProto* temp = javascriptallowedforurls_;
javascriptallowedforurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_javascriptallowedforurls(::enterprise_management::StringListPolicyProto* javascriptallowedforurls) {
delete javascriptallowedforurls_;
javascriptallowedforurls_ = javascriptallowedforurls;
if (javascriptallowedforurls) {
set_has_javascriptallowedforurls();
} else {
clear_has_javascriptallowedforurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto JavaScriptBlockedForUrls = 74;
inline bool CloudPolicySettings::has_javascriptblockedforurls() const {
return (_has_bits_[1] & 0x01000000u) != 0;
}
inline void CloudPolicySettings::set_has_javascriptblockedforurls() {
_has_bits_[1] |= 0x01000000u;
}
inline void CloudPolicySettings::clear_has_javascriptblockedforurls() {
_has_bits_[1] &= ~0x01000000u;
}
inline void CloudPolicySettings::clear_javascriptblockedforurls() {
if (javascriptblockedforurls_ != NULL) javascriptblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_javascriptblockedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::javascriptblockedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
return javascriptblockedforurls_ != NULL ? *javascriptblockedforurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_javascriptblockedforurls() {
set_has_javascriptblockedforurls();
if (javascriptblockedforurls_ == NULL) {
javascriptblockedforurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
return javascriptblockedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_javascriptblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
clear_has_javascriptblockedforurls();
::enterprise_management::StringListPolicyProto* temp = javascriptblockedforurls_;
javascriptblockedforurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_javascriptblockedforurls(::enterprise_management::StringListPolicyProto* javascriptblockedforurls) {
delete javascriptblockedforurls_;
javascriptblockedforurls_ = javascriptblockedforurls;
if (javascriptblockedforurls) {
set_has_javascriptblockedforurls();
} else {
clear_has_javascriptblockedforurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto PluginsAllowedForUrls = 75;
inline bool CloudPolicySettings::has_pluginsallowedforurls() const {
return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void CloudPolicySettings::set_has_pluginsallowedforurls() {
_has_bits_[1] |= 0x02000000u;
}
inline void CloudPolicySettings::clear_has_pluginsallowedforurls() {
_has_bits_[1] &= ~0x02000000u;
}
inline void CloudPolicySettings::clear_pluginsallowedforurls() {
if (pluginsallowedforurls_ != NULL) pluginsallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_pluginsallowedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::pluginsallowedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PluginsAllowedForUrls)
return pluginsallowedforurls_ != NULL ? *pluginsallowedforurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_pluginsallowedforurls() {
set_has_pluginsallowedforurls();
if (pluginsallowedforurls_ == NULL) {
pluginsallowedforurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PluginsAllowedForUrls)
return pluginsallowedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_pluginsallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PluginsAllowedForUrls)
clear_has_pluginsallowedforurls();
::enterprise_management::StringListPolicyProto* temp = pluginsallowedforurls_;
pluginsallowedforurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_pluginsallowedforurls(::enterprise_management::StringListPolicyProto* pluginsallowedforurls) {
delete pluginsallowedforurls_;
pluginsallowedforurls_ = pluginsallowedforurls;
if (pluginsallowedforurls) {
set_has_pluginsallowedforurls();
} else {
clear_has_pluginsallowedforurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PluginsAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto PluginsBlockedForUrls = 76;
inline bool CloudPolicySettings::has_pluginsblockedforurls() const {
return (_has_bits_[1] & 0x04000000u) != 0;
}
inline void CloudPolicySettings::set_has_pluginsblockedforurls() {
_has_bits_[1] |= 0x04000000u;
}
inline void CloudPolicySettings::clear_has_pluginsblockedforurls() {
_has_bits_[1] &= ~0x04000000u;
}
inline void CloudPolicySettings::clear_pluginsblockedforurls() {
if (pluginsblockedforurls_ != NULL) pluginsblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_pluginsblockedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::pluginsblockedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PluginsBlockedForUrls)
return pluginsblockedforurls_ != NULL ? *pluginsblockedforurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_pluginsblockedforurls() {
set_has_pluginsblockedforurls();
if (pluginsblockedforurls_ == NULL) {
pluginsblockedforurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PluginsBlockedForUrls)
return pluginsblockedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_pluginsblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PluginsBlockedForUrls)
clear_has_pluginsblockedforurls();
::enterprise_management::StringListPolicyProto* temp = pluginsblockedforurls_;
pluginsblockedforurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_pluginsblockedforurls(::enterprise_management::StringListPolicyProto* pluginsblockedforurls) {
delete pluginsblockedforurls_;
pluginsblockedforurls_ = pluginsblockedforurls;
if (pluginsblockedforurls) {
set_has_pluginsblockedforurls();
} else {
clear_has_pluginsblockedforurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PluginsBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto PopupsAllowedForUrls = 77;
inline bool CloudPolicySettings::has_popupsallowedforurls() const {
return (_has_bits_[1] & 0x08000000u) != 0;
}
inline void CloudPolicySettings::set_has_popupsallowedforurls() {
_has_bits_[1] |= 0x08000000u;
}
inline void CloudPolicySettings::clear_has_popupsallowedforurls() {
_has_bits_[1] &= ~0x08000000u;
}
inline void CloudPolicySettings::clear_popupsallowedforurls() {
if (popupsallowedforurls_ != NULL) popupsallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_popupsallowedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::popupsallowedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
return popupsallowedforurls_ != NULL ? *popupsallowedforurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_popupsallowedforurls() {
set_has_popupsallowedforurls();
if (popupsallowedforurls_ == NULL) {
popupsallowedforurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
return popupsallowedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_popupsallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
clear_has_popupsallowedforurls();
::enterprise_management::StringListPolicyProto* temp = popupsallowedforurls_;
popupsallowedforurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_popupsallowedforurls(::enterprise_management::StringListPolicyProto* popupsallowedforurls) {
delete popupsallowedforurls_;
popupsallowedforurls_ = popupsallowedforurls;
if (popupsallowedforurls) {
set_has_popupsallowedforurls();
} else {
clear_has_popupsallowedforurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
}

// optional .enterprise_management.StringPolicyProto RegisteredProtocolHandlers = 270;
inline bool CloudPolicySettings::has_registeredprotocolhandlers() const {
return (_has_bits_[4] & 0x00000100u) != 0;
}
inline void CloudPolicySettings::set_has_registeredprotocolhandlers() {
_has_bits_[4] |= 0x00000100u;
}
inline void CloudPolicySettings::clear_has_registeredprotocolhandlers() {
_has_bits_[4] &= ~0x00000100u;
}
inline void CloudPolicySettings::clear_registeredprotocolhandlers() {
if (registeredprotocolhandlers_ != NULL) registeredprotocolhandlers_->::enterprise_management::StringPolicyProto::Clear();
clear_has_registeredprotocolhandlers();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::registeredprotocolhandlers() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RegisteredProtocolHandlers)
return registeredprotocolhandlers_ != NULL ? *registeredprotocolhandlers_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_registeredprotocolhandlers() {
set_has_registeredprotocolhandlers();
if (registeredprotocolhandlers_ == NULL) {
registeredprotocolhandlers_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RegisteredProtocolHandlers)
return registeredprotocolhandlers_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_registeredprotocolhandlers() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RegisteredProtocolHandlers)
clear_has_registeredprotocolhandlers();
::enterprise_management::StringPolicyProto* temp = registeredprotocolhandlers_;
registeredprotocolhandlers_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_registeredprotocolhandlers(::enterprise_management::StringPolicyProto* registeredprotocolhandlers) {
delete registeredprotocolhandlers_;
registeredprotocolhandlers_ = registeredprotocolhandlers;
if (registeredprotocolhandlers) {
set_has_registeredprotocolhandlers();
} else {
clear_has_registeredprotocolhandlers();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RegisteredProtocolHandlers)
}

// optional .enterprise_management.StringListPolicyProto PopupsBlockedForUrls = 78;
inline bool CloudPolicySettings::has_popupsblockedforurls() const {
return (_has_bits_[1] & 0x10000000u) != 0;
}
inline void CloudPolicySettings::set_has_popupsblockedforurls() {
_has_bits_[1] |= 0x10000000u;
}
inline void CloudPolicySettings::clear_has_popupsblockedforurls() {
_has_bits_[1] &= ~0x10000000u;
}
inline void CloudPolicySettings::clear_popupsblockedforurls() {
if (popupsblockedforurls_ != NULL) popupsblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_popupsblockedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::popupsblockedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
return popupsblockedforurls_ != NULL ? *popupsblockedforurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_popupsblockedforurls() {
set_has_popupsblockedforurls();
if (popupsblockedforurls_ == NULL) {
popupsblockedforurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
return popupsblockedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_popupsblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
clear_has_popupsblockedforurls();
::enterprise_management::StringListPolicyProto* temp = popupsblockedforurls_;
popupsblockedforurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_popupsblockedforurls(::enterprise_management::StringListPolicyProto* popupsblockedforurls) {
delete popupsblockedforurls_;
popupsblockedforurls_ = popupsblockedforurls;
if (popupsblockedforurls) {
set_has_popupsblockedforurls();
} else {
clear_has_popupsblockedforurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto NotificationsAllowedForUrls = 107;
inline bool CloudPolicySettings::has_notificationsallowedforurls() const {
return (_has_bits_[2] & 0x00080000u) != 0;
}
inline void CloudPolicySettings::set_has_notificationsallowedforurls() {
_has_bits_[2] |= 0x00080000u;
}
inline void CloudPolicySettings::clear_has_notificationsallowedforurls() {
_has_bits_[2] &= ~0x00080000u;
}
inline void CloudPolicySettings::clear_notificationsallowedforurls() {
if (notificationsallowedforurls_ != NULL) notificationsallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_notificationsallowedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::notificationsallowedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NotificationsAllowedForUrls)
return notificationsallowedforurls_ != NULL ? *notificationsallowedforurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_notificationsallowedforurls() {
set_has_notificationsallowedforurls();
if (notificationsallowedforurls_ == NULL) {
notificationsallowedforurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NotificationsAllowedForUrls)
return notificationsallowedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_notificationsallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NotificationsAllowedForUrls)
clear_has_notificationsallowedforurls();
::enterprise_management::StringListPolicyProto* temp = notificationsallowedforurls_;
notificationsallowedforurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_notificationsallowedforurls(::enterprise_management::StringListPolicyProto* notificationsallowedforurls) {
delete notificationsallowedforurls_;
notificationsallowedforurls_ = notificationsallowedforurls;
if (notificationsallowedforurls) {
set_has_notificationsallowedforurls();
} else {
clear_has_notificationsallowedforurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NotificationsAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto NotificationsBlockedForUrls = 108;
inline bool CloudPolicySettings::has_notificationsblockedforurls() const {
return (_has_bits_[2] & 0x00100000u) != 0;
}
inline void CloudPolicySettings::set_has_notificationsblockedforurls() {
_has_bits_[2] |= 0x00100000u;
}
inline void CloudPolicySettings::clear_has_notificationsblockedforurls() {
_has_bits_[2] &= ~0x00100000u;
}
inline void CloudPolicySettings::clear_notificationsblockedforurls() {
if (notificationsblockedforurls_ != NULL) notificationsblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_notificationsblockedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::notificationsblockedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NotificationsBlockedForUrls)
return notificationsblockedforurls_ != NULL ? *notificationsblockedforurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_notificationsblockedforurls() {
set_has_notificationsblockedforurls();
if (notificationsblockedforurls_ == NULL) {
notificationsblockedforurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NotificationsBlockedForUrls)
return notificationsblockedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_notificationsblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NotificationsBlockedForUrls)
clear_has_notificationsblockedforurls();
::enterprise_management::StringListPolicyProto* temp = notificationsblockedforurls_;
notificationsblockedforurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_notificationsblockedforurls(::enterprise_management::StringListPolicyProto* notificationsblockedforurls) {
delete notificationsblockedforurls_;
notificationsblockedforurls_ = notificationsblockedforurls;
if (notificationsblockedforurls) {
set_has_notificationsblockedforurls();
} else {
clear_has_notificationsblockedforurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NotificationsBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto NativeMessagingBlacklist = 253;
inline bool CloudPolicySettings::has_nativemessagingblacklist() const {
return (_has_bits_[4] & 0x00000001u) != 0;
}
inline void CloudPolicySettings::set_has_nativemessagingblacklist() {
_has_bits_[4] |= 0x00000001u;
}
inline void CloudPolicySettings::clear_has_nativemessagingblacklist() {
_has_bits_[4] &= ~0x00000001u;
}
inline void CloudPolicySettings::clear_nativemessagingblacklist() {
if (nativemessagingblacklist_ != NULL) nativemessagingblacklist_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_nativemessagingblacklist();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::nativemessagingblacklist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NativeMessagingBlacklist)
return nativemessagingblacklist_ != NULL ? *nativemessagingblacklist_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_nativemessagingblacklist() {
set_has_nativemessagingblacklist();
if (nativemessagingblacklist_ == NULL) {
nativemessagingblacklist_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NativeMessagingBlacklist)
return nativemessagingblacklist_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_nativemessagingblacklist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NativeMessagingBlacklist)
clear_has_nativemessagingblacklist();
::enterprise_management::StringListPolicyProto* temp = nativemessagingblacklist_;
nativemessagingblacklist_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_nativemessagingblacklist(::enterprise_management::StringListPolicyProto* nativemessagingblacklist) {
delete nativemessagingblacklist_;
nativemessagingblacklist_ = nativemessagingblacklist;
if (nativemessagingblacklist) {
set_has_nativemessagingblacklist();
} else {
clear_has_nativemessagingblacklist();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NativeMessagingBlacklist)
}

// optional .enterprise_management.StringListPolicyProto NativeMessagingWhitelist = 254;
inline bool CloudPolicySettings::has_nativemessagingwhitelist() const {
return (_has_bits_[4] & 0x00000002u) != 0;
}
inline void CloudPolicySettings::set_has_nativemessagingwhitelist() {
_has_bits_[4] |= 0x00000002u;
}
inline void CloudPolicySettings::clear_has_nativemessagingwhitelist() {
_has_bits_[4] &= ~0x00000002u;
}
inline void CloudPolicySettings::clear_nativemessagingwhitelist() {
if (nativemessagingwhitelist_ != NULL) nativemessagingwhitelist_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_nativemessagingwhitelist();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::nativemessagingwhitelist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NativeMessagingWhitelist)
return nativemessagingwhitelist_ != NULL ? *nativemessagingwhitelist_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_nativemessagingwhitelist() {
set_has_nativemessagingwhitelist();
if (nativemessagingwhitelist_ == NULL) {
nativemessagingwhitelist_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NativeMessagingWhitelist)
return nativemessagingwhitelist_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_nativemessagingwhitelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NativeMessagingWhitelist)
clear_has_nativemessagingwhitelist();
::enterprise_management::StringListPolicyProto* temp = nativemessagingwhitelist_;
nativemessagingwhitelist_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_nativemessagingwhitelist(::enterprise_management::StringListPolicyProto* nativemessagingwhitelist) {
delete nativemessagingwhitelist_;
nativemessagingwhitelist_ = nativemessagingwhitelist;
if (nativemessagingwhitelist) {
set_has_nativemessagingwhitelist();
} else {
clear_has_nativemessagingwhitelist();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NativeMessagingWhitelist)
}

// optional .enterprise_management.BooleanPolicyProto NativeMessagingUserLevelHosts = 255;
inline bool CloudPolicySettings::has_nativemessaginguserlevelhosts() const {
return (_has_bits_[4] & 0x00000004u) != 0;
}
inline void CloudPolicySettings::set_has_nativemessaginguserlevelhosts() {
_has_bits_[4] |= 0x00000004u;
}
inline void CloudPolicySettings::clear_has_nativemessaginguserlevelhosts() {
_has_bits_[4] &= ~0x00000004u;
}
inline void CloudPolicySettings::clear_nativemessaginguserlevelhosts() {
if (nativemessaginguserlevelhosts_ != NULL) nativemessaginguserlevelhosts_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_nativemessaginguserlevelhosts();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::nativemessaginguserlevelhosts() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NativeMessagingUserLevelHosts)
return nativemessaginguserlevelhosts_ != NULL ? *nativemessaginguserlevelhosts_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_nativemessaginguserlevelhosts() {
set_has_nativemessaginguserlevelhosts();
if (nativemessaginguserlevelhosts_ == NULL) {
nativemessaginguserlevelhosts_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NativeMessagingUserLevelHosts)
return nativemessaginguserlevelhosts_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_nativemessaginguserlevelhosts() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NativeMessagingUserLevelHosts)
clear_has_nativemessaginguserlevelhosts();
::enterprise_management::BooleanPolicyProto* temp = nativemessaginguserlevelhosts_;
nativemessaginguserlevelhosts_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_nativemessaginguserlevelhosts(::enterprise_management::BooleanPolicyProto* nativemessaginguserlevelhosts) {
delete nativemessaginguserlevelhosts_;
nativemessaginguserlevelhosts_ = nativemessaginguserlevelhosts;
if (nativemessaginguserlevelhosts) {
set_has_nativemessaginguserlevelhosts();
} else {
clear_has_nativemessaginguserlevelhosts();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NativeMessagingUserLevelHosts)
}

// optional .enterprise_management.BooleanPolicyProto Disable3DAPIs = 57;
inline bool CloudPolicySettings::has_disable3dapis() const {
return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void CloudPolicySettings::set_has_disable3dapis() {
_has_bits_[1] |= 0x00020000u;
}
inline void CloudPolicySettings::clear_has_disable3dapis() {
_has_bits_[1] &= ~0x00020000u;
}
inline void CloudPolicySettings::clear_disable3dapis() {
if (disable3dapis_ != NULL) disable3dapis_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_disable3dapis();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disable3dapis() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.Disable3DAPIs)
return disable3dapis_ != NULL ? *disable3dapis_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disable3dapis() {
set_has_disable3dapis();
if (disable3dapis_ == NULL) {
disable3dapis_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.Disable3DAPIs)
return disable3dapis_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disable3dapis() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.Disable3DAPIs)
clear_has_disable3dapis();
::enterprise_management::BooleanPolicyProto* temp = disable3dapis_;
disable3dapis_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_disable3dapis(::enterprise_management::BooleanPolicyProto* disable3dapis) {
delete disable3dapis_;
disable3dapis_ = disable3dapis;
if (disable3dapis) {
set_has_disable3dapis();
} else {
clear_has_disable3dapis();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.Disable3DAPIs)
}

// optional .enterprise_management.IntegerPolicyProto MaxInvalidationFetchDelay = 230;
inline bool CloudPolicySettings::has_maxinvalidationfetchdelay() const {
return (_has_bits_[3] & 0x00400000u) != 0;
}
inline void CloudPolicySettings::set_has_maxinvalidationfetchdelay() {
_has_bits_[3] |= 0x00400000u;
}
inline void CloudPolicySettings::clear_has_maxinvalidationfetchdelay() {
_has_bits_[3] &= ~0x00400000u;
}
inline void CloudPolicySettings::clear_maxinvalidationfetchdelay() {
if (maxinvalidationfetchdelay_ != NULL) maxinvalidationfetchdelay_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_maxinvalidationfetchdelay();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::maxinvalidationfetchdelay() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.MaxInvalidationFetchDelay)
return maxinvalidationfetchdelay_ != NULL ? *maxinvalidationfetchdelay_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_maxinvalidationfetchdelay() {
set_has_maxinvalidationfetchdelay();
if (maxinvalidationfetchdelay_ == NULL) {
maxinvalidationfetchdelay_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.MaxInvalidationFetchDelay)
return maxinvalidationfetchdelay_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_maxinvalidationfetchdelay() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.MaxInvalidationFetchDelay)
clear_has_maxinvalidationfetchdelay();
::enterprise_management::IntegerPolicyProto* temp = maxinvalidationfetchdelay_;
maxinvalidationfetchdelay_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_maxinvalidationfetchdelay(::enterprise_management::IntegerPolicyProto* maxinvalidationfetchdelay) {
delete maxinvalidationfetchdelay_;
maxinvalidationfetchdelay_ = maxinvalidationfetchdelay;
if (maxinvalidationfetchdelay) {
set_has_maxinvalidationfetchdelay();
} else {
clear_has_maxinvalidationfetchdelay();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.MaxInvalidationFetchDelay)
}

// optional .enterprise_management.BooleanPolicyProto TranslateEnabled = 82;
inline bool CloudPolicySettings::has_translateenabled() const {
return (_has_bits_[2] & 0x00000001u) != 0;
}
inline void CloudPolicySettings::set_has_translateenabled() {
_has_bits_[2] |= 0x00000001u;
}
inline void CloudPolicySettings::clear_has_translateenabled() {
_has_bits_[2] &= ~0x00000001u;
}
inline void CloudPolicySettings::clear_translateenabled() {
if (translateenabled_ != NULL) translateenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_translateenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::translateenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.TranslateEnabled)
return translateenabled_ != NULL ? *translateenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_translateenabled() {
set_has_translateenabled();
if (translateenabled_ == NULL) {
translateenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.TranslateEnabled)
return translateenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_translateenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.TranslateEnabled)
clear_has_translateenabled();
::enterprise_management::BooleanPolicyProto* temp = translateenabled_;
translateenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_translateenabled(::enterprise_management::BooleanPolicyProto* translateenabled) {
delete translateenabled_;
translateenabled_ = translateenabled;
if (translateenabled) {
set_has_translateenabled();
} else {
clear_has_translateenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.TranslateEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AllowOutdatedPlugins = 83;
inline bool CloudPolicySettings::has_allowoutdatedplugins() const {
return (_has_bits_[2] & 0x00000002u) != 0;
}
inline void CloudPolicySettings::set_has_allowoutdatedplugins() {
_has_bits_[2] |= 0x00000002u;
}
inline void CloudPolicySettings::clear_has_allowoutdatedplugins() {
_has_bits_[2] &= ~0x00000002u;
}
inline void CloudPolicySettings::clear_allowoutdatedplugins() {
if (allowoutdatedplugins_ != NULL) allowoutdatedplugins_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_allowoutdatedplugins();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allowoutdatedplugins() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowOutdatedPlugins)
return allowoutdatedplugins_ != NULL ? *allowoutdatedplugins_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allowoutdatedplugins() {
set_has_allowoutdatedplugins();
if (allowoutdatedplugins_ == NULL) {
allowoutdatedplugins_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowOutdatedPlugins)
return allowoutdatedplugins_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allowoutdatedplugins() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowOutdatedPlugins)
clear_has_allowoutdatedplugins();
::enterprise_management::BooleanPolicyProto* temp = allowoutdatedplugins_;
allowoutdatedplugins_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_allowoutdatedplugins(::enterprise_management::BooleanPolicyProto* allowoutdatedplugins) {
delete allowoutdatedplugins_;
allowoutdatedplugins_ = allowoutdatedplugins;
if (allowoutdatedplugins) {
set_has_allowoutdatedplugins();
} else {
clear_has_allowoutdatedplugins();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowOutdatedPlugins)
}

// optional .enterprise_management.BooleanPolicyProto RunAllFlashInAllowMode = 393;
inline bool CloudPolicySettings::has_runallflashinallowmode() const {
return (_has_bits_[5] & 0x00080000u) != 0;
}
inline void CloudPolicySettings::set_has_runallflashinallowmode() {
_has_bits_[5] |= 0x00080000u;
}
inline void CloudPolicySettings::clear_has_runallflashinallowmode() {
_has_bits_[5] &= ~0x00080000u;
}
inline void CloudPolicySettings::clear_runallflashinallowmode() {
if (runallflashinallowmode_ != NULL) runallflashinallowmode_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_runallflashinallowmode();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::runallflashinallowmode() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RunAllFlashInAllowMode)
return runallflashinallowmode_ != NULL ? *runallflashinallowmode_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_runallflashinallowmode() {
set_has_runallflashinallowmode();
if (runallflashinallowmode_ == NULL) {
runallflashinallowmode_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RunAllFlashInAllowMode)
return runallflashinallowmode_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_runallflashinallowmode() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RunAllFlashInAllowMode)
clear_has_runallflashinallowmode();
::enterprise_management::BooleanPolicyProto* temp = runallflashinallowmode_;
runallflashinallowmode_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_runallflashinallowmode(::enterprise_management::BooleanPolicyProto* runallflashinallowmode) {
delete runallflashinallowmode_;
runallflashinallowmode_ = runallflashinallowmode;
if (runallflashinallowmode) {
set_has_runallflashinallowmode();
} else {
clear_has_runallflashinallowmode();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RunAllFlashInAllowMode)
}

// optional .enterprise_management.BooleanPolicyProto BookmarkBarEnabled = 84;
inline bool CloudPolicySettings::has_bookmarkbarenabled() const {
return (_has_bits_[2] & 0x00000004u) != 0;
}
inline void CloudPolicySettings::set_has_bookmarkbarenabled() {
_has_bits_[2] |= 0x00000004u;
}
inline void CloudPolicySettings::clear_has_bookmarkbarenabled() {
_has_bits_[2] &= ~0x00000004u;
}
inline void CloudPolicySettings::clear_bookmarkbarenabled() {
if (bookmarkbarenabled_ != NULL) bookmarkbarenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_bookmarkbarenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::bookmarkbarenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BookmarkBarEnabled)
return bookmarkbarenabled_ != NULL ? *bookmarkbarenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_bookmarkbarenabled() {
set_has_bookmarkbarenabled();
if (bookmarkbarenabled_ == NULL) {
bookmarkbarenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BookmarkBarEnabled)
return bookmarkbarenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_bookmarkbarenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BookmarkBarEnabled)
clear_has_bookmarkbarenabled();
::enterprise_management::BooleanPolicyProto* temp = bookmarkbarenabled_;
bookmarkbarenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_bookmarkbarenabled(::enterprise_management::BooleanPolicyProto* bookmarkbarenabled) {
delete bookmarkbarenabled_;
bookmarkbarenabled_ = bookmarkbarenabled;
if (bookmarkbarenabled) {
set_has_bookmarkbarenabled();
} else {
clear_has_bookmarkbarenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BookmarkBarEnabled)
}

// optional .enterprise_management.BooleanPolicyProto EditBookmarksEnabled = 85;
inline bool CloudPolicySettings::has_editbookmarksenabled() const {
return (_has_bits_[2] & 0x00000008u) != 0;
}
inline void CloudPolicySettings::set_has_editbookmarksenabled() {
_has_bits_[2] |= 0x00000008u;
}
inline void CloudPolicySettings::clear_has_editbookmarksenabled() {
_has_bits_[2] &= ~0x00000008u;
}
inline void CloudPolicySettings::clear_editbookmarksenabled() {
if (editbookmarksenabled_ != NULL) editbookmarksenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_editbookmarksenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::editbookmarksenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
return editbookmarksenabled_ != NULL ? *editbookmarksenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_editbookmarksenabled() {
set_has_editbookmarksenabled();
if (editbookmarksenabled_ == NULL) {
editbookmarksenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
return editbookmarksenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_editbookmarksenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
clear_has_editbookmarksenabled();
::enterprise_management::BooleanPolicyProto* temp = editbookmarksenabled_;
editbookmarksenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_editbookmarksenabled(::enterprise_management::BooleanPolicyProto* editbookmarksenabled) {
delete editbookmarksenabled_;
editbookmarksenabled_ = editbookmarksenabled;
if (editbookmarksenabled) {
set_has_editbookmarksenabled();
} else {
clear_has_editbookmarksenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
}

// optional .enterprise_management.BooleanPolicyProto ShowAppsShortcutInBookmarkBar = 269;
inline bool CloudPolicySettings::has_showappsshortcutinbookmarkbar() const {
return (_has_bits_[4] & 0x00000080u) != 0;
}
inline void CloudPolicySettings::set_has_showappsshortcutinbookmarkbar() {
_has_bits_[4] |= 0x00000080u;
}
inline void CloudPolicySettings::clear_has_showappsshortcutinbookmarkbar() {
_has_bits_[4] &= ~0x00000080u;
}
inline void CloudPolicySettings::clear_showappsshortcutinbookmarkbar() {
if (showappsshortcutinbookmarkbar_ != NULL) showappsshortcutinbookmarkbar_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_showappsshortcutinbookmarkbar();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::showappsshortcutinbookmarkbar() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ShowAppsShortcutInBookmarkBar)
return showappsshortcutinbookmarkbar_ != NULL ? *showappsshortcutinbookmarkbar_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_showappsshortcutinbookmarkbar() {
set_has_showappsshortcutinbookmarkbar();
if (showappsshortcutinbookmarkbar_ == NULL) {
showappsshortcutinbookmarkbar_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ShowAppsShortcutInBookmarkBar)
return showappsshortcutinbookmarkbar_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_showappsshortcutinbookmarkbar() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ShowAppsShortcutInBookmarkBar)
clear_has_showappsshortcutinbookmarkbar();
::enterprise_management::BooleanPolicyProto* temp = showappsshortcutinbookmarkbar_;
showappsshortcutinbookmarkbar_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_showappsshortcutinbookmarkbar(::enterprise_management::BooleanPolicyProto* showappsshortcutinbookmarkbar) {
delete showappsshortcutinbookmarkbar_;
showappsshortcutinbookmarkbar_ = showappsshortcutinbookmarkbar;
if (showappsshortcutinbookmarkbar) {
set_has_showappsshortcutinbookmarkbar();
} else {
clear_has_showappsshortcutinbookmarkbar();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ShowAppsShortcutInBookmarkBar)
}

// optional .enterprise_management.BooleanPolicyProto AllowFileSelectionDialogs = 86;
inline bool CloudPolicySettings::has_allowfileselectiondialogs() const {
return (_has_bits_[2] & 0x00000010u) != 0;
}
inline void CloudPolicySettings::set_has_allowfileselectiondialogs() {
_has_bits_[2] |= 0x00000010u;
}
inline void CloudPolicySettings::clear_has_allowfileselectiondialogs() {
_has_bits_[2] &= ~0x00000010u;
}
inline void CloudPolicySettings::clear_allowfileselectiondialogs() {
if (allowfileselectiondialogs_ != NULL) allowfileselectiondialogs_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_allowfileselectiondialogs();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allowfileselectiondialogs() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowFileSelectionDialogs)
return allowfileselectiondialogs_ != NULL ? *allowfileselectiondialogs_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allowfileselectiondialogs() {
set_has_allowfileselectiondialogs();
if (allowfileselectiondialogs_ == NULL) {
allowfileselectiondialogs_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowFileSelectionDialogs)
return allowfileselectiondialogs_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allowfileselectiondialogs() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowFileSelectionDialogs)
clear_has_allowfileselectiondialogs();
::enterprise_management::BooleanPolicyProto* temp = allowfileselectiondialogs_;
allowfileselectiondialogs_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_allowfileselectiondialogs(::enterprise_management::BooleanPolicyProto* allowfileselectiondialogs) {
delete allowfileselectiondialogs_;
allowfileselectiondialogs_ = allowfileselectiondialogs;
if (allowfileselectiondialogs) {
set_has_allowfileselectiondialogs();
} else {
clear_has_allowfileselectiondialogs();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowFileSelectionDialogs)
}

// optional .enterprise_management.StringListPolicyProto SecurityKeyPermitAttestation = 404;
inline bool CloudPolicySettings::has_securitykeypermitattestation() const {
return (_has_bits_[5] & 0x08000000u) != 0;
}
inline void CloudPolicySettings::set_has_securitykeypermitattestation() {
_has_bits_[5] |= 0x08000000u;
}
inline void CloudPolicySettings::clear_has_securitykeypermitattestation() {
_has_bits_[5] &= ~0x08000000u;
}
inline void CloudPolicySettings::clear_securitykeypermitattestation() {
if (securitykeypermitattestation_ != NULL) securitykeypermitattestation_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_securitykeypermitattestation();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::securitykeypermitattestation() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SecurityKeyPermitAttestation)
return securitykeypermitattestation_ != NULL ? *securitykeypermitattestation_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_securitykeypermitattestation() {
set_has_securitykeypermitattestation();
if (securitykeypermitattestation_ == NULL) {
securitykeypermitattestation_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SecurityKeyPermitAttestation)
return securitykeypermitattestation_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_securitykeypermitattestation() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SecurityKeyPermitAttestation)
clear_has_securitykeypermitattestation();
::enterprise_management::StringListPolicyProto* temp = securitykeypermitattestation_;
securitykeypermitattestation_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_securitykeypermitattestation(::enterprise_management::StringListPolicyProto* securitykeypermitattestation) {
delete securitykeypermitattestation_;
securitykeypermitattestation_ = securitykeypermitattestation;
if (securitykeypermitattestation) {
set_has_securitykeypermitattestation();
} else {
clear_has_securitykeypermitattestation();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SecurityKeyPermitAttestation)
}

// optional .enterprise_management.BooleanPolicyProto ImportBookmarks = 99;
inline bool CloudPolicySettings::has_importbookmarks() const {
return (_has_bits_[2] & 0x00000800u) != 0;
}
inline void CloudPolicySettings::set_has_importbookmarks() {
_has_bits_[2] |= 0x00000800u;
}
inline void CloudPolicySettings::clear_has_importbookmarks() {
_has_bits_[2] &= ~0x00000800u;
}
inline void CloudPolicySettings::clear_importbookmarks() {
if (importbookmarks_ != NULL) importbookmarks_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_importbookmarks();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::importbookmarks() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImportBookmarks)
return importbookmarks_ != NULL ? *importbookmarks_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_importbookmarks() {
set_has_importbookmarks();
if (importbookmarks_ == NULL) {
importbookmarks_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImportBookmarks)
return importbookmarks_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_importbookmarks() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImportBookmarks)
clear_has_importbookmarks();
::enterprise_management::BooleanPolicyProto* temp = importbookmarks_;
importbookmarks_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_importbookmarks(::enterprise_management::BooleanPolicyProto* importbookmarks) {
delete importbookmarks_;
importbookmarks_ = importbookmarks;
if (importbookmarks) {
set_has_importbookmarks();
} else {
clear_has_importbookmarks();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImportBookmarks)
}

// optional .enterprise_management.BooleanPolicyProto ImportHistory = 100;
inline bool CloudPolicySettings::has_importhistory() const {
return (_has_bits_[2] & 0x00001000u) != 0;
}
inline void CloudPolicySettings::set_has_importhistory() {
_has_bits_[2] |= 0x00001000u;
}
inline void CloudPolicySettings::clear_has_importhistory() {
_has_bits_[2] &= ~0x00001000u;
}
inline void CloudPolicySettings::clear_importhistory() {
if (importhistory_ != NULL) importhistory_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_importhistory();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::importhistory() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImportHistory)
return importhistory_ != NULL ? *importhistory_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_importhistory() {
set_has_importhistory();
if (importhistory_ == NULL) {
importhistory_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImportHistory)
return importhistory_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_importhistory() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImportHistory)
clear_has_importhistory();
::enterprise_management::BooleanPolicyProto* temp = importhistory_;
importhistory_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_importhistory(::enterprise_management::BooleanPolicyProto* importhistory) {
delete importhistory_;
importhistory_ = importhistory;
if (importhistory) {
set_has_importhistory();
} else {
clear_has_importhistory();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImportHistory)
}

// optional .enterprise_management.BooleanPolicyProto ImportHomepage = 101;
inline bool CloudPolicySettings::has_importhomepage() const {
return (_has_bits_[2] & 0x00002000u) != 0;
}
inline void CloudPolicySettings::set_has_importhomepage() {
_has_bits_[2] |= 0x00002000u;
}
inline void CloudPolicySettings::clear_has_importhomepage() {
_has_bits_[2] &= ~0x00002000u;
}
inline void CloudPolicySettings::clear_importhomepage() {
if (importhomepage_ != NULL) importhomepage_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_importhomepage();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::importhomepage() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImportHomepage)
return importhomepage_ != NULL ? *importhomepage_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_importhomepage() {
set_has_importhomepage();
if (importhomepage_ == NULL) {
importhomepage_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImportHomepage)
return importhomepage_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_importhomepage() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImportHomepage)
clear_has_importhomepage();
::enterprise_management::BooleanPolicyProto* temp = importhomepage_;
importhomepage_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_importhomepage(::enterprise_management::BooleanPolicyProto* importhomepage) {
delete importhomepage_;
importhomepage_ = importhomepage;
if (importhomepage) {
set_has_importhomepage();
} else {
clear_has_importhomepage();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImportHomepage)
}

// optional .enterprise_management.BooleanPolicyProto ImportSearchEngine = 102;
inline bool CloudPolicySettings::has_importsearchengine() const {
return (_has_bits_[2] & 0x00004000u) != 0;
}
inline void CloudPolicySettings::set_has_importsearchengine() {
_has_bits_[2] |= 0x00004000u;
}
inline void CloudPolicySettings::clear_has_importsearchengine() {
_has_bits_[2] &= ~0x00004000u;
}
inline void CloudPolicySettings::clear_importsearchengine() {
if (importsearchengine_ != NULL) importsearchengine_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_importsearchengine();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::importsearchengine() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImportSearchEngine)
return importsearchengine_ != NULL ? *importsearchengine_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_importsearchengine() {
set_has_importsearchengine();
if (importsearchengine_ == NULL) {
importsearchengine_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImportSearchEngine)
return importsearchengine_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_importsearchengine() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImportSearchEngine)
clear_has_importsearchengine();
::enterprise_management::BooleanPolicyProto* temp = importsearchengine_;
importsearchengine_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_importsearchengine(::enterprise_management::BooleanPolicyProto* importsearchengine) {
delete importsearchengine_;
importsearchengine_ = importsearchengine;
if (importsearchengine) {
set_has_importsearchengine();
} else {
clear_has_importsearchengine();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImportSearchEngine)
}

// optional .enterprise_management.BooleanPolicyProto ImportSavedPasswords = 103;
inline bool CloudPolicySettings::has_importsavedpasswords() const {
return (_has_bits_[2] & 0x00008000u) != 0;
}
inline void CloudPolicySettings::set_has_importsavedpasswords() {
_has_bits_[2] |= 0x00008000u;
}
inline void CloudPolicySettings::clear_has_importsavedpasswords() {
_has_bits_[2] &= ~0x00008000u;
}
inline void CloudPolicySettings::clear_importsavedpasswords() {
if (importsavedpasswords_ != NULL) importsavedpasswords_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_importsavedpasswords();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::importsavedpasswords() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImportSavedPasswords)
return importsavedpasswords_ != NULL ? *importsavedpasswords_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_importsavedpasswords() {
set_has_importsavedpasswords();
if (importsavedpasswords_ == NULL) {
importsavedpasswords_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImportSavedPasswords)
return importsavedpasswords_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_importsavedpasswords() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImportSavedPasswords)
clear_has_importsavedpasswords();
::enterprise_management::BooleanPolicyProto* temp = importsavedpasswords_;
importsavedpasswords_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_importsavedpasswords(::enterprise_management::BooleanPolicyProto* importsavedpasswords) {
delete importsavedpasswords_;
importsavedpasswords_ = importsavedpasswords;
if (importsavedpasswords) {
set_has_importsavedpasswords();
} else {
clear_has_importsavedpasswords();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImportSavedPasswords)
}

// optional .enterprise_management.BooleanPolicyProto ImportAutofillFormData = 279;
inline bool CloudPolicySettings::has_importautofillformdata() const {
return (_has_bits_[4] & 0x00002000u) != 0;
}
inline void CloudPolicySettings::set_has_importautofillformdata() {
_has_bits_[4] |= 0x00002000u;
}
inline void CloudPolicySettings::clear_has_importautofillformdata() {
_has_bits_[4] &= ~0x00002000u;
}
inline void CloudPolicySettings::clear_importautofillformdata() {
if (importautofillformdata_ != NULL) importautofillformdata_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_importautofillformdata();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::importautofillformdata() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImportAutofillFormData)
return importautofillformdata_ != NULL ? *importautofillformdata_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_importautofillformdata() {
set_has_importautofillformdata();
if (importautofillformdata_ == NULL) {
importautofillformdata_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImportAutofillFormData)
return importautofillformdata_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_importautofillformdata() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImportAutofillFormData)
clear_has_importautofillformdata();
::enterprise_management::BooleanPolicyProto* temp = importautofillformdata_;
importautofillformdata_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_importautofillformdata(::enterprise_management::BooleanPolicyProto* importautofillformdata) {
delete importautofillformdata_;
importautofillformdata_ = importautofillformdata;
if (importautofillformdata) {
set_has_importautofillformdata();
} else {
clear_has_importautofillformdata();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImportAutofillFormData)
}

// optional .enterprise_management.IntegerPolicyProto MaxConnectionsPerProxy = 94;
inline bool CloudPolicySettings::has_maxconnectionsperproxy() const {
return (_has_bits_[2] & 0x00000100u) != 0;
}
inline void CloudPolicySettings::set_has_maxconnectionsperproxy() {
_has_bits_[2] |= 0x00000100u;
}
inline void CloudPolicySettings::clear_has_maxconnectionsperproxy() {
_has_bits_[2] &= ~0x00000100u;
}
inline void CloudPolicySettings::clear_maxconnectionsperproxy() {
if (maxconnectionsperproxy_ != NULL) maxconnectionsperproxy_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_maxconnectionsperproxy();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::maxconnectionsperproxy() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.MaxConnectionsPerProxy)
return maxconnectionsperproxy_ != NULL ? *maxconnectionsperproxy_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_maxconnectionsperproxy() {
set_has_maxconnectionsperproxy();
if (maxconnectionsperproxy_ == NULL) {
maxconnectionsperproxy_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.MaxConnectionsPerProxy)
return maxconnectionsperproxy_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_maxconnectionsperproxy() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.MaxConnectionsPerProxy)
clear_has_maxconnectionsperproxy();
::enterprise_management::IntegerPolicyProto* temp = maxconnectionsperproxy_;
maxconnectionsperproxy_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_maxconnectionsperproxy(::enterprise_management::IntegerPolicyProto* maxconnectionsperproxy) {
delete maxconnectionsperproxy_;
maxconnectionsperproxy_ = maxconnectionsperproxy;
if (maxconnectionsperproxy) {
set_has_maxconnectionsperproxy();
} else {
clear_has_maxconnectionsperproxy();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.MaxConnectionsPerProxy)
}

// optional .enterprise_management.StringListPolicyProto URLBlacklist = 105;
inline bool CloudPolicySettings::has_urlblacklist() const {
return (_has_bits_[2] & 0x00020000u) != 0;
}
inline void CloudPolicySettings::set_has_urlblacklist() {
_has_bits_[2] |= 0x00020000u;
}
inline void CloudPolicySettings::clear_has_urlblacklist() {
_has_bits_[2] &= ~0x00020000u;
}
inline void CloudPolicySettings::clear_urlblacklist() {
if (urlblacklist_ != NULL) urlblacklist_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_urlblacklist();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::urlblacklist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.URLBlacklist)
return urlblacklist_ != NULL ? *urlblacklist_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_urlblacklist() {
set_has_urlblacklist();
if (urlblacklist_ == NULL) {
urlblacklist_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.URLBlacklist)
return urlblacklist_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_urlblacklist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.URLBlacklist)
clear_has_urlblacklist();
::enterprise_management::StringListPolicyProto* temp = urlblacklist_;
urlblacklist_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_urlblacklist(::enterprise_management::StringListPolicyProto* urlblacklist) {
delete urlblacklist_;
urlblacklist_ = urlblacklist;
if (urlblacklist) {
set_has_urlblacklist();
} else {
clear_has_urlblacklist();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.URLBlacklist)
}

// optional .enterprise_management.StringListPolicyProto URLWhitelist = 106;
inline bool CloudPolicySettings::has_urlwhitelist() const {
return (_has_bits_[2] & 0x00040000u) != 0;
}
inline void CloudPolicySettings::set_has_urlwhitelist() {
_has_bits_[2] |= 0x00040000u;
}
inline void CloudPolicySettings::clear_has_urlwhitelist() {
_has_bits_[2] &= ~0x00040000u;
}
inline void CloudPolicySettings::clear_urlwhitelist() {
if (urlwhitelist_ != NULL) urlwhitelist_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_urlwhitelist();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::urlwhitelist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.URLWhitelist)
return urlwhitelist_ != NULL ? *urlwhitelist_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_urlwhitelist() {
set_has_urlwhitelist();
if (urlwhitelist_ == NULL) {
urlwhitelist_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.URLWhitelist)
return urlwhitelist_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_urlwhitelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.URLWhitelist)
clear_has_urlwhitelist();
::enterprise_management::StringListPolicyProto* temp = urlwhitelist_;
urlwhitelist_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_urlwhitelist(::enterprise_management::StringListPolicyProto* urlwhitelist) {
delete urlwhitelist_;
urlwhitelist_ = urlwhitelist;
if (urlwhitelist) {
set_has_urlwhitelist();
} else {
clear_has_urlwhitelist();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.URLWhitelist)
}

// optional .enterprise_management.BooleanPolicyProto CloudPrintSubmitEnabled = 111;
inline bool CloudPolicySettings::has_cloudprintsubmitenabled() const {
return (_has_bits_[2] & 0x00200000u) != 0;
}
inline void CloudPolicySettings::set_has_cloudprintsubmitenabled() {
_has_bits_[2] |= 0x00200000u;
}
inline void CloudPolicySettings::clear_has_cloudprintsubmitenabled() {
_has_bits_[2] &= ~0x00200000u;
}
inline void CloudPolicySettings::clear_cloudprintsubmitenabled() {
if (cloudprintsubmitenabled_ != NULL) cloudprintsubmitenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_cloudprintsubmitenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::cloudprintsubmitenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudPrintSubmitEnabled)
return cloudprintsubmitenabled_ != NULL ? *cloudprintsubmitenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_cloudprintsubmitenabled() {
set_has_cloudprintsubmitenabled();
if (cloudprintsubmitenabled_ == NULL) {
cloudprintsubmitenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudPrintSubmitEnabled)
return cloudprintsubmitenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_cloudprintsubmitenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudPrintSubmitEnabled)
clear_has_cloudprintsubmitenabled();
::enterprise_management::BooleanPolicyProto* temp = cloudprintsubmitenabled_;
cloudprintsubmitenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_cloudprintsubmitenabled(::enterprise_management::BooleanPolicyProto* cloudprintsubmitenabled) {
delete cloudprintsubmitenabled_;
cloudprintsubmitenabled_ = cloudprintsubmitenabled;
if (cloudprintsubmitenabled) {
set_has_cloudprintsubmitenabled();
} else {
clear_has_cloudprintsubmitenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudPrintSubmitEnabled)
}

// optional .enterprise_management.BooleanPolicyProto DisablePrintPreview = 119;
inline bool CloudPolicySettings::has_disableprintpreview() const {
return (_has_bits_[2] & 0x02000000u) != 0;
}
inline void CloudPolicySettings::set_has_disableprintpreview() {
_has_bits_[2] |= 0x02000000u;
}
inline void CloudPolicySettings::clear_has_disableprintpreview() {
_has_bits_[2] &= ~0x02000000u;
}
inline void CloudPolicySettings::clear_disableprintpreview() {
if (disableprintpreview_ != NULL) disableprintpreview_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_disableprintpreview();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disableprintpreview() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisablePrintPreview)
return disableprintpreview_ != NULL ? *disableprintpreview_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disableprintpreview() {
set_has_disableprintpreview();
if (disableprintpreview_ == NULL) {
disableprintpreview_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisablePrintPreview)
return disableprintpreview_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disableprintpreview() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisablePrintPreview)
clear_has_disableprintpreview();
::enterprise_management::BooleanPolicyProto* temp = disableprintpreview_;
disableprintpreview_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_disableprintpreview(::enterprise_management::BooleanPolicyProto* disableprintpreview) {
delete disableprintpreview_;
disableprintpreview_ = disableprintpreview;
if (disableprintpreview) {
set_has_disableprintpreview();
} else {
clear_has_disableprintpreview();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisablePrintPreview)
}

// optional .enterprise_management.StringPolicyProto DefaultPrinterSelection = 310;
inline bool CloudPolicySettings::has_defaultprinterselection() const {
return (_has_bits_[4] & 0x04000000u) != 0;
}
inline void CloudPolicySettings::set_has_defaultprinterselection() {
_has_bits_[4] |= 0x04000000u;
}
inline void CloudPolicySettings::clear_has_defaultprinterselection() {
_has_bits_[4] &= ~0x04000000u;
}
inline void CloudPolicySettings::clear_defaultprinterselection() {
if (defaultprinterselection_ != NULL) defaultprinterselection_->::enterprise_management::StringPolicyProto::Clear();
clear_has_defaultprinterselection();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultprinterselection() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultPrinterSelection)
return defaultprinterselection_ != NULL ? *defaultprinterselection_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultprinterselection() {
set_has_defaultprinterselection();
if (defaultprinterselection_ == NULL) {
defaultprinterselection_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultPrinterSelection)
return defaultprinterselection_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultprinterselection() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultPrinterSelection)
clear_has_defaultprinterselection();
::enterprise_management::StringPolicyProto* temp = defaultprinterselection_;
defaultprinterselection_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultprinterselection(::enterprise_management::StringPolicyProto* defaultprinterselection) {
delete defaultprinterselection_;
defaultprinterselection_ = defaultprinterselection;
if (defaultprinterselection) {
set_has_defaultprinterselection();
} else {
clear_has_defaultprinterselection();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultPrinterSelection)
}

// optional .enterprise_management.BooleanPolicyProto EnableOnlineRevocationChecks = 131;
inline bool CloudPolicySettings::has_enableonlinerevocationchecks() const {
return (_has_bits_[2] & 0x04000000u) != 0;
}
inline void CloudPolicySettings::set_has_enableonlinerevocationchecks() {
_has_bits_[2] |= 0x04000000u;
}
inline void CloudPolicySettings::clear_has_enableonlinerevocationchecks() {
_has_bits_[2] &= ~0x04000000u;
}
inline void CloudPolicySettings::clear_enableonlinerevocationchecks() {
if (enableonlinerevocationchecks_ != NULL) enableonlinerevocationchecks_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_enableonlinerevocationchecks();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enableonlinerevocationchecks() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableOnlineRevocationChecks)
return enableonlinerevocationchecks_ != NULL ? *enableonlinerevocationchecks_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enableonlinerevocationchecks() {
set_has_enableonlinerevocationchecks();
if (enableonlinerevocationchecks_ == NULL) {
enableonlinerevocationchecks_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableOnlineRevocationChecks)
return enableonlinerevocationchecks_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enableonlinerevocationchecks() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableOnlineRevocationChecks)
clear_has_enableonlinerevocationchecks();
::enterprise_management::BooleanPolicyProto* temp = enableonlinerevocationchecks_;
enableonlinerevocationchecks_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_enableonlinerevocationchecks(::enterprise_management::BooleanPolicyProto* enableonlinerevocationchecks) {
delete enableonlinerevocationchecks_;
enableonlinerevocationchecks_ = enableonlinerevocationchecks;
if (enableonlinerevocationchecks) {
set_has_enableonlinerevocationchecks();
} else {
clear_has_enableonlinerevocationchecks();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableOnlineRevocationChecks)
}

// optional .enterprise_management.BooleanPolicyProto RequireOnlineRevocationChecksForLocalAnchors = 237;
inline bool CloudPolicySettings::has_requireonlinerevocationchecksforlocalanchors() const {
return (_has_bits_[3] & 0x10000000u) != 0;
}
inline void CloudPolicySettings::set_has_requireonlinerevocationchecksforlocalanchors() {
_has_bits_[3] |= 0x10000000u;
}
inline void CloudPolicySettings::clear_has_requireonlinerevocationchecksforlocalanchors() {
_has_bits_[3] &= ~0x10000000u;
}
inline void CloudPolicySettings::clear_requireonlinerevocationchecksforlocalanchors() {
if (requireonlinerevocationchecksforlocalanchors_ != NULL) requireonlinerevocationchecksforlocalanchors_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_requireonlinerevocationchecksforlocalanchors();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::requireonlinerevocationchecksforlocalanchors() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RequireOnlineRevocationChecksForLocalAnchors)
return requireonlinerevocationchecksforlocalanchors_ != NULL ? *requireonlinerevocationchecksforlocalanchors_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_requireonlinerevocationchecksforlocalanchors() {
set_has_requireonlinerevocationchecksforlocalanchors();
if (requireonlinerevocationchecksforlocalanchors_ == NULL) {
requireonlinerevocationchecksforlocalanchors_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RequireOnlineRevocationChecksForLocalAnchors)
return requireonlinerevocationchecksforlocalanchors_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_requireonlinerevocationchecksforlocalanchors() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RequireOnlineRevocationChecksForLocalAnchors)
clear_has_requireonlinerevocationchecksforlocalanchors();
::enterprise_management::BooleanPolicyProto* temp = requireonlinerevocationchecksforlocalanchors_;
requireonlinerevocationchecksforlocalanchors_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_requireonlinerevocationchecksforlocalanchors(::enterprise_management::BooleanPolicyProto* requireonlinerevocationchecksforlocalanchors) {
delete requireonlinerevocationchecksforlocalanchors_;
requireonlinerevocationchecksforlocalanchors_ = requireonlinerevocationchecksforlocalanchors;
if (requireonlinerevocationchecksforlocalanchors) {
set_has_requireonlinerevocationchecksforlocalanchors();
} else {
clear_has_requireonlinerevocationchecksforlocalanchors();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RequireOnlineRevocationChecksForLocalAnchors)
}

// optional .enterprise_management.BooleanPolicyProto EnableSha1ForLocalAnchors = 342;
inline bool CloudPolicySettings::has_enablesha1forlocalanchors() const {
return (_has_bits_[5] & 0x00000020u) != 0;
}
inline void CloudPolicySettings::set_has_enablesha1forlocalanchors() {
_has_bits_[5] |= 0x00000020u;
}
inline void CloudPolicySettings::clear_has_enablesha1forlocalanchors() {
_has_bits_[5] &= ~0x00000020u;
}
inline void CloudPolicySettings::clear_enablesha1forlocalanchors() {
if (enablesha1forlocalanchors_ != NULL) enablesha1forlocalanchors_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_enablesha1forlocalanchors();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enablesha1forlocalanchors() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableSha1ForLocalAnchors)
return enablesha1forlocalanchors_ != NULL ? *enablesha1forlocalanchors_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enablesha1forlocalanchors() {
set_has_enablesha1forlocalanchors();
if (enablesha1forlocalanchors_ == NULL) {
enablesha1forlocalanchors_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableSha1ForLocalAnchors)
return enablesha1forlocalanchors_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enablesha1forlocalanchors() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableSha1ForLocalAnchors)
clear_has_enablesha1forlocalanchors();
::enterprise_management::BooleanPolicyProto* temp = enablesha1forlocalanchors_;
enablesha1forlocalanchors_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_enablesha1forlocalanchors(::enterprise_management::BooleanPolicyProto* enablesha1forlocalanchors) {
delete enablesha1forlocalanchors_;
enablesha1forlocalanchors_ = enablesha1forlocalanchors;
if (enablesha1forlocalanchors) {
set_has_enablesha1forlocalanchors();
} else {
clear_has_enablesha1forlocalanchors();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableSha1ForLocalAnchors)
}

// optional .enterprise_management.BooleanPolicyProto EnableSymantecLegacyInfrastructure = 415;
inline bool CloudPolicySettings::has_enablesymanteclegacyinfrastructure() const {
return (_has_bits_[6] & 0x00000002u) != 0;
}
inline void CloudPolicySettings::set_has_enablesymanteclegacyinfrastructure() {
_has_bits_[6] |= 0x00000002u;
}
inline void CloudPolicySettings::clear_has_enablesymanteclegacyinfrastructure() {
_has_bits_[6] &= ~0x00000002u;
}
inline void CloudPolicySettings::clear_enablesymanteclegacyinfrastructure() {
if (enablesymanteclegacyinfrastructure_ != NULL) enablesymanteclegacyinfrastructure_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_enablesymanteclegacyinfrastructure();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enablesymanteclegacyinfrastructure() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableSymantecLegacyInfrastructure)
return enablesymanteclegacyinfrastructure_ != NULL ? *enablesymanteclegacyinfrastructure_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enablesymanteclegacyinfrastructure() {
set_has_enablesymanteclegacyinfrastructure();
if (enablesymanteclegacyinfrastructure_ == NULL) {
enablesymanteclegacyinfrastructure_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableSymantecLegacyInfrastructure)
return enablesymanteclegacyinfrastructure_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enablesymanteclegacyinfrastructure() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableSymantecLegacyInfrastructure)
clear_has_enablesymanteclegacyinfrastructure();
::enterprise_management::BooleanPolicyProto* temp = enablesymanteclegacyinfrastructure_;
enablesymanteclegacyinfrastructure_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_enablesymanteclegacyinfrastructure(::enterprise_management::BooleanPolicyProto* enablesymanteclegacyinfrastructure) {
delete enablesymanteclegacyinfrastructure_;
enablesymanteclegacyinfrastructure_ = enablesymanteclegacyinfrastructure;
if (enablesymanteclegacyinfrastructure) {
set_has_enablesymanteclegacyinfrastructure();
} else {
clear_has_enablesymanteclegacyinfrastructure();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableSymantecLegacyInfrastructure)
}

// optional .enterprise_management.BooleanPolicyProto ForceEphemeralProfiles = 247;
inline bool CloudPolicySettings::has_forceephemeralprofiles() const {
return (_has_bits_[3] & 0x80000000u) != 0;
}
inline void CloudPolicySettings::set_has_forceephemeralprofiles() {
_has_bits_[3] |= 0x80000000u;
}
inline void CloudPolicySettings::clear_has_forceephemeralprofiles() {
_has_bits_[3] &= ~0x80000000u;
}
inline void CloudPolicySettings::clear_forceephemeralprofiles() {
if (forceephemeralprofiles_ != NULL) forceephemeralprofiles_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_forceephemeralprofiles();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forceephemeralprofiles() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceEphemeralProfiles)
return forceephemeralprofiles_ != NULL ? *forceephemeralprofiles_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forceephemeralprofiles() {
set_has_forceephemeralprofiles();
if (forceephemeralprofiles_ == NULL) {
forceephemeralprofiles_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceEphemeralProfiles)
return forceephemeralprofiles_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forceephemeralprofiles() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceEphemeralProfiles)
clear_has_forceephemeralprofiles();
::enterprise_management::BooleanPolicyProto* temp = forceephemeralprofiles_;
forceephemeralprofiles_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_forceephemeralprofiles(::enterprise_management::BooleanPolicyProto* forceephemeralprofiles) {
delete forceephemeralprofiles_;
forceephemeralprofiles_ = forceephemeralprofiles;
if (forceephemeralprofiles) {
set_has_forceephemeralprofiles();
} else {
clear_has_forceephemeralprofiles();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceEphemeralProfiles)
}

// optional .enterprise_management.BooleanPolicyProto BackgroundModeEnabled = 140;
inline bool CloudPolicySettings::has_backgroundmodeenabled() const {
return (_has_bits_[2] & 0x08000000u) != 0;
}
inline void CloudPolicySettings::set_has_backgroundmodeenabled() {
_has_bits_[2] |= 0x08000000u;
}
inline void CloudPolicySettings::clear_has_backgroundmodeenabled() {
_has_bits_[2] &= ~0x08000000u;
}
inline void CloudPolicySettings::clear_backgroundmodeenabled() {
if (backgroundmodeenabled_ != NULL) backgroundmodeenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_backgroundmodeenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::backgroundmodeenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BackgroundModeEnabled)
return backgroundmodeenabled_ != NULL ? *backgroundmodeenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_backgroundmodeenabled() {
set_has_backgroundmodeenabled();
if (backgroundmodeenabled_ == NULL) {
backgroundmodeenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BackgroundModeEnabled)
return backgroundmodeenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_backgroundmodeenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BackgroundModeEnabled)
clear_has_backgroundmodeenabled();
::enterprise_management::BooleanPolicyProto* temp = backgroundmodeenabled_;
backgroundmodeenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_backgroundmodeenabled(::enterprise_management::BooleanPolicyProto* backgroundmodeenabled) {
delete backgroundmodeenabled_;
backgroundmodeenabled_ = backgroundmodeenabled;
if (backgroundmodeenabled) {
set_has_backgroundmodeenabled();
} else {
clear_has_backgroundmodeenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BackgroundModeEnabled)
}

// optional .enterprise_management.StringPolicyProto RestrictSigninToPattern = 149;
inline bool CloudPolicySettings::has_restrictsignintopattern() const {
return (_has_bits_[2] & 0x10000000u) != 0;
}
inline void CloudPolicySettings::set_has_restrictsignintopattern() {
_has_bits_[2] |= 0x10000000u;
}
inline void CloudPolicySettings::clear_has_restrictsignintopattern() {
_has_bits_[2] &= ~0x10000000u;
}
inline void CloudPolicySettings::clear_restrictsignintopattern() {
if (restrictsignintopattern_ != NULL) restrictsignintopattern_->::enterprise_management::StringPolicyProto::Clear();
clear_has_restrictsignintopattern();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::restrictsignintopattern() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RestrictSigninToPattern)
return restrictsignintopattern_ != NULL ? *restrictsignintopattern_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_restrictsignintopattern() {
set_has_restrictsignintopattern();
if (restrictsignintopattern_ == NULL) {
restrictsignintopattern_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RestrictSigninToPattern)
return restrictsignintopattern_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_restrictsignintopattern() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RestrictSigninToPattern)
clear_has_restrictsignintopattern();
::enterprise_management::StringPolicyProto* temp = restrictsignintopattern_;
restrictsignintopattern_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_restrictsignintopattern(::enterprise_management::StringPolicyProto* restrictsignintopattern) {
delete restrictsignintopattern_;
restrictsignintopattern_ = restrictsignintopattern;
if (restrictsignintopattern) {
set_has_restrictsignintopattern();
} else {
clear_has_restrictsignintopattern();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RestrictSigninToPattern)
}

// optional .enterprise_management.BooleanPolicyProto DisableSafeBrowsingProceedAnyway = 152;
inline bool CloudPolicySettings::has_disablesafebrowsingproceedanyway() const {
return (_has_bits_[2] & 0x80000000u) != 0;
}
inline void CloudPolicySettings::set_has_disablesafebrowsingproceedanyway() {
_has_bits_[2] |= 0x80000000u;
}
inline void CloudPolicySettings::clear_has_disablesafebrowsingproceedanyway() {
_has_bits_[2] &= ~0x80000000u;
}
inline void CloudPolicySettings::clear_disablesafebrowsingproceedanyway() {
if (disablesafebrowsingproceedanyway_ != NULL) disablesafebrowsingproceedanyway_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_disablesafebrowsingproceedanyway();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disablesafebrowsingproceedanyway() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
return disablesafebrowsingproceedanyway_ != NULL ? *disablesafebrowsingproceedanyway_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disablesafebrowsingproceedanyway() {
set_has_disablesafebrowsingproceedanyway();
if (disablesafebrowsingproceedanyway_ == NULL) {
disablesafebrowsingproceedanyway_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
return disablesafebrowsingproceedanyway_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disablesafebrowsingproceedanyway() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
clear_has_disablesafebrowsingproceedanyway();
::enterprise_management::BooleanPolicyProto* temp = disablesafebrowsingproceedanyway_;
disablesafebrowsingproceedanyway_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_disablesafebrowsingproceedanyway(::enterprise_management::BooleanPolicyProto* disablesafebrowsingproceedanyway) {
delete disablesafebrowsingproceedanyway_;
disablesafebrowsingproceedanyway_ = disablesafebrowsingproceedanyway;
if (disablesafebrowsingproceedanyway) {
set_has_disablesafebrowsingproceedanyway();
} else {
clear_has_disablesafebrowsingproceedanyway();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
}

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingExtendedReportingOptInAllowed = 301;
inline bool CloudPolicySettings::has_safebrowsingextendedreportingoptinallowed() const {
return (_has_bits_[4] & 0x00400000u) != 0;
}
inline void CloudPolicySettings::set_has_safebrowsingextendedreportingoptinallowed() {
_has_bits_[4] |= 0x00400000u;
}
inline void CloudPolicySettings::clear_has_safebrowsingextendedreportingoptinallowed() {
_has_bits_[4] &= ~0x00400000u;
}
inline void CloudPolicySettings::clear_safebrowsingextendedreportingoptinallowed() {
if (safebrowsingextendedreportingoptinallowed_ != NULL) safebrowsingextendedreportingoptinallowed_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_safebrowsingextendedreportingoptinallowed();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::safebrowsingextendedreportingoptinallowed() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingOptInAllowed)
return safebrowsingextendedreportingoptinallowed_ != NULL ? *safebrowsingextendedreportingoptinallowed_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_safebrowsingextendedreportingoptinallowed() {
set_has_safebrowsingextendedreportingoptinallowed();
if (safebrowsingextendedreportingoptinallowed_ == NULL) {
safebrowsingextendedreportingoptinallowed_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingOptInAllowed)
return safebrowsingextendedreportingoptinallowed_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_safebrowsingextendedreportingoptinallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingOptInAllowed)
clear_has_safebrowsingextendedreportingoptinallowed();
::enterprise_management::BooleanPolicyProto* temp = safebrowsingextendedreportingoptinallowed_;
safebrowsingextendedreportingoptinallowed_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_safebrowsingextendedreportingoptinallowed(::enterprise_management::BooleanPolicyProto* safebrowsingextendedreportingoptinallowed) {
delete safebrowsingextendedreportingoptinallowed_;
safebrowsingextendedreportingoptinallowed_ = safebrowsingextendedreportingoptinallowed;
if (safebrowsingextendedreportingoptinallowed) {
set_has_safebrowsingextendedreportingoptinallowed();
} else {
clear_has_safebrowsingextendedreportingoptinallowed();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingOptInAllowed)
}

// optional .enterprise_management.BooleanPolicyProto SpellCheckServiceEnabled = 153;
inline bool CloudPolicySettings::has_spellcheckserviceenabled() const {
return (_has_bits_[3] & 0x00000001u) != 0;
}
inline void CloudPolicySettings::set_has_spellcheckserviceenabled() {
_has_bits_[3] |= 0x00000001u;
}
inline void CloudPolicySettings::clear_has_spellcheckserviceenabled() {
_has_bits_[3] &= ~0x00000001u;
}
inline void CloudPolicySettings::clear_spellcheckserviceenabled() {
if (spellcheckserviceenabled_ != NULL) spellcheckserviceenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_spellcheckserviceenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::spellcheckserviceenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SpellCheckServiceEnabled)
return spellcheckserviceenabled_ != NULL ? *spellcheckserviceenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_spellcheckserviceenabled() {
set_has_spellcheckserviceenabled();
if (spellcheckserviceenabled_ == NULL) {
spellcheckserviceenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SpellCheckServiceEnabled)
return spellcheckserviceenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_spellcheckserviceenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SpellCheckServiceEnabled)
clear_has_spellcheckserviceenabled();
::enterprise_management::BooleanPolicyProto* temp = spellcheckserviceenabled_;
spellcheckserviceenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_spellcheckserviceenabled(::enterprise_management::BooleanPolicyProto* spellcheckserviceenabled) {
delete spellcheckserviceenabled_;
spellcheckserviceenabled_ = spellcheckserviceenabled;
if (spellcheckserviceenabled) {
set_has_spellcheckserviceenabled();
} else {
clear_has_spellcheckserviceenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SpellCheckServiceEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AudioCaptureAllowed = 162;
inline bool CloudPolicySettings::has_audiocaptureallowed() const {
return (_has_bits_[3] & 0x00000020u) != 0;
}
inline void CloudPolicySettings::set_has_audiocaptureallowed() {
_has_bits_[3] |= 0x00000020u;
}
inline void CloudPolicySettings::clear_has_audiocaptureallowed() {
_has_bits_[3] &= ~0x00000020u;
}
inline void CloudPolicySettings::clear_audiocaptureallowed() {
if (audiocaptureallowed_ != NULL) audiocaptureallowed_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_audiocaptureallowed();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::audiocaptureallowed() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AudioCaptureAllowed)
return audiocaptureallowed_ != NULL ? *audiocaptureallowed_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_audiocaptureallowed() {
set_has_audiocaptureallowed();
if (audiocaptureallowed_ == NULL) {
audiocaptureallowed_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AudioCaptureAllowed)
return audiocaptureallowed_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_audiocaptureallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AudioCaptureAllowed)
clear_has_audiocaptureallowed();
::enterprise_management::BooleanPolicyProto* temp = audiocaptureallowed_;
audiocaptureallowed_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_audiocaptureallowed(::enterprise_management::BooleanPolicyProto* audiocaptureallowed) {
delete audiocaptureallowed_;
audiocaptureallowed_ = audiocaptureallowed;
if (audiocaptureallowed) {
set_has_audiocaptureallowed();
} else {
clear_has_audiocaptureallowed();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AudioCaptureAllowed)
}

// optional .enterprise_management.StringListPolicyProto AudioCaptureAllowedUrls = 210;
inline bool CloudPolicySettings::has_audiocaptureallowedurls() const {
return (_has_bits_[3] & 0x00040000u) != 0;
}
inline void CloudPolicySettings::set_has_audiocaptureallowedurls() {
_has_bits_[3] |= 0x00040000u;
}
inline void CloudPolicySettings::clear_has_audiocaptureallowedurls() {
_has_bits_[3] &= ~0x00040000u;
}
inline void CloudPolicySettings::clear_audiocaptureallowedurls() {
if (audiocaptureallowedurls_ != NULL) audiocaptureallowedurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_audiocaptureallowedurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::audiocaptureallowedurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AudioCaptureAllowedUrls)
return audiocaptureallowedurls_ != NULL ? *audiocaptureallowedurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_audiocaptureallowedurls() {
set_has_audiocaptureallowedurls();
if (audiocaptureallowedurls_ == NULL) {
audiocaptureallowedurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AudioCaptureAllowedUrls)
return audiocaptureallowedurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_audiocaptureallowedurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AudioCaptureAllowedUrls)
clear_has_audiocaptureallowedurls();
::enterprise_management::StringListPolicyProto* temp = audiocaptureallowedurls_;
audiocaptureallowedurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_audiocaptureallowedurls(::enterprise_management::StringListPolicyProto* audiocaptureallowedurls) {
delete audiocaptureallowedurls_;
audiocaptureallowedurls_ = audiocaptureallowedurls;
if (audiocaptureallowedurls) {
set_has_audiocaptureallowedurls();
} else {
clear_has_audiocaptureallowedurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AudioCaptureAllowedUrls)
}

// optional .enterprise_management.BooleanPolicyProto VideoCaptureAllowed = 169;
inline bool CloudPolicySettings::has_videocaptureallowed() const {
return (_has_bits_[3] & 0x00000200u) != 0;
}
inline void CloudPolicySettings::set_has_videocaptureallowed() {
_has_bits_[3] |= 0x00000200u;
}
inline void CloudPolicySettings::clear_has_videocaptureallowed() {
_has_bits_[3] &= ~0x00000200u;
}
inline void CloudPolicySettings::clear_videocaptureallowed() {
if (videocaptureallowed_ != NULL) videocaptureallowed_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_videocaptureallowed();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::videocaptureallowed() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.VideoCaptureAllowed)
return videocaptureallowed_ != NULL ? *videocaptureallowed_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_videocaptureallowed() {
set_has_videocaptureallowed();
if (videocaptureallowed_ == NULL) {
videocaptureallowed_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.VideoCaptureAllowed)
return videocaptureallowed_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_videocaptureallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.VideoCaptureAllowed)
clear_has_videocaptureallowed();
::enterprise_management::BooleanPolicyProto* temp = videocaptureallowed_;
videocaptureallowed_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_videocaptureallowed(::enterprise_management::BooleanPolicyProto* videocaptureallowed) {
delete videocaptureallowed_;
videocaptureallowed_ = videocaptureallowed;
if (videocaptureallowed) {
set_has_videocaptureallowed();
} else {
clear_has_videocaptureallowed();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.VideoCaptureAllowed)
}

// optional .enterprise_management.StringListPolicyProto VideoCaptureAllowedUrls = 211;
inline bool CloudPolicySettings::has_videocaptureallowedurls() const {
return (_has_bits_[3] & 0x00080000u) != 0;
}
inline void CloudPolicySettings::set_has_videocaptureallowedurls() {
_has_bits_[3] |= 0x00080000u;
}
inline void CloudPolicySettings::clear_has_videocaptureallowedurls() {
_has_bits_[3] &= ~0x00080000u;
}
inline void CloudPolicySettings::clear_videocaptureallowedurls() {
if (videocaptureallowedurls_ != NULL) videocaptureallowedurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_videocaptureallowedurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::videocaptureallowedurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.VideoCaptureAllowedUrls)
return videocaptureallowedurls_ != NULL ? *videocaptureallowedurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_videocaptureallowedurls() {
set_has_videocaptureallowedurls();
if (videocaptureallowedurls_ == NULL) {
videocaptureallowedurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.VideoCaptureAllowedUrls)
return videocaptureallowedurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_videocaptureallowedurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.VideoCaptureAllowedUrls)
clear_has_videocaptureallowedurls();
::enterprise_management::StringListPolicyProto* temp = videocaptureallowedurls_;
videocaptureallowedurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_videocaptureallowedurls(::enterprise_management::StringListPolicyProto* videocaptureallowedurls) {
delete videocaptureallowedurls_;
videocaptureallowedurls_ = videocaptureallowedurls;
if (videocaptureallowedurls) {
set_has_videocaptureallowedurls();
} else {
clear_has_videocaptureallowedurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.VideoCaptureAllowedUrls)
}

// optional .enterprise_management.BooleanPolicyProto DisableScreenshots = 155;
inline bool CloudPolicySettings::has_disablescreenshots() const {
return (_has_bits_[3] & 0x00000002u) != 0;
}
inline void CloudPolicySettings::set_has_disablescreenshots() {
_has_bits_[3] |= 0x00000002u;
}
inline void CloudPolicySettings::clear_has_disablescreenshots() {
_has_bits_[3] &= ~0x00000002u;
}
inline void CloudPolicySettings::clear_disablescreenshots() {
if (disablescreenshots_ != NULL) disablescreenshots_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_disablescreenshots();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disablescreenshots() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisableScreenshots)
return disablescreenshots_ != NULL ? *disablescreenshots_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disablescreenshots() {
set_has_disablescreenshots();
if (disablescreenshots_ == NULL) {
disablescreenshots_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisableScreenshots)
return disablescreenshots_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disablescreenshots() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisableScreenshots)
clear_has_disablescreenshots();
::enterprise_management::BooleanPolicyProto* temp = disablescreenshots_;
disablescreenshots_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_disablescreenshots(::enterprise_management::BooleanPolicyProto* disablescreenshots) {
delete disablescreenshots_;
disablescreenshots_ = disablescreenshots;
if (disablescreenshots) {
set_has_disablescreenshots();
} else {
clear_has_disablescreenshots();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisableScreenshots)
}

// optional .enterprise_management.BooleanPolicyProto BuiltInDnsClientEnabled = 167;
inline bool CloudPolicySettings::has_builtindnsclientenabled() const {
return (_has_bits_[3] & 0x00000100u) != 0;
}
inline void CloudPolicySettings::set_has_builtindnsclientenabled() {
_has_bits_[3] |= 0x00000100u;
}
inline void CloudPolicySettings::clear_has_builtindnsclientenabled() {
_has_bits_[3] &= ~0x00000100u;
}
inline void CloudPolicySettings::clear_builtindnsclientenabled() {
if (builtindnsclientenabled_ != NULL) builtindnsclientenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_builtindnsclientenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::builtindnsclientenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BuiltInDnsClientEnabled)
return builtindnsclientenabled_ != NULL ? *builtindnsclientenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_builtindnsclientenabled() {
set_has_builtindnsclientenabled();
if (builtindnsclientenabled_ == NULL) {
builtindnsclientenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BuiltInDnsClientEnabled)
return builtindnsclientenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_builtindnsclientenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BuiltInDnsClientEnabled)
clear_has_builtindnsclientenabled();
::enterprise_management::BooleanPolicyProto* temp = builtindnsclientenabled_;
builtindnsclientenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_builtindnsclientenabled(::enterprise_management::BooleanPolicyProto* builtindnsclientenabled) {
delete builtindnsclientenabled_;
builtindnsclientenabled_ = builtindnsclientenabled;
if (builtindnsclientenabled) {
set_has_builtindnsclientenabled();
} else {
clear_has_builtindnsclientenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BuiltInDnsClientEnabled)
}

// optional .enterprise_management.BooleanPolicyProto FullscreenAllowed = 242;
inline bool CloudPolicySettings::has_fullscreenallowed() const {
return (_has_bits_[3] & 0x40000000u) != 0;
}
inline void CloudPolicySettings::set_has_fullscreenallowed() {
_has_bits_[3] |= 0x40000000u;
}
inline void CloudPolicySettings::clear_has_fullscreenallowed() {
_has_bits_[3] &= ~0x40000000u;
}
inline void CloudPolicySettings::clear_fullscreenallowed() {
if (fullscreenallowed_ != NULL) fullscreenallowed_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_fullscreenallowed();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::fullscreenallowed() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.FullscreenAllowed)
return fullscreenallowed_ != NULL ? *fullscreenallowed_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_fullscreenallowed() {
set_has_fullscreenallowed();
if (fullscreenallowed_ == NULL) {
fullscreenallowed_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.FullscreenAllowed)
return fullscreenallowed_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_fullscreenallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.FullscreenAllowed)
clear_has_fullscreenallowed();
::enterprise_management::BooleanPolicyProto* temp = fullscreenallowed_;
fullscreenallowed_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_fullscreenallowed(::enterprise_management::BooleanPolicyProto* fullscreenallowed) {
delete fullscreenallowed_;
fullscreenallowed_ = fullscreenallowed;
if (fullscreenallowed) {
set_has_fullscreenallowed();
} else {
clear_has_fullscreenallowed();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.FullscreenAllowed)
}

// optional .enterprise_management.BooleanPolicyProto HideWebStoreIcon = 191;
inline bool CloudPolicySettings::has_hidewebstoreicon() const {
return (_has_bits_[3] & 0x00001000u) != 0;
}
inline void CloudPolicySettings::set_has_hidewebstoreicon() {
_has_bits_[3] |= 0x00001000u;
}
inline void CloudPolicySettings::clear_has_hidewebstoreicon() {
_has_bits_[3] &= ~0x00001000u;
}
inline void CloudPolicySettings::clear_hidewebstoreicon() {
if (hidewebstoreicon_ != NULL) hidewebstoreicon_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_hidewebstoreicon();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::hidewebstoreicon() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.HideWebStoreIcon)
return hidewebstoreicon_ != NULL ? *hidewebstoreicon_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_hidewebstoreicon() {
set_has_hidewebstoreicon();
if (hidewebstoreicon_ == NULL) {
hidewebstoreicon_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.HideWebStoreIcon)
return hidewebstoreicon_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_hidewebstoreicon() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.HideWebStoreIcon)
clear_has_hidewebstoreicon();
::enterprise_management::BooleanPolicyProto* temp = hidewebstoreicon_;
hidewebstoreicon_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_hidewebstoreicon(::enterprise_management::BooleanPolicyProto* hidewebstoreicon) {
delete hidewebstoreicon_;
hidewebstoreicon_ = hidewebstoreicon;
if (hidewebstoreicon) {
set_has_hidewebstoreicon();
} else {
clear_has_hidewebstoreicon();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.HideWebStoreIcon)
}

// optional .enterprise_management.StringPolicyProto VariationsRestrictParameter = 198;
inline bool CloudPolicySettings::has_variationsrestrictparameter() const {
return (_has_bits_[3] & 0x00004000u) != 0;
}
inline void CloudPolicySettings::set_has_variationsrestrictparameter() {
_has_bits_[3] |= 0x00004000u;
}
inline void CloudPolicySettings::clear_has_variationsrestrictparameter() {
_has_bits_[3] &= ~0x00004000u;
}
inline void CloudPolicySettings::clear_variationsrestrictparameter() {
if (variationsrestrictparameter_ != NULL) variationsrestrictparameter_->::enterprise_management::StringPolicyProto::Clear();
clear_has_variationsrestrictparameter();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::variationsrestrictparameter() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
return variationsrestrictparameter_ != NULL ? *variationsrestrictparameter_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_variationsrestrictparameter() {
set_has_variationsrestrictparameter();
if (variationsrestrictparameter_ == NULL) {
variationsrestrictparameter_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
return variationsrestrictparameter_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_variationsrestrictparameter() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
clear_has_variationsrestrictparameter();
::enterprise_management::StringPolicyProto* temp = variationsrestrictparameter_;
variationsrestrictparameter_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_variationsrestrictparameter(::enterprise_management::StringPolicyProto* variationsrestrictparameter) {
delete variationsrestrictparameter_;
variationsrestrictparameter_ = variationsrestrictparameter;
if (variationsrestrictparameter) {
set_has_variationsrestrictparameter();
} else {
clear_has_variationsrestrictparameter();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
}

// optional .enterprise_management.IntegerPolicyProto ContentPackDefaultFilteringBehavior = 206;
inline bool CloudPolicySettings::has_contentpackdefaultfilteringbehavior() const {
return (_has_bits_[3] & 0x00008000u) != 0;
}
inline void CloudPolicySettings::set_has_contentpackdefaultfilteringbehavior() {
_has_bits_[3] |= 0x00008000u;
}
inline void CloudPolicySettings::clear_has_contentpackdefaultfilteringbehavior() {
_has_bits_[3] &= ~0x00008000u;
}
inline void CloudPolicySettings::clear_contentpackdefaultfilteringbehavior() {
if (contentpackdefaultfilteringbehavior_ != NULL) contentpackdefaultfilteringbehavior_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_contentpackdefaultfilteringbehavior();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::contentpackdefaultfilteringbehavior() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ContentPackDefaultFilteringBehavior)
return contentpackdefaultfilteringbehavior_ != NULL ? *contentpackdefaultfilteringbehavior_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_contentpackdefaultfilteringbehavior() {
set_has_contentpackdefaultfilteringbehavior();
if (contentpackdefaultfilteringbehavior_ == NULL) {
contentpackdefaultfilteringbehavior_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ContentPackDefaultFilteringBehavior)
return contentpackdefaultfilteringbehavior_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_contentpackdefaultfilteringbehavior() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ContentPackDefaultFilteringBehavior)
clear_has_contentpackdefaultfilteringbehavior();
::enterprise_management::IntegerPolicyProto* temp = contentpackdefaultfilteringbehavior_;
contentpackdefaultfilteringbehavior_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_contentpackdefaultfilteringbehavior(::enterprise_management::IntegerPolicyProto* contentpackdefaultfilteringbehavior) {
delete contentpackdefaultfilteringbehavior_;
contentpackdefaultfilteringbehavior_ = contentpackdefaultfilteringbehavior;
if (contentpackdefaultfilteringbehavior) {
set_has_contentpackdefaultfilteringbehavior();
} else {
clear_has_contentpackdefaultfilteringbehavior();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ContentPackDefaultFilteringBehavior)
}

// optional .enterprise_management.StringPolicyProto ContentPackManualBehaviorHosts = 207;
inline bool CloudPolicySettings::has_contentpackmanualbehaviorhosts() const {
return (_has_bits_[3] & 0x00010000u) != 0;
}
inline void CloudPolicySettings::set_has_contentpackmanualbehaviorhosts() {
_has_bits_[3] |= 0x00010000u;
}
inline void CloudPolicySettings::clear_has_contentpackmanualbehaviorhosts() {
_has_bits_[3] &= ~0x00010000u;
}
inline void CloudPolicySettings::clear_contentpackmanualbehaviorhosts() {
if (contentpackmanualbehaviorhosts_ != NULL) contentpackmanualbehaviorhosts_->::enterprise_management::StringPolicyProto::Clear();
clear_has_contentpackmanualbehaviorhosts();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::contentpackmanualbehaviorhosts() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorHosts)
return contentpackmanualbehaviorhosts_ != NULL ? *contentpackmanualbehaviorhosts_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_contentpackmanualbehaviorhosts() {
set_has_contentpackmanualbehaviorhosts();
if (contentpackmanualbehaviorhosts_ == NULL) {
contentpackmanualbehaviorhosts_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorHosts)
return contentpackmanualbehaviorhosts_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_contentpackmanualbehaviorhosts() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorHosts)
clear_has_contentpackmanualbehaviorhosts();
::enterprise_management::StringPolicyProto* temp = contentpackmanualbehaviorhosts_;
contentpackmanualbehaviorhosts_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_contentpackmanualbehaviorhosts(::enterprise_management::StringPolicyProto* contentpackmanualbehaviorhosts) {
delete contentpackmanualbehaviorhosts_;
contentpackmanualbehaviorhosts_ = contentpackmanualbehaviorhosts;
if (contentpackmanualbehaviorhosts) {
set_has_contentpackmanualbehaviorhosts();
} else {
clear_has_contentpackmanualbehaviorhosts();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorHosts)
}

// optional .enterprise_management.StringPolicyProto ContentPackManualBehaviorURLs = 208;
inline bool CloudPolicySettings::has_contentpackmanualbehaviorurls() const {
return (_has_bits_[3] & 0x00020000u) != 0;
}
inline void CloudPolicySettings::set_has_contentpackmanualbehaviorurls() {
_has_bits_[3] |= 0x00020000u;
}
inline void CloudPolicySettings::clear_has_contentpackmanualbehaviorurls() {
_has_bits_[3] &= ~0x00020000u;
}
inline void CloudPolicySettings::clear_contentpackmanualbehaviorurls() {
if (contentpackmanualbehaviorurls_ != NULL) contentpackmanualbehaviorurls_->::enterprise_management::StringPolicyProto::Clear();
clear_has_contentpackmanualbehaviorurls();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::contentpackmanualbehaviorurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorURLs)
return contentpackmanualbehaviorurls_ != NULL ? *contentpackmanualbehaviorurls_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_contentpackmanualbehaviorurls() {
set_has_contentpackmanualbehaviorurls();
if (contentpackmanualbehaviorurls_ == NULL) {
contentpackmanualbehaviorurls_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorURLs)
return contentpackmanualbehaviorurls_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_contentpackmanualbehaviorurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorURLs)
clear_has_contentpackmanualbehaviorurls();
::enterprise_management::StringPolicyProto* temp = contentpackmanualbehaviorurls_;
contentpackmanualbehaviorurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_contentpackmanualbehaviorurls(::enterprise_management::StringPolicyProto* contentpackmanualbehaviorurls) {
delete contentpackmanualbehaviorurls_;
contentpackmanualbehaviorurls_ = contentpackmanualbehaviorurls;
if (contentpackmanualbehaviorurls) {
set_has_contentpackmanualbehaviorurls();
} else {
clear_has_contentpackmanualbehaviorurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorURLs)
}

// optional .enterprise_management.BooleanPolicyProto SupervisedUserCreationEnabled = 225;
inline bool CloudPolicySettings::has_supervisedusercreationenabled() const {
return (_has_bits_[3] & 0x00100000u) != 0;
}
inline void CloudPolicySettings::set_has_supervisedusercreationenabled() {
_has_bits_[3] |= 0x00100000u;
}
inline void CloudPolicySettings::clear_has_supervisedusercreationenabled() {
_has_bits_[3] &= ~0x00100000u;
}
inline void CloudPolicySettings::clear_supervisedusercreationenabled() {
if (supervisedusercreationenabled_ != NULL) supervisedusercreationenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_supervisedusercreationenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::supervisedusercreationenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SupervisedUserCreationEnabled)
return supervisedusercreationenabled_ != NULL ? *supervisedusercreationenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_supervisedusercreationenabled() {
set_has_supervisedusercreationenabled();
if (supervisedusercreationenabled_ == NULL) {
supervisedusercreationenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SupervisedUserCreationEnabled)
return supervisedusercreationenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_supervisedusercreationenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SupervisedUserCreationEnabled)
clear_has_supervisedusercreationenabled();
::enterprise_management::BooleanPolicyProto* temp = supervisedusercreationenabled_;
supervisedusercreationenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_supervisedusercreationenabled(::enterprise_management::BooleanPolicyProto* supervisedusercreationenabled) {
delete supervisedusercreationenabled_;
supervisedusercreationenabled_ = supervisedusercreationenabled;
if (supervisedusercreationenabled) {
set_has_supervisedusercreationenabled();
} else {
clear_has_supervisedusercreationenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SupervisedUserCreationEnabled)
}

// optional .enterprise_management.StringPolicyProto ManagedBookmarks = 229;
inline bool CloudPolicySettings::has_managedbookmarks() const {
return (_has_bits_[3] & 0x00200000u) != 0;
}
inline void CloudPolicySettings::set_has_managedbookmarks() {
_has_bits_[3] |= 0x00200000u;
}
inline void CloudPolicySettings::clear_has_managedbookmarks() {
_has_bits_[3] &= ~0x00200000u;
}
inline void CloudPolicySettings::clear_managedbookmarks() {
if (managedbookmarks_ != NULL) managedbookmarks_->::enterprise_management::StringPolicyProto::Clear();
clear_has_managedbookmarks();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::managedbookmarks() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ManagedBookmarks)
return managedbookmarks_ != NULL ? *managedbookmarks_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_managedbookmarks() {
set_has_managedbookmarks();
if (managedbookmarks_ == NULL) {
managedbookmarks_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ManagedBookmarks)
return managedbookmarks_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_managedbookmarks() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ManagedBookmarks)
clear_has_managedbookmarks();
::enterprise_management::StringPolicyProto* temp = managedbookmarks_;
managedbookmarks_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_managedbookmarks(::enterprise_management::StringPolicyProto* managedbookmarks) {
delete managedbookmarks_;
managedbookmarks_ = managedbookmarks;
if (managedbookmarks) {
set_has_managedbookmarks();
} else {
clear_has_managedbookmarks();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ManagedBookmarks)
}

// optional .enterprise_management.StringListPolicyProto EnableDeprecatedWebPlatformFeatures = 272;
inline bool CloudPolicySettings::has_enabledeprecatedwebplatformfeatures() const {
return (_has_bits_[4] & 0x00000200u) != 0;
}
inline void CloudPolicySettings::set_has_enabledeprecatedwebplatformfeatures() {
_has_bits_[4] |= 0x00000200u;
}
inline void CloudPolicySettings::clear_has_enabledeprecatedwebplatformfeatures() {
_has_bits_[4] &= ~0x00000200u;
}
inline void CloudPolicySettings::clear_enabledeprecatedwebplatformfeatures() {
if (enabledeprecatedwebplatformfeatures_ != NULL) enabledeprecatedwebplatformfeatures_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_enabledeprecatedwebplatformfeatures();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::enabledeprecatedwebplatformfeatures() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
return enabledeprecatedwebplatformfeatures_ != NULL ? *enabledeprecatedwebplatformfeatures_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_enabledeprecatedwebplatformfeatures() {
set_has_enabledeprecatedwebplatformfeatures();
if (enabledeprecatedwebplatformfeatures_ == NULL) {
enabledeprecatedwebplatformfeatures_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
return enabledeprecatedwebplatformfeatures_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_enabledeprecatedwebplatformfeatures() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
clear_has_enabledeprecatedwebplatformfeatures();
::enterprise_management::StringListPolicyProto* temp = enabledeprecatedwebplatformfeatures_;
enabledeprecatedwebplatformfeatures_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_enabledeprecatedwebplatformfeatures(::enterprise_management::StringListPolicyProto* enabledeprecatedwebplatformfeatures) {
delete enabledeprecatedwebplatformfeatures_;
enabledeprecatedwebplatformfeatures_ = enabledeprecatedwebplatformfeatures;
if (enabledeprecatedwebplatformfeatures) {
set_has_enabledeprecatedwebplatformfeatures();
} else {
clear_has_enabledeprecatedwebplatformfeatures();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
}

// optional .enterprise_management.BooleanPolicyProto BrowserGuestModeEnabled = 277;
inline bool CloudPolicySettings::has_browserguestmodeenabled() const {
return (_has_bits_[4] & 0x00000800u) != 0;
}
inline void CloudPolicySettings::set_has_browserguestmodeenabled() {
_has_bits_[4] |= 0x00000800u;
}
inline void CloudPolicySettings::clear_has_browserguestmodeenabled() {
_has_bits_[4] &= ~0x00000800u;
}
inline void CloudPolicySettings::clear_browserguestmodeenabled() {
if (browserguestmodeenabled_ != NULL) browserguestmodeenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_browserguestmodeenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::browserguestmodeenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserGuestModeEnabled)
return browserguestmodeenabled_ != NULL ? *browserguestmodeenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_browserguestmodeenabled() {
set_has_browserguestmodeenabled();
if (browserguestmodeenabled_ == NULL) {
browserguestmodeenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserGuestModeEnabled)
return browserguestmodeenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_browserguestmodeenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserGuestModeEnabled)
clear_has_browserguestmodeenabled();
::enterprise_management::BooleanPolicyProto* temp = browserguestmodeenabled_;
browserguestmodeenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_browserguestmodeenabled(::enterprise_management::BooleanPolicyProto* browserguestmodeenabled) {
delete browserguestmodeenabled_;
browserguestmodeenabled_ = browserguestmodeenabled;
if (browserguestmodeenabled) {
set_has_browserguestmodeenabled();
} else {
clear_has_browserguestmodeenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserGuestModeEnabled)
}

// optional .enterprise_management.BooleanPolicyProto BrowserAddPersonEnabled = 278;
inline bool CloudPolicySettings::has_browseraddpersonenabled() const {
return (_has_bits_[4] & 0x00001000u) != 0;
}
inline void CloudPolicySettings::set_has_browseraddpersonenabled() {
_has_bits_[4] |= 0x00001000u;
}
inline void CloudPolicySettings::clear_has_browseraddpersonenabled() {
_has_bits_[4] &= ~0x00001000u;
}
inline void CloudPolicySettings::clear_browseraddpersonenabled() {
if (browseraddpersonenabled_ != NULL) browseraddpersonenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_browseraddpersonenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::browseraddpersonenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserAddPersonEnabled)
return browseraddpersonenabled_ != NULL ? *browseraddpersonenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_browseraddpersonenabled() {
set_has_browseraddpersonenabled();
if (browseraddpersonenabled_ == NULL) {
browseraddpersonenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserAddPersonEnabled)
return browseraddpersonenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_browseraddpersonenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserAddPersonEnabled)
clear_has_browseraddpersonenabled();
::enterprise_management::BooleanPolicyProto* temp = browseraddpersonenabled_;
browseraddpersonenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_browseraddpersonenabled(::enterprise_management::BooleanPolicyProto* browseraddpersonenabled) {
delete browseraddpersonenabled_;
browseraddpersonenabled_ = browseraddpersonenabled;
if (browseraddpersonenabled) {
set_has_browseraddpersonenabled();
} else {
clear_has_browseraddpersonenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserAddPersonEnabled)
}

// optional .enterprise_management.StringPolicyProto SSLVersionMin = 281;
inline bool CloudPolicySettings::has_sslversionmin() const {
return (_has_bits_[4] & 0x00008000u) != 0;
}
inline void CloudPolicySettings::set_has_sslversionmin() {
_has_bits_[4] |= 0x00008000u;
}
inline void CloudPolicySettings::clear_has_sslversionmin() {
_has_bits_[4] &= ~0x00008000u;
}
inline void CloudPolicySettings::clear_sslversionmin() {
if (sslversionmin_ != NULL) sslversionmin_->::enterprise_management::StringPolicyProto::Clear();
clear_has_sslversionmin();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::sslversionmin() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SSLVersionMin)
return sslversionmin_ != NULL ? *sslversionmin_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_sslversionmin() {
set_has_sslversionmin();
if (sslversionmin_ == NULL) {
sslversionmin_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SSLVersionMin)
return sslversionmin_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_sslversionmin() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SSLVersionMin)
clear_has_sslversionmin();
::enterprise_management::StringPolicyProto* temp = sslversionmin_;
sslversionmin_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_sslversionmin(::enterprise_management::StringPolicyProto* sslversionmin) {
delete sslversionmin_;
sslversionmin_ = sslversionmin;
if (sslversionmin) {
set_has_sslversionmin();
} else {
clear_has_sslversionmin();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SSLVersionMin)
}

// optional .enterprise_management.StringPolicyProto SSLVersionMax = 363;
inline bool CloudPolicySettings::has_sslversionmax() const {
return (_has_bits_[5] & 0x00000800u) != 0;
}
inline void CloudPolicySettings::set_has_sslversionmax() {
_has_bits_[5] |= 0x00000800u;
}
inline void CloudPolicySettings::clear_has_sslversionmax() {
_has_bits_[5] &= ~0x00000800u;
}
inline void CloudPolicySettings::clear_sslversionmax() {
if (sslversionmax_ != NULL) sslversionmax_->::enterprise_management::StringPolicyProto::Clear();
clear_has_sslversionmax();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::sslversionmax() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SSLVersionMax)
return sslversionmax_ != NULL ? *sslversionmax_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_sslversionmax() {
set_has_sslversionmax();
if (sslversionmax_ == NULL) {
sslversionmax_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SSLVersionMax)
return sslversionmax_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_sslversionmax() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SSLVersionMax)
clear_has_sslversionmax();
::enterprise_management::StringPolicyProto* temp = sslversionmax_;
sslversionmax_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_sslversionmax(::enterprise_management::StringPolicyProto* sslversionmax) {
delete sslversionmax_;
sslversionmax_ = sslversionmax;
if (sslversionmax) {
set_has_sslversionmax();
} else {
clear_has_sslversionmax();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SSLVersionMax)
}

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForUrls = 337;
inline bool CloudPolicySettings::has_certificatetransparencyenforcementdisabledforurls() const {
return (_has_bits_[5] & 0x00000008u) != 0;
}
inline void CloudPolicySettings::set_has_certificatetransparencyenforcementdisabledforurls() {
_has_bits_[5] |= 0x00000008u;
}
inline void CloudPolicySettings::clear_has_certificatetransparencyenforcementdisabledforurls() {
_has_bits_[5] &= ~0x00000008u;
}
inline void CloudPolicySettings::clear_certificatetransparencyenforcementdisabledforurls() {
if (certificatetransparencyenforcementdisabledforurls_ != NULL) certificatetransparencyenforcementdisabledforurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_certificatetransparencyenforcementdisabledforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::certificatetransparencyenforcementdisabledforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
return certificatetransparencyenforcementdisabledforurls_ != NULL ? *certificatetransparencyenforcementdisabledforurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_certificatetransparencyenforcementdisabledforurls() {
set_has_certificatetransparencyenforcementdisabledforurls();
if (certificatetransparencyenforcementdisabledforurls_ == NULL) {
certificatetransparencyenforcementdisabledforurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
return certificatetransparencyenforcementdisabledforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_certificatetransparencyenforcementdisabledforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
clear_has_certificatetransparencyenforcementdisabledforurls();
::enterprise_management::StringListPolicyProto* temp = certificatetransparencyenforcementdisabledforurls_;
certificatetransparencyenforcementdisabledforurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_certificatetransparencyenforcementdisabledforurls(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforurls) {
delete certificatetransparencyenforcementdisabledforurls_;
certificatetransparencyenforcementdisabledforurls_ = certificatetransparencyenforcementdisabledforurls;
if (certificatetransparencyenforcementdisabledforurls) {
set_has_certificatetransparencyenforcementdisabledforurls();
} else {
clear_has_certificatetransparencyenforcementdisabledforurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
}

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForCas = 437;
inline bool CloudPolicySettings::has_certificatetransparencyenforcementdisabledforcas() const {
return (_has_bits_[6] & 0x00002000u) != 0;
}
inline void CloudPolicySettings::set_has_certificatetransparencyenforcementdisabledforcas() {
_has_bits_[6] |= 0x00002000u;
}
inline void CloudPolicySettings::clear_has_certificatetransparencyenforcementdisabledforcas() {
_has_bits_[6] &= ~0x00002000u;
}
inline void CloudPolicySettings::clear_certificatetransparencyenforcementdisabledforcas() {
if (certificatetransparencyenforcementdisabledforcas_ != NULL) certificatetransparencyenforcementdisabledforcas_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_certificatetransparencyenforcementdisabledforcas();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::certificatetransparencyenforcementdisabledforcas() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
return certificatetransparencyenforcementdisabledforcas_ != NULL ? *certificatetransparencyenforcementdisabledforcas_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_certificatetransparencyenforcementdisabledforcas() {
set_has_certificatetransparencyenforcementdisabledforcas();
if (certificatetransparencyenforcementdisabledforcas_ == NULL) {
certificatetransparencyenforcementdisabledforcas_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
return certificatetransparencyenforcementdisabledforcas_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_certificatetransparencyenforcementdisabledforcas() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
clear_has_certificatetransparencyenforcementdisabledforcas();
::enterprise_management::StringListPolicyProto* temp = certificatetransparencyenforcementdisabledforcas_;
certificatetransparencyenforcementdisabledforcas_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_certificatetransparencyenforcementdisabledforcas(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforcas) {
delete certificatetransparencyenforcementdisabledforcas_;
certificatetransparencyenforcementdisabledforcas_ = certificatetransparencyenforcementdisabledforcas;
if (certificatetransparencyenforcementdisabledforcas) {
set_has_certificatetransparencyenforcementdisabledforcas();
} else {
clear_has_certificatetransparencyenforcementdisabledforcas();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
}

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForLegacyCas = 438;
inline bool CloudPolicySettings::has_certificatetransparencyenforcementdisabledforlegacycas() const {
return (_has_bits_[6] & 0x00004000u) != 0;
}
inline void CloudPolicySettings::set_has_certificatetransparencyenforcementdisabledforlegacycas() {
_has_bits_[6] |= 0x00004000u;
}
inline void CloudPolicySettings::clear_has_certificatetransparencyenforcementdisabledforlegacycas() {
_has_bits_[6] &= ~0x00004000u;
}
inline void CloudPolicySettings::clear_certificatetransparencyenforcementdisabledforlegacycas() {
if (certificatetransparencyenforcementdisabledforlegacycas_ != NULL) certificatetransparencyenforcementdisabledforlegacycas_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_certificatetransparencyenforcementdisabledforlegacycas();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::certificatetransparencyenforcementdisabledforlegacycas() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
return certificatetransparencyenforcementdisabledforlegacycas_ != NULL ? *certificatetransparencyenforcementdisabledforlegacycas_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_certificatetransparencyenforcementdisabledforlegacycas() {
set_has_certificatetransparencyenforcementdisabledforlegacycas();
if (certificatetransparencyenforcementdisabledforlegacycas_ == NULL) {
certificatetransparencyenforcementdisabledforlegacycas_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
return certificatetransparencyenforcementdisabledforlegacycas_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_certificatetransparencyenforcementdisabledforlegacycas() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
clear_has_certificatetransparencyenforcementdisabledforlegacycas();
::enterprise_management::StringListPolicyProto* temp = certificatetransparencyenforcementdisabledforlegacycas_;
certificatetransparencyenforcementdisabledforlegacycas_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_certificatetransparencyenforcementdisabledforlegacycas(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforlegacycas) {
delete certificatetransparencyenforcementdisabledforlegacycas_;
certificatetransparencyenforcementdisabledforlegacycas_ = certificatetransparencyenforcementdisabledforlegacycas;
if (certificatetransparencyenforcementdisabledforlegacycas) {
set_has_certificatetransparencyenforcementdisabledforlegacycas();
} else {
clear_has_certificatetransparencyenforcementdisabledforlegacycas();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
}

// optional .enterprise_management.BooleanPolicyProto SSLErrorOverrideAllowed = 302;
inline bool CloudPolicySettings::has_sslerroroverrideallowed() const {
return (_has_bits_[4] & 0x00800000u) != 0;
}
inline void CloudPolicySettings::set_has_sslerroroverrideallowed() {
_has_bits_[4] |= 0x00800000u;
}
inline void CloudPolicySettings::clear_has_sslerroroverrideallowed() {
_has_bits_[4] &= ~0x00800000u;
}
inline void CloudPolicySettings::clear_sslerroroverrideallowed() {
if (sslerroroverrideallowed_ != NULL) sslerroroverrideallowed_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_sslerroroverrideallowed();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::sslerroroverrideallowed() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
return sslerroroverrideallowed_ != NULL ? *sslerroroverrideallowed_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_sslerroroverrideallowed() {
set_has_sslerroroverrideallowed();
if (sslerroroverrideallowed_ == NULL) {
sslerroroverrideallowed_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
return sslerroroverrideallowed_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_sslerroroverrideallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
clear_has_sslerroroverrideallowed();
::enterprise_management::BooleanPolicyProto* temp = sslerroroverrideallowed_;
sslerroroverrideallowed_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_sslerroroverrideallowed(::enterprise_management::BooleanPolicyProto* sslerroroverrideallowed) {
delete sslerroroverrideallowed_;
sslerroroverrideallowed_ = sslerroroverrideallowed;
if (sslerroroverrideallowed) {
set_has_sslerroroverrideallowed();
} else {
clear_has_sslerroroverrideallowed();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
}

// optional .enterprise_management.BooleanPolicyProto QuicAllowed = 303;
inline bool CloudPolicySettings::has_quicallowed() const {
return (_has_bits_[4] & 0x01000000u) != 0;
}
inline void CloudPolicySettings::set_has_quicallowed() {
_has_bits_[4] |= 0x01000000u;
}
inline void CloudPolicySettings::clear_has_quicallowed() {
_has_bits_[4] &= ~0x01000000u;
}
inline void CloudPolicySettings::clear_quicallowed() {
if (quicallowed_ != NULL) quicallowed_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_quicallowed();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::quicallowed() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.QuicAllowed)
return quicallowed_ != NULL ? *quicallowed_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_quicallowed() {
set_has_quicallowed();
if (quicallowed_ == NULL) {
quicallowed_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.QuicAllowed)
return quicallowed_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_quicallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.QuicAllowed)
clear_has_quicallowed();
::enterprise_management::BooleanPolicyProto* temp = quicallowed_;
quicallowed_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_quicallowed(::enterprise_management::BooleanPolicyProto* quicallowed) {
delete quicallowed_;
quicallowed_ = quicallowed;
if (quicallowed) {
set_has_quicallowed();
} else {
clear_has_quicallowed();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.QuicAllowed)
}

// optional .enterprise_management.BooleanPolicyProto HardwareAccelerationModeEnabled = 306;
inline bool CloudPolicySettings::has_hardwareaccelerationmodeenabled() const {
return (_has_bits_[4] & 0x02000000u) != 0;
}
inline void CloudPolicySettings::set_has_hardwareaccelerationmodeenabled() {
_has_bits_[4] |= 0x02000000u;
}
inline void CloudPolicySettings::clear_has_hardwareaccelerationmodeenabled() {
_has_bits_[4] &= ~0x02000000u;
}
inline void CloudPolicySettings::clear_hardwareaccelerationmodeenabled() {
if (hardwareaccelerationmodeenabled_ != NULL) hardwareaccelerationmodeenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_hardwareaccelerationmodeenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::hardwareaccelerationmodeenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.HardwareAccelerationModeEnabled)
return hardwareaccelerationmodeenabled_ != NULL ? *hardwareaccelerationmodeenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_hardwareaccelerationmodeenabled() {
set_has_hardwareaccelerationmodeenabled();
if (hardwareaccelerationmodeenabled_ == NULL) {
hardwareaccelerationmodeenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.HardwareAccelerationModeEnabled)
return hardwareaccelerationmodeenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_hardwareaccelerationmodeenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.HardwareAccelerationModeEnabled)
clear_has_hardwareaccelerationmodeenabled();
::enterprise_management::BooleanPolicyProto* temp = hardwareaccelerationmodeenabled_;
hardwareaccelerationmodeenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_hardwareaccelerationmodeenabled(::enterprise_management::BooleanPolicyProto* hardwareaccelerationmodeenabled) {
delete hardwareaccelerationmodeenabled_;
hardwareaccelerationmodeenabled_ = hardwareaccelerationmodeenabled;
if (hardwareaccelerationmodeenabled) {
set_has_hardwareaccelerationmodeenabled();
} else {
clear_has_hardwareaccelerationmodeenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.HardwareAccelerationModeEnabled)
}

// optional .enterprise_management.BooleanPolicyProto SuppressUnsupportedOSWarning = 326;
inline bool CloudPolicySettings::has_suppressunsupportedoswarning() const {
return (_has_bits_[4] & 0x40000000u) != 0;
}
inline void CloudPolicySettings::set_has_suppressunsupportedoswarning() {
_has_bits_[4] |= 0x40000000u;
}
inline void CloudPolicySettings::clear_has_suppressunsupportedoswarning() {
_has_bits_[4] &= ~0x40000000u;
}
inline void CloudPolicySettings::clear_suppressunsupportedoswarning() {
if (suppressunsupportedoswarning_ != NULL) suppressunsupportedoswarning_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_suppressunsupportedoswarning();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::suppressunsupportedoswarning() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SuppressUnsupportedOSWarning)
return suppressunsupportedoswarning_ != NULL ? *suppressunsupportedoswarning_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_suppressunsupportedoswarning() {
set_has_suppressunsupportedoswarning();
if (suppressunsupportedoswarning_ == NULL) {
suppressunsupportedoswarning_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SuppressUnsupportedOSWarning)
return suppressunsupportedoswarning_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_suppressunsupportedoswarning() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SuppressUnsupportedOSWarning)
clear_has_suppressunsupportedoswarning();
::enterprise_management::BooleanPolicyProto* temp = suppressunsupportedoswarning_;
suppressunsupportedoswarning_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_suppressunsupportedoswarning(::enterprise_management::BooleanPolicyProto* suppressunsupportedoswarning) {
delete suppressunsupportedoswarning_;
suppressunsupportedoswarning_ = suppressunsupportedoswarning;
if (suppressunsupportedoswarning) {
set_has_suppressunsupportedoswarning();
} else {
clear_has_suppressunsupportedoswarning();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SuppressUnsupportedOSWarning)
}

// optional .enterprise_management.BooleanPolicyProto TaskManagerEndProcessEnabled = 329;
inline bool CloudPolicySettings::has_taskmanagerendprocessenabled() const {
return (_has_bits_[4] & 0x80000000u) != 0;
}
inline void CloudPolicySettings::set_has_taskmanagerendprocessenabled() {
_has_bits_[4] |= 0x80000000u;
}
inline void CloudPolicySettings::clear_has_taskmanagerendprocessenabled() {
_has_bits_[4] &= ~0x80000000u;
}
inline void CloudPolicySettings::clear_taskmanagerendprocessenabled() {
if (taskmanagerendprocessenabled_ != NULL) taskmanagerendprocessenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_taskmanagerendprocessenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::taskmanagerendprocessenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.TaskManagerEndProcessEnabled)
return taskmanagerendprocessenabled_ != NULL ? *taskmanagerendprocessenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_taskmanagerendprocessenabled() {
set_has_taskmanagerendprocessenabled();
if (taskmanagerendprocessenabled_ == NULL) {
taskmanagerendprocessenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.TaskManagerEndProcessEnabled)
return taskmanagerendprocessenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_taskmanagerendprocessenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.TaskManagerEndProcessEnabled)
clear_has_taskmanagerendprocessenabled();
::enterprise_management::BooleanPolicyProto* temp = taskmanagerendprocessenabled_;
taskmanagerendprocessenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_taskmanagerendprocessenabled(::enterprise_management::BooleanPolicyProto* taskmanagerendprocessenabled) {
delete taskmanagerendprocessenabled_;
taskmanagerendprocessenabled_ = taskmanagerendprocessenabled;
if (taskmanagerendprocessenabled) {
set_has_taskmanagerendprocessenabled();
} else {
clear_has_taskmanagerendprocessenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.TaskManagerEndProcessEnabled)
}

// optional .enterprise_management.StringPolicyProto AllowedDomainsForApps = 333;
inline bool CloudPolicySettings::has_alloweddomainsforapps() const {
return (_has_bits_[5] & 0x00000001u) != 0;
}
inline void CloudPolicySettings::set_has_alloweddomainsforapps() {
_has_bits_[5] |= 0x00000001u;
}
inline void CloudPolicySettings::clear_has_alloweddomainsforapps() {
_has_bits_[5] &= ~0x00000001u;
}
inline void CloudPolicySettings::clear_alloweddomainsforapps() {
if (alloweddomainsforapps_ != NULL) alloweddomainsforapps_->::enterprise_management::StringPolicyProto::Clear();
clear_has_alloweddomainsforapps();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::alloweddomainsforapps() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
return alloweddomainsforapps_ != NULL ? *alloweddomainsforapps_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_alloweddomainsforapps() {
set_has_alloweddomainsforapps();
if (alloweddomainsforapps_ == NULL) {
alloweddomainsforapps_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
return alloweddomainsforapps_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_alloweddomainsforapps() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
clear_has_alloweddomainsforapps();
::enterprise_management::StringPolicyProto* temp = alloweddomainsforapps_;
alloweddomainsforapps_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_alloweddomainsforapps(::enterprise_management::StringPolicyProto* alloweddomainsforapps) {
delete alloweddomainsforapps_;
alloweddomainsforapps_ = alloweddomainsforapps;
if (alloweddomainsforapps) {
set_has_alloweddomainsforapps();
} else {
clear_has_alloweddomainsforapps();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
}

// optional .enterprise_management.BooleanPolicyProto PacHttpsUrlStrippingEnabled = 334;
inline bool CloudPolicySettings::has_pachttpsurlstrippingenabled() const {
return (_has_bits_[5] & 0x00000002u) != 0;
}
inline void CloudPolicySettings::set_has_pachttpsurlstrippingenabled() {
_has_bits_[5] |= 0x00000002u;
}
inline void CloudPolicySettings::clear_has_pachttpsurlstrippingenabled() {
_has_bits_[5] &= ~0x00000002u;
}
inline void CloudPolicySettings::clear_pachttpsurlstrippingenabled() {
if (pachttpsurlstrippingenabled_ != NULL) pachttpsurlstrippingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_pachttpsurlstrippingenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::pachttpsurlstrippingenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PacHttpsUrlStrippingEnabled)
return pachttpsurlstrippingenabled_ != NULL ? *pachttpsurlstrippingenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_pachttpsurlstrippingenabled() {
set_has_pachttpsurlstrippingenabled();
if (pachttpsurlstrippingenabled_ == NULL) {
pachttpsurlstrippingenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PacHttpsUrlStrippingEnabled)
return pachttpsurlstrippingenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_pachttpsurlstrippingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PacHttpsUrlStrippingEnabled)
clear_has_pachttpsurlstrippingenabled();
::enterprise_management::BooleanPolicyProto* temp = pachttpsurlstrippingenabled_;
pachttpsurlstrippingenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_pachttpsurlstrippingenabled(::enterprise_management::BooleanPolicyProto* pachttpsurlstrippingenabled) {
delete pachttpsurlstrippingenabled_;
pachttpsurlstrippingenabled_ = pachttpsurlstrippingenabled;
if (pachttpsurlstrippingenabled) {
set_has_pachttpsurlstrippingenabled();
} else {
clear_has_pachttpsurlstrippingenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PacHttpsUrlStrippingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto EnableMediaRouter = 335;
inline bool CloudPolicySettings::has_enablemediarouter() const {
return (_has_bits_[5] & 0x00000004u) != 0;
}
inline void CloudPolicySettings::set_has_enablemediarouter() {
_has_bits_[5] |= 0x00000004u;
}
inline void CloudPolicySettings::clear_has_enablemediarouter() {
_has_bits_[5] &= ~0x00000004u;
}
inline void CloudPolicySettings::clear_enablemediarouter() {
if (enablemediarouter_ != NULL) enablemediarouter_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_enablemediarouter();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enablemediarouter() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableMediaRouter)
return enablemediarouter_ != NULL ? *enablemediarouter_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enablemediarouter() {
set_has_enablemediarouter();
if (enablemediarouter_ == NULL) {
enablemediarouter_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableMediaRouter)
return enablemediarouter_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enablemediarouter() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableMediaRouter)
clear_has_enablemediarouter();
::enterprise_management::BooleanPolicyProto* temp = enablemediarouter_;
enablemediarouter_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_enablemediarouter(::enterprise_management::BooleanPolicyProto* enablemediarouter) {
delete enablemediarouter_;
enablemediarouter_ = enablemediarouter;
if (enablemediarouter) {
set_has_enablemediarouter();
} else {
clear_has_enablemediarouter();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableMediaRouter)
}

// optional .enterprise_management.BooleanPolicyProto ShowCastIconInToolbar = 364;
inline bool CloudPolicySettings::has_showcasticonintoolbar() const {
return (_has_bits_[5] & 0x00001000u) != 0;
}
inline void CloudPolicySettings::set_has_showcasticonintoolbar() {
_has_bits_[5] |= 0x00001000u;
}
inline void CloudPolicySettings::clear_has_showcasticonintoolbar() {
_has_bits_[5] &= ~0x00001000u;
}
inline void CloudPolicySettings::clear_showcasticonintoolbar() {
if (showcasticonintoolbar_ != NULL) showcasticonintoolbar_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_showcasticonintoolbar();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::showcasticonintoolbar() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ShowCastIconInToolbar)
return showcasticonintoolbar_ != NULL ? *showcasticonintoolbar_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_showcasticonintoolbar() {
set_has_showcasticonintoolbar();
if (showcasticonintoolbar_ == NULL) {
showcasticonintoolbar_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ShowCastIconInToolbar)
return showcasticonintoolbar_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_showcasticonintoolbar() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ShowCastIconInToolbar)
clear_has_showcasticonintoolbar();
::enterprise_management::BooleanPolicyProto* temp = showcasticonintoolbar_;
showcasticonintoolbar_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_showcasticonintoolbar(::enterprise_management::BooleanPolicyProto* showcasticonintoolbar) {
delete showcasticonintoolbar_;
showcasticonintoolbar_ = showcasticonintoolbar;
if (showcasticonintoolbar) {
set_has_showcasticonintoolbar();
} else {
clear_has_showcasticonintoolbar();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ShowCastIconInToolbar)
}

// optional .enterprise_management.BooleanPolicyProto MediaRouterCastAllowAllIPs = 439;
inline bool CloudPolicySettings::has_mediaroutercastallowallips() const {
return (_has_bits_[6] & 0x00008000u) != 0;
}
inline void CloudPolicySettings::set_has_mediaroutercastallowallips() {
_has_bits_[6] |= 0x00008000u;
}
inline void CloudPolicySettings::clear_has_mediaroutercastallowallips() {
_has_bits_[6] &= ~0x00008000u;
}
inline void CloudPolicySettings::clear_mediaroutercastallowallips() {
if (mediaroutercastallowallips_ != NULL) mediaroutercastallowallips_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_mediaroutercastallowallips();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::mediaroutercastallowallips() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.MediaRouterCastAllowAllIPs)
return mediaroutercastallowallips_ != NULL ? *mediaroutercastallowallips_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_mediaroutercastallowallips() {
set_has_mediaroutercastallowallips();
if (mediaroutercastallowallips_ == NULL) {
mediaroutercastallowallips_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.MediaRouterCastAllowAllIPs)
return mediaroutercastallowallips_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_mediaroutercastallowallips() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.MediaRouterCastAllowAllIPs)
clear_has_mediaroutercastallowallips();
::enterprise_management::BooleanPolicyProto* temp = mediaroutercastallowallips_;
mediaroutercastallowallips_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_mediaroutercastallowallips(::enterprise_management::BooleanPolicyProto* mediaroutercastallowallips) {
delete mediaroutercastallowallips_;
mediaroutercastallowallips_ = mediaroutercastallowallips;
if (mediaroutercastallowallips) {
set_has_mediaroutercastallowallips();
} else {
clear_has_mediaroutercastallowallips();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.MediaRouterCastAllowAllIPs)
}

// optional .enterprise_management.StringPolicyProto WebRtcUdpPortRange = 341;
inline bool CloudPolicySettings::has_webrtcudpportrange() const {
return (_has_bits_[5] & 0x00000010u) != 0;
}
inline void CloudPolicySettings::set_has_webrtcudpportrange() {
_has_bits_[5] |= 0x00000010u;
}
inline void CloudPolicySettings::clear_has_webrtcudpportrange() {
_has_bits_[5] &= ~0x00000010u;
}
inline void CloudPolicySettings::clear_webrtcudpportrange() {
if (webrtcudpportrange_ != NULL) webrtcudpportrange_->::enterprise_management::StringPolicyProto::Clear();
clear_has_webrtcudpportrange();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::webrtcudpportrange() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
return webrtcudpportrange_ != NULL ? *webrtcudpportrange_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_webrtcudpportrange() {
set_has_webrtcudpportrange();
if (webrtcudpportrange_ == NULL) {
webrtcudpportrange_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
return webrtcudpportrange_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_webrtcudpportrange() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
clear_has_webrtcudpportrange();
::enterprise_management::StringPolicyProto* temp = webrtcudpportrange_;
webrtcudpportrange_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_webrtcudpportrange(::enterprise_management::StringPolicyProto* webrtcudpportrange) {
delete webrtcudpportrange_;
webrtcudpportrange_ = webrtcudpportrange;
if (webrtcudpportrange) {
set_has_webrtcudpportrange();
} else {
clear_has_webrtcudpportrange();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
}

// optional .enterprise_management.BooleanPolicyProto ComponentUpdatesEnabled = 344;
inline bool CloudPolicySettings::has_componentupdatesenabled() const {
return (_has_bits_[5] & 0x00000040u) != 0;
}
inline void CloudPolicySettings::set_has_componentupdatesenabled() {
_has_bits_[5] |= 0x00000040u;
}
inline void CloudPolicySettings::clear_has_componentupdatesenabled() {
_has_bits_[5] &= ~0x00000040u;
}
inline void CloudPolicySettings::clear_componentupdatesenabled() {
if (componentupdatesenabled_ != NULL) componentupdatesenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_componentupdatesenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::componentupdatesenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ComponentUpdatesEnabled)
return componentupdatesenabled_ != NULL ? *componentupdatesenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_componentupdatesenabled() {
set_has_componentupdatesenabled();
if (componentupdatesenabled_ == NULL) {
componentupdatesenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ComponentUpdatesEnabled)
return componentupdatesenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_componentupdatesenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ComponentUpdatesEnabled)
clear_has_componentupdatesenabled();
::enterprise_management::BooleanPolicyProto* temp = componentupdatesenabled_;
componentupdatesenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_componentupdatesenabled(::enterprise_management::BooleanPolicyProto* componentupdatesenabled) {
delete componentupdatesenabled_;
componentupdatesenabled_ = componentupdatesenabled;
if (componentupdatesenabled) {
set_has_componentupdatesenabled();
} else {
clear_has_componentupdatesenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ComponentUpdatesEnabled)
}

// optional .enterprise_management.BooleanPolicyProto BrowserNetworkTimeQueriesEnabled = 372;
inline bool CloudPolicySettings::has_browsernetworktimequeriesenabled() const {
return (_has_bits_[5] & 0x00008000u) != 0;
}
inline void CloudPolicySettings::set_has_browsernetworktimequeriesenabled() {
_has_bits_[5] |= 0x00008000u;
}
inline void CloudPolicySettings::clear_has_browsernetworktimequeriesenabled() {
_has_bits_[5] &= ~0x00008000u;
}
inline void CloudPolicySettings::clear_browsernetworktimequeriesenabled() {
if (browsernetworktimequeriesenabled_ != NULL) browsernetworktimequeriesenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_browsernetworktimequeriesenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::browsernetworktimequeriesenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserNetworkTimeQueriesEnabled)
return browsernetworktimequeriesenabled_ != NULL ? *browsernetworktimequeriesenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_browsernetworktimequeriesenabled() {
set_has_browsernetworktimequeriesenabled();
if (browsernetworktimequeriesenabled_ == NULL) {
browsernetworktimequeriesenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserNetworkTimeQueriesEnabled)
return browsernetworktimequeriesenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_browsernetworktimequeriesenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserNetworkTimeQueriesEnabled)
clear_has_browsernetworktimequeriesenabled();
::enterprise_management::BooleanPolicyProto* temp = browsernetworktimequeriesenabled_;
browsernetworktimequeriesenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_browsernetworktimequeriesenabled(::enterprise_management::BooleanPolicyProto* browsernetworktimequeriesenabled) {
delete browsernetworktimequeriesenabled_;
browsernetworktimequeriesenabled_ = browsernetworktimequeriesenabled;
if (browsernetworktimequeriesenabled) {
set_has_browsernetworktimequeriesenabled();
} else {
clear_has_browsernetworktimequeriesenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserNetworkTimeQueriesEnabled)
}

// optional .enterprise_management.BooleanPolicyProto PrintPreviewUseSystemDefaultPrinter = 375;
inline bool CloudPolicySettings::has_printpreviewusesystemdefaultprinter() const {
return (_has_bits_[5] & 0x00020000u) != 0;
}
inline void CloudPolicySettings::set_has_printpreviewusesystemdefaultprinter() {
_has_bits_[5] |= 0x00020000u;
}
inline void CloudPolicySettings::clear_has_printpreviewusesystemdefaultprinter() {
_has_bits_[5] &= ~0x00020000u;
}
inline void CloudPolicySettings::clear_printpreviewusesystemdefaultprinter() {
if (printpreviewusesystemdefaultprinter_ != NULL) printpreviewusesystemdefaultprinter_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_printpreviewusesystemdefaultprinter();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::printpreviewusesystemdefaultprinter() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PrintPreviewUseSystemDefaultPrinter)
return printpreviewusesystemdefaultprinter_ != NULL ? *printpreviewusesystemdefaultprinter_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_printpreviewusesystemdefaultprinter() {
set_has_printpreviewusesystemdefaultprinter();
if (printpreviewusesystemdefaultprinter_ == NULL) {
printpreviewusesystemdefaultprinter_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PrintPreviewUseSystemDefaultPrinter)
return printpreviewusesystemdefaultprinter_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_printpreviewusesystemdefaultprinter() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PrintPreviewUseSystemDefaultPrinter)
clear_has_printpreviewusesystemdefaultprinter();
::enterprise_management::BooleanPolicyProto* temp = printpreviewusesystemdefaultprinter_;
printpreviewusesystemdefaultprinter_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_printpreviewusesystemdefaultprinter(::enterprise_management::BooleanPolicyProto* printpreviewusesystemdefaultprinter) {
delete printpreviewusesystemdefaultprinter_;
printpreviewusesystemdefaultprinter_ = printpreviewusesystemdefaultprinter;
if (printpreviewusesystemdefaultprinter) {
set_has_printpreviewusesystemdefaultprinter();
} else {
clear_has_printpreviewusesystemdefaultprinter();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PrintPreviewUseSystemDefaultPrinter)
}

// optional .enterprise_management.BooleanPolicyProto CloudPolicyOverridesMachinePolicy = 383;
inline bool CloudPolicySettings::has_cloudpolicyoverridesmachinepolicy() const {
return (_has_bits_[5] & 0x00040000u) != 0;
}
inline void CloudPolicySettings::set_has_cloudpolicyoverridesmachinepolicy() {
_has_bits_[5] |= 0x00040000u;
}
inline void CloudPolicySettings::clear_has_cloudpolicyoverridesmachinepolicy() {
_has_bits_[5] &= ~0x00040000u;
}
inline void CloudPolicySettings::clear_cloudpolicyoverridesmachinepolicy() {
if (cloudpolicyoverridesmachinepolicy_ != NULL) cloudpolicyoverridesmachinepolicy_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_cloudpolicyoverridesmachinepolicy();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::cloudpolicyoverridesmachinepolicy() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudPolicyOverridesMachinePolicy)
return cloudpolicyoverridesmachinepolicy_ != NULL ? *cloudpolicyoverridesmachinepolicy_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_cloudpolicyoverridesmachinepolicy() {
set_has_cloudpolicyoverridesmachinepolicy();
if (cloudpolicyoverridesmachinepolicy_ == NULL) {
cloudpolicyoverridesmachinepolicy_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudPolicyOverridesMachinePolicy)
return cloudpolicyoverridesmachinepolicy_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_cloudpolicyoverridesmachinepolicy() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudPolicyOverridesMachinePolicy)
clear_has_cloudpolicyoverridesmachinepolicy();
::enterprise_management::BooleanPolicyProto* temp = cloudpolicyoverridesmachinepolicy_;
cloudpolicyoverridesmachinepolicy_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_cloudpolicyoverridesmachinepolicy(::enterprise_management::BooleanPolicyProto* cloudpolicyoverridesmachinepolicy) {
delete cloudpolicyoverridesmachinepolicy_;
cloudpolicyoverridesmachinepolicy_ = cloudpolicyoverridesmachinepolicy;
if (cloudpolicyoverridesmachinepolicy) {
set_has_cloudpolicyoverridesmachinepolicy();
} else {
clear_has_cloudpolicyoverridesmachinepolicy();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudPolicyOverridesMachinePolicy)
}

// optional .enterprise_management.BooleanPolicyProto PromptForDownloadLocation = 397;
inline bool CloudPolicySettings::has_promptfordownloadlocation() const {
return (_has_bits_[5] & 0x00400000u) != 0;
}
inline void CloudPolicySettings::set_has_promptfordownloadlocation() {
_has_bits_[5] |= 0x00400000u;
}
inline void CloudPolicySettings::clear_has_promptfordownloadlocation() {
_has_bits_[5] &= ~0x00400000u;
}
inline void CloudPolicySettings::clear_promptfordownloadlocation() {
if (promptfordownloadlocation_ != NULL) promptfordownloadlocation_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_promptfordownloadlocation();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::promptfordownloadlocation() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PromptForDownloadLocation)
return promptfordownloadlocation_ != NULL ? *promptfordownloadlocation_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_promptfordownloadlocation() {
set_has_promptfordownloadlocation();
if (promptfordownloadlocation_ == NULL) {
promptfordownloadlocation_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PromptForDownloadLocation)
return promptfordownloadlocation_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_promptfordownloadlocation() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PromptForDownloadLocation)
clear_has_promptfordownloadlocation();
::enterprise_management::BooleanPolicyProto* temp = promptfordownloadlocation_;
promptfordownloadlocation_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_promptfordownloadlocation(::enterprise_management::BooleanPolicyProto* promptfordownloadlocation) {
delete promptfordownloadlocation_;
promptfordownloadlocation_ = promptfordownloadlocation;
if (promptfordownloadlocation) {
set_has_promptfordownloadlocation();
} else {
clear_has_promptfordownloadlocation();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PromptForDownloadLocation)
}

// optional .enterprise_management.StringPolicyProto IsolateOrigins = 400;
inline bool CloudPolicySettings::has_isolateorigins() const {
return (_has_bits_[5] & 0x00800000u) != 0;
}
inline void CloudPolicySettings::set_has_isolateorigins() {
_has_bits_[5] |= 0x00800000u;
}
inline void CloudPolicySettings::clear_has_isolateorigins() {
_has_bits_[5] &= ~0x00800000u;
}
inline void CloudPolicySettings::clear_isolateorigins() {
if (isolateorigins_ != NULL) isolateorigins_->::enterprise_management::StringPolicyProto::Clear();
clear_has_isolateorigins();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::isolateorigins() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.IsolateOrigins)
return isolateorigins_ != NULL ? *isolateorigins_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_isolateorigins() {
set_has_isolateorigins();
if (isolateorigins_ == NULL) {
isolateorigins_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.IsolateOrigins)
return isolateorigins_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_isolateorigins() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.IsolateOrigins)
clear_has_isolateorigins();
::enterprise_management::StringPolicyProto* temp = isolateorigins_;
isolateorigins_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_isolateorigins(::enterprise_management::StringPolicyProto* isolateorigins) {
delete isolateorigins_;
isolateorigins_ = isolateorigins;
if (isolateorigins) {
set_has_isolateorigins();
} else {
clear_has_isolateorigins();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.IsolateOrigins)
}

// optional .enterprise_management.BooleanPolicyProto SitePerProcess = 401;
inline bool CloudPolicySettings::has_siteperprocess() const {
return (_has_bits_[5] & 0x01000000u) != 0;
}
inline void CloudPolicySettings::set_has_siteperprocess() {
_has_bits_[5] |= 0x01000000u;
}
inline void CloudPolicySettings::clear_has_siteperprocess() {
_has_bits_[5] &= ~0x01000000u;
}
inline void CloudPolicySettings::clear_siteperprocess() {
if (siteperprocess_ != NULL) siteperprocess_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_siteperprocess();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::siteperprocess() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SitePerProcess)
return siteperprocess_ != NULL ? *siteperprocess_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_siteperprocess() {
set_has_siteperprocess();
if (siteperprocess_ == NULL) {
siteperprocess_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SitePerProcess)
return siteperprocess_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_siteperprocess() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SitePerProcess)
clear_has_siteperprocess();
::enterprise_management::BooleanPolicyProto* temp = siteperprocess_;
siteperprocess_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_siteperprocess(::enterprise_management::BooleanPolicyProto* siteperprocess) {
delete siteperprocess_;
siteperprocess_ = siteperprocess;
if (siteperprocess) {
set_has_siteperprocess();
} else {
clear_has_siteperprocess();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SitePerProcess)
}

// optional .enterprise_management.BooleanPolicyProto WebDriverOverridesIncompatiblePolicies = 416;
inline bool CloudPolicySettings::has_webdriveroverridesincompatiblepolicies() const {
return (_has_bits_[6] & 0x00000004u) != 0;
}
inline void CloudPolicySettings::set_has_webdriveroverridesincompatiblepolicies() {
_has_bits_[6] |= 0x00000004u;
}
inline void CloudPolicySettings::clear_has_webdriveroverridesincompatiblepolicies() {
_has_bits_[6] &= ~0x00000004u;
}
inline void CloudPolicySettings::clear_webdriveroverridesincompatiblepolicies() {
if (webdriveroverridesincompatiblepolicies_ != NULL) webdriveroverridesincompatiblepolicies_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_webdriveroverridesincompatiblepolicies();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::webdriveroverridesincompatiblepolicies() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebDriverOverridesIncompatiblePolicies)
return webdriveroverridesincompatiblepolicies_ != NULL ? *webdriveroverridesincompatiblepolicies_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_webdriveroverridesincompatiblepolicies() {
set_has_webdriveroverridesincompatiblepolicies();
if (webdriveroverridesincompatiblepolicies_ == NULL) {
webdriveroverridesincompatiblepolicies_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebDriverOverridesIncompatiblePolicies)
return webdriveroverridesincompatiblepolicies_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_webdriveroverridesincompatiblepolicies() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebDriverOverridesIncompatiblePolicies)
clear_has_webdriveroverridesincompatiblepolicies();
::enterprise_management::BooleanPolicyProto* temp = webdriveroverridesincompatiblepolicies_;
webdriveroverridesincompatiblepolicies_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_webdriveroverridesincompatiblepolicies(::enterprise_management::BooleanPolicyProto* webdriveroverridesincompatiblepolicies) {
delete webdriveroverridesincompatiblepolicies_;
webdriveroverridesincompatiblepolicies_ = webdriveroverridesincompatiblepolicies;
if (webdriveroverridesincompatiblepolicies) {
set_has_webdriveroverridesincompatiblepolicies();
} else {
clear_has_webdriveroverridesincompatiblepolicies();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebDriverOverridesIncompatiblePolicies)
}

// optional .enterprise_management.StringListPolicyProto UnsafelyTreatInsecureOriginAsSecure = 402;
inline bool CloudPolicySettings::has_unsafelytreatinsecureoriginassecure() const {
return (_has_bits_[5] & 0x02000000u) != 0;
}
inline void CloudPolicySettings::set_has_unsafelytreatinsecureoriginassecure() {
_has_bits_[5] |= 0x02000000u;
}
inline void CloudPolicySettings::clear_has_unsafelytreatinsecureoriginassecure() {
_has_bits_[5] &= ~0x02000000u;
}
inline void CloudPolicySettings::clear_unsafelytreatinsecureoriginassecure() {
if (unsafelytreatinsecureoriginassecure_ != NULL) unsafelytreatinsecureoriginassecure_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_unsafelytreatinsecureoriginassecure();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::unsafelytreatinsecureoriginassecure() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.UnsafelyTreatInsecureOriginAsSecure)
return unsafelytreatinsecureoriginassecure_ != NULL ? *unsafelytreatinsecureoriginassecure_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_unsafelytreatinsecureoriginassecure() {
set_has_unsafelytreatinsecureoriginassecure();
if (unsafelytreatinsecureoriginassecure_ == NULL) {
unsafelytreatinsecureoriginassecure_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.UnsafelyTreatInsecureOriginAsSecure)
return unsafelytreatinsecureoriginassecure_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_unsafelytreatinsecureoriginassecure() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.UnsafelyTreatInsecureOriginAsSecure)
clear_has_unsafelytreatinsecureoriginassecure();
::enterprise_management::StringListPolicyProto* temp = unsafelytreatinsecureoriginassecure_;
unsafelytreatinsecureoriginassecure_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_unsafelytreatinsecureoriginassecure(::enterprise_management::StringListPolicyProto* unsafelytreatinsecureoriginassecure) {
delete unsafelytreatinsecureoriginassecure_;
unsafelytreatinsecureoriginassecure_ = unsafelytreatinsecureoriginassecure;
if (unsafelytreatinsecureoriginassecure) {
set_has_unsafelytreatinsecureoriginassecure();
} else {
clear_has_unsafelytreatinsecureoriginassecure();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.UnsafelyTreatInsecureOriginAsSecure)
}

// optional .enterprise_management.StringPolicyProto DefaultDownloadDirectory = 403;
inline bool CloudPolicySettings::has_defaultdownloaddirectory() const {
return (_has_bits_[5] & 0x04000000u) != 0;
}
inline void CloudPolicySettings::set_has_defaultdownloaddirectory() {
_has_bits_[5] |= 0x04000000u;
}
inline void CloudPolicySettings::clear_has_defaultdownloaddirectory() {
_has_bits_[5] &= ~0x04000000u;
}
inline void CloudPolicySettings::clear_defaultdownloaddirectory() {
if (defaultdownloaddirectory_ != NULL) defaultdownloaddirectory_->::enterprise_management::StringPolicyProto::Clear();
clear_has_defaultdownloaddirectory();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultdownloaddirectory() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultDownloadDirectory)
return defaultdownloaddirectory_ != NULL ? *defaultdownloaddirectory_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultdownloaddirectory() {
set_has_defaultdownloaddirectory();
if (defaultdownloaddirectory_ == NULL) {
defaultdownloaddirectory_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultDownloadDirectory)
return defaultdownloaddirectory_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultdownloaddirectory() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultDownloadDirectory)
clear_has_defaultdownloaddirectory();
::enterprise_management::StringPolicyProto* temp = defaultdownloaddirectory_;
defaultdownloaddirectory_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_defaultdownloaddirectory(::enterprise_management::StringPolicyProto* defaultdownloaddirectory) {
delete defaultdownloaddirectory_;
defaultdownloaddirectory_ = defaultdownloaddirectory;
if (defaultdownloaddirectory) {
set_has_defaultdownloaddirectory();
} else {
clear_has_defaultdownloaddirectory();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultDownloadDirectory)
}

// optional .enterprise_management.BooleanPolicyProto AbusiveExperienceInterventionEnforce = 406;
inline bool CloudPolicySettings::has_abusiveexperienceinterventionenforce() const {
return (_has_bits_[5] & 0x10000000u) != 0;
}
inline void CloudPolicySettings::set_has_abusiveexperienceinterventionenforce() {
_has_bits_[5] |= 0x10000000u;
}
inline void CloudPolicySettings::clear_has_abusiveexperienceinterventionenforce() {
_has_bits_[5] &= ~0x10000000u;
}
inline void CloudPolicySettings::clear_abusiveexperienceinterventionenforce() {
if (abusiveexperienceinterventionenforce_ != NULL) abusiveexperienceinterventionenforce_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_abusiveexperienceinterventionenforce();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::abusiveexperienceinterventionenforce() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AbusiveExperienceInterventionEnforce)
return abusiveexperienceinterventionenforce_ != NULL ? *abusiveexperienceinterventionenforce_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_abusiveexperienceinterventionenforce() {
set_has_abusiveexperienceinterventionenforce();
if (abusiveexperienceinterventionenforce_ == NULL) {
abusiveexperienceinterventionenforce_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AbusiveExperienceInterventionEnforce)
return abusiveexperienceinterventionenforce_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_abusiveexperienceinterventionenforce() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AbusiveExperienceInterventionEnforce)
clear_has_abusiveexperienceinterventionenforce();
::enterprise_management::BooleanPolicyProto* temp = abusiveexperienceinterventionenforce_;
abusiveexperienceinterventionenforce_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_abusiveexperienceinterventionenforce(::enterprise_management::BooleanPolicyProto* abusiveexperienceinterventionenforce) {
delete abusiveexperienceinterventionenforce_;
abusiveexperienceinterventionenforce_ = abusiveexperienceinterventionenforce;
if (abusiveexperienceinterventionenforce) {
set_has_abusiveexperienceinterventionenforce();
} else {
clear_has_abusiveexperienceinterventionenforce();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AbusiveExperienceInterventionEnforce)
}

// optional .enterprise_management.StringListPolicyProto SpellcheckLanguage = 407;
inline bool CloudPolicySettings::has_spellchecklanguage() const {
return (_has_bits_[5] & 0x20000000u) != 0;
}
inline void CloudPolicySettings::set_has_spellchecklanguage() {
_has_bits_[5] |= 0x20000000u;
}
inline void CloudPolicySettings::clear_has_spellchecklanguage() {
_has_bits_[5] &= ~0x20000000u;
}
inline void CloudPolicySettings::clear_spellchecklanguage() {
if (spellchecklanguage_ != NULL) spellchecklanguage_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_spellchecklanguage();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::spellchecklanguage() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SpellcheckLanguage)
return spellchecklanguage_ != NULL ? *spellchecklanguage_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_spellchecklanguage() {
set_has_spellchecklanguage();
if (spellchecklanguage_ == NULL) {
spellchecklanguage_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SpellcheckLanguage)
return spellchecklanguage_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_spellchecklanguage() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SpellcheckLanguage)
clear_has_spellchecklanguage();
::enterprise_management::StringListPolicyProto* temp = spellchecklanguage_;
spellchecklanguage_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_spellchecklanguage(::enterprise_management::StringListPolicyProto* spellchecklanguage) {
delete spellchecklanguage_;
spellchecklanguage_ = spellchecklanguage;
if (spellchecklanguage) {
set_has_spellchecklanguage();
} else {
clear_has_spellchecklanguage();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SpellcheckLanguage)
}

// optional .enterprise_management.BooleanPolicyProto SpellcheckEnabled = 410;
inline bool CloudPolicySettings::has_spellcheckenabled() const {
return (_has_bits_[5] & 0x40000000u) != 0;
}
inline void CloudPolicySettings::set_has_spellcheckenabled() {
_has_bits_[5] |= 0x40000000u;
}
inline void CloudPolicySettings::clear_has_spellcheckenabled() {
_has_bits_[5] &= ~0x40000000u;
}
inline void CloudPolicySettings::clear_spellcheckenabled() {
if (spellcheckenabled_ != NULL) spellcheckenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_spellcheckenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::spellcheckenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SpellcheckEnabled)
return spellcheckenabled_ != NULL ? *spellcheckenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_spellcheckenabled() {
set_has_spellcheckenabled();
if (spellcheckenabled_ == NULL) {
spellcheckenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SpellcheckEnabled)
return spellcheckenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_spellcheckenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SpellcheckEnabled)
clear_has_spellcheckenabled();
::enterprise_management::BooleanPolicyProto* temp = spellcheckenabled_;
spellcheckenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_spellcheckenabled(::enterprise_management::BooleanPolicyProto* spellcheckenabled) {
delete spellcheckenabled_;
spellcheckenabled_ = spellcheckenabled;
if (spellcheckenabled) {
set_has_spellcheckenabled();
} else {
clear_has_spellcheckenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SpellcheckEnabled)
}

// optional .enterprise_management.IntegerPolicyProto AdsSettingForIntrusiveAdsSites = 411;
inline bool CloudPolicySettings::has_adssettingforintrusiveadssites() const {
return (_has_bits_[5] & 0x80000000u) != 0;
}
inline void CloudPolicySettings::set_has_adssettingforintrusiveadssites() {
_has_bits_[5] |= 0x80000000u;
}
inline void CloudPolicySettings::clear_has_adssettingforintrusiveadssites() {
_has_bits_[5] &= ~0x80000000u;
}
inline void CloudPolicySettings::clear_adssettingforintrusiveadssites() {
if (adssettingforintrusiveadssites_ != NULL) adssettingforintrusiveadssites_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_adssettingforintrusiveadssites();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::adssettingforintrusiveadssites() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AdsSettingForIntrusiveAdsSites)
return adssettingforintrusiveadssites_ != NULL ? *adssettingforintrusiveadssites_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_adssettingforintrusiveadssites() {
set_has_adssettingforintrusiveadssites();
if (adssettingforintrusiveadssites_ == NULL) {
adssettingforintrusiveadssites_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AdsSettingForIntrusiveAdsSites)
return adssettingforintrusiveadssites_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_adssettingforintrusiveadssites() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AdsSettingForIntrusiveAdsSites)
clear_has_adssettingforintrusiveadssites();
::enterprise_management::IntegerPolicyProto* temp = adssettingforintrusiveadssites_;
adssettingforintrusiveadssites_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_adssettingforintrusiveadssites(::enterprise_management::IntegerPolicyProto* adssettingforintrusiveadssites) {
delete adssettingforintrusiveadssites_;
adssettingforintrusiveadssites_ = adssettingforintrusiveadssites;
if (adssettingforintrusiveadssites) {
set_has_adssettingforintrusiveadssites();
} else {
clear_has_adssettingforintrusiveadssites();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AdsSettingForIntrusiveAdsSites)
}

// optional .enterprise_management.IntegerPolicyProto PasswordProtectionWarningTrigger = 413;
inline bool CloudPolicySettings::has_passwordprotectionwarningtrigger() const {
return (_has_bits_[6] & 0x00000001u) != 0;
}
inline void CloudPolicySettings::set_has_passwordprotectionwarningtrigger() {
_has_bits_[6] |= 0x00000001u;
}
inline void CloudPolicySettings::clear_has_passwordprotectionwarningtrigger() {
_has_bits_[6] &= ~0x00000001u;
}
inline void CloudPolicySettings::clear_passwordprotectionwarningtrigger() {
if (passwordprotectionwarningtrigger_ != NULL) passwordprotectionwarningtrigger_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_passwordprotectionwarningtrigger();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::passwordprotectionwarningtrigger() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PasswordProtectionWarningTrigger)
return passwordprotectionwarningtrigger_ != NULL ? *passwordprotectionwarningtrigger_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_passwordprotectionwarningtrigger() {
set_has_passwordprotectionwarningtrigger();
if (passwordprotectionwarningtrigger_ == NULL) {
passwordprotectionwarningtrigger_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PasswordProtectionWarningTrigger)
return passwordprotectionwarningtrigger_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_passwordprotectionwarningtrigger() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PasswordProtectionWarningTrigger)
clear_has_passwordprotectionwarningtrigger();
::enterprise_management::IntegerPolicyProto* temp = passwordprotectionwarningtrigger_;
passwordprotectionwarningtrigger_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_passwordprotectionwarningtrigger(::enterprise_management::IntegerPolicyProto* passwordprotectionwarningtrigger) {
delete passwordprotectionwarningtrigger_;
passwordprotectionwarningtrigger_ = passwordprotectionwarningtrigger;
if (passwordprotectionwarningtrigger) {
set_has_passwordprotectionwarningtrigger();
} else {
clear_has_passwordprotectionwarningtrigger();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PasswordProtectionWarningTrigger)
}

// optional .enterprise_management.IntegerPolicyProto RelaunchNotification = 421;
inline bool CloudPolicySettings::has_relaunchnotification() const {
return (_has_bits_[6] & 0x00000008u) != 0;
}
inline void CloudPolicySettings::set_has_relaunchnotification() {
_has_bits_[6] |= 0x00000008u;
}
inline void CloudPolicySettings::clear_has_relaunchnotification() {
_has_bits_[6] &= ~0x00000008u;
}
inline void CloudPolicySettings::clear_relaunchnotification() {
if (relaunchnotification_ != NULL) relaunchnotification_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_relaunchnotification();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::relaunchnotification() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RelaunchNotification)
return relaunchnotification_ != NULL ? *relaunchnotification_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_relaunchnotification() {
set_has_relaunchnotification();
if (relaunchnotification_ == NULL) {
relaunchnotification_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RelaunchNotification)
return relaunchnotification_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_relaunchnotification() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RelaunchNotification)
clear_has_relaunchnotification();
::enterprise_management::IntegerPolicyProto* temp = relaunchnotification_;
relaunchnotification_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_relaunchnotification(::enterprise_management::IntegerPolicyProto* relaunchnotification) {
delete relaunchnotification_;
relaunchnotification_ = relaunchnotification;
if (relaunchnotification) {
set_has_relaunchnotification();
} else {
clear_has_relaunchnotification();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RelaunchNotification)
}

// optional .enterprise_management.IntegerPolicyProto RelaunchNotificationPeriod = 422;
inline bool CloudPolicySettings::has_relaunchnotificationperiod() const {
return (_has_bits_[6] & 0x00000010u) != 0;
}
inline void CloudPolicySettings::set_has_relaunchnotificationperiod() {
_has_bits_[6] |= 0x00000010u;
}
inline void CloudPolicySettings::clear_has_relaunchnotificationperiod() {
_has_bits_[6] &= ~0x00000010u;
}
inline void CloudPolicySettings::clear_relaunchnotificationperiod() {
if (relaunchnotificationperiod_ != NULL) relaunchnotificationperiod_->::enterprise_management::IntegerPolicyProto::Clear();
clear_has_relaunchnotificationperiod();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::relaunchnotificationperiod() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RelaunchNotificationPeriod)
return relaunchnotificationperiod_ != NULL ? *relaunchnotificationperiod_
: *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_relaunchnotificationperiod() {
set_has_relaunchnotificationperiod();
if (relaunchnotificationperiod_ == NULL) {
relaunchnotificationperiod_ = new ::enterprise_management::IntegerPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RelaunchNotificationPeriod)
return relaunchnotificationperiod_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_relaunchnotificationperiod() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RelaunchNotificationPeriod)
clear_has_relaunchnotificationperiod();
::enterprise_management::IntegerPolicyProto* temp = relaunchnotificationperiod_;
relaunchnotificationperiod_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_relaunchnotificationperiod(::enterprise_management::IntegerPolicyProto* relaunchnotificationperiod) {
delete relaunchnotificationperiod_;
relaunchnotificationperiod_ = relaunchnotificationperiod;
if (relaunchnotificationperiod) {
set_has_relaunchnotificationperiod();
} else {
clear_has_relaunchnotificationperiod();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RelaunchNotificationPeriod)
}

// optional .enterprise_management.StringListPolicyProto SafeBrowsingWhitelistDomains = 424;
inline bool CloudPolicySettings::has_safebrowsingwhitelistdomains() const {
return (_has_bits_[6] & 0x00000020u) != 0;
}
inline void CloudPolicySettings::set_has_safebrowsingwhitelistdomains() {
_has_bits_[6] |= 0x00000020u;
}
inline void CloudPolicySettings::clear_has_safebrowsingwhitelistdomains() {
_has_bits_[6] &= ~0x00000020u;
}
inline void CloudPolicySettings::clear_safebrowsingwhitelistdomains() {
if (safebrowsingwhitelistdomains_ != NULL) safebrowsingwhitelistdomains_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_safebrowsingwhitelistdomains();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::safebrowsingwhitelistdomains() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SafeBrowsingWhitelistDomains)
return safebrowsingwhitelistdomains_ != NULL ? *safebrowsingwhitelistdomains_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_safebrowsingwhitelistdomains() {
set_has_safebrowsingwhitelistdomains();
if (safebrowsingwhitelistdomains_ == NULL) {
safebrowsingwhitelistdomains_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SafeBrowsingWhitelistDomains)
return safebrowsingwhitelistdomains_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_safebrowsingwhitelistdomains() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SafeBrowsingWhitelistDomains)
clear_has_safebrowsingwhitelistdomains();
::enterprise_management::StringListPolicyProto* temp = safebrowsingwhitelistdomains_;
safebrowsingwhitelistdomains_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_safebrowsingwhitelistdomains(::enterprise_management::StringListPolicyProto* safebrowsingwhitelistdomains) {
delete safebrowsingwhitelistdomains_;
safebrowsingwhitelistdomains_ = safebrowsingwhitelistdomains;
if (safebrowsingwhitelistdomains) {
set_has_safebrowsingwhitelistdomains();
} else {
clear_has_safebrowsingwhitelistdomains();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingWhitelistDomains)
}

// optional .enterprise_management.StringListPolicyProto PasswordProtectionLoginURLs = 425;
inline bool CloudPolicySettings::has_passwordprotectionloginurls() const {
return (_has_bits_[6] & 0x00000040u) != 0;
}
inline void CloudPolicySettings::set_has_passwordprotectionloginurls() {
_has_bits_[6] |= 0x00000040u;
}
inline void CloudPolicySettings::clear_has_passwordprotectionloginurls() {
_has_bits_[6] &= ~0x00000040u;
}
inline void CloudPolicySettings::clear_passwordprotectionloginurls() {
if (passwordprotectionloginurls_ != NULL) passwordprotectionloginurls_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_passwordprotectionloginurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::passwordprotectionloginurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PasswordProtectionLoginURLs)
return passwordprotectionloginurls_ != NULL ? *passwordprotectionloginurls_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_passwordprotectionloginurls() {
set_has_passwordprotectionloginurls();
if (passwordprotectionloginurls_ == NULL) {
passwordprotectionloginurls_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PasswordProtectionLoginURLs)
return passwordprotectionloginurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_passwordprotectionloginurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PasswordProtectionLoginURLs)
clear_has_passwordprotectionloginurls();
::enterprise_management::StringListPolicyProto* temp = passwordprotectionloginurls_;
passwordprotectionloginurls_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_passwordprotectionloginurls(::enterprise_management::StringListPolicyProto* passwordprotectionloginurls) {
delete passwordprotectionloginurls_;
passwordprotectionloginurls_ = passwordprotectionloginurls;
if (passwordprotectionloginurls) {
set_has_passwordprotectionloginurls();
} else {
clear_has_passwordprotectionloginurls();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PasswordProtectionLoginURLs)
}

// optional .enterprise_management.StringPolicyProto PasswordProtectionChangePasswordURL = 426;
inline bool CloudPolicySettings::has_passwordprotectionchangepasswordurl() const {
return (_has_bits_[6] & 0x00000080u) != 0;
}
inline void CloudPolicySettings::set_has_passwordprotectionchangepasswordurl() {
_has_bits_[6] |= 0x00000080u;
}
inline void CloudPolicySettings::clear_has_passwordprotectionchangepasswordurl() {
_has_bits_[6] &= ~0x00000080u;
}
inline void CloudPolicySettings::clear_passwordprotectionchangepasswordurl() {
if (passwordprotectionchangepasswordurl_ != NULL) passwordprotectionchangepasswordurl_->::enterprise_management::StringPolicyProto::Clear();
clear_has_passwordprotectionchangepasswordurl();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::passwordprotectionchangepasswordurl() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PasswordProtectionChangePasswordURL)
return passwordprotectionchangepasswordurl_ != NULL ? *passwordprotectionchangepasswordurl_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_passwordprotectionchangepasswordurl() {
set_has_passwordprotectionchangepasswordurl();
if (passwordprotectionchangepasswordurl_ == NULL) {
passwordprotectionchangepasswordurl_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PasswordProtectionChangePasswordURL)
return passwordprotectionchangepasswordurl_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_passwordprotectionchangepasswordurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PasswordProtectionChangePasswordURL)
clear_has_passwordprotectionchangepasswordurl();
::enterprise_management::StringPolicyProto* temp = passwordprotectionchangepasswordurl_;
passwordprotectionchangepasswordurl_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_passwordprotectionchangepasswordurl(::enterprise_management::StringPolicyProto* passwordprotectionchangepasswordurl) {
delete passwordprotectionchangepasswordurl_;
passwordprotectionchangepasswordurl_ = passwordprotectionchangepasswordurl;
if (passwordprotectionchangepasswordurl) {
set_has_passwordprotectionchangepasswordurl();
} else {
clear_has_passwordprotectionchangepasswordurl();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PasswordProtectionChangePasswordURL)
}

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingExtendedReportingEnabled = 431;
inline bool CloudPolicySettings::has_safebrowsingextendedreportingenabled() const {
return (_has_bits_[6] & 0x00000200u) != 0;
}
inline void CloudPolicySettings::set_has_safebrowsingextendedreportingenabled() {
_has_bits_[6] |= 0x00000200u;
}
inline void CloudPolicySettings::clear_has_safebrowsingextendedreportingenabled() {
_has_bits_[6] &= ~0x00000200u;
}
inline void CloudPolicySettings::clear_safebrowsingextendedreportingenabled() {
if (safebrowsingextendedreportingenabled_ != NULL) safebrowsingextendedreportingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_safebrowsingextendedreportingenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::safebrowsingextendedreportingenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingEnabled)
return safebrowsingextendedreportingenabled_ != NULL ? *safebrowsingextendedreportingenabled_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_safebrowsingextendedreportingenabled() {
set_has_safebrowsingextendedreportingenabled();
if (safebrowsingextendedreportingenabled_ == NULL) {
safebrowsingextendedreportingenabled_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingEnabled)
return safebrowsingextendedreportingenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_safebrowsingextendedreportingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingEnabled)
clear_has_safebrowsingextendedreportingenabled();
::enterprise_management::BooleanPolicyProto* temp = safebrowsingextendedreportingenabled_;
safebrowsingextendedreportingenabled_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_safebrowsingextendedreportingenabled(::enterprise_management::BooleanPolicyProto* safebrowsingextendedreportingenabled) {
delete safebrowsingextendedreportingenabled_;
safebrowsingextendedreportingenabled_ = safebrowsingextendedreportingenabled;
if (safebrowsingextendedreportingenabled) {
set_has_safebrowsingextendedreportingenabled();
} else {
clear_has_safebrowsingextendedreportingenabled();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingEnabled)
}

// optional .enterprise_management.StringPolicyProto MachineLevelUserCloudPolicyEnrollmentToken = 430;
inline bool CloudPolicySettings::has_machinelevelusercloudpolicyenrollmenttoken() const {
return (_has_bits_[6] & 0x00000100u) != 0;
}
inline void CloudPolicySettings::set_has_machinelevelusercloudpolicyenrollmenttoken() {
_has_bits_[6] |= 0x00000100u;
}
inline void CloudPolicySettings::clear_has_machinelevelusercloudpolicyenrollmenttoken() {
_has_bits_[6] &= ~0x00000100u;
}
inline void CloudPolicySettings::clear_machinelevelusercloudpolicyenrollmenttoken() {
if (machinelevelusercloudpolicyenrollmenttoken_ != NULL) machinelevelusercloudpolicyenrollmenttoken_->::enterprise_management::StringPolicyProto::Clear();
clear_has_machinelevelusercloudpolicyenrollmenttoken();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::machinelevelusercloudpolicyenrollmenttoken() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.MachineLevelUserCloudPolicyEnrollmentToken)
return machinelevelusercloudpolicyenrollmenttoken_ != NULL ? *machinelevelusercloudpolicyenrollmenttoken_
: *::enterprise_management::StringPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_machinelevelusercloudpolicyenrollmenttoken() {
set_has_machinelevelusercloudpolicyenrollmenttoken();
if (machinelevelusercloudpolicyenrollmenttoken_ == NULL) {
machinelevelusercloudpolicyenrollmenttoken_ = new ::enterprise_management::StringPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.MachineLevelUserCloudPolicyEnrollmentToken)
return machinelevelusercloudpolicyenrollmenttoken_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_machinelevelusercloudpolicyenrollmenttoken() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.MachineLevelUserCloudPolicyEnrollmentToken)
clear_has_machinelevelusercloudpolicyenrollmenttoken();
::enterprise_management::StringPolicyProto* temp = machinelevelusercloudpolicyenrollmenttoken_;
machinelevelusercloudpolicyenrollmenttoken_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_machinelevelusercloudpolicyenrollmenttoken(::enterprise_management::StringPolicyProto* machinelevelusercloudpolicyenrollmenttoken) {
delete machinelevelusercloudpolicyenrollmenttoken_;
machinelevelusercloudpolicyenrollmenttoken_ = machinelevelusercloudpolicyenrollmenttoken;
if (machinelevelusercloudpolicyenrollmenttoken) {
set_has_machinelevelusercloudpolicyenrollmenttoken();
} else {
clear_has_machinelevelusercloudpolicyenrollmenttoken();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.MachineLevelUserCloudPolicyEnrollmentToken)
}

// optional .enterprise_management.BooleanPolicyProto AutoplayAllowed = 432;
inline bool CloudPolicySettings::has_autoplayallowed() const {
return (_has_bits_[6] & 0x00000400u) != 0;
}
inline void CloudPolicySettings::set_has_autoplayallowed() {
_has_bits_[6] |= 0x00000400u;
}
inline void CloudPolicySettings::clear_has_autoplayallowed() {
_has_bits_[6] &= ~0x00000400u;
}
inline void CloudPolicySettings::clear_autoplayallowed() {
if (autoplayallowed_ != NULL) autoplayallowed_->::enterprise_management::BooleanPolicyProto::Clear();
clear_has_autoplayallowed();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::autoplayallowed() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutoplayAllowed)
return autoplayallowed_ != NULL ? *autoplayallowed_
: *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_autoplayallowed() {
set_has_autoplayallowed();
if (autoplayallowed_ == NULL) {
autoplayallowed_ = new ::enterprise_management::BooleanPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutoplayAllowed)
return autoplayallowed_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_autoplayallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutoplayAllowed)
clear_has_autoplayallowed();
::enterprise_management::BooleanPolicyProto* temp = autoplayallowed_;
autoplayallowed_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_autoplayallowed(::enterprise_management::BooleanPolicyProto* autoplayallowed) {
delete autoplayallowed_;
autoplayallowed_ = autoplayallowed;
if (autoplayallowed) {
set_has_autoplayallowed();
} else {
clear_has_autoplayallowed();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutoplayAllowed)
}

// optional .enterprise_management.StringListPolicyProto AutoplayWhitelist = 433;
inline bool CloudPolicySettings::has_autoplaywhitelist() const {
return (_has_bits_[6] & 0x00000800u) != 0;
}
inline void CloudPolicySettings::set_has_autoplaywhitelist() {
_has_bits_[6] |= 0x00000800u;
}
inline void CloudPolicySettings::clear_has_autoplaywhitelist() {
_has_bits_[6] &= ~0x00000800u;
}
inline void CloudPolicySettings::clear_autoplaywhitelist() {
if (autoplaywhitelist_ != NULL) autoplaywhitelist_->::enterprise_management::StringListPolicyProto::Clear();
clear_has_autoplaywhitelist();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::autoplaywhitelist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutoplayWhitelist)
return autoplaywhitelist_ != NULL ? *autoplaywhitelist_
: *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_autoplaywhitelist() {
set_has_autoplaywhitelist();
if (autoplaywhitelist_ == NULL) {
autoplaywhitelist_ = new ::enterprise_management::StringListPolicyProto;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutoplayWhitelist)
return autoplaywhitelist_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_autoplaywhitelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutoplayWhitelist)
clear_has_autoplaywhitelist();
::enterprise_management::StringListPolicyProto* temp = autoplaywhitelist_;
autoplaywhitelist_ = NULL;
return temp;
}
inline void CloudPolicySettings::set_allocated_autoplaywhitelist(::enterprise_management::StringListPolicyProto* autoplaywhitelist) {
delete autoplaywhitelist_;
autoplaywhitelist_ = autoplaywhitelist;
if (autoplaywhitelist) {
set_has_autoplaywhitelist();
} else {
clear_has_autoplaywhitelist();
}
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutoplayWhitelist)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace enterprise_management

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::enterprise_management::PolicyOptions_PolicyMode> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cloud_5fpolicy_2eproto__INCLUDED
