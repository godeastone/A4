// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cloud_policy.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cloud_policy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace enterprise_management {
class StringListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StringList> {
} _StringList_default_instance_;
class PolicyOptionsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PolicyOptions> {
} _PolicyOptions_default_instance_;
class BooleanPolicyProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BooleanPolicyProto> {
} _BooleanPolicyProto_default_instance_;
class IntegerPolicyProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IntegerPolicyProto> {
} _IntegerPolicyProto_default_instance_;
class StringPolicyProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StringPolicyProto> {
} _StringPolicyProto_default_instance_;
class StringListPolicyProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StringListPolicyProto> {
} _StringListPolicyProto_default_instance_;
class CloudPolicySettingsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CloudPolicySettings> {
} _CloudPolicySettings_default_instance_;

namespace protobuf_cloud_5fpolicy_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _StringList_default_instance_.Shutdown();
  _PolicyOptions_default_instance_.Shutdown();
  _BooleanPolicyProto_default_instance_.Shutdown();
  _IntegerPolicyProto_default_instance_.Shutdown();
  _StringPolicyProto_default_instance_.Shutdown();
  _StringListPolicyProto_default_instance_.Shutdown();
  _CloudPolicySettings_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _StringList_default_instance_.DefaultConstruct();
  _PolicyOptions_default_instance_.DefaultConstruct();
  _BooleanPolicyProto_default_instance_.DefaultConstruct();
  _IntegerPolicyProto_default_instance_.DefaultConstruct();
  _StringPolicyProto_default_instance_.DefaultConstruct();
  _StringListPolicyProto_default_instance_.DefaultConstruct();
  _CloudPolicySettings_default_instance_.DefaultConstruct();
  _BooleanPolicyProto_default_instance_.get_mutable()->policy_options_ = const_cast< ::enterprise_management::PolicyOptions*>(
      ::enterprise_management::PolicyOptions::internal_default_instance());
  _IntegerPolicyProto_default_instance_.get_mutable()->policy_options_ = const_cast< ::enterprise_management::PolicyOptions*>(
      ::enterprise_management::PolicyOptions::internal_default_instance());
  _StringPolicyProto_default_instance_.get_mutable()->policy_options_ = const_cast< ::enterprise_management::PolicyOptions*>(
      ::enterprise_management::PolicyOptions::internal_default_instance());
  _StringListPolicyProto_default_instance_.get_mutable()->policy_options_ = const_cast< ::enterprise_management::PolicyOptions*>(
      ::enterprise_management::PolicyOptions::internal_default_instance());
  _StringListPolicyProto_default_instance_.get_mutable()->value_ = const_cast< ::enterprise_management::StringList*>(
      ::enterprise_management::StringList::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->homepagelocation_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->homepageisnewtabpage_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->newtabpagelocation_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultbrowsersettingenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->alternateerrorpagesenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->searchsuggestenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->networkpredictionoptions_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->wpadquickcheckenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->disabledschemes_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->http09onnondefaultportsenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->javascriptenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->incognitoenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->incognitomodeavailability_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->savingbrowserhistorydisabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->allowdeletingbrowserhistory_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->allowdinosaureasteregg_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->remoteaccesshostclientdomain_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->remoteaccesshostclientdomainlist_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->remoteaccesshostfirewalltraversal_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->remoteaccesshostdomain_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->remoteaccesshostdomainlist_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->remoteaccesshosttalkgadgetprefix_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->remoteaccesshostrequirecurtain_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->remoteaccesshostallowclientpairing_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->remoteaccesshostallowgnubbyauth_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->remoteaccesshostallowrelayedconnection_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->remoteaccesshostudpportrange_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->remoteaccesshostmatchusername_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->remoteaccesshosttokenurl_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->remoteaccesshosttokenvalidationurl_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->remoteaccesshosttokenvalidationcertificateissuer_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->printingenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->cloudprintproxyenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->forcesafesearch_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->forcegooglesafesearch_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->forceyoutubesafetymode_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->forceyoutuberestrict_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->safebrowsingenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->metricsreportingenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->passwordmanagerenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->autofillenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->autofillcreditcardenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->disabledplugins_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->enabledplugins_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->disabledpluginsexceptions_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->alwaysopenpdfexternally_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->syncdisabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->signinallowed_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->diskcachedir_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->diskcachesize_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->mediacachesize_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->downloadrestrictions_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->downloaddirectory_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->proxymode_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->proxyservermode_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->proxyserver_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->proxypacurl_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->proxybypasslist_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->proxysettings_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->authschemes_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->disableauthnegotiatecnamelookup_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->enableauthnegotiateport_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->authserverwhitelist_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->authnegotiatedelegatewhitelist_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->gssapilibraryname_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->allowcrossoriginauthprompt_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->ntlmv2enabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->extensioninstallblacklist_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->extensioninstallwhitelist_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->extensioninstallforcelist_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->extensioninstallsources_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->extensionallowedtypes_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->extensionsettings_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->showhomebutton_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->developertoolsdisabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->developertoolsavailability_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->restoreonstartup_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->restoreonstartupurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->blockthirdpartycookies_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultsearchproviderenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultsearchprovidername_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultsearchproviderkeyword_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultsearchprovidersearchurl_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultsearchprovidersuggesturl_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultsearchprovidericonurl_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultsearchproviderencodings_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultsearchprovideralternateurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultsearchproviderimageurl_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultsearchprovidernewtaburl_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultsearchprovidersearchurlpostparams_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultsearchprovidersuggesturlpostparams_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultsearchproviderimageurlpostparams_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultcookiessetting_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultimagessetting_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultjavascriptsetting_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultpluginssetting_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultpopupssetting_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultnotificationssetting_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultgeolocationsetting_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultmediastreamsetting_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultwebbluetoothguardsetting_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultwebusbguardsetting_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->webusbaskforurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->webusbblockedforurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->autoselectcertificateforurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->cookiesallowedforurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->cookiesblockedforurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->cookiessessiononlyforurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->imagesallowedforurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->imagesblockedforurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->javascriptallowedforurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->javascriptblockedforurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->pluginsallowedforurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->pluginsblockedforurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->popupsallowedforurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->registeredprotocolhandlers_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->popupsblockedforurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->notificationsallowedforurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->notificationsblockedforurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->nativemessagingblacklist_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->nativemessagingwhitelist_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->nativemessaginguserlevelhosts_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->disable3dapis_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->maxinvalidationfetchdelay_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->translateenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->allowoutdatedplugins_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->runallflashinallowmode_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->bookmarkbarenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->editbookmarksenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->showappsshortcutinbookmarkbar_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->allowfileselectiondialogs_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->securitykeypermitattestation_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->importbookmarks_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->importhistory_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->importhomepage_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->importsearchengine_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->importsavedpasswords_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->importautofillformdata_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->maxconnectionsperproxy_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->urlblacklist_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->urlwhitelist_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->cloudprintsubmitenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->disableprintpreview_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultprinterselection_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->enableonlinerevocationchecks_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->requireonlinerevocationchecksforlocalanchors_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->enablesha1forlocalanchors_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->enablesymanteclegacyinfrastructure_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->forceephemeralprofiles_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->backgroundmodeenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->restrictsignintopattern_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->disablesafebrowsingproceedanyway_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->safebrowsingextendedreportingoptinallowed_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->spellcheckserviceenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->audiocaptureallowed_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->audiocaptureallowedurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->videocaptureallowed_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->videocaptureallowedurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->disablescreenshots_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->builtindnsclientenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->fullscreenallowed_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->hidewebstoreicon_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->variationsrestrictparameter_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->contentpackdefaultfilteringbehavior_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->contentpackmanualbehaviorhosts_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->contentpackmanualbehaviorurls_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->supervisedusercreationenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->managedbookmarks_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->enabledeprecatedwebplatformfeatures_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->browserguestmodeenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->browseraddpersonenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->sslversionmin_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->sslversionmax_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->certificatetransparencyenforcementdisabledforurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->certificatetransparencyenforcementdisabledforcas_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->certificatetransparencyenforcementdisabledforlegacycas_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->sslerroroverrideallowed_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->quicallowed_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->hardwareaccelerationmodeenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->suppressunsupportedoswarning_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->taskmanagerendprocessenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->alloweddomainsforapps_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->pachttpsurlstrippingenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->enablemediarouter_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->showcasticonintoolbar_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->mediaroutercastallowallips_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->webrtcudpportrange_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->componentupdatesenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->browsernetworktimequeriesenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->printpreviewusesystemdefaultprinter_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->cloudpolicyoverridesmachinepolicy_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->promptfordownloadlocation_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->isolateorigins_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->siteperprocess_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->webdriveroverridesincompatiblepolicies_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->unsafelytreatinsecureoriginassecure_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->defaultdownloaddirectory_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->abusiveexperienceinterventionenforce_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->spellchecklanguage_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->spellcheckenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->adssettingforintrusiveadssites_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->passwordprotectionwarningtrigger_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->relaunchnotification_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->relaunchnotificationperiod_ = const_cast< ::enterprise_management::IntegerPolicyProto*>(
      ::enterprise_management::IntegerPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->safebrowsingwhitelistdomains_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->passwordprotectionloginurls_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->passwordprotectionchangepasswordurl_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->safebrowsingextendedreportingenabled_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->machinelevelusercloudpolicyenrollmenttoken_ = const_cast< ::enterprise_management::StringPolicyProto*>(
      ::enterprise_management::StringPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->autoplayallowed_ = const_cast< ::enterprise_management::BooleanPolicyProto*>(
      ::enterprise_management::BooleanPolicyProto::internal_default_instance());
  _CloudPolicySettings_default_instance_.get_mutable()->autoplaywhitelist_ = const_cast< ::enterprise_management::StringListPolicyProto*>(
      ::enterprise_management::StringListPolicyProto::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_cloud_5fpolicy_2eproto

bool PolicyOptions_PolicyMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PolicyOptions_PolicyMode PolicyOptions::MANDATORY;
const PolicyOptions_PolicyMode PolicyOptions::RECOMMENDED;
const PolicyOptions_PolicyMode PolicyOptions::UNSET;
const PolicyOptions_PolicyMode PolicyOptions::PolicyMode_MIN;
const PolicyOptions_PolicyMode PolicyOptions::PolicyMode_MAX;
const int PolicyOptions::PolicyMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringList::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringList::StringList()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cloud_5fpolicy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:enterprise_management.StringList)
}
StringList::StringList(const StringList& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:enterprise_management.StringList)
}

void StringList::SharedCtor() {
  _cached_size_ = 0;
}

StringList::~StringList() {
  // @@protoc_insertion_point(destructor:enterprise_management.StringList)
  SharedDtor();
}

void StringList::SharedDtor() {
}

void StringList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StringList& StringList::default_instance() {
  protobuf_cloud_5fpolicy_2eproto::InitDefaults();
  return *internal_default_instance();
}

StringList* StringList::New(::google::protobuf::Arena* arena) const {
  StringList* n = new StringList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringList::Clear() {
// @@protoc_insertion_point(message_clear_start:enterprise_management.StringList)
  entries_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StringList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:enterprise_management.StringList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:enterprise_management.StringList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:enterprise_management.StringList)
  return false;
#undef DO_
}

void StringList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:enterprise_management.StringList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string entries = 1;
  for (int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->entries(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:enterprise_management.StringList)
}

size_t StringList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:enterprise_management.StringList)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated string entries = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->entries_size());
  for (int i = 0, n = this->entries_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->entries(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringList::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StringList*>(&from));
}

void StringList::MergeFrom(const StringList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:enterprise_management.StringList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void StringList::CopyFrom(const StringList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:enterprise_management.StringList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringList::IsInitialized() const {
  return true;
}

void StringList::Swap(StringList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringList::InternalSwap(StringList* other) {
  entries_.InternalSwap(&other->entries_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string StringList::GetTypeName() const {
  return "enterprise_management.StringList";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringList

// repeated string entries = 1;
int StringList::entries_size() const {
  return entries_.size();
}
void StringList::clear_entries() {
  entries_.Clear();
}
const ::std::string& StringList::entries(int index) const {
  // @@protoc_insertion_point(field_get:enterprise_management.StringList.entries)
  return entries_.Get(index);
}
::std::string* StringList::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:enterprise_management.StringList.entries)
  return entries_.Mutable(index);
}
void StringList::set_entries(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:enterprise_management.StringList.entries)
  entries_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void StringList::set_entries(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:enterprise_management.StringList.entries)
  entries_.Mutable(index)->assign(std::move(value));
}
#endif
void StringList::set_entries(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  entries_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:enterprise_management.StringList.entries)
}
void StringList::set_entries(int index, const char* value, size_t size) {
  entries_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:enterprise_management.StringList.entries)
}
::std::string* StringList::add_entries() {
  // @@protoc_insertion_point(field_add_mutable:enterprise_management.StringList.entries)
  return entries_.Add();
}
void StringList::add_entries(const ::std::string& value) {
  entries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:enterprise_management.StringList.entries)
}
#if LANG_CXX11
void StringList::add_entries(::std::string&& value) {
  entries_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:enterprise_management.StringList.entries)
}
#endif
void StringList::add_entries(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  entries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:enterprise_management.StringList.entries)
}
void StringList::add_entries(const char* value, size_t size) {
  entries_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:enterprise_management.StringList.entries)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringList::entries() const {
  // @@protoc_insertion_point(field_list:enterprise_management.StringList.entries)
  return entries_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
StringList::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:enterprise_management.StringList.entries)
  return &entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PolicyOptions::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PolicyOptions::PolicyOptions()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cloud_5fpolicy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:enterprise_management.PolicyOptions)
}
PolicyOptions::PolicyOptions(const PolicyOptions& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mode_ = from.mode_;
  // @@protoc_insertion_point(copy_constructor:enterprise_management.PolicyOptions)
}

void PolicyOptions::SharedCtor() {
  _cached_size_ = 0;
  mode_ = 0;
}

PolicyOptions::~PolicyOptions() {
  // @@protoc_insertion_point(destructor:enterprise_management.PolicyOptions)
  SharedDtor();
}

void PolicyOptions::SharedDtor() {
}

void PolicyOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PolicyOptions& PolicyOptions::default_instance() {
  protobuf_cloud_5fpolicy_2eproto::InitDefaults();
  return *internal_default_instance();
}

PolicyOptions* PolicyOptions::New(::google::protobuf::Arena* arena) const {
  PolicyOptions* n = new PolicyOptions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PolicyOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:enterprise_management.PolicyOptions)
  mode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PolicyOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:enterprise_management.PolicyOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .enterprise_management.PolicyOptions.PolicyMode mode = 1 [default = MANDATORY];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::enterprise_management::PolicyOptions_PolicyMode_IsValid(value)) {
            set_mode(static_cast< ::enterprise_management::PolicyOptions_PolicyMode >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:enterprise_management.PolicyOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:enterprise_management.PolicyOptions)
  return false;
#undef DO_
}

void PolicyOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:enterprise_management.PolicyOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .enterprise_management.PolicyOptions.PolicyMode mode = 1 [default = MANDATORY];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->mode(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:enterprise_management.PolicyOptions)
}

size_t PolicyOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:enterprise_management.PolicyOptions)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // optional .enterprise_management.PolicyOptions.PolicyMode mode = 1 [default = MANDATORY];
  if (has_mode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PolicyOptions::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PolicyOptions*>(&from));
}

void PolicyOptions::MergeFrom(const PolicyOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:enterprise_management.PolicyOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mode()) {
    set_mode(from.mode());
  }
}

void PolicyOptions::CopyFrom(const PolicyOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:enterprise_management.PolicyOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PolicyOptions::IsInitialized() const {
  return true;
}

void PolicyOptions::Swap(PolicyOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PolicyOptions::InternalSwap(PolicyOptions* other) {
  std::swap(mode_, other->mode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string PolicyOptions::GetTypeName() const {
  return "enterprise_management.PolicyOptions";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PolicyOptions

// optional .enterprise_management.PolicyOptions.PolicyMode mode = 1 [default = MANDATORY];
bool PolicyOptions::has_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PolicyOptions::set_has_mode() {
  _has_bits_[0] |= 0x00000001u;
}
void PolicyOptions::clear_has_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
void PolicyOptions::clear_mode() {
  mode_ = 0;
  clear_has_mode();
}
::enterprise_management::PolicyOptions_PolicyMode PolicyOptions::mode() const {
  // @@protoc_insertion_point(field_get:enterprise_management.PolicyOptions.mode)
  return static_cast< ::enterprise_management::PolicyOptions_PolicyMode >(mode_);
}
void PolicyOptions::set_mode(::enterprise_management::PolicyOptions_PolicyMode value) {
  assert(::enterprise_management::PolicyOptions_PolicyMode_IsValid(value));
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:enterprise_management.PolicyOptions.mode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BooleanPolicyProto::kPolicyOptionsFieldNumber;
const int BooleanPolicyProto::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BooleanPolicyProto::BooleanPolicyProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cloud_5fpolicy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:enterprise_management.BooleanPolicyProto)
}
BooleanPolicyProto::BooleanPolicyProto(const BooleanPolicyProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_policy_options()) {
    policy_options_ = new ::enterprise_management::PolicyOptions(*from.policy_options_);
  } else {
    policy_options_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:enterprise_management.BooleanPolicyProto)
}

void BooleanPolicyProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&policy_options_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&policy_options_)) + sizeof(value_));
}

BooleanPolicyProto::~BooleanPolicyProto() {
  // @@protoc_insertion_point(destructor:enterprise_management.BooleanPolicyProto)
  SharedDtor();
}

void BooleanPolicyProto::SharedDtor() {
  if (this != internal_default_instance()) {
    delete policy_options_;
  }
}

void BooleanPolicyProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BooleanPolicyProto& BooleanPolicyProto::default_instance() {
  protobuf_cloud_5fpolicy_2eproto::InitDefaults();
  return *internal_default_instance();
}

BooleanPolicyProto* BooleanPolicyProto::New(::google::protobuf::Arena* arena) const {
  BooleanPolicyProto* n = new BooleanPolicyProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BooleanPolicyProto::Clear() {
// @@protoc_insertion_point(message_clear_start:enterprise_management.BooleanPolicyProto)
  if (has_policy_options()) {
    GOOGLE_DCHECK(policy_options_ != NULL);
    policy_options_->::enterprise_management::PolicyOptions::Clear();
  }
  value_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BooleanPolicyProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:enterprise_management.BooleanPolicyProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .enterprise_management.PolicyOptions policy_options = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_policy_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:enterprise_management.BooleanPolicyProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:enterprise_management.BooleanPolicyProto)
  return false;
#undef DO_
}

void BooleanPolicyProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:enterprise_management.BooleanPolicyProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .enterprise_management.PolicyOptions policy_options = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->policy_options_, output);
  }

  // optional bool value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->value(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:enterprise_management.BooleanPolicyProto)
}

size_t BooleanPolicyProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:enterprise_management.BooleanPolicyProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional .enterprise_management.PolicyOptions policy_options = 1;
    if (has_policy_options()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->policy_options_);
    }

    // optional bool value = 2;
    if (has_value()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BooleanPolicyProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BooleanPolicyProto*>(&from));
}

void BooleanPolicyProto::MergeFrom(const BooleanPolicyProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:enterprise_management.BooleanPolicyProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_policy_options()->::enterprise_management::PolicyOptions::MergeFrom(from.policy_options());
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BooleanPolicyProto::CopyFrom(const BooleanPolicyProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:enterprise_management.BooleanPolicyProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BooleanPolicyProto::IsInitialized() const {
  return true;
}

void BooleanPolicyProto::Swap(BooleanPolicyProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BooleanPolicyProto::InternalSwap(BooleanPolicyProto* other) {
  std::swap(policy_options_, other->policy_options_);
  std::swap(value_, other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string BooleanPolicyProto::GetTypeName() const {
  return "enterprise_management.BooleanPolicyProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BooleanPolicyProto

// optional .enterprise_management.PolicyOptions policy_options = 1;
bool BooleanPolicyProto::has_policy_options() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BooleanPolicyProto::set_has_policy_options() {
  _has_bits_[0] |= 0x00000001u;
}
void BooleanPolicyProto::clear_has_policy_options() {
  _has_bits_[0] &= ~0x00000001u;
}
void BooleanPolicyProto::clear_policy_options() {
  if (policy_options_ != NULL) policy_options_->::enterprise_management::PolicyOptions::Clear();
  clear_has_policy_options();
}
const ::enterprise_management::PolicyOptions& BooleanPolicyProto::policy_options() const {
  // @@protoc_insertion_point(field_get:enterprise_management.BooleanPolicyProto.policy_options)
  return policy_options_ != NULL ? *policy_options_
                         : *::enterprise_management::PolicyOptions::internal_default_instance();
}
::enterprise_management::PolicyOptions* BooleanPolicyProto::mutable_policy_options() {
  set_has_policy_options();
  if (policy_options_ == NULL) {
    policy_options_ = new ::enterprise_management::PolicyOptions;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.BooleanPolicyProto.policy_options)
  return policy_options_;
}
::enterprise_management::PolicyOptions* BooleanPolicyProto::release_policy_options() {
  // @@protoc_insertion_point(field_release:enterprise_management.BooleanPolicyProto.policy_options)
  clear_has_policy_options();
  ::enterprise_management::PolicyOptions* temp = policy_options_;
  policy_options_ = NULL;
  return temp;
}
void BooleanPolicyProto::set_allocated_policy_options(::enterprise_management::PolicyOptions* policy_options) {
  delete policy_options_;
  policy_options_ = policy_options;
  if (policy_options) {
    set_has_policy_options();
  } else {
    clear_has_policy_options();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.BooleanPolicyProto.policy_options)
}

// optional bool value = 2;
bool BooleanPolicyProto::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BooleanPolicyProto::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void BooleanPolicyProto::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void BooleanPolicyProto::clear_value() {
  value_ = false;
  clear_has_value();
}
bool BooleanPolicyProto::value() const {
  // @@protoc_insertion_point(field_get:enterprise_management.BooleanPolicyProto.value)
  return value_;
}
void BooleanPolicyProto::set_value(bool value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:enterprise_management.BooleanPolicyProto.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IntegerPolicyProto::kPolicyOptionsFieldNumber;
const int IntegerPolicyProto::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IntegerPolicyProto::IntegerPolicyProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cloud_5fpolicy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:enterprise_management.IntegerPolicyProto)
}
IntegerPolicyProto::IntegerPolicyProto(const IntegerPolicyProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_policy_options()) {
    policy_options_ = new ::enterprise_management::PolicyOptions(*from.policy_options_);
  } else {
    policy_options_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:enterprise_management.IntegerPolicyProto)
}

void IntegerPolicyProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&policy_options_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&policy_options_)) + sizeof(value_));
}

IntegerPolicyProto::~IntegerPolicyProto() {
  // @@protoc_insertion_point(destructor:enterprise_management.IntegerPolicyProto)
  SharedDtor();
}

void IntegerPolicyProto::SharedDtor() {
  if (this != internal_default_instance()) {
    delete policy_options_;
  }
}

void IntegerPolicyProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const IntegerPolicyProto& IntegerPolicyProto::default_instance() {
  protobuf_cloud_5fpolicy_2eproto::InitDefaults();
  return *internal_default_instance();
}

IntegerPolicyProto* IntegerPolicyProto::New(::google::protobuf::Arena* arena) const {
  IntegerPolicyProto* n = new IntegerPolicyProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IntegerPolicyProto::Clear() {
// @@protoc_insertion_point(message_clear_start:enterprise_management.IntegerPolicyProto)
  if (has_policy_options()) {
    GOOGLE_DCHECK(policy_options_ != NULL);
    policy_options_->::enterprise_management::PolicyOptions::Clear();
  }
  value_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IntegerPolicyProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:enterprise_management.IntegerPolicyProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .enterprise_management.PolicyOptions policy_options = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_policy_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:enterprise_management.IntegerPolicyProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:enterprise_management.IntegerPolicyProto)
  return false;
#undef DO_
}

void IntegerPolicyProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:enterprise_management.IntegerPolicyProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .enterprise_management.PolicyOptions policy_options = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->policy_options_, output);
  }

  // optional int64 value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->value(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:enterprise_management.IntegerPolicyProto)
}

size_t IntegerPolicyProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:enterprise_management.IntegerPolicyProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional .enterprise_management.PolicyOptions policy_options = 1;
    if (has_policy_options()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->policy_options_);
    }

    // optional int64 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IntegerPolicyProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IntegerPolicyProto*>(&from));
}

void IntegerPolicyProto::MergeFrom(const IntegerPolicyProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:enterprise_management.IntegerPolicyProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_policy_options()->::enterprise_management::PolicyOptions::MergeFrom(from.policy_options());
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void IntegerPolicyProto::CopyFrom(const IntegerPolicyProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:enterprise_management.IntegerPolicyProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntegerPolicyProto::IsInitialized() const {
  return true;
}

void IntegerPolicyProto::Swap(IntegerPolicyProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IntegerPolicyProto::InternalSwap(IntegerPolicyProto* other) {
  std::swap(policy_options_, other->policy_options_);
  std::swap(value_, other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string IntegerPolicyProto::GetTypeName() const {
  return "enterprise_management.IntegerPolicyProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IntegerPolicyProto

// optional .enterprise_management.PolicyOptions policy_options = 1;
bool IntegerPolicyProto::has_policy_options() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void IntegerPolicyProto::set_has_policy_options() {
  _has_bits_[0] |= 0x00000001u;
}
void IntegerPolicyProto::clear_has_policy_options() {
  _has_bits_[0] &= ~0x00000001u;
}
void IntegerPolicyProto::clear_policy_options() {
  if (policy_options_ != NULL) policy_options_->::enterprise_management::PolicyOptions::Clear();
  clear_has_policy_options();
}
const ::enterprise_management::PolicyOptions& IntegerPolicyProto::policy_options() const {
  // @@protoc_insertion_point(field_get:enterprise_management.IntegerPolicyProto.policy_options)
  return policy_options_ != NULL ? *policy_options_
                         : *::enterprise_management::PolicyOptions::internal_default_instance();
}
::enterprise_management::PolicyOptions* IntegerPolicyProto::mutable_policy_options() {
  set_has_policy_options();
  if (policy_options_ == NULL) {
    policy_options_ = new ::enterprise_management::PolicyOptions;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.IntegerPolicyProto.policy_options)
  return policy_options_;
}
::enterprise_management::PolicyOptions* IntegerPolicyProto::release_policy_options() {
  // @@protoc_insertion_point(field_release:enterprise_management.IntegerPolicyProto.policy_options)
  clear_has_policy_options();
  ::enterprise_management::PolicyOptions* temp = policy_options_;
  policy_options_ = NULL;
  return temp;
}
void IntegerPolicyProto::set_allocated_policy_options(::enterprise_management::PolicyOptions* policy_options) {
  delete policy_options_;
  policy_options_ = policy_options;
  if (policy_options) {
    set_has_policy_options();
  } else {
    clear_has_policy_options();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.IntegerPolicyProto.policy_options)
}

// optional int64 value = 2;
bool IntegerPolicyProto::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void IntegerPolicyProto::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void IntegerPolicyProto::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void IntegerPolicyProto::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
::google::protobuf::int64 IntegerPolicyProto::value() const {
  // @@protoc_insertion_point(field_get:enterprise_management.IntegerPolicyProto.value)
  return value_;
}
void IntegerPolicyProto::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:enterprise_management.IntegerPolicyProto.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringPolicyProto::kPolicyOptionsFieldNumber;
const int StringPolicyProto::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringPolicyProto::StringPolicyProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cloud_5fpolicy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:enterprise_management.StringPolicyProto)
}
StringPolicyProto::StringPolicyProto(const StringPolicyProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_policy_options()) {
    policy_options_ = new ::enterprise_management::PolicyOptions(*from.policy_options_);
  } else {
    policy_options_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:enterprise_management.StringPolicyProto)
}

void StringPolicyProto::SharedCtor() {
  _cached_size_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  policy_options_ = NULL;
}

StringPolicyProto::~StringPolicyProto() {
  // @@protoc_insertion_point(destructor:enterprise_management.StringPolicyProto)
  SharedDtor();
}

void StringPolicyProto::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete policy_options_;
  }
}

void StringPolicyProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StringPolicyProto& StringPolicyProto::default_instance() {
  protobuf_cloud_5fpolicy_2eproto::InitDefaults();
  return *internal_default_instance();
}

StringPolicyProto* StringPolicyProto::New(::google::protobuf::Arena* arena) const {
  StringPolicyProto* n = new StringPolicyProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringPolicyProto::Clear() {
// @@protoc_insertion_point(message_clear_start:enterprise_management.StringPolicyProto)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_value()) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
    if (has_policy_options()) {
      GOOGLE_DCHECK(policy_options_ != NULL);
      policy_options_->::enterprise_management::PolicyOptions::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StringPolicyProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:enterprise_management.StringPolicyProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .enterprise_management.PolicyOptions policy_options = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_policy_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:enterprise_management.StringPolicyProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:enterprise_management.StringPolicyProto)
  return false;
#undef DO_
}

void StringPolicyProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:enterprise_management.StringPolicyProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .enterprise_management.PolicyOptions policy_options = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->policy_options_, output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:enterprise_management.StringPolicyProto)
}

size_t StringPolicyProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:enterprise_management.StringPolicyProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

    // optional .enterprise_management.PolicyOptions policy_options = 1;
    if (has_policy_options()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->policy_options_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringPolicyProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StringPolicyProto*>(&from));
}

void StringPolicyProto::MergeFrom(const StringPolicyProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:enterprise_management.StringPolicyProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_policy_options()->::enterprise_management::PolicyOptions::MergeFrom(from.policy_options());
    }
  }
}

void StringPolicyProto::CopyFrom(const StringPolicyProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:enterprise_management.StringPolicyProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringPolicyProto::IsInitialized() const {
  return true;
}

void StringPolicyProto::Swap(StringPolicyProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringPolicyProto::InternalSwap(StringPolicyProto* other) {
  value_.Swap(&other->value_);
  std::swap(policy_options_, other->policy_options_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string StringPolicyProto::GetTypeName() const {
  return "enterprise_management.StringPolicyProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringPolicyProto

// optional .enterprise_management.PolicyOptions policy_options = 1;
bool StringPolicyProto::has_policy_options() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StringPolicyProto::set_has_policy_options() {
  _has_bits_[0] |= 0x00000002u;
}
void StringPolicyProto::clear_has_policy_options() {
  _has_bits_[0] &= ~0x00000002u;
}
void StringPolicyProto::clear_policy_options() {
  if (policy_options_ != NULL) policy_options_->::enterprise_management::PolicyOptions::Clear();
  clear_has_policy_options();
}
const ::enterprise_management::PolicyOptions& StringPolicyProto::policy_options() const {
  // @@protoc_insertion_point(field_get:enterprise_management.StringPolicyProto.policy_options)
  return policy_options_ != NULL ? *policy_options_
                         : *::enterprise_management::PolicyOptions::internal_default_instance();
}
::enterprise_management::PolicyOptions* StringPolicyProto::mutable_policy_options() {
  set_has_policy_options();
  if (policy_options_ == NULL) {
    policy_options_ = new ::enterprise_management::PolicyOptions;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.StringPolicyProto.policy_options)
  return policy_options_;
}
::enterprise_management::PolicyOptions* StringPolicyProto::release_policy_options() {
  // @@protoc_insertion_point(field_release:enterprise_management.StringPolicyProto.policy_options)
  clear_has_policy_options();
  ::enterprise_management::PolicyOptions* temp = policy_options_;
  policy_options_ = NULL;
  return temp;
}
void StringPolicyProto::set_allocated_policy_options(::enterprise_management::PolicyOptions* policy_options) {
  delete policy_options_;
  policy_options_ = policy_options;
  if (policy_options) {
    set_has_policy_options();
  } else {
    clear_has_policy_options();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.StringPolicyProto.policy_options)
}

// optional string value = 2;
bool StringPolicyProto::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StringPolicyProto::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
void StringPolicyProto::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void StringPolicyProto::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& StringPolicyProto::value() const {
  // @@protoc_insertion_point(field_get:enterprise_management.StringPolicyProto.value)
  return value_.GetNoArena();
}
void StringPolicyProto::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:enterprise_management.StringPolicyProto.value)
}
#if LANG_CXX11
void StringPolicyProto::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:enterprise_management.StringPolicyProto.value)
}
#endif
void StringPolicyProto::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:enterprise_management.StringPolicyProto.value)
}
void StringPolicyProto::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:enterprise_management.StringPolicyProto.value)
}
::std::string* StringPolicyProto::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:enterprise_management.StringPolicyProto.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StringPolicyProto::release_value() {
  // @@protoc_insertion_point(field_release:enterprise_management.StringPolicyProto.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StringPolicyProto::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.StringPolicyProto.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringListPolicyProto::kPolicyOptionsFieldNumber;
const int StringListPolicyProto::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringListPolicyProto::StringListPolicyProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cloud_5fpolicy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:enterprise_management.StringListPolicyProto)
}
StringListPolicyProto::StringListPolicyProto(const StringListPolicyProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_policy_options()) {
    policy_options_ = new ::enterprise_management::PolicyOptions(*from.policy_options_);
  } else {
    policy_options_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::enterprise_management::StringList(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:enterprise_management.StringListPolicyProto)
}

void StringListPolicyProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&policy_options_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&policy_options_)) + sizeof(value_));
}

StringListPolicyProto::~StringListPolicyProto() {
  // @@protoc_insertion_point(destructor:enterprise_management.StringListPolicyProto)
  SharedDtor();
}

void StringListPolicyProto::SharedDtor() {
  if (this != internal_default_instance()) {
    delete policy_options_;
  }
  if (this != internal_default_instance()) {
    delete value_;
  }
}

void StringListPolicyProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StringListPolicyProto& StringListPolicyProto::default_instance() {
  protobuf_cloud_5fpolicy_2eproto::InitDefaults();
  return *internal_default_instance();
}

StringListPolicyProto* StringListPolicyProto::New(::google::protobuf::Arena* arena) const {
  StringListPolicyProto* n = new StringListPolicyProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringListPolicyProto::Clear() {
// @@protoc_insertion_point(message_clear_start:enterprise_management.StringListPolicyProto)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_policy_options()) {
      GOOGLE_DCHECK(policy_options_ != NULL);
      policy_options_->::enterprise_management::PolicyOptions::Clear();
    }
    if (has_value()) {
      GOOGLE_DCHECK(value_ != NULL);
      value_->::enterprise_management::StringList::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StringListPolicyProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:enterprise_management.StringListPolicyProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .enterprise_management.PolicyOptions policy_options = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_policy_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringList value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:enterprise_management.StringListPolicyProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:enterprise_management.StringListPolicyProto)
  return false;
#undef DO_
}

void StringListPolicyProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:enterprise_management.StringListPolicyProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .enterprise_management.PolicyOptions policy_options = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->policy_options_, output);
  }

  // optional .enterprise_management.StringList value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->value_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:enterprise_management.StringListPolicyProto)
}

size_t StringListPolicyProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:enterprise_management.StringListPolicyProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional .enterprise_management.PolicyOptions policy_options = 1;
    if (has_policy_options()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->policy_options_);
    }

    // optional .enterprise_management.StringList value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->value_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringListPolicyProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StringListPolicyProto*>(&from));
}

void StringListPolicyProto::MergeFrom(const StringListPolicyProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:enterprise_management.StringListPolicyProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_policy_options()->::enterprise_management::PolicyOptions::MergeFrom(from.policy_options());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_value()->::enterprise_management::StringList::MergeFrom(from.value());
    }
  }
}

void StringListPolicyProto::CopyFrom(const StringListPolicyProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:enterprise_management.StringListPolicyProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringListPolicyProto::IsInitialized() const {
  return true;
}

void StringListPolicyProto::Swap(StringListPolicyProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringListPolicyProto::InternalSwap(StringListPolicyProto* other) {
  std::swap(policy_options_, other->policy_options_);
  std::swap(value_, other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string StringListPolicyProto::GetTypeName() const {
  return "enterprise_management.StringListPolicyProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringListPolicyProto

// optional .enterprise_management.PolicyOptions policy_options = 1;
bool StringListPolicyProto::has_policy_options() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StringListPolicyProto::set_has_policy_options() {
  _has_bits_[0] |= 0x00000001u;
}
void StringListPolicyProto::clear_has_policy_options() {
  _has_bits_[0] &= ~0x00000001u;
}
void StringListPolicyProto::clear_policy_options() {
  if (policy_options_ != NULL) policy_options_->::enterprise_management::PolicyOptions::Clear();
  clear_has_policy_options();
}
const ::enterprise_management::PolicyOptions& StringListPolicyProto::policy_options() const {
  // @@protoc_insertion_point(field_get:enterprise_management.StringListPolicyProto.policy_options)
  return policy_options_ != NULL ? *policy_options_
                         : *::enterprise_management::PolicyOptions::internal_default_instance();
}
::enterprise_management::PolicyOptions* StringListPolicyProto::mutable_policy_options() {
  set_has_policy_options();
  if (policy_options_ == NULL) {
    policy_options_ = new ::enterprise_management::PolicyOptions;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.StringListPolicyProto.policy_options)
  return policy_options_;
}
::enterprise_management::PolicyOptions* StringListPolicyProto::release_policy_options() {
  // @@protoc_insertion_point(field_release:enterprise_management.StringListPolicyProto.policy_options)
  clear_has_policy_options();
  ::enterprise_management::PolicyOptions* temp = policy_options_;
  policy_options_ = NULL;
  return temp;
}
void StringListPolicyProto::set_allocated_policy_options(::enterprise_management::PolicyOptions* policy_options) {
  delete policy_options_;
  policy_options_ = policy_options;
  if (policy_options) {
    set_has_policy_options();
  } else {
    clear_has_policy_options();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.StringListPolicyProto.policy_options)
}

// optional .enterprise_management.StringList value = 2;
bool StringListPolicyProto::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StringListPolicyProto::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void StringListPolicyProto::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void StringListPolicyProto::clear_value() {
  if (value_ != NULL) value_->::enterprise_management::StringList::Clear();
  clear_has_value();
}
const ::enterprise_management::StringList& StringListPolicyProto::value() const {
  // @@protoc_insertion_point(field_get:enterprise_management.StringListPolicyProto.value)
  return value_ != NULL ? *value_
                         : *::enterprise_management::StringList::internal_default_instance();
}
::enterprise_management::StringList* StringListPolicyProto::mutable_value() {
  set_has_value();
  if (value_ == NULL) {
    value_ = new ::enterprise_management::StringList;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.StringListPolicyProto.value)
  return value_;
}
::enterprise_management::StringList* StringListPolicyProto::release_value() {
  // @@protoc_insertion_point(field_release:enterprise_management.StringListPolicyProto.value)
  clear_has_value();
  ::enterprise_management::StringList* temp = value_;
  value_ = NULL;
  return temp;
}
void StringListPolicyProto::set_allocated_value(::enterprise_management::StringList* value) {
  delete value_;
  value_ = value;
  if (value) {
    set_has_value();
  } else {
    clear_has_value();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.StringListPolicyProto.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloudPolicySettings::kHomepageLocationFieldNumber;
const int CloudPolicySettings::kHomepageIsNewTabPageFieldNumber;
const int CloudPolicySettings::kNewTabPageLocationFieldNumber;
const int CloudPolicySettings::kDefaultBrowserSettingEnabledFieldNumber;
const int CloudPolicySettings::kAlternateErrorPagesEnabledFieldNumber;
const int CloudPolicySettings::kSearchSuggestEnabledFieldNumber;
const int CloudPolicySettings::kNetworkPredictionOptionsFieldNumber;
const int CloudPolicySettings::kWPADQuickCheckEnabledFieldNumber;
const int CloudPolicySettings::kDisabledSchemesFieldNumber;
const int CloudPolicySettings::kHttp09OnNonDefaultPortsEnabledFieldNumber;
const int CloudPolicySettings::kJavascriptEnabledFieldNumber;
const int CloudPolicySettings::kIncognitoEnabledFieldNumber;
const int CloudPolicySettings::kIncognitoModeAvailabilityFieldNumber;
const int CloudPolicySettings::kSavingBrowserHistoryDisabledFieldNumber;
const int CloudPolicySettings::kAllowDeletingBrowserHistoryFieldNumber;
const int CloudPolicySettings::kAllowDinosaurEasterEggFieldNumber;
const int CloudPolicySettings::kRemoteAccessHostClientDomainFieldNumber;
const int CloudPolicySettings::kRemoteAccessHostClientDomainListFieldNumber;
const int CloudPolicySettings::kRemoteAccessHostFirewallTraversalFieldNumber;
const int CloudPolicySettings::kRemoteAccessHostDomainFieldNumber;
const int CloudPolicySettings::kRemoteAccessHostDomainListFieldNumber;
const int CloudPolicySettings::kRemoteAccessHostTalkGadgetPrefixFieldNumber;
const int CloudPolicySettings::kRemoteAccessHostRequireCurtainFieldNumber;
const int CloudPolicySettings::kRemoteAccessHostAllowClientPairingFieldNumber;
const int CloudPolicySettings::kRemoteAccessHostAllowGnubbyAuthFieldNumber;
const int CloudPolicySettings::kRemoteAccessHostAllowRelayedConnectionFieldNumber;
const int CloudPolicySettings::kRemoteAccessHostUdpPortRangeFieldNumber;
const int CloudPolicySettings::kRemoteAccessHostMatchUsernameFieldNumber;
const int CloudPolicySettings::kRemoteAccessHostTokenUrlFieldNumber;
const int CloudPolicySettings::kRemoteAccessHostTokenValidationUrlFieldNumber;
const int CloudPolicySettings::kRemoteAccessHostTokenValidationCertificateIssuerFieldNumber;
const int CloudPolicySettings::kPrintingEnabledFieldNumber;
const int CloudPolicySettings::kCloudPrintProxyEnabledFieldNumber;
const int CloudPolicySettings::kForceSafeSearchFieldNumber;
const int CloudPolicySettings::kForceGoogleSafeSearchFieldNumber;
const int CloudPolicySettings::kForceYouTubeSafetyModeFieldNumber;
const int CloudPolicySettings::kForceYouTubeRestrictFieldNumber;
const int CloudPolicySettings::kSafeBrowsingEnabledFieldNumber;
const int CloudPolicySettings::kMetricsReportingEnabledFieldNumber;
const int CloudPolicySettings::kPasswordManagerEnabledFieldNumber;
const int CloudPolicySettings::kAutoFillEnabledFieldNumber;
const int CloudPolicySettings::kAutofillCreditCardEnabledFieldNumber;
const int CloudPolicySettings::kDisabledPluginsFieldNumber;
const int CloudPolicySettings::kEnabledPluginsFieldNumber;
const int CloudPolicySettings::kDisabledPluginsExceptionsFieldNumber;
const int CloudPolicySettings::kAlwaysOpenPdfExternallyFieldNumber;
const int CloudPolicySettings::kSyncDisabledFieldNumber;
const int CloudPolicySettings::kSigninAllowedFieldNumber;
const int CloudPolicySettings::kDiskCacheDirFieldNumber;
const int CloudPolicySettings::kDiskCacheSizeFieldNumber;
const int CloudPolicySettings::kMediaCacheSizeFieldNumber;
const int CloudPolicySettings::kDownloadRestrictionsFieldNumber;
const int CloudPolicySettings::kDownloadDirectoryFieldNumber;
const int CloudPolicySettings::kProxyModeFieldNumber;
const int CloudPolicySettings::kProxyServerModeFieldNumber;
const int CloudPolicySettings::kProxyServerFieldNumber;
const int CloudPolicySettings::kProxyPacUrlFieldNumber;
const int CloudPolicySettings::kProxyBypassListFieldNumber;
const int CloudPolicySettings::kProxySettingsFieldNumber;
const int CloudPolicySettings::kAuthSchemesFieldNumber;
const int CloudPolicySettings::kDisableAuthNegotiateCnameLookupFieldNumber;
const int CloudPolicySettings::kEnableAuthNegotiatePortFieldNumber;
const int CloudPolicySettings::kAuthServerWhitelistFieldNumber;
const int CloudPolicySettings::kAuthNegotiateDelegateWhitelistFieldNumber;
const int CloudPolicySettings::kGSSAPILibraryNameFieldNumber;
const int CloudPolicySettings::kAllowCrossOriginAuthPromptFieldNumber;
const int CloudPolicySettings::kNtlmV2EnabledFieldNumber;
const int CloudPolicySettings::kExtensionInstallBlacklistFieldNumber;
const int CloudPolicySettings::kExtensionInstallWhitelistFieldNumber;
const int CloudPolicySettings::kExtensionInstallForcelistFieldNumber;
const int CloudPolicySettings::kExtensionInstallSourcesFieldNumber;
const int CloudPolicySettings::kExtensionAllowedTypesFieldNumber;
const int CloudPolicySettings::kExtensionSettingsFieldNumber;
const int CloudPolicySettings::kShowHomeButtonFieldNumber;
const int CloudPolicySettings::kDeveloperToolsDisabledFieldNumber;
const int CloudPolicySettings::kDeveloperToolsAvailabilityFieldNumber;
const int CloudPolicySettings::kRestoreOnStartupFieldNumber;
const int CloudPolicySettings::kRestoreOnStartupURLsFieldNumber;
const int CloudPolicySettings::kBlockThirdPartyCookiesFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderEnabledFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderNameFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderKeywordFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderSearchURLFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderSuggestURLFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderIconURLFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderEncodingsFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderAlternateURLsFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderImageURLFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderNewTabURLFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderSearchURLPostParamsFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderSuggestURLPostParamsFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderImageURLPostParamsFieldNumber;
const int CloudPolicySettings::kDefaultCookiesSettingFieldNumber;
const int CloudPolicySettings::kDefaultImagesSettingFieldNumber;
const int CloudPolicySettings::kDefaultJavaScriptSettingFieldNumber;
const int CloudPolicySettings::kDefaultPluginsSettingFieldNumber;
const int CloudPolicySettings::kDefaultPopupsSettingFieldNumber;
const int CloudPolicySettings::kDefaultNotificationsSettingFieldNumber;
const int CloudPolicySettings::kDefaultGeolocationSettingFieldNumber;
const int CloudPolicySettings::kDefaultMediaStreamSettingFieldNumber;
const int CloudPolicySettings::kDefaultWebBluetoothGuardSettingFieldNumber;
const int CloudPolicySettings::kDefaultWebUsbGuardSettingFieldNumber;
const int CloudPolicySettings::kWebUsbAskForUrlsFieldNumber;
const int CloudPolicySettings::kWebUsbBlockedForUrlsFieldNumber;
const int CloudPolicySettings::kAutoSelectCertificateForUrlsFieldNumber;
const int CloudPolicySettings::kCookiesAllowedForUrlsFieldNumber;
const int CloudPolicySettings::kCookiesBlockedForUrlsFieldNumber;
const int CloudPolicySettings::kCookiesSessionOnlyForUrlsFieldNumber;
const int CloudPolicySettings::kImagesAllowedForUrlsFieldNumber;
const int CloudPolicySettings::kImagesBlockedForUrlsFieldNumber;
const int CloudPolicySettings::kJavaScriptAllowedForUrlsFieldNumber;
const int CloudPolicySettings::kJavaScriptBlockedForUrlsFieldNumber;
const int CloudPolicySettings::kPluginsAllowedForUrlsFieldNumber;
const int CloudPolicySettings::kPluginsBlockedForUrlsFieldNumber;
const int CloudPolicySettings::kPopupsAllowedForUrlsFieldNumber;
const int CloudPolicySettings::kRegisteredProtocolHandlersFieldNumber;
const int CloudPolicySettings::kPopupsBlockedForUrlsFieldNumber;
const int CloudPolicySettings::kNotificationsAllowedForUrlsFieldNumber;
const int CloudPolicySettings::kNotificationsBlockedForUrlsFieldNumber;
const int CloudPolicySettings::kNativeMessagingBlacklistFieldNumber;
const int CloudPolicySettings::kNativeMessagingWhitelistFieldNumber;
const int CloudPolicySettings::kNativeMessagingUserLevelHostsFieldNumber;
const int CloudPolicySettings::kDisable3DAPIsFieldNumber;
const int CloudPolicySettings::kMaxInvalidationFetchDelayFieldNumber;
const int CloudPolicySettings::kTranslateEnabledFieldNumber;
const int CloudPolicySettings::kAllowOutdatedPluginsFieldNumber;
const int CloudPolicySettings::kRunAllFlashInAllowModeFieldNumber;
const int CloudPolicySettings::kBookmarkBarEnabledFieldNumber;
const int CloudPolicySettings::kEditBookmarksEnabledFieldNumber;
const int CloudPolicySettings::kShowAppsShortcutInBookmarkBarFieldNumber;
const int CloudPolicySettings::kAllowFileSelectionDialogsFieldNumber;
const int CloudPolicySettings::kSecurityKeyPermitAttestationFieldNumber;
const int CloudPolicySettings::kImportBookmarksFieldNumber;
const int CloudPolicySettings::kImportHistoryFieldNumber;
const int CloudPolicySettings::kImportHomepageFieldNumber;
const int CloudPolicySettings::kImportSearchEngineFieldNumber;
const int CloudPolicySettings::kImportSavedPasswordsFieldNumber;
const int CloudPolicySettings::kImportAutofillFormDataFieldNumber;
const int CloudPolicySettings::kMaxConnectionsPerProxyFieldNumber;
const int CloudPolicySettings::kURLBlacklistFieldNumber;
const int CloudPolicySettings::kURLWhitelistFieldNumber;
const int CloudPolicySettings::kCloudPrintSubmitEnabledFieldNumber;
const int CloudPolicySettings::kDisablePrintPreviewFieldNumber;
const int CloudPolicySettings::kDefaultPrinterSelectionFieldNumber;
const int CloudPolicySettings::kEnableOnlineRevocationChecksFieldNumber;
const int CloudPolicySettings::kRequireOnlineRevocationChecksForLocalAnchorsFieldNumber;
const int CloudPolicySettings::kEnableSha1ForLocalAnchorsFieldNumber;
const int CloudPolicySettings::kEnableSymantecLegacyInfrastructureFieldNumber;
const int CloudPolicySettings::kForceEphemeralProfilesFieldNumber;
const int CloudPolicySettings::kBackgroundModeEnabledFieldNumber;
const int CloudPolicySettings::kRestrictSigninToPatternFieldNumber;
const int CloudPolicySettings::kDisableSafeBrowsingProceedAnywayFieldNumber;
const int CloudPolicySettings::kSafeBrowsingExtendedReportingOptInAllowedFieldNumber;
const int CloudPolicySettings::kSpellCheckServiceEnabledFieldNumber;
const int CloudPolicySettings::kAudioCaptureAllowedFieldNumber;
const int CloudPolicySettings::kAudioCaptureAllowedUrlsFieldNumber;
const int CloudPolicySettings::kVideoCaptureAllowedFieldNumber;
const int CloudPolicySettings::kVideoCaptureAllowedUrlsFieldNumber;
const int CloudPolicySettings::kDisableScreenshotsFieldNumber;
const int CloudPolicySettings::kBuiltInDnsClientEnabledFieldNumber;
const int CloudPolicySettings::kFullscreenAllowedFieldNumber;
const int CloudPolicySettings::kHideWebStoreIconFieldNumber;
const int CloudPolicySettings::kVariationsRestrictParameterFieldNumber;
const int CloudPolicySettings::kContentPackDefaultFilteringBehaviorFieldNumber;
const int CloudPolicySettings::kContentPackManualBehaviorHostsFieldNumber;
const int CloudPolicySettings::kContentPackManualBehaviorURLsFieldNumber;
const int CloudPolicySettings::kSupervisedUserCreationEnabledFieldNumber;
const int CloudPolicySettings::kManagedBookmarksFieldNumber;
const int CloudPolicySettings::kEnableDeprecatedWebPlatformFeaturesFieldNumber;
const int CloudPolicySettings::kBrowserGuestModeEnabledFieldNumber;
const int CloudPolicySettings::kBrowserAddPersonEnabledFieldNumber;
const int CloudPolicySettings::kSSLVersionMinFieldNumber;
const int CloudPolicySettings::kSSLVersionMaxFieldNumber;
const int CloudPolicySettings::kCertificateTransparencyEnforcementDisabledForUrlsFieldNumber;
const int CloudPolicySettings::kCertificateTransparencyEnforcementDisabledForCasFieldNumber;
const int CloudPolicySettings::kCertificateTransparencyEnforcementDisabledForLegacyCasFieldNumber;
const int CloudPolicySettings::kSSLErrorOverrideAllowedFieldNumber;
const int CloudPolicySettings::kQuicAllowedFieldNumber;
const int CloudPolicySettings::kHardwareAccelerationModeEnabledFieldNumber;
const int CloudPolicySettings::kSuppressUnsupportedOSWarningFieldNumber;
const int CloudPolicySettings::kTaskManagerEndProcessEnabledFieldNumber;
const int CloudPolicySettings::kAllowedDomainsForAppsFieldNumber;
const int CloudPolicySettings::kPacHttpsUrlStrippingEnabledFieldNumber;
const int CloudPolicySettings::kEnableMediaRouterFieldNumber;
const int CloudPolicySettings::kShowCastIconInToolbarFieldNumber;
const int CloudPolicySettings::kMediaRouterCastAllowAllIPsFieldNumber;
const int CloudPolicySettings::kWebRtcUdpPortRangeFieldNumber;
const int CloudPolicySettings::kComponentUpdatesEnabledFieldNumber;
const int CloudPolicySettings::kBrowserNetworkTimeQueriesEnabledFieldNumber;
const int CloudPolicySettings::kPrintPreviewUseSystemDefaultPrinterFieldNumber;
const int CloudPolicySettings::kCloudPolicyOverridesMachinePolicyFieldNumber;
const int CloudPolicySettings::kPromptForDownloadLocationFieldNumber;
const int CloudPolicySettings::kIsolateOriginsFieldNumber;
const int CloudPolicySettings::kSitePerProcessFieldNumber;
const int CloudPolicySettings::kWebDriverOverridesIncompatiblePoliciesFieldNumber;
const int CloudPolicySettings::kUnsafelyTreatInsecureOriginAsSecureFieldNumber;
const int CloudPolicySettings::kDefaultDownloadDirectoryFieldNumber;
const int CloudPolicySettings::kAbusiveExperienceInterventionEnforceFieldNumber;
const int CloudPolicySettings::kSpellcheckLanguageFieldNumber;
const int CloudPolicySettings::kSpellcheckEnabledFieldNumber;
const int CloudPolicySettings::kAdsSettingForIntrusiveAdsSitesFieldNumber;
const int CloudPolicySettings::kPasswordProtectionWarningTriggerFieldNumber;
const int CloudPolicySettings::kRelaunchNotificationFieldNumber;
const int CloudPolicySettings::kRelaunchNotificationPeriodFieldNumber;
const int CloudPolicySettings::kSafeBrowsingWhitelistDomainsFieldNumber;
const int CloudPolicySettings::kPasswordProtectionLoginURLsFieldNumber;
const int CloudPolicySettings::kPasswordProtectionChangePasswordURLFieldNumber;
const int CloudPolicySettings::kSafeBrowsingExtendedReportingEnabledFieldNumber;
const int CloudPolicySettings::kMachineLevelUserCloudPolicyEnrollmentTokenFieldNumber;
const int CloudPolicySettings::kAutoplayAllowedFieldNumber;
const int CloudPolicySettings::kAutoplayWhitelistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloudPolicySettings::CloudPolicySettings()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cloud_5fpolicy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:enterprise_management.CloudPolicySettings)
}
CloudPolicySettings::CloudPolicySettings(const CloudPolicySettings& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_homepagelocation()) {
    homepagelocation_ = new ::enterprise_management::StringPolicyProto(*from.homepagelocation_);
  } else {
    homepagelocation_ = NULL;
  }
  if (from.has_homepageisnewtabpage()) {
    homepageisnewtabpage_ = new ::enterprise_management::BooleanPolicyProto(*from.homepageisnewtabpage_);
  } else {
    homepageisnewtabpage_ = NULL;
  }
  if (from.has_defaultbrowsersettingenabled()) {
    defaultbrowsersettingenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.defaultbrowsersettingenabled_);
  } else {
    defaultbrowsersettingenabled_ = NULL;
  }
  if (from.has_alternateerrorpagesenabled()) {
    alternateerrorpagesenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.alternateerrorpagesenabled_);
  } else {
    alternateerrorpagesenabled_ = NULL;
  }
  if (from.has_searchsuggestenabled()) {
    searchsuggestenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.searchsuggestenabled_);
  } else {
    searchsuggestenabled_ = NULL;
  }
  if (from.has_javascriptenabled()) {
    javascriptenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.javascriptenabled_);
  } else {
    javascriptenabled_ = NULL;
  }
  if (from.has_incognitoenabled()) {
    incognitoenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.incognitoenabled_);
  } else {
    incognitoenabled_ = NULL;
  }
  if (from.has_savingbrowserhistorydisabled()) {
    savingbrowserhistorydisabled_ = new ::enterprise_management::BooleanPolicyProto(*from.savingbrowserhistorydisabled_);
  } else {
    savingbrowserhistorydisabled_ = NULL;
  }
  if (from.has_printingenabled()) {
    printingenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.printingenabled_);
  } else {
    printingenabled_ = NULL;
  }
  if (from.has_cloudprintproxyenabled()) {
    cloudprintproxyenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.cloudprintproxyenabled_);
  } else {
    cloudprintproxyenabled_ = NULL;
  }
  if (from.has_safebrowsingenabled()) {
    safebrowsingenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.safebrowsingenabled_);
  } else {
    safebrowsingenabled_ = NULL;
  }
  if (from.has_metricsreportingenabled()) {
    metricsreportingenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.metricsreportingenabled_);
  } else {
    metricsreportingenabled_ = NULL;
  }
  if (from.has_passwordmanagerenabled()) {
    passwordmanagerenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.passwordmanagerenabled_);
  } else {
    passwordmanagerenabled_ = NULL;
  }
  if (from.has_autofillenabled()) {
    autofillenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.autofillenabled_);
  } else {
    autofillenabled_ = NULL;
  }
  if (from.has_disabledplugins()) {
    disabledplugins_ = new ::enterprise_management::StringListPolicyProto(*from.disabledplugins_);
  } else {
    disabledplugins_ = NULL;
  }
  if (from.has_syncdisabled()) {
    syncdisabled_ = new ::enterprise_management::BooleanPolicyProto(*from.syncdisabled_);
  } else {
    syncdisabled_ = NULL;
  }
  if (from.has_proxymode()) {
    proxymode_ = new ::enterprise_management::StringPolicyProto(*from.proxymode_);
  } else {
    proxymode_ = NULL;
  }
  if (from.has_proxyservermode()) {
    proxyservermode_ = new ::enterprise_management::IntegerPolicyProto(*from.proxyservermode_);
  } else {
    proxyservermode_ = NULL;
  }
  if (from.has_proxyserver()) {
    proxyserver_ = new ::enterprise_management::StringPolicyProto(*from.proxyserver_);
  } else {
    proxyserver_ = NULL;
  }
  if (from.has_proxypacurl()) {
    proxypacurl_ = new ::enterprise_management::StringPolicyProto(*from.proxypacurl_);
  } else {
    proxypacurl_ = NULL;
  }
  if (from.has_proxybypasslist()) {
    proxybypasslist_ = new ::enterprise_management::StringPolicyProto(*from.proxybypasslist_);
  } else {
    proxybypasslist_ = NULL;
  }
  if (from.has_authschemes()) {
    authschemes_ = new ::enterprise_management::StringPolicyProto(*from.authschemes_);
  } else {
    authschemes_ = NULL;
  }
  if (from.has_disableauthnegotiatecnamelookup()) {
    disableauthnegotiatecnamelookup_ = new ::enterprise_management::BooleanPolicyProto(*from.disableauthnegotiatecnamelookup_);
  } else {
    disableauthnegotiatecnamelookup_ = NULL;
  }
  if (from.has_enableauthnegotiateport()) {
    enableauthnegotiateport_ = new ::enterprise_management::BooleanPolicyProto(*from.enableauthnegotiateport_);
  } else {
    enableauthnegotiateport_ = NULL;
  }
  if (from.has_authserverwhitelist()) {
    authserverwhitelist_ = new ::enterprise_management::StringPolicyProto(*from.authserverwhitelist_);
  } else {
    authserverwhitelist_ = NULL;
  }
  if (from.has_authnegotiatedelegatewhitelist()) {
    authnegotiatedelegatewhitelist_ = new ::enterprise_management::StringPolicyProto(*from.authnegotiatedelegatewhitelist_);
  } else {
    authnegotiatedelegatewhitelist_ = NULL;
  }
  if (from.has_gssapilibraryname()) {
    gssapilibraryname_ = new ::enterprise_management::StringPolicyProto(*from.gssapilibraryname_);
  } else {
    gssapilibraryname_ = NULL;
  }
  if (from.has_extensioninstallblacklist()) {
    extensioninstallblacklist_ = new ::enterprise_management::StringListPolicyProto(*from.extensioninstallblacklist_);
  } else {
    extensioninstallblacklist_ = NULL;
  }
  if (from.has_extensioninstallwhitelist()) {
    extensioninstallwhitelist_ = new ::enterprise_management::StringListPolicyProto(*from.extensioninstallwhitelist_);
  } else {
    extensioninstallwhitelist_ = NULL;
  }
  if (from.has_extensioninstallforcelist()) {
    extensioninstallforcelist_ = new ::enterprise_management::StringListPolicyProto(*from.extensioninstallforcelist_);
  } else {
    extensioninstallforcelist_ = NULL;
  }
  if (from.has_showhomebutton()) {
    showhomebutton_ = new ::enterprise_management::BooleanPolicyProto(*from.showhomebutton_);
  } else {
    showhomebutton_ = NULL;
  }
  if (from.has_developertoolsdisabled()) {
    developertoolsdisabled_ = new ::enterprise_management::BooleanPolicyProto(*from.developertoolsdisabled_);
  } else {
    developertoolsdisabled_ = NULL;
  }
  if (from.has_restoreonstartup()) {
    restoreonstartup_ = new ::enterprise_management::IntegerPolicyProto(*from.restoreonstartup_);
  } else {
    restoreonstartup_ = NULL;
  }
  if (from.has_restoreonstartupurls()) {
    restoreonstartupurls_ = new ::enterprise_management::StringListPolicyProto(*from.restoreonstartupurls_);
  } else {
    restoreonstartupurls_ = NULL;
  }
  if (from.has_blockthirdpartycookies()) {
    blockthirdpartycookies_ = new ::enterprise_management::BooleanPolicyProto(*from.blockthirdpartycookies_);
  } else {
    blockthirdpartycookies_ = NULL;
  }
  if (from.has_defaultsearchproviderenabled()) {
    defaultsearchproviderenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.defaultsearchproviderenabled_);
  } else {
    defaultsearchproviderenabled_ = NULL;
  }
  if (from.has_defaultsearchprovidername()) {
    defaultsearchprovidername_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchprovidername_);
  } else {
    defaultsearchprovidername_ = NULL;
  }
  if (from.has_defaultsearchproviderkeyword()) {
    defaultsearchproviderkeyword_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchproviderkeyword_);
  } else {
    defaultsearchproviderkeyword_ = NULL;
  }
  if (from.has_defaultsearchprovidersearchurl()) {
    defaultsearchprovidersearchurl_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchprovidersearchurl_);
  } else {
    defaultsearchprovidersearchurl_ = NULL;
  }
  if (from.has_defaultsearchprovidersuggesturl()) {
    defaultsearchprovidersuggesturl_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchprovidersuggesturl_);
  } else {
    defaultsearchprovidersuggesturl_ = NULL;
  }
  if (from.has_defaultsearchprovidericonurl()) {
    defaultsearchprovidericonurl_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchprovidericonurl_);
  } else {
    defaultsearchprovidericonurl_ = NULL;
  }
  if (from.has_defaultsearchproviderencodings()) {
    defaultsearchproviderencodings_ = new ::enterprise_management::StringListPolicyProto(*from.defaultsearchproviderencodings_);
  } else {
    defaultsearchproviderencodings_ = NULL;
  }
  if (from.has_defaultcookiessetting()) {
    defaultcookiessetting_ = new ::enterprise_management::IntegerPolicyProto(*from.defaultcookiessetting_);
  } else {
    defaultcookiessetting_ = NULL;
  }
  if (from.has_defaultimagessetting()) {
    defaultimagessetting_ = new ::enterprise_management::IntegerPolicyProto(*from.defaultimagessetting_);
  } else {
    defaultimagessetting_ = NULL;
  }
  if (from.has_defaultjavascriptsetting()) {
    defaultjavascriptsetting_ = new ::enterprise_management::IntegerPolicyProto(*from.defaultjavascriptsetting_);
  } else {
    defaultjavascriptsetting_ = NULL;
  }
  if (from.has_defaultpluginssetting()) {
    defaultpluginssetting_ = new ::enterprise_management::IntegerPolicyProto(*from.defaultpluginssetting_);
  } else {
    defaultpluginssetting_ = NULL;
  }
  if (from.has_defaultpopupssetting()) {
    defaultpopupssetting_ = new ::enterprise_management::IntegerPolicyProto(*from.defaultpopupssetting_);
  } else {
    defaultpopupssetting_ = NULL;
  }
  if (from.has_defaultnotificationssetting()) {
    defaultnotificationssetting_ = new ::enterprise_management::IntegerPolicyProto(*from.defaultnotificationssetting_);
  } else {
    defaultnotificationssetting_ = NULL;
  }
  if (from.has_defaultgeolocationsetting()) {
    defaultgeolocationsetting_ = new ::enterprise_management::IntegerPolicyProto(*from.defaultgeolocationsetting_);
  } else {
    defaultgeolocationsetting_ = NULL;
  }
  if (from.has_disable3dapis()) {
    disable3dapis_ = new ::enterprise_management::BooleanPolicyProto(*from.disable3dapis_);
  } else {
    disable3dapis_ = NULL;
  }
  if (from.has_downloaddirectory()) {
    downloaddirectory_ = new ::enterprise_management::StringPolicyProto(*from.downloaddirectory_);
  } else {
    downloaddirectory_ = NULL;
  }
  if (from.has_cookiesblockedforurls()) {
    cookiesblockedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.cookiesblockedforurls_);
  } else {
    cookiesblockedforurls_ = NULL;
  }
  if (from.has_cookiessessiononlyforurls()) {
    cookiessessiononlyforurls_ = new ::enterprise_management::StringListPolicyProto(*from.cookiessessiononlyforurls_);
  } else {
    cookiessessiononlyforurls_ = NULL;
  }
  if (from.has_imagesallowedforurls()) {
    imagesallowedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.imagesallowedforurls_);
  } else {
    imagesallowedforurls_ = NULL;
  }
  if (from.has_imagesblockedforurls()) {
    imagesblockedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.imagesblockedforurls_);
  } else {
    imagesblockedforurls_ = NULL;
  }
  if (from.has_javascriptallowedforurls()) {
    javascriptallowedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.javascriptallowedforurls_);
  } else {
    javascriptallowedforurls_ = NULL;
  }
  if (from.has_javascriptblockedforurls()) {
    javascriptblockedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.javascriptblockedforurls_);
  } else {
    javascriptblockedforurls_ = NULL;
  }
  if (from.has_pluginsallowedforurls()) {
    pluginsallowedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.pluginsallowedforurls_);
  } else {
    pluginsallowedforurls_ = NULL;
  }
  if (from.has_pluginsblockedforurls()) {
    pluginsblockedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.pluginsblockedforurls_);
  } else {
    pluginsblockedforurls_ = NULL;
  }
  if (from.has_popupsallowedforurls()) {
    popupsallowedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.popupsallowedforurls_);
  } else {
    popupsallowedforurls_ = NULL;
  }
  if (from.has_popupsblockedforurls()) {
    popupsblockedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.popupsblockedforurls_);
  } else {
    popupsblockedforurls_ = NULL;
  }
  if (from.has_cookiesallowedforurls()) {
    cookiesallowedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.cookiesallowedforurls_);
  } else {
    cookiesallowedforurls_ = NULL;
  }
  if (from.has_enabledplugins()) {
    enabledplugins_ = new ::enterprise_management::StringListPolicyProto(*from.enabledplugins_);
  } else {
    enabledplugins_ = NULL;
  }
  if (from.has_disabledpluginsexceptions()) {
    disabledpluginsexceptions_ = new ::enterprise_management::StringListPolicyProto(*from.disabledpluginsexceptions_);
  } else {
    disabledpluginsexceptions_ = NULL;
  }
  if (from.has_translateenabled()) {
    translateenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.translateenabled_);
  } else {
    translateenabled_ = NULL;
  }
  if (from.has_allowoutdatedplugins()) {
    allowoutdatedplugins_ = new ::enterprise_management::BooleanPolicyProto(*from.allowoutdatedplugins_);
  } else {
    allowoutdatedplugins_ = NULL;
  }
  if (from.has_bookmarkbarenabled()) {
    bookmarkbarenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.bookmarkbarenabled_);
  } else {
    bookmarkbarenabled_ = NULL;
  }
  if (from.has_editbookmarksenabled()) {
    editbookmarksenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.editbookmarksenabled_);
  } else {
    editbookmarksenabled_ = NULL;
  }
  if (from.has_allowfileselectiondialogs()) {
    allowfileselectiondialogs_ = new ::enterprise_management::BooleanPolicyProto(*from.allowfileselectiondialogs_);
  } else {
    allowfileselectiondialogs_ = NULL;
  }
  if (from.has_disabledschemes()) {
    disabledschemes_ = new ::enterprise_management::StringListPolicyProto(*from.disabledschemes_);
  } else {
    disabledschemes_ = NULL;
  }
  if (from.has_diskcachedir()) {
    diskcachedir_ = new ::enterprise_management::StringPolicyProto(*from.diskcachedir_);
  } else {
    diskcachedir_ = NULL;
  }
  if (from.has_allowcrossoriginauthprompt()) {
    allowcrossoriginauthprompt_ = new ::enterprise_management::BooleanPolicyProto(*from.allowcrossoriginauthprompt_);
  } else {
    allowcrossoriginauthprompt_ = NULL;
  }
  if (from.has_maxconnectionsperproxy()) {
    maxconnectionsperproxy_ = new ::enterprise_management::IntegerPolicyProto(*from.maxconnectionsperproxy_);
  } else {
    maxconnectionsperproxy_ = NULL;
  }
  if (from.has_incognitomodeavailability()) {
    incognitomodeavailability_ = new ::enterprise_management::IntegerPolicyProto(*from.incognitomodeavailability_);
  } else {
    incognitomodeavailability_ = NULL;
  }
  if (from.has_remoteaccesshostfirewalltraversal()) {
    remoteaccesshostfirewalltraversal_ = new ::enterprise_management::BooleanPolicyProto(*from.remoteaccesshostfirewalltraversal_);
  } else {
    remoteaccesshostfirewalltraversal_ = NULL;
  }
  if (from.has_importbookmarks()) {
    importbookmarks_ = new ::enterprise_management::BooleanPolicyProto(*from.importbookmarks_);
  } else {
    importbookmarks_ = NULL;
  }
  if (from.has_importhistory()) {
    importhistory_ = new ::enterprise_management::BooleanPolicyProto(*from.importhistory_);
  } else {
    importhistory_ = NULL;
  }
  if (from.has_importhomepage()) {
    importhomepage_ = new ::enterprise_management::BooleanPolicyProto(*from.importhomepage_);
  } else {
    importhomepage_ = NULL;
  }
  if (from.has_importsearchengine()) {
    importsearchengine_ = new ::enterprise_management::BooleanPolicyProto(*from.importsearchengine_);
  } else {
    importsearchengine_ = NULL;
  }
  if (from.has_importsavedpasswords()) {
    importsavedpasswords_ = new ::enterprise_management::BooleanPolicyProto(*from.importsavedpasswords_);
  } else {
    importsavedpasswords_ = NULL;
  }
  if (from.has_autoselectcertificateforurls()) {
    autoselectcertificateforurls_ = new ::enterprise_management::StringListPolicyProto(*from.autoselectcertificateforurls_);
  } else {
    autoselectcertificateforurls_ = NULL;
  }
  if (from.has_urlblacklist()) {
    urlblacklist_ = new ::enterprise_management::StringListPolicyProto(*from.urlblacklist_);
  } else {
    urlblacklist_ = NULL;
  }
  if (from.has_urlwhitelist()) {
    urlwhitelist_ = new ::enterprise_management::StringListPolicyProto(*from.urlwhitelist_);
  } else {
    urlwhitelist_ = NULL;
  }
  if (from.has_notificationsallowedforurls()) {
    notificationsallowedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.notificationsallowedforurls_);
  } else {
    notificationsallowedforurls_ = NULL;
  }
  if (from.has_notificationsblockedforurls()) {
    notificationsblockedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.notificationsblockedforurls_);
  } else {
    notificationsblockedforurls_ = NULL;
  }
  if (from.has_cloudprintsubmitenabled()) {
    cloudprintsubmitenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.cloudprintsubmitenabled_);
  } else {
    cloudprintsubmitenabled_ = NULL;
  }
  if (from.has_diskcachesize()) {
    diskcachesize_ = new ::enterprise_management::IntegerPolicyProto(*from.diskcachesize_);
  } else {
    diskcachesize_ = NULL;
  }
  if (from.has_mediacachesize()) {
    mediacachesize_ = new ::enterprise_management::IntegerPolicyProto(*from.mediacachesize_);
  } else {
    mediacachesize_ = NULL;
  }
  if (from.has_proxysettings()) {
    proxysettings_ = new ::enterprise_management::StringPolicyProto(*from.proxysettings_);
  } else {
    proxysettings_ = NULL;
  }
  if (from.has_disableprintpreview()) {
    disableprintpreview_ = new ::enterprise_management::BooleanPolicyProto(*from.disableprintpreview_);
  } else {
    disableprintpreview_ = NULL;
  }
  if (from.has_enableonlinerevocationchecks()) {
    enableonlinerevocationchecks_ = new ::enterprise_management::BooleanPolicyProto(*from.enableonlinerevocationchecks_);
  } else {
    enableonlinerevocationchecks_ = NULL;
  }
  if (from.has_backgroundmodeenabled()) {
    backgroundmodeenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.backgroundmodeenabled_);
  } else {
    backgroundmodeenabled_ = NULL;
  }
  if (from.has_restrictsignintopattern()) {
    restrictsignintopattern_ = new ::enterprise_management::StringPolicyProto(*from.restrictsignintopattern_);
  } else {
    restrictsignintopattern_ = NULL;
  }
  if (from.has_extensioninstallsources()) {
    extensioninstallsources_ = new ::enterprise_management::StringListPolicyProto(*from.extensioninstallsources_);
  } else {
    extensioninstallsources_ = NULL;
  }
  if (from.has_defaultmediastreamsetting()) {
    defaultmediastreamsetting_ = new ::enterprise_management::IntegerPolicyProto(*from.defaultmediastreamsetting_);
  } else {
    defaultmediastreamsetting_ = NULL;
  }
  if (from.has_disablesafebrowsingproceedanyway()) {
    disablesafebrowsingproceedanyway_ = new ::enterprise_management::BooleanPolicyProto(*from.disablesafebrowsingproceedanyway_);
  } else {
    disablesafebrowsingproceedanyway_ = NULL;
  }
  if (from.has_spellcheckserviceenabled()) {
    spellcheckserviceenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.spellcheckserviceenabled_);
  } else {
    spellcheckserviceenabled_ = NULL;
  }
  if (from.has_disablescreenshots()) {
    disablescreenshots_ = new ::enterprise_management::BooleanPolicyProto(*from.disablescreenshots_);
  } else {
    disablescreenshots_ = NULL;
  }
  if (from.has_remoteaccesshostdomain()) {
    remoteaccesshostdomain_ = new ::enterprise_management::StringPolicyProto(*from.remoteaccesshostdomain_);
  } else {
    remoteaccesshostdomain_ = NULL;
  }
  if (from.has_remoteaccesshosttalkgadgetprefix()) {
    remoteaccesshosttalkgadgetprefix_ = new ::enterprise_management::StringPolicyProto(*from.remoteaccesshosttalkgadgetprefix_);
  } else {
    remoteaccesshosttalkgadgetprefix_ = NULL;
  }
  if (from.has_remoteaccesshostrequirecurtain()) {
    remoteaccesshostrequirecurtain_ = new ::enterprise_management::BooleanPolicyProto(*from.remoteaccesshostrequirecurtain_);
  } else {
    remoteaccesshostrequirecurtain_ = NULL;
  }
  if (from.has_audiocaptureallowed()) {
    audiocaptureallowed_ = new ::enterprise_management::BooleanPolicyProto(*from.audiocaptureallowed_);
  } else {
    audiocaptureallowed_ = NULL;
  }
  if (from.has_defaultsearchprovideralternateurls()) {
    defaultsearchprovideralternateurls_ = new ::enterprise_management::StringListPolicyProto(*from.defaultsearchprovideralternateurls_);
  } else {
    defaultsearchprovideralternateurls_ = NULL;
  }
  if (from.has_forcesafesearch()) {
    forcesafesearch_ = new ::enterprise_management::BooleanPolicyProto(*from.forcesafesearch_);
  } else {
    forcesafesearch_ = NULL;
  }
  if (from.has_builtindnsclientenabled()) {
    builtindnsclientenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.builtindnsclientenabled_);
  } else {
    builtindnsclientenabled_ = NULL;
  }
  if (from.has_videocaptureallowed()) {
    videocaptureallowed_ = new ::enterprise_management::BooleanPolicyProto(*from.videocaptureallowed_);
  } else {
    videocaptureallowed_ = NULL;
  }
  if (from.has_extensionallowedtypes()) {
    extensionallowedtypes_ = new ::enterprise_management::StringListPolicyProto(*from.extensionallowedtypes_);
  } else {
    extensionallowedtypes_ = NULL;
  }
  if (from.has_allowdeletingbrowserhistory()) {
    allowdeletingbrowserhistory_ = new ::enterprise_management::BooleanPolicyProto(*from.allowdeletingbrowserhistory_);
  } else {
    allowdeletingbrowserhistory_ = NULL;
  }
  if (from.has_hidewebstoreicon()) {
    hidewebstoreicon_ = new ::enterprise_management::BooleanPolicyProto(*from.hidewebstoreicon_);
  } else {
    hidewebstoreicon_ = NULL;
  }
  if (from.has_signinallowed()) {
    signinallowed_ = new ::enterprise_management::BooleanPolicyProto(*from.signinallowed_);
  } else {
    signinallowed_ = NULL;
  }
  if (from.has_variationsrestrictparameter()) {
    variationsrestrictparameter_ = new ::enterprise_management::StringPolicyProto(*from.variationsrestrictparameter_);
  } else {
    variationsrestrictparameter_ = NULL;
  }
  if (from.has_contentpackdefaultfilteringbehavior()) {
    contentpackdefaultfilteringbehavior_ = new ::enterprise_management::IntegerPolicyProto(*from.contentpackdefaultfilteringbehavior_);
  } else {
    contentpackdefaultfilteringbehavior_ = NULL;
  }
  if (from.has_contentpackmanualbehaviorhosts()) {
    contentpackmanualbehaviorhosts_ = new ::enterprise_management::StringPolicyProto(*from.contentpackmanualbehaviorhosts_);
  } else {
    contentpackmanualbehaviorhosts_ = NULL;
  }
  if (from.has_contentpackmanualbehaviorurls()) {
    contentpackmanualbehaviorurls_ = new ::enterprise_management::StringPolicyProto(*from.contentpackmanualbehaviorurls_);
  } else {
    contentpackmanualbehaviorurls_ = NULL;
  }
  if (from.has_audiocaptureallowedurls()) {
    audiocaptureallowedurls_ = new ::enterprise_management::StringListPolicyProto(*from.audiocaptureallowedurls_);
  } else {
    audiocaptureallowedurls_ = NULL;
  }
  if (from.has_videocaptureallowedurls()) {
    videocaptureallowedurls_ = new ::enterprise_management::StringListPolicyProto(*from.videocaptureallowedurls_);
  } else {
    videocaptureallowedurls_ = NULL;
  }
  if (from.has_supervisedusercreationenabled()) {
    supervisedusercreationenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.supervisedusercreationenabled_);
  } else {
    supervisedusercreationenabled_ = NULL;
  }
  if (from.has_managedbookmarks()) {
    managedbookmarks_ = new ::enterprise_management::StringPolicyProto(*from.managedbookmarks_);
  } else {
    managedbookmarks_ = NULL;
  }
  if (from.has_maxinvalidationfetchdelay()) {
    maxinvalidationfetchdelay_ = new ::enterprise_management::IntegerPolicyProto(*from.maxinvalidationfetchdelay_);
  } else {
    maxinvalidationfetchdelay_ = NULL;
  }
  if (from.has_defaultsearchproviderimageurl()) {
    defaultsearchproviderimageurl_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchproviderimageurl_);
  } else {
    defaultsearchproviderimageurl_ = NULL;
  }
  if (from.has_defaultsearchprovidersearchurlpostparams()) {
    defaultsearchprovidersearchurlpostparams_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchprovidersearchurlpostparams_);
  } else {
    defaultsearchprovidersearchurlpostparams_ = NULL;
  }
  if (from.has_defaultsearchprovidersuggesturlpostparams()) {
    defaultsearchprovidersuggesturlpostparams_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchprovidersuggesturlpostparams_);
  } else {
    defaultsearchprovidersuggesturlpostparams_ = NULL;
  }
  if (from.has_defaultsearchproviderimageurlpostparams()) {
    defaultsearchproviderimageurlpostparams_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchproviderimageurlpostparams_);
  } else {
    defaultsearchproviderimageurlpostparams_ = NULL;
  }
  if (from.has_remoteaccesshostallowclientpairing()) {
    remoteaccesshostallowclientpairing_ = new ::enterprise_management::BooleanPolicyProto(*from.remoteaccesshostallowclientpairing_);
  } else {
    remoteaccesshostallowclientpairing_ = NULL;
  }
  if (from.has_requireonlinerevocationchecksforlocalanchors()) {
    requireonlinerevocationchecksforlocalanchors_ = new ::enterprise_management::BooleanPolicyProto(*from.requireonlinerevocationchecksforlocalanchors_);
  } else {
    requireonlinerevocationchecksforlocalanchors_ = NULL;
  }
  if (from.has_defaultsearchprovidernewtaburl()) {
    defaultsearchprovidernewtaburl_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchprovidernewtaburl_);
  } else {
    defaultsearchprovidernewtaburl_ = NULL;
  }
  if (from.has_fullscreenallowed()) {
    fullscreenallowed_ = new ::enterprise_management::BooleanPolicyProto(*from.fullscreenallowed_);
  } else {
    fullscreenallowed_ = NULL;
  }
  if (from.has_forceephemeralprofiles()) {
    forceephemeralprofiles_ = new ::enterprise_management::BooleanPolicyProto(*from.forceephemeralprofiles_);
  } else {
    forceephemeralprofiles_ = NULL;
  }
  if (from.has_nativemessagingblacklist()) {
    nativemessagingblacklist_ = new ::enterprise_management::StringListPolicyProto(*from.nativemessagingblacklist_);
  } else {
    nativemessagingblacklist_ = NULL;
  }
  if (from.has_nativemessagingwhitelist()) {
    nativemessagingwhitelist_ = new ::enterprise_management::StringListPolicyProto(*from.nativemessagingwhitelist_);
  } else {
    nativemessagingwhitelist_ = NULL;
  }
  if (from.has_nativemessaginguserlevelhosts()) {
    nativemessaginguserlevelhosts_ = new ::enterprise_management::BooleanPolicyProto(*from.nativemessaginguserlevelhosts_);
  } else {
    nativemessaginguserlevelhosts_ = NULL;
  }
  if (from.has_remoteaccesshostallowgnubbyauth()) {
    remoteaccesshostallowgnubbyauth_ = new ::enterprise_management::BooleanPolicyProto(*from.remoteaccesshostallowgnubbyauth_);
  } else {
    remoteaccesshostallowgnubbyauth_ = NULL;
  }
  if (from.has_wpadquickcheckenabled()) {
    wpadquickcheckenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.wpadquickcheckenabled_);
  } else {
    wpadquickcheckenabled_ = NULL;
  }
  if (from.has_remoteaccesshostallowrelayedconnection()) {
    remoteaccesshostallowrelayedconnection_ = new ::enterprise_management::BooleanPolicyProto(*from.remoteaccesshostallowrelayedconnection_);
  } else {
    remoteaccesshostallowrelayedconnection_ = NULL;
  }
  if (from.has_remoteaccesshostudpportrange()) {
    remoteaccesshostudpportrange_ = new ::enterprise_management::StringPolicyProto(*from.remoteaccesshostudpportrange_);
  } else {
    remoteaccesshostudpportrange_ = NULL;
  }
  if (from.has_showappsshortcutinbookmarkbar()) {
    showappsshortcutinbookmarkbar_ = new ::enterprise_management::BooleanPolicyProto(*from.showappsshortcutinbookmarkbar_);
  } else {
    showappsshortcutinbookmarkbar_ = NULL;
  }
  if (from.has_registeredprotocolhandlers()) {
    registeredprotocolhandlers_ = new ::enterprise_management::StringPolicyProto(*from.registeredprotocolhandlers_);
  } else {
    registeredprotocolhandlers_ = NULL;
  }
  if (from.has_enabledeprecatedwebplatformfeatures()) {
    enabledeprecatedwebplatformfeatures_ = new ::enterprise_management::StringListPolicyProto(*from.enabledeprecatedwebplatformfeatures_);
  } else {
    enabledeprecatedwebplatformfeatures_ = NULL;
  }
  if (from.has_networkpredictionoptions()) {
    networkpredictionoptions_ = new ::enterprise_management::IntegerPolicyProto(*from.networkpredictionoptions_);
  } else {
    networkpredictionoptions_ = NULL;
  }
  if (from.has_browserguestmodeenabled()) {
    browserguestmodeenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.browserguestmodeenabled_);
  } else {
    browserguestmodeenabled_ = NULL;
  }
  if (from.has_browseraddpersonenabled()) {
    browseraddpersonenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.browseraddpersonenabled_);
  } else {
    browseraddpersonenabled_ = NULL;
  }
  if (from.has_importautofillformdata()) {
    importautofillformdata_ = new ::enterprise_management::BooleanPolicyProto(*from.importautofillformdata_);
  } else {
    importautofillformdata_ = NULL;
  }
  if (from.has_extensionsettings()) {
    extensionsettings_ = new ::enterprise_management::StringPolicyProto(*from.extensionsettings_);
  } else {
    extensionsettings_ = NULL;
  }
  if (from.has_sslversionmin()) {
    sslversionmin_ = new ::enterprise_management::StringPolicyProto(*from.sslversionmin_);
  } else {
    sslversionmin_ = NULL;
  }
  if (from.has_forcegooglesafesearch()) {
    forcegooglesafesearch_ = new ::enterprise_management::BooleanPolicyProto(*from.forcegooglesafesearch_);
  } else {
    forcegooglesafesearch_ = NULL;
  }
  if (from.has_forceyoutubesafetymode()) {
    forceyoutubesafetymode_ = new ::enterprise_management::BooleanPolicyProto(*from.forceyoutubesafetymode_);
  } else {
    forceyoutubesafetymode_ = NULL;
  }
  if (from.has_remoteaccesshostmatchusername()) {
    remoteaccesshostmatchusername_ = new ::enterprise_management::BooleanPolicyProto(*from.remoteaccesshostmatchusername_);
  } else {
    remoteaccesshostmatchusername_ = NULL;
  }
  if (from.has_remoteaccesshosttokenurl()) {
    remoteaccesshosttokenurl_ = new ::enterprise_management::StringPolicyProto(*from.remoteaccesshosttokenurl_);
  } else {
    remoteaccesshosttokenurl_ = NULL;
  }
  if (from.has_remoteaccesshosttokenvalidationurl()) {
    remoteaccesshosttokenvalidationurl_ = new ::enterprise_management::StringPolicyProto(*from.remoteaccesshosttokenvalidationurl_);
  } else {
    remoteaccesshosttokenvalidationurl_ = NULL;
  }
  if (from.has_remoteaccesshosttokenvalidationcertificateissuer()) {
    remoteaccesshosttokenvalidationcertificateissuer_ = new ::enterprise_management::StringPolicyProto(*from.remoteaccesshosttokenvalidationcertificateissuer_);
  } else {
    remoteaccesshosttokenvalidationcertificateissuer_ = NULL;
  }
  if (from.has_safebrowsingextendedreportingoptinallowed()) {
    safebrowsingextendedreportingoptinallowed_ = new ::enterprise_management::BooleanPolicyProto(*from.safebrowsingextendedreportingoptinallowed_);
  } else {
    safebrowsingextendedreportingoptinallowed_ = NULL;
  }
  if (from.has_sslerroroverrideallowed()) {
    sslerroroverrideallowed_ = new ::enterprise_management::BooleanPolicyProto(*from.sslerroroverrideallowed_);
  } else {
    sslerroroverrideallowed_ = NULL;
  }
  if (from.has_quicallowed()) {
    quicallowed_ = new ::enterprise_management::BooleanPolicyProto(*from.quicallowed_);
  } else {
    quicallowed_ = NULL;
  }
  if (from.has_hardwareaccelerationmodeenabled()) {
    hardwareaccelerationmodeenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.hardwareaccelerationmodeenabled_);
  } else {
    hardwareaccelerationmodeenabled_ = NULL;
  }
  if (from.has_defaultprinterselection()) {
    defaultprinterselection_ = new ::enterprise_management::StringPolicyProto(*from.defaultprinterselection_);
  } else {
    defaultprinterselection_ = NULL;
  }
  if (from.has_allowdinosaureasteregg()) {
    allowdinosaureasteregg_ = new ::enterprise_management::BooleanPolicyProto(*from.allowdinosaureasteregg_);
  } else {
    allowdinosaureasteregg_ = NULL;
  }
  if (from.has_remoteaccesshostclientdomain()) {
    remoteaccesshostclientdomain_ = new ::enterprise_management::StringPolicyProto(*from.remoteaccesshostclientdomain_);
  } else {
    remoteaccesshostclientdomain_ = NULL;
  }
  if (from.has_defaultwebbluetoothguardsetting()) {
    defaultwebbluetoothguardsetting_ = new ::enterprise_management::IntegerPolicyProto(*from.defaultwebbluetoothguardsetting_);
  } else {
    defaultwebbluetoothguardsetting_ = NULL;
  }
  if (from.has_suppressunsupportedoswarning()) {
    suppressunsupportedoswarning_ = new ::enterprise_management::BooleanPolicyProto(*from.suppressunsupportedoswarning_);
  } else {
    suppressunsupportedoswarning_ = NULL;
  }
  if (from.has_taskmanagerendprocessenabled()) {
    taskmanagerendprocessenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.taskmanagerendprocessenabled_);
  } else {
    taskmanagerendprocessenabled_ = NULL;
  }
  if (from.has_alloweddomainsforapps()) {
    alloweddomainsforapps_ = new ::enterprise_management::StringPolicyProto(*from.alloweddomainsforapps_);
  } else {
    alloweddomainsforapps_ = NULL;
  }
  if (from.has_pachttpsurlstrippingenabled()) {
    pachttpsurlstrippingenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.pachttpsurlstrippingenabled_);
  } else {
    pachttpsurlstrippingenabled_ = NULL;
  }
  if (from.has_enablemediarouter()) {
    enablemediarouter_ = new ::enterprise_management::BooleanPolicyProto(*from.enablemediarouter_);
  } else {
    enablemediarouter_ = NULL;
  }
  if (from.has_certificatetransparencyenforcementdisabledforurls()) {
    certificatetransparencyenforcementdisabledforurls_ = new ::enterprise_management::StringListPolicyProto(*from.certificatetransparencyenforcementdisabledforurls_);
  } else {
    certificatetransparencyenforcementdisabledforurls_ = NULL;
  }
  if (from.has_webrtcudpportrange()) {
    webrtcudpportrange_ = new ::enterprise_management::StringPolicyProto(*from.webrtcudpportrange_);
  } else {
    webrtcudpportrange_ = NULL;
  }
  if (from.has_enablesha1forlocalanchors()) {
    enablesha1forlocalanchors_ = new ::enterprise_management::BooleanPolicyProto(*from.enablesha1forlocalanchors_);
  } else {
    enablesha1forlocalanchors_ = NULL;
  }
  if (from.has_componentupdatesenabled()) {
    componentupdatesenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.componentupdatesenabled_);
  } else {
    componentupdatesenabled_ = NULL;
  }
  if (from.has_http09onnondefaultportsenabled()) {
    http09onnondefaultportsenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.http09onnondefaultportsenabled_);
  } else {
    http09onnondefaultportsenabled_ = NULL;
  }
  if (from.has_alwaysopenpdfexternally()) {
    alwaysopenpdfexternally_ = new ::enterprise_management::BooleanPolicyProto(*from.alwaysopenpdfexternally_);
  } else {
    alwaysopenpdfexternally_ = NULL;
  }
  if (from.has_forceyoutuberestrict()) {
    forceyoutuberestrict_ = new ::enterprise_management::IntegerPolicyProto(*from.forceyoutuberestrict_);
  } else {
    forceyoutuberestrict_ = NULL;
  }
  if (from.has_newtabpagelocation()) {
    newtabpagelocation_ = new ::enterprise_management::StringPolicyProto(*from.newtabpagelocation_);
  } else {
    newtabpagelocation_ = NULL;
  }
  if (from.has_sslversionmax()) {
    sslversionmax_ = new ::enterprise_management::StringPolicyProto(*from.sslversionmax_);
  } else {
    sslversionmax_ = NULL;
  }
  if (from.has_showcasticonintoolbar()) {
    showcasticonintoolbar_ = new ::enterprise_management::BooleanPolicyProto(*from.showcasticonintoolbar_);
  } else {
    showcasticonintoolbar_ = NULL;
  }
  if (from.has_remoteaccesshostdomainlist()) {
    remoteaccesshostdomainlist_ = new ::enterprise_management::StringListPolicyProto(*from.remoteaccesshostdomainlist_);
  } else {
    remoteaccesshostdomainlist_ = NULL;
  }
  if (from.has_remoteaccesshostclientdomainlist()) {
    remoteaccesshostclientdomainlist_ = new ::enterprise_management::StringListPolicyProto(*from.remoteaccesshostclientdomainlist_);
  } else {
    remoteaccesshostclientdomainlist_ = NULL;
  }
  if (from.has_browsernetworktimequeriesenabled()) {
    browsernetworktimequeriesenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.browsernetworktimequeriesenabled_);
  } else {
    browsernetworktimequeriesenabled_ = NULL;
  }
  if (from.has_downloadrestrictions()) {
    downloadrestrictions_ = new ::enterprise_management::IntegerPolicyProto(*from.downloadrestrictions_);
  } else {
    downloadrestrictions_ = NULL;
  }
  if (from.has_printpreviewusesystemdefaultprinter()) {
    printpreviewusesystemdefaultprinter_ = new ::enterprise_management::BooleanPolicyProto(*from.printpreviewusesystemdefaultprinter_);
  } else {
    printpreviewusesystemdefaultprinter_ = NULL;
  }
  if (from.has_cloudpolicyoverridesmachinepolicy()) {
    cloudpolicyoverridesmachinepolicy_ = new ::enterprise_management::BooleanPolicyProto(*from.cloudpolicyoverridesmachinepolicy_);
  } else {
    cloudpolicyoverridesmachinepolicy_ = NULL;
  }
  if (from.has_runallflashinallowmode()) {
    runallflashinallowmode_ = new ::enterprise_management::BooleanPolicyProto(*from.runallflashinallowmode_);
  } else {
    runallflashinallowmode_ = NULL;
  }
  if (from.has_autofillcreditcardenabled()) {
    autofillcreditcardenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.autofillcreditcardenabled_);
  } else {
    autofillcreditcardenabled_ = NULL;
  }
  if (from.has_ntlmv2enabled()) {
    ntlmv2enabled_ = new ::enterprise_management::BooleanPolicyProto(*from.ntlmv2enabled_);
  } else {
    ntlmv2enabled_ = NULL;
  }
  if (from.has_promptfordownloadlocation()) {
    promptfordownloadlocation_ = new ::enterprise_management::BooleanPolicyProto(*from.promptfordownloadlocation_);
  } else {
    promptfordownloadlocation_ = NULL;
  }
  if (from.has_isolateorigins()) {
    isolateorigins_ = new ::enterprise_management::StringPolicyProto(*from.isolateorigins_);
  } else {
    isolateorigins_ = NULL;
  }
  if (from.has_siteperprocess()) {
    siteperprocess_ = new ::enterprise_management::BooleanPolicyProto(*from.siteperprocess_);
  } else {
    siteperprocess_ = NULL;
  }
  if (from.has_unsafelytreatinsecureoriginassecure()) {
    unsafelytreatinsecureoriginassecure_ = new ::enterprise_management::StringListPolicyProto(*from.unsafelytreatinsecureoriginassecure_);
  } else {
    unsafelytreatinsecureoriginassecure_ = NULL;
  }
  if (from.has_defaultdownloaddirectory()) {
    defaultdownloaddirectory_ = new ::enterprise_management::StringPolicyProto(*from.defaultdownloaddirectory_);
  } else {
    defaultdownloaddirectory_ = NULL;
  }
  if (from.has_securitykeypermitattestation()) {
    securitykeypermitattestation_ = new ::enterprise_management::StringListPolicyProto(*from.securitykeypermitattestation_);
  } else {
    securitykeypermitattestation_ = NULL;
  }
  if (from.has_abusiveexperienceinterventionenforce()) {
    abusiveexperienceinterventionenforce_ = new ::enterprise_management::BooleanPolicyProto(*from.abusiveexperienceinterventionenforce_);
  } else {
    abusiveexperienceinterventionenforce_ = NULL;
  }
  if (from.has_spellchecklanguage()) {
    spellchecklanguage_ = new ::enterprise_management::StringListPolicyProto(*from.spellchecklanguage_);
  } else {
    spellchecklanguage_ = NULL;
  }
  if (from.has_spellcheckenabled()) {
    spellcheckenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.spellcheckenabled_);
  } else {
    spellcheckenabled_ = NULL;
  }
  if (from.has_adssettingforintrusiveadssites()) {
    adssettingforintrusiveadssites_ = new ::enterprise_management::IntegerPolicyProto(*from.adssettingforintrusiveadssites_);
  } else {
    adssettingforintrusiveadssites_ = NULL;
  }
  if (from.has_passwordprotectionwarningtrigger()) {
    passwordprotectionwarningtrigger_ = new ::enterprise_management::IntegerPolicyProto(*from.passwordprotectionwarningtrigger_);
  } else {
    passwordprotectionwarningtrigger_ = NULL;
  }
  if (from.has_enablesymanteclegacyinfrastructure()) {
    enablesymanteclegacyinfrastructure_ = new ::enterprise_management::BooleanPolicyProto(*from.enablesymanteclegacyinfrastructure_);
  } else {
    enablesymanteclegacyinfrastructure_ = NULL;
  }
  if (from.has_webdriveroverridesincompatiblepolicies()) {
    webdriveroverridesincompatiblepolicies_ = new ::enterprise_management::BooleanPolicyProto(*from.webdriveroverridesincompatiblepolicies_);
  } else {
    webdriveroverridesincompatiblepolicies_ = NULL;
  }
  if (from.has_relaunchnotification()) {
    relaunchnotification_ = new ::enterprise_management::IntegerPolicyProto(*from.relaunchnotification_);
  } else {
    relaunchnotification_ = NULL;
  }
  if (from.has_relaunchnotificationperiod()) {
    relaunchnotificationperiod_ = new ::enterprise_management::IntegerPolicyProto(*from.relaunchnotificationperiod_);
  } else {
    relaunchnotificationperiod_ = NULL;
  }
  if (from.has_safebrowsingwhitelistdomains()) {
    safebrowsingwhitelistdomains_ = new ::enterprise_management::StringListPolicyProto(*from.safebrowsingwhitelistdomains_);
  } else {
    safebrowsingwhitelistdomains_ = NULL;
  }
  if (from.has_passwordprotectionloginurls()) {
    passwordprotectionloginurls_ = new ::enterprise_management::StringListPolicyProto(*from.passwordprotectionloginurls_);
  } else {
    passwordprotectionloginurls_ = NULL;
  }
  if (from.has_passwordprotectionchangepasswordurl()) {
    passwordprotectionchangepasswordurl_ = new ::enterprise_management::StringPolicyProto(*from.passwordprotectionchangepasswordurl_);
  } else {
    passwordprotectionchangepasswordurl_ = NULL;
  }
  if (from.has_machinelevelusercloudpolicyenrollmenttoken()) {
    machinelevelusercloudpolicyenrollmenttoken_ = new ::enterprise_management::StringPolicyProto(*from.machinelevelusercloudpolicyenrollmenttoken_);
  } else {
    machinelevelusercloudpolicyenrollmenttoken_ = NULL;
  }
  if (from.has_safebrowsingextendedreportingenabled()) {
    safebrowsingextendedreportingenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.safebrowsingextendedreportingenabled_);
  } else {
    safebrowsingextendedreportingenabled_ = NULL;
  }
  if (from.has_autoplayallowed()) {
    autoplayallowed_ = new ::enterprise_management::BooleanPolicyProto(*from.autoplayallowed_);
  } else {
    autoplayallowed_ = NULL;
  }
  if (from.has_autoplaywhitelist()) {
    autoplaywhitelist_ = new ::enterprise_management::StringListPolicyProto(*from.autoplaywhitelist_);
  } else {
    autoplaywhitelist_ = NULL;
  }
  if (from.has_defaultwebusbguardsetting()) {
    defaultwebusbguardsetting_ = new ::enterprise_management::IntegerPolicyProto(*from.defaultwebusbguardsetting_);
  } else {
    defaultwebusbguardsetting_ = NULL;
  }
  if (from.has_certificatetransparencyenforcementdisabledforcas()) {
    certificatetransparencyenforcementdisabledforcas_ = new ::enterprise_management::StringListPolicyProto(*from.certificatetransparencyenforcementdisabledforcas_);
  } else {
    certificatetransparencyenforcementdisabledforcas_ = NULL;
  }
  if (from.has_certificatetransparencyenforcementdisabledforlegacycas()) {
    certificatetransparencyenforcementdisabledforlegacycas_ = new ::enterprise_management::StringListPolicyProto(*from.certificatetransparencyenforcementdisabledforlegacycas_);
  } else {
    certificatetransparencyenforcementdisabledforlegacycas_ = NULL;
  }
  if (from.has_mediaroutercastallowallips()) {
    mediaroutercastallowallips_ = new ::enterprise_management::BooleanPolicyProto(*from.mediaroutercastallowallips_);
  } else {
    mediaroutercastallowallips_ = NULL;
  }
  if (from.has_webusbaskforurls()) {
    webusbaskforurls_ = new ::enterprise_management::StringListPolicyProto(*from.webusbaskforurls_);
  } else {
    webusbaskforurls_ = NULL;
  }
  if (from.has_webusbblockedforurls()) {
    webusbblockedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.webusbblockedforurls_);
  } else {
    webusbblockedforurls_ = NULL;
  }
  if (from.has_developertoolsavailability()) {
    developertoolsavailability_ = new ::enterprise_management::IntegerPolicyProto(*from.developertoolsavailability_);
  } else {
    developertoolsavailability_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:enterprise_management.CloudPolicySettings)
}

void CloudPolicySettings::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&homepagelocation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&developertoolsavailability_) -
      reinterpret_cast<char*>(&homepagelocation_)) + sizeof(developertoolsavailability_));
}

CloudPolicySettings::~CloudPolicySettings() {
  // @@protoc_insertion_point(destructor:enterprise_management.CloudPolicySettings)
  SharedDtor();
}

void CloudPolicySettings::SharedDtor() {
  if (this != internal_default_instance()) {
    delete homepagelocation_;
  }
  if (this != internal_default_instance()) {
    delete homepageisnewtabpage_;
  }
  if (this != internal_default_instance()) {
    delete defaultbrowsersettingenabled_;
  }
  if (this != internal_default_instance()) {
    delete alternateerrorpagesenabled_;
  }
  if (this != internal_default_instance()) {
    delete searchsuggestenabled_;
  }
  if (this != internal_default_instance()) {
    delete javascriptenabled_;
  }
  if (this != internal_default_instance()) {
    delete incognitoenabled_;
  }
  if (this != internal_default_instance()) {
    delete savingbrowserhistorydisabled_;
  }
  if (this != internal_default_instance()) {
    delete printingenabled_;
  }
  if (this != internal_default_instance()) {
    delete cloudprintproxyenabled_;
  }
  if (this != internal_default_instance()) {
    delete safebrowsingenabled_;
  }
  if (this != internal_default_instance()) {
    delete metricsreportingenabled_;
  }
  if (this != internal_default_instance()) {
    delete passwordmanagerenabled_;
  }
  if (this != internal_default_instance()) {
    delete autofillenabled_;
  }
  if (this != internal_default_instance()) {
    delete disabledplugins_;
  }
  if (this != internal_default_instance()) {
    delete syncdisabled_;
  }
  if (this != internal_default_instance()) {
    delete proxymode_;
  }
  if (this != internal_default_instance()) {
    delete proxyservermode_;
  }
  if (this != internal_default_instance()) {
    delete proxyserver_;
  }
  if (this != internal_default_instance()) {
    delete proxypacurl_;
  }
  if (this != internal_default_instance()) {
    delete proxybypasslist_;
  }
  if (this != internal_default_instance()) {
    delete authschemes_;
  }
  if (this != internal_default_instance()) {
    delete disableauthnegotiatecnamelookup_;
  }
  if (this != internal_default_instance()) {
    delete enableauthnegotiateport_;
  }
  if (this != internal_default_instance()) {
    delete authserverwhitelist_;
  }
  if (this != internal_default_instance()) {
    delete authnegotiatedelegatewhitelist_;
  }
  if (this != internal_default_instance()) {
    delete gssapilibraryname_;
  }
  if (this != internal_default_instance()) {
    delete extensioninstallblacklist_;
  }
  if (this != internal_default_instance()) {
    delete extensioninstallwhitelist_;
  }
  if (this != internal_default_instance()) {
    delete extensioninstallforcelist_;
  }
  if (this != internal_default_instance()) {
    delete showhomebutton_;
  }
  if (this != internal_default_instance()) {
    delete developertoolsdisabled_;
  }
  if (this != internal_default_instance()) {
    delete restoreonstartup_;
  }
  if (this != internal_default_instance()) {
    delete restoreonstartupurls_;
  }
  if (this != internal_default_instance()) {
    delete blockthirdpartycookies_;
  }
  if (this != internal_default_instance()) {
    delete defaultsearchproviderenabled_;
  }
  if (this != internal_default_instance()) {
    delete defaultsearchprovidername_;
  }
  if (this != internal_default_instance()) {
    delete defaultsearchproviderkeyword_;
  }
  if (this != internal_default_instance()) {
    delete defaultsearchprovidersearchurl_;
  }
  if (this != internal_default_instance()) {
    delete defaultsearchprovidersuggesturl_;
  }
  if (this != internal_default_instance()) {
    delete defaultsearchprovidericonurl_;
  }
  if (this != internal_default_instance()) {
    delete defaultsearchproviderencodings_;
  }
  if (this != internal_default_instance()) {
    delete defaultcookiessetting_;
  }
  if (this != internal_default_instance()) {
    delete defaultimagessetting_;
  }
  if (this != internal_default_instance()) {
    delete defaultjavascriptsetting_;
  }
  if (this != internal_default_instance()) {
    delete defaultpluginssetting_;
  }
  if (this != internal_default_instance()) {
    delete defaultpopupssetting_;
  }
  if (this != internal_default_instance()) {
    delete defaultnotificationssetting_;
  }
  if (this != internal_default_instance()) {
    delete defaultgeolocationsetting_;
  }
  if (this != internal_default_instance()) {
    delete disable3dapis_;
  }
  if (this != internal_default_instance()) {
    delete downloaddirectory_;
  }
  if (this != internal_default_instance()) {
    delete cookiesblockedforurls_;
  }
  if (this != internal_default_instance()) {
    delete cookiessessiononlyforurls_;
  }
  if (this != internal_default_instance()) {
    delete imagesallowedforurls_;
  }
  if (this != internal_default_instance()) {
    delete imagesblockedforurls_;
  }
  if (this != internal_default_instance()) {
    delete javascriptallowedforurls_;
  }
  if (this != internal_default_instance()) {
    delete javascriptblockedforurls_;
  }
  if (this != internal_default_instance()) {
    delete pluginsallowedforurls_;
  }
  if (this != internal_default_instance()) {
    delete pluginsblockedforurls_;
  }
  if (this != internal_default_instance()) {
    delete popupsallowedforurls_;
  }
  if (this != internal_default_instance()) {
    delete popupsblockedforurls_;
  }
  if (this != internal_default_instance()) {
    delete cookiesallowedforurls_;
  }
  if (this != internal_default_instance()) {
    delete enabledplugins_;
  }
  if (this != internal_default_instance()) {
    delete disabledpluginsexceptions_;
  }
  if (this != internal_default_instance()) {
    delete translateenabled_;
  }
  if (this != internal_default_instance()) {
    delete allowoutdatedplugins_;
  }
  if (this != internal_default_instance()) {
    delete bookmarkbarenabled_;
  }
  if (this != internal_default_instance()) {
    delete editbookmarksenabled_;
  }
  if (this != internal_default_instance()) {
    delete allowfileselectiondialogs_;
  }
  if (this != internal_default_instance()) {
    delete disabledschemes_;
  }
  if (this != internal_default_instance()) {
    delete diskcachedir_;
  }
  if (this != internal_default_instance()) {
    delete allowcrossoriginauthprompt_;
  }
  if (this != internal_default_instance()) {
    delete maxconnectionsperproxy_;
  }
  if (this != internal_default_instance()) {
    delete incognitomodeavailability_;
  }
  if (this != internal_default_instance()) {
    delete remoteaccesshostfirewalltraversal_;
  }
  if (this != internal_default_instance()) {
    delete importbookmarks_;
  }
  if (this != internal_default_instance()) {
    delete importhistory_;
  }
  if (this != internal_default_instance()) {
    delete importhomepage_;
  }
  if (this != internal_default_instance()) {
    delete importsearchengine_;
  }
  if (this != internal_default_instance()) {
    delete importsavedpasswords_;
  }
  if (this != internal_default_instance()) {
    delete autoselectcertificateforurls_;
  }
  if (this != internal_default_instance()) {
    delete urlblacklist_;
  }
  if (this != internal_default_instance()) {
    delete urlwhitelist_;
  }
  if (this != internal_default_instance()) {
    delete notificationsallowedforurls_;
  }
  if (this != internal_default_instance()) {
    delete notificationsblockedforurls_;
  }
  if (this != internal_default_instance()) {
    delete cloudprintsubmitenabled_;
  }
  if (this != internal_default_instance()) {
    delete diskcachesize_;
  }
  if (this != internal_default_instance()) {
    delete mediacachesize_;
  }
  if (this != internal_default_instance()) {
    delete proxysettings_;
  }
  if (this != internal_default_instance()) {
    delete disableprintpreview_;
  }
  if (this != internal_default_instance()) {
    delete enableonlinerevocationchecks_;
  }
  if (this != internal_default_instance()) {
    delete backgroundmodeenabled_;
  }
  if (this != internal_default_instance()) {
    delete restrictsignintopattern_;
  }
  if (this != internal_default_instance()) {
    delete extensioninstallsources_;
  }
  if (this != internal_default_instance()) {
    delete defaultmediastreamsetting_;
  }
  if (this != internal_default_instance()) {
    delete disablesafebrowsingproceedanyway_;
  }
  if (this != internal_default_instance()) {
    delete spellcheckserviceenabled_;
  }
  if (this != internal_default_instance()) {
    delete disablescreenshots_;
  }
  if (this != internal_default_instance()) {
    delete remoteaccesshostdomain_;
  }
  if (this != internal_default_instance()) {
    delete remoteaccesshosttalkgadgetprefix_;
  }
  if (this != internal_default_instance()) {
    delete remoteaccesshostrequirecurtain_;
  }
  if (this != internal_default_instance()) {
    delete audiocaptureallowed_;
  }
  if (this != internal_default_instance()) {
    delete defaultsearchprovideralternateurls_;
  }
  if (this != internal_default_instance()) {
    delete forcesafesearch_;
  }
  if (this != internal_default_instance()) {
    delete builtindnsclientenabled_;
  }
  if (this != internal_default_instance()) {
    delete videocaptureallowed_;
  }
  if (this != internal_default_instance()) {
    delete extensionallowedtypes_;
  }
  if (this != internal_default_instance()) {
    delete allowdeletingbrowserhistory_;
  }
  if (this != internal_default_instance()) {
    delete hidewebstoreicon_;
  }
  if (this != internal_default_instance()) {
    delete signinallowed_;
  }
  if (this != internal_default_instance()) {
    delete variationsrestrictparameter_;
  }
  if (this != internal_default_instance()) {
    delete contentpackdefaultfilteringbehavior_;
  }
  if (this != internal_default_instance()) {
    delete contentpackmanualbehaviorhosts_;
  }
  if (this != internal_default_instance()) {
    delete contentpackmanualbehaviorurls_;
  }
  if (this != internal_default_instance()) {
    delete audiocaptureallowedurls_;
  }
  if (this != internal_default_instance()) {
    delete videocaptureallowedurls_;
  }
  if (this != internal_default_instance()) {
    delete supervisedusercreationenabled_;
  }
  if (this != internal_default_instance()) {
    delete managedbookmarks_;
  }
  if (this != internal_default_instance()) {
    delete maxinvalidationfetchdelay_;
  }
  if (this != internal_default_instance()) {
    delete defaultsearchproviderimageurl_;
  }
  if (this != internal_default_instance()) {
    delete defaultsearchprovidersearchurlpostparams_;
  }
  if (this != internal_default_instance()) {
    delete defaultsearchprovidersuggesturlpostparams_;
  }
  if (this != internal_default_instance()) {
    delete defaultsearchproviderimageurlpostparams_;
  }
  if (this != internal_default_instance()) {
    delete remoteaccesshostallowclientpairing_;
  }
  if (this != internal_default_instance()) {
    delete requireonlinerevocationchecksforlocalanchors_;
  }
  if (this != internal_default_instance()) {
    delete defaultsearchprovidernewtaburl_;
  }
  if (this != internal_default_instance()) {
    delete fullscreenallowed_;
  }
  if (this != internal_default_instance()) {
    delete forceephemeralprofiles_;
  }
  if (this != internal_default_instance()) {
    delete nativemessagingblacklist_;
  }
  if (this != internal_default_instance()) {
    delete nativemessagingwhitelist_;
  }
  if (this != internal_default_instance()) {
    delete nativemessaginguserlevelhosts_;
  }
  if (this != internal_default_instance()) {
    delete remoteaccesshostallowgnubbyauth_;
  }
  if (this != internal_default_instance()) {
    delete wpadquickcheckenabled_;
  }
  if (this != internal_default_instance()) {
    delete remoteaccesshostallowrelayedconnection_;
  }
  if (this != internal_default_instance()) {
    delete remoteaccesshostudpportrange_;
  }
  if (this != internal_default_instance()) {
    delete showappsshortcutinbookmarkbar_;
  }
  if (this != internal_default_instance()) {
    delete registeredprotocolhandlers_;
  }
  if (this != internal_default_instance()) {
    delete enabledeprecatedwebplatformfeatures_;
  }
  if (this != internal_default_instance()) {
    delete networkpredictionoptions_;
  }
  if (this != internal_default_instance()) {
    delete browserguestmodeenabled_;
  }
  if (this != internal_default_instance()) {
    delete browseraddpersonenabled_;
  }
  if (this != internal_default_instance()) {
    delete importautofillformdata_;
  }
  if (this != internal_default_instance()) {
    delete extensionsettings_;
  }
  if (this != internal_default_instance()) {
    delete sslversionmin_;
  }
  if (this != internal_default_instance()) {
    delete forcegooglesafesearch_;
  }
  if (this != internal_default_instance()) {
    delete forceyoutubesafetymode_;
  }
  if (this != internal_default_instance()) {
    delete remoteaccesshostmatchusername_;
  }
  if (this != internal_default_instance()) {
    delete remoteaccesshosttokenurl_;
  }
  if (this != internal_default_instance()) {
    delete remoteaccesshosttokenvalidationurl_;
  }
  if (this != internal_default_instance()) {
    delete remoteaccesshosttokenvalidationcertificateissuer_;
  }
  if (this != internal_default_instance()) {
    delete safebrowsingextendedreportingoptinallowed_;
  }
  if (this != internal_default_instance()) {
    delete sslerroroverrideallowed_;
  }
  if (this != internal_default_instance()) {
    delete quicallowed_;
  }
  if (this != internal_default_instance()) {
    delete hardwareaccelerationmodeenabled_;
  }
  if (this != internal_default_instance()) {
    delete defaultprinterselection_;
  }
  if (this != internal_default_instance()) {
    delete allowdinosaureasteregg_;
  }
  if (this != internal_default_instance()) {
    delete remoteaccesshostclientdomain_;
  }
  if (this != internal_default_instance()) {
    delete defaultwebbluetoothguardsetting_;
  }
  if (this != internal_default_instance()) {
    delete suppressunsupportedoswarning_;
  }
  if (this != internal_default_instance()) {
    delete taskmanagerendprocessenabled_;
  }
  if (this != internal_default_instance()) {
    delete alloweddomainsforapps_;
  }
  if (this != internal_default_instance()) {
    delete pachttpsurlstrippingenabled_;
  }
  if (this != internal_default_instance()) {
    delete enablemediarouter_;
  }
  if (this != internal_default_instance()) {
    delete certificatetransparencyenforcementdisabledforurls_;
  }
  if (this != internal_default_instance()) {
    delete webrtcudpportrange_;
  }
  if (this != internal_default_instance()) {
    delete enablesha1forlocalanchors_;
  }
  if (this != internal_default_instance()) {
    delete componentupdatesenabled_;
  }
  if (this != internal_default_instance()) {
    delete http09onnondefaultportsenabled_;
  }
  if (this != internal_default_instance()) {
    delete alwaysopenpdfexternally_;
  }
  if (this != internal_default_instance()) {
    delete forceyoutuberestrict_;
  }
  if (this != internal_default_instance()) {
    delete newtabpagelocation_;
  }
  if (this != internal_default_instance()) {
    delete sslversionmax_;
  }
  if (this != internal_default_instance()) {
    delete showcasticonintoolbar_;
  }
  if (this != internal_default_instance()) {
    delete remoteaccesshostdomainlist_;
  }
  if (this != internal_default_instance()) {
    delete remoteaccesshostclientdomainlist_;
  }
  if (this != internal_default_instance()) {
    delete browsernetworktimequeriesenabled_;
  }
  if (this != internal_default_instance()) {
    delete downloadrestrictions_;
  }
  if (this != internal_default_instance()) {
    delete printpreviewusesystemdefaultprinter_;
  }
  if (this != internal_default_instance()) {
    delete cloudpolicyoverridesmachinepolicy_;
  }
  if (this != internal_default_instance()) {
    delete runallflashinallowmode_;
  }
  if (this != internal_default_instance()) {
    delete autofillcreditcardenabled_;
  }
  if (this != internal_default_instance()) {
    delete ntlmv2enabled_;
  }
  if (this != internal_default_instance()) {
    delete promptfordownloadlocation_;
  }
  if (this != internal_default_instance()) {
    delete isolateorigins_;
  }
  if (this != internal_default_instance()) {
    delete siteperprocess_;
  }
  if (this != internal_default_instance()) {
    delete unsafelytreatinsecureoriginassecure_;
  }
  if (this != internal_default_instance()) {
    delete defaultdownloaddirectory_;
  }
  if (this != internal_default_instance()) {
    delete securitykeypermitattestation_;
  }
  if (this != internal_default_instance()) {
    delete abusiveexperienceinterventionenforce_;
  }
  if (this != internal_default_instance()) {
    delete spellchecklanguage_;
  }
  if (this != internal_default_instance()) {
    delete spellcheckenabled_;
  }
  if (this != internal_default_instance()) {
    delete adssettingforintrusiveadssites_;
  }
  if (this != internal_default_instance()) {
    delete passwordprotectionwarningtrigger_;
  }
  if (this != internal_default_instance()) {
    delete enablesymanteclegacyinfrastructure_;
  }
  if (this != internal_default_instance()) {
    delete webdriveroverridesincompatiblepolicies_;
  }
  if (this != internal_default_instance()) {
    delete relaunchnotification_;
  }
  if (this != internal_default_instance()) {
    delete relaunchnotificationperiod_;
  }
  if (this != internal_default_instance()) {
    delete safebrowsingwhitelistdomains_;
  }
  if (this != internal_default_instance()) {
    delete passwordprotectionloginurls_;
  }
  if (this != internal_default_instance()) {
    delete passwordprotectionchangepasswordurl_;
  }
  if (this != internal_default_instance()) {
    delete machinelevelusercloudpolicyenrollmenttoken_;
  }
  if (this != internal_default_instance()) {
    delete safebrowsingextendedreportingenabled_;
  }
  if (this != internal_default_instance()) {
    delete autoplayallowed_;
  }
  if (this != internal_default_instance()) {
    delete autoplaywhitelist_;
  }
  if (this != internal_default_instance()) {
    delete defaultwebusbguardsetting_;
  }
  if (this != internal_default_instance()) {
    delete certificatetransparencyenforcementdisabledforcas_;
  }
  if (this != internal_default_instance()) {
    delete certificatetransparencyenforcementdisabledforlegacycas_;
  }
  if (this != internal_default_instance()) {
    delete mediaroutercastallowallips_;
  }
  if (this != internal_default_instance()) {
    delete webusbaskforurls_;
  }
  if (this != internal_default_instance()) {
    delete webusbblockedforurls_;
  }
  if (this != internal_default_instance()) {
    delete developertoolsavailability_;
  }
}

void CloudPolicySettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CloudPolicySettings& CloudPolicySettings::default_instance() {
  protobuf_cloud_5fpolicy_2eproto::InitDefaults();
  return *internal_default_instance();
}

CloudPolicySettings* CloudPolicySettings::New(::google::protobuf::Arena* arena) const {
  CloudPolicySettings* n = new CloudPolicySettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloudPolicySettings::Clear() {
// @@protoc_insertion_point(message_clear_start:enterprise_management.CloudPolicySettings)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_homepagelocation()) {
      GOOGLE_DCHECK(homepagelocation_ != NULL);
      homepagelocation_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_homepageisnewtabpage()) {
      GOOGLE_DCHECK(homepageisnewtabpage_ != NULL);
      homepageisnewtabpage_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_defaultbrowsersettingenabled()) {
      GOOGLE_DCHECK(defaultbrowsersettingenabled_ != NULL);
      defaultbrowsersettingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_alternateerrorpagesenabled()) {
      GOOGLE_DCHECK(alternateerrorpagesenabled_ != NULL);
      alternateerrorpagesenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_searchsuggestenabled()) {
      GOOGLE_DCHECK(searchsuggestenabled_ != NULL);
      searchsuggestenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_javascriptenabled()) {
      GOOGLE_DCHECK(javascriptenabled_ != NULL);
      javascriptenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_incognitoenabled()) {
      GOOGLE_DCHECK(incognitoenabled_ != NULL);
      incognitoenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_savingbrowserhistorydisabled()) {
      GOOGLE_DCHECK(savingbrowserhistorydisabled_ != NULL);
      savingbrowserhistorydisabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    if (has_printingenabled()) {
      GOOGLE_DCHECK(printingenabled_ != NULL);
      printingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_cloudprintproxyenabled()) {
      GOOGLE_DCHECK(cloudprintproxyenabled_ != NULL);
      cloudprintproxyenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_safebrowsingenabled()) {
      GOOGLE_DCHECK(safebrowsingenabled_ != NULL);
      safebrowsingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_metricsreportingenabled()) {
      GOOGLE_DCHECK(metricsreportingenabled_ != NULL);
      metricsreportingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_passwordmanagerenabled()) {
      GOOGLE_DCHECK(passwordmanagerenabled_ != NULL);
      passwordmanagerenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_autofillenabled()) {
      GOOGLE_DCHECK(autofillenabled_ != NULL);
      autofillenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_disabledplugins()) {
      GOOGLE_DCHECK(disabledplugins_ != NULL);
      disabledplugins_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_syncdisabled()) {
      GOOGLE_DCHECK(syncdisabled_ != NULL);
      syncdisabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 16711680u) {
    if (has_proxymode()) {
      GOOGLE_DCHECK(proxymode_ != NULL);
      proxymode_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_proxyservermode()) {
      GOOGLE_DCHECK(proxyservermode_ != NULL);
      proxyservermode_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_proxyserver()) {
      GOOGLE_DCHECK(proxyserver_ != NULL);
      proxyserver_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_proxypacurl()) {
      GOOGLE_DCHECK(proxypacurl_ != NULL);
      proxypacurl_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_proxybypasslist()) {
      GOOGLE_DCHECK(proxybypasslist_ != NULL);
      proxybypasslist_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_authschemes()) {
      GOOGLE_DCHECK(authschemes_ != NULL);
      authschemes_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_disableauthnegotiatecnamelookup()) {
      GOOGLE_DCHECK(disableauthnegotiatecnamelookup_ != NULL);
      disableauthnegotiatecnamelookup_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_enableauthnegotiateport()) {
      GOOGLE_DCHECK(enableauthnegotiateport_ != NULL);
      enableauthnegotiateport_->::enterprise_management::BooleanPolicyProto::Clear();
    }
  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    if (has_authserverwhitelist()) {
      GOOGLE_DCHECK(authserverwhitelist_ != NULL);
      authserverwhitelist_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_authnegotiatedelegatewhitelist()) {
      GOOGLE_DCHECK(authnegotiatedelegatewhitelist_ != NULL);
      authnegotiatedelegatewhitelist_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_gssapilibraryname()) {
      GOOGLE_DCHECK(gssapilibraryname_ != NULL);
      gssapilibraryname_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_extensioninstallblacklist()) {
      GOOGLE_DCHECK(extensioninstallblacklist_ != NULL);
      extensioninstallblacklist_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_extensioninstallwhitelist()) {
      GOOGLE_DCHECK(extensioninstallwhitelist_ != NULL);
      extensioninstallwhitelist_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_extensioninstallforcelist()) {
      GOOGLE_DCHECK(extensioninstallforcelist_ != NULL);
      extensioninstallforcelist_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_showhomebutton()) {
      GOOGLE_DCHECK(showhomebutton_ != NULL);
      showhomebutton_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_developertoolsdisabled()) {
      GOOGLE_DCHECK(developertoolsdisabled_ != NULL);
      developertoolsdisabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
  }
  if (_has_bits_[32 / 32] & 255u) {
    if (has_restoreonstartup()) {
      GOOGLE_DCHECK(restoreonstartup_ != NULL);
      restoreonstartup_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_restoreonstartupurls()) {
      GOOGLE_DCHECK(restoreonstartupurls_ != NULL);
      restoreonstartupurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_blockthirdpartycookies()) {
      GOOGLE_DCHECK(blockthirdpartycookies_ != NULL);
      blockthirdpartycookies_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_defaultsearchproviderenabled()) {
      GOOGLE_DCHECK(defaultsearchproviderenabled_ != NULL);
      defaultsearchproviderenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_defaultsearchprovidername()) {
      GOOGLE_DCHECK(defaultsearchprovidername_ != NULL);
      defaultsearchprovidername_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_defaultsearchproviderkeyword()) {
      GOOGLE_DCHECK(defaultsearchproviderkeyword_ != NULL);
      defaultsearchproviderkeyword_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_defaultsearchprovidersearchurl()) {
      GOOGLE_DCHECK(defaultsearchprovidersearchurl_ != NULL);
      defaultsearchprovidersearchurl_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_defaultsearchprovidersuggesturl()) {
      GOOGLE_DCHECK(defaultsearchprovidersuggesturl_ != NULL);
      defaultsearchprovidersuggesturl_->::enterprise_management::StringPolicyProto::Clear();
    }
  }
  if (_has_bits_[40 / 32] & 65280u) {
    if (has_defaultsearchprovidericonurl()) {
      GOOGLE_DCHECK(defaultsearchprovidericonurl_ != NULL);
      defaultsearchprovidericonurl_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_defaultsearchproviderencodings()) {
      GOOGLE_DCHECK(defaultsearchproviderencodings_ != NULL);
      defaultsearchproviderencodings_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_defaultcookiessetting()) {
      GOOGLE_DCHECK(defaultcookiessetting_ != NULL);
      defaultcookiessetting_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_defaultimagessetting()) {
      GOOGLE_DCHECK(defaultimagessetting_ != NULL);
      defaultimagessetting_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_defaultjavascriptsetting()) {
      GOOGLE_DCHECK(defaultjavascriptsetting_ != NULL);
      defaultjavascriptsetting_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_defaultpluginssetting()) {
      GOOGLE_DCHECK(defaultpluginssetting_ != NULL);
      defaultpluginssetting_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_defaultpopupssetting()) {
      GOOGLE_DCHECK(defaultpopupssetting_ != NULL);
      defaultpopupssetting_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_defaultnotificationssetting()) {
      GOOGLE_DCHECK(defaultnotificationssetting_ != NULL);
      defaultnotificationssetting_->::enterprise_management::IntegerPolicyProto::Clear();
    }
  }
  if (_has_bits_[48 / 32] & 16711680u) {
    if (has_defaultgeolocationsetting()) {
      GOOGLE_DCHECK(defaultgeolocationsetting_ != NULL);
      defaultgeolocationsetting_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_disable3dapis()) {
      GOOGLE_DCHECK(disable3dapis_ != NULL);
      disable3dapis_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_downloaddirectory()) {
      GOOGLE_DCHECK(downloaddirectory_ != NULL);
      downloaddirectory_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_cookiesblockedforurls()) {
      GOOGLE_DCHECK(cookiesblockedforurls_ != NULL);
      cookiesblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_cookiessessiononlyforurls()) {
      GOOGLE_DCHECK(cookiessessiononlyforurls_ != NULL);
      cookiessessiononlyforurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_imagesallowedforurls()) {
      GOOGLE_DCHECK(imagesallowedforurls_ != NULL);
      imagesallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_imagesblockedforurls()) {
      GOOGLE_DCHECK(imagesblockedforurls_ != NULL);
      imagesblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_javascriptallowedforurls()) {
      GOOGLE_DCHECK(javascriptallowedforurls_ != NULL);
      javascriptallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
  }
  if (_has_bits_[56 / 32] & 4278190080u) {
    if (has_javascriptblockedforurls()) {
      GOOGLE_DCHECK(javascriptblockedforurls_ != NULL);
      javascriptblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_pluginsallowedforurls()) {
      GOOGLE_DCHECK(pluginsallowedforurls_ != NULL);
      pluginsallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_pluginsblockedforurls()) {
      GOOGLE_DCHECK(pluginsblockedforurls_ != NULL);
      pluginsblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_popupsallowedforurls()) {
      GOOGLE_DCHECK(popupsallowedforurls_ != NULL);
      popupsallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_popupsblockedforurls()) {
      GOOGLE_DCHECK(popupsblockedforurls_ != NULL);
      popupsblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_cookiesallowedforurls()) {
      GOOGLE_DCHECK(cookiesallowedforurls_ != NULL);
      cookiesallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_enabledplugins()) {
      GOOGLE_DCHECK(enabledplugins_ != NULL);
      enabledplugins_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_disabledpluginsexceptions()) {
      GOOGLE_DCHECK(disabledpluginsexceptions_ != NULL);
      disabledpluginsexceptions_->::enterprise_management::StringListPolicyProto::Clear();
    }
  }
  if (_has_bits_[64 / 32] & 255u) {
    if (has_translateenabled()) {
      GOOGLE_DCHECK(translateenabled_ != NULL);
      translateenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_allowoutdatedplugins()) {
      GOOGLE_DCHECK(allowoutdatedplugins_ != NULL);
      allowoutdatedplugins_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_bookmarkbarenabled()) {
      GOOGLE_DCHECK(bookmarkbarenabled_ != NULL);
      bookmarkbarenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_editbookmarksenabled()) {
      GOOGLE_DCHECK(editbookmarksenabled_ != NULL);
      editbookmarksenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_allowfileselectiondialogs()) {
      GOOGLE_DCHECK(allowfileselectiondialogs_ != NULL);
      allowfileselectiondialogs_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_disabledschemes()) {
      GOOGLE_DCHECK(disabledschemes_ != NULL);
      disabledschemes_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_diskcachedir()) {
      GOOGLE_DCHECK(diskcachedir_ != NULL);
      diskcachedir_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_allowcrossoriginauthprompt()) {
      GOOGLE_DCHECK(allowcrossoriginauthprompt_ != NULL);
      allowcrossoriginauthprompt_->::enterprise_management::BooleanPolicyProto::Clear();
    }
  }
  if (_has_bits_[72 / 32] & 65280u) {
    if (has_maxconnectionsperproxy()) {
      GOOGLE_DCHECK(maxconnectionsperproxy_ != NULL);
      maxconnectionsperproxy_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_incognitomodeavailability()) {
      GOOGLE_DCHECK(incognitomodeavailability_ != NULL);
      incognitomodeavailability_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_remoteaccesshostfirewalltraversal()) {
      GOOGLE_DCHECK(remoteaccesshostfirewalltraversal_ != NULL);
      remoteaccesshostfirewalltraversal_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_importbookmarks()) {
      GOOGLE_DCHECK(importbookmarks_ != NULL);
      importbookmarks_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_importhistory()) {
      GOOGLE_DCHECK(importhistory_ != NULL);
      importhistory_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_importhomepage()) {
      GOOGLE_DCHECK(importhomepage_ != NULL);
      importhomepage_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_importsearchengine()) {
      GOOGLE_DCHECK(importsearchengine_ != NULL);
      importsearchengine_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_importsavedpasswords()) {
      GOOGLE_DCHECK(importsavedpasswords_ != NULL);
      importsavedpasswords_->::enterprise_management::BooleanPolicyProto::Clear();
    }
  }
  if (_has_bits_[80 / 32] & 16711680u) {
    if (has_autoselectcertificateforurls()) {
      GOOGLE_DCHECK(autoselectcertificateforurls_ != NULL);
      autoselectcertificateforurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_urlblacklist()) {
      GOOGLE_DCHECK(urlblacklist_ != NULL);
      urlblacklist_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_urlwhitelist()) {
      GOOGLE_DCHECK(urlwhitelist_ != NULL);
      urlwhitelist_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_notificationsallowedforurls()) {
      GOOGLE_DCHECK(notificationsallowedforurls_ != NULL);
      notificationsallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_notificationsblockedforurls()) {
      GOOGLE_DCHECK(notificationsblockedforurls_ != NULL);
      notificationsblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_cloudprintsubmitenabled()) {
      GOOGLE_DCHECK(cloudprintsubmitenabled_ != NULL);
      cloudprintsubmitenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_diskcachesize()) {
      GOOGLE_DCHECK(diskcachesize_ != NULL);
      diskcachesize_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_mediacachesize()) {
      GOOGLE_DCHECK(mediacachesize_ != NULL);
      mediacachesize_->::enterprise_management::IntegerPolicyProto::Clear();
    }
  }
  if (_has_bits_[88 / 32] & 4278190080u) {
    if (has_proxysettings()) {
      GOOGLE_DCHECK(proxysettings_ != NULL);
      proxysettings_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_disableprintpreview()) {
      GOOGLE_DCHECK(disableprintpreview_ != NULL);
      disableprintpreview_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_enableonlinerevocationchecks()) {
      GOOGLE_DCHECK(enableonlinerevocationchecks_ != NULL);
      enableonlinerevocationchecks_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_backgroundmodeenabled()) {
      GOOGLE_DCHECK(backgroundmodeenabled_ != NULL);
      backgroundmodeenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_restrictsignintopattern()) {
      GOOGLE_DCHECK(restrictsignintopattern_ != NULL);
      restrictsignintopattern_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_extensioninstallsources()) {
      GOOGLE_DCHECK(extensioninstallsources_ != NULL);
      extensioninstallsources_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_defaultmediastreamsetting()) {
      GOOGLE_DCHECK(defaultmediastreamsetting_ != NULL);
      defaultmediastreamsetting_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_disablesafebrowsingproceedanyway()) {
      GOOGLE_DCHECK(disablesafebrowsingproceedanyway_ != NULL);
      disablesafebrowsingproceedanyway_->::enterprise_management::BooleanPolicyProto::Clear();
    }
  }
  if (_has_bits_[96 / 32] & 255u) {
    if (has_spellcheckserviceenabled()) {
      GOOGLE_DCHECK(spellcheckserviceenabled_ != NULL);
      spellcheckserviceenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_disablescreenshots()) {
      GOOGLE_DCHECK(disablescreenshots_ != NULL);
      disablescreenshots_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_remoteaccesshostdomain()) {
      GOOGLE_DCHECK(remoteaccesshostdomain_ != NULL);
      remoteaccesshostdomain_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_remoteaccesshosttalkgadgetprefix()) {
      GOOGLE_DCHECK(remoteaccesshosttalkgadgetprefix_ != NULL);
      remoteaccesshosttalkgadgetprefix_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_remoteaccesshostrequirecurtain()) {
      GOOGLE_DCHECK(remoteaccesshostrequirecurtain_ != NULL);
      remoteaccesshostrequirecurtain_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_audiocaptureallowed()) {
      GOOGLE_DCHECK(audiocaptureallowed_ != NULL);
      audiocaptureallowed_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_defaultsearchprovideralternateurls()) {
      GOOGLE_DCHECK(defaultsearchprovideralternateurls_ != NULL);
      defaultsearchprovideralternateurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_forcesafesearch()) {
      GOOGLE_DCHECK(forcesafesearch_ != NULL);
      forcesafesearch_->::enterprise_management::BooleanPolicyProto::Clear();
    }
  }
  if (_has_bits_[104 / 32] & 65280u) {
    if (has_builtindnsclientenabled()) {
      GOOGLE_DCHECK(builtindnsclientenabled_ != NULL);
      builtindnsclientenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_videocaptureallowed()) {
      GOOGLE_DCHECK(videocaptureallowed_ != NULL);
      videocaptureallowed_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_extensionallowedtypes()) {
      GOOGLE_DCHECK(extensionallowedtypes_ != NULL);
      extensionallowedtypes_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_allowdeletingbrowserhistory()) {
      GOOGLE_DCHECK(allowdeletingbrowserhistory_ != NULL);
      allowdeletingbrowserhistory_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_hidewebstoreicon()) {
      GOOGLE_DCHECK(hidewebstoreicon_ != NULL);
      hidewebstoreicon_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_signinallowed()) {
      GOOGLE_DCHECK(signinallowed_ != NULL);
      signinallowed_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_variationsrestrictparameter()) {
      GOOGLE_DCHECK(variationsrestrictparameter_ != NULL);
      variationsrestrictparameter_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_contentpackdefaultfilteringbehavior()) {
      GOOGLE_DCHECK(contentpackdefaultfilteringbehavior_ != NULL);
      contentpackdefaultfilteringbehavior_->::enterprise_management::IntegerPolicyProto::Clear();
    }
  }
  if (_has_bits_[112 / 32] & 16711680u) {
    if (has_contentpackmanualbehaviorhosts()) {
      GOOGLE_DCHECK(contentpackmanualbehaviorhosts_ != NULL);
      contentpackmanualbehaviorhosts_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_contentpackmanualbehaviorurls()) {
      GOOGLE_DCHECK(contentpackmanualbehaviorurls_ != NULL);
      contentpackmanualbehaviorurls_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_audiocaptureallowedurls()) {
      GOOGLE_DCHECK(audiocaptureallowedurls_ != NULL);
      audiocaptureallowedurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_videocaptureallowedurls()) {
      GOOGLE_DCHECK(videocaptureallowedurls_ != NULL);
      videocaptureallowedurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_supervisedusercreationenabled()) {
      GOOGLE_DCHECK(supervisedusercreationenabled_ != NULL);
      supervisedusercreationenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_managedbookmarks()) {
      GOOGLE_DCHECK(managedbookmarks_ != NULL);
      managedbookmarks_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_maxinvalidationfetchdelay()) {
      GOOGLE_DCHECK(maxinvalidationfetchdelay_ != NULL);
      maxinvalidationfetchdelay_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_defaultsearchproviderimageurl()) {
      GOOGLE_DCHECK(defaultsearchproviderimageurl_ != NULL);
      defaultsearchproviderimageurl_->::enterprise_management::StringPolicyProto::Clear();
    }
  }
  if (_has_bits_[120 / 32] & 4278190080u) {
    if (has_defaultsearchprovidersearchurlpostparams()) {
      GOOGLE_DCHECK(defaultsearchprovidersearchurlpostparams_ != NULL);
      defaultsearchprovidersearchurlpostparams_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_defaultsearchprovidersuggesturlpostparams()) {
      GOOGLE_DCHECK(defaultsearchprovidersuggesturlpostparams_ != NULL);
      defaultsearchprovidersuggesturlpostparams_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_defaultsearchproviderimageurlpostparams()) {
      GOOGLE_DCHECK(defaultsearchproviderimageurlpostparams_ != NULL);
      defaultsearchproviderimageurlpostparams_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_remoteaccesshostallowclientpairing()) {
      GOOGLE_DCHECK(remoteaccesshostallowclientpairing_ != NULL);
      remoteaccesshostallowclientpairing_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_requireonlinerevocationchecksforlocalanchors()) {
      GOOGLE_DCHECK(requireonlinerevocationchecksforlocalanchors_ != NULL);
      requireonlinerevocationchecksforlocalanchors_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_defaultsearchprovidernewtaburl()) {
      GOOGLE_DCHECK(defaultsearchprovidernewtaburl_ != NULL);
      defaultsearchprovidernewtaburl_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_fullscreenallowed()) {
      GOOGLE_DCHECK(fullscreenallowed_ != NULL);
      fullscreenallowed_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_forceephemeralprofiles()) {
      GOOGLE_DCHECK(forceephemeralprofiles_ != NULL);
      forceephemeralprofiles_->::enterprise_management::BooleanPolicyProto::Clear();
    }
  }
  if (_has_bits_[128 / 32] & 255u) {
    if (has_nativemessagingblacklist()) {
      GOOGLE_DCHECK(nativemessagingblacklist_ != NULL);
      nativemessagingblacklist_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_nativemessagingwhitelist()) {
      GOOGLE_DCHECK(nativemessagingwhitelist_ != NULL);
      nativemessagingwhitelist_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_nativemessaginguserlevelhosts()) {
      GOOGLE_DCHECK(nativemessaginguserlevelhosts_ != NULL);
      nativemessaginguserlevelhosts_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_remoteaccesshostallowgnubbyauth()) {
      GOOGLE_DCHECK(remoteaccesshostallowgnubbyauth_ != NULL);
      remoteaccesshostallowgnubbyauth_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_wpadquickcheckenabled()) {
      GOOGLE_DCHECK(wpadquickcheckenabled_ != NULL);
      wpadquickcheckenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_remoteaccesshostallowrelayedconnection()) {
      GOOGLE_DCHECK(remoteaccesshostallowrelayedconnection_ != NULL);
      remoteaccesshostallowrelayedconnection_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_remoteaccesshostudpportrange()) {
      GOOGLE_DCHECK(remoteaccesshostudpportrange_ != NULL);
      remoteaccesshostudpportrange_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_showappsshortcutinbookmarkbar()) {
      GOOGLE_DCHECK(showappsshortcutinbookmarkbar_ != NULL);
      showappsshortcutinbookmarkbar_->::enterprise_management::BooleanPolicyProto::Clear();
    }
  }
  if (_has_bits_[136 / 32] & 65280u) {
    if (has_registeredprotocolhandlers()) {
      GOOGLE_DCHECK(registeredprotocolhandlers_ != NULL);
      registeredprotocolhandlers_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_enabledeprecatedwebplatformfeatures()) {
      GOOGLE_DCHECK(enabledeprecatedwebplatformfeatures_ != NULL);
      enabledeprecatedwebplatformfeatures_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_networkpredictionoptions()) {
      GOOGLE_DCHECK(networkpredictionoptions_ != NULL);
      networkpredictionoptions_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_browserguestmodeenabled()) {
      GOOGLE_DCHECK(browserguestmodeenabled_ != NULL);
      browserguestmodeenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_browseraddpersonenabled()) {
      GOOGLE_DCHECK(browseraddpersonenabled_ != NULL);
      browseraddpersonenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_importautofillformdata()) {
      GOOGLE_DCHECK(importautofillformdata_ != NULL);
      importautofillformdata_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_extensionsettings()) {
      GOOGLE_DCHECK(extensionsettings_ != NULL);
      extensionsettings_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_sslversionmin()) {
      GOOGLE_DCHECK(sslversionmin_ != NULL);
      sslversionmin_->::enterprise_management::StringPolicyProto::Clear();
    }
  }
  if (_has_bits_[144 / 32] & 16711680u) {
    if (has_forcegooglesafesearch()) {
      GOOGLE_DCHECK(forcegooglesafesearch_ != NULL);
      forcegooglesafesearch_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_forceyoutubesafetymode()) {
      GOOGLE_DCHECK(forceyoutubesafetymode_ != NULL);
      forceyoutubesafetymode_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_remoteaccesshostmatchusername()) {
      GOOGLE_DCHECK(remoteaccesshostmatchusername_ != NULL);
      remoteaccesshostmatchusername_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_remoteaccesshosttokenurl()) {
      GOOGLE_DCHECK(remoteaccesshosttokenurl_ != NULL);
      remoteaccesshosttokenurl_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_remoteaccesshosttokenvalidationurl()) {
      GOOGLE_DCHECK(remoteaccesshosttokenvalidationurl_ != NULL);
      remoteaccesshosttokenvalidationurl_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_remoteaccesshosttokenvalidationcertificateissuer()) {
      GOOGLE_DCHECK(remoteaccesshosttokenvalidationcertificateissuer_ != NULL);
      remoteaccesshosttokenvalidationcertificateissuer_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_safebrowsingextendedreportingoptinallowed()) {
      GOOGLE_DCHECK(safebrowsingextendedreportingoptinallowed_ != NULL);
      safebrowsingextendedreportingoptinallowed_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_sslerroroverrideallowed()) {
      GOOGLE_DCHECK(sslerroroverrideallowed_ != NULL);
      sslerroroverrideallowed_->::enterprise_management::BooleanPolicyProto::Clear();
    }
  }
  if (_has_bits_[152 / 32] & 4278190080u) {
    if (has_quicallowed()) {
      GOOGLE_DCHECK(quicallowed_ != NULL);
      quicallowed_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_hardwareaccelerationmodeenabled()) {
      GOOGLE_DCHECK(hardwareaccelerationmodeenabled_ != NULL);
      hardwareaccelerationmodeenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_defaultprinterselection()) {
      GOOGLE_DCHECK(defaultprinterselection_ != NULL);
      defaultprinterselection_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_allowdinosaureasteregg()) {
      GOOGLE_DCHECK(allowdinosaureasteregg_ != NULL);
      allowdinosaureasteregg_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_remoteaccesshostclientdomain()) {
      GOOGLE_DCHECK(remoteaccesshostclientdomain_ != NULL);
      remoteaccesshostclientdomain_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_defaultwebbluetoothguardsetting()) {
      GOOGLE_DCHECK(defaultwebbluetoothguardsetting_ != NULL);
      defaultwebbluetoothguardsetting_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_suppressunsupportedoswarning()) {
      GOOGLE_DCHECK(suppressunsupportedoswarning_ != NULL);
      suppressunsupportedoswarning_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_taskmanagerendprocessenabled()) {
      GOOGLE_DCHECK(taskmanagerendprocessenabled_ != NULL);
      taskmanagerendprocessenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
  }
  if (_has_bits_[160 / 32] & 255u) {
    if (has_alloweddomainsforapps()) {
      GOOGLE_DCHECK(alloweddomainsforapps_ != NULL);
      alloweddomainsforapps_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_pachttpsurlstrippingenabled()) {
      GOOGLE_DCHECK(pachttpsurlstrippingenabled_ != NULL);
      pachttpsurlstrippingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_enablemediarouter()) {
      GOOGLE_DCHECK(enablemediarouter_ != NULL);
      enablemediarouter_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_certificatetransparencyenforcementdisabledforurls()) {
      GOOGLE_DCHECK(certificatetransparencyenforcementdisabledforurls_ != NULL);
      certificatetransparencyenforcementdisabledforurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_webrtcudpportrange()) {
      GOOGLE_DCHECK(webrtcudpportrange_ != NULL);
      webrtcudpportrange_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_enablesha1forlocalanchors()) {
      GOOGLE_DCHECK(enablesha1forlocalanchors_ != NULL);
      enablesha1forlocalanchors_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_componentupdatesenabled()) {
      GOOGLE_DCHECK(componentupdatesenabled_ != NULL);
      componentupdatesenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_http09onnondefaultportsenabled()) {
      GOOGLE_DCHECK(http09onnondefaultportsenabled_ != NULL);
      http09onnondefaultportsenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
  }
  if (_has_bits_[168 / 32] & 65280u) {
    if (has_alwaysopenpdfexternally()) {
      GOOGLE_DCHECK(alwaysopenpdfexternally_ != NULL);
      alwaysopenpdfexternally_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_forceyoutuberestrict()) {
      GOOGLE_DCHECK(forceyoutuberestrict_ != NULL);
      forceyoutuberestrict_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_newtabpagelocation()) {
      GOOGLE_DCHECK(newtabpagelocation_ != NULL);
      newtabpagelocation_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_sslversionmax()) {
      GOOGLE_DCHECK(sslversionmax_ != NULL);
      sslversionmax_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_showcasticonintoolbar()) {
      GOOGLE_DCHECK(showcasticonintoolbar_ != NULL);
      showcasticonintoolbar_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_remoteaccesshostdomainlist()) {
      GOOGLE_DCHECK(remoteaccesshostdomainlist_ != NULL);
      remoteaccesshostdomainlist_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_remoteaccesshostclientdomainlist()) {
      GOOGLE_DCHECK(remoteaccesshostclientdomainlist_ != NULL);
      remoteaccesshostclientdomainlist_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_browsernetworktimequeriesenabled()) {
      GOOGLE_DCHECK(browsernetworktimequeriesenabled_ != NULL);
      browsernetworktimequeriesenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
  }
  if (_has_bits_[176 / 32] & 16711680u) {
    if (has_downloadrestrictions()) {
      GOOGLE_DCHECK(downloadrestrictions_ != NULL);
      downloadrestrictions_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_printpreviewusesystemdefaultprinter()) {
      GOOGLE_DCHECK(printpreviewusesystemdefaultprinter_ != NULL);
      printpreviewusesystemdefaultprinter_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_cloudpolicyoverridesmachinepolicy()) {
      GOOGLE_DCHECK(cloudpolicyoverridesmachinepolicy_ != NULL);
      cloudpolicyoverridesmachinepolicy_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_runallflashinallowmode()) {
      GOOGLE_DCHECK(runallflashinallowmode_ != NULL);
      runallflashinallowmode_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_autofillcreditcardenabled()) {
      GOOGLE_DCHECK(autofillcreditcardenabled_ != NULL);
      autofillcreditcardenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_ntlmv2enabled()) {
      GOOGLE_DCHECK(ntlmv2enabled_ != NULL);
      ntlmv2enabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_promptfordownloadlocation()) {
      GOOGLE_DCHECK(promptfordownloadlocation_ != NULL);
      promptfordownloadlocation_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_isolateorigins()) {
      GOOGLE_DCHECK(isolateorigins_ != NULL);
      isolateorigins_->::enterprise_management::StringPolicyProto::Clear();
    }
  }
  if (_has_bits_[184 / 32] & 4278190080u) {
    if (has_siteperprocess()) {
      GOOGLE_DCHECK(siteperprocess_ != NULL);
      siteperprocess_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_unsafelytreatinsecureoriginassecure()) {
      GOOGLE_DCHECK(unsafelytreatinsecureoriginassecure_ != NULL);
      unsafelytreatinsecureoriginassecure_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_defaultdownloaddirectory()) {
      GOOGLE_DCHECK(defaultdownloaddirectory_ != NULL);
      defaultdownloaddirectory_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_securitykeypermitattestation()) {
      GOOGLE_DCHECK(securitykeypermitattestation_ != NULL);
      securitykeypermitattestation_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_abusiveexperienceinterventionenforce()) {
      GOOGLE_DCHECK(abusiveexperienceinterventionenforce_ != NULL);
      abusiveexperienceinterventionenforce_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_spellchecklanguage()) {
      GOOGLE_DCHECK(spellchecklanguage_ != NULL);
      spellchecklanguage_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_spellcheckenabled()) {
      GOOGLE_DCHECK(spellcheckenabled_ != NULL);
      spellcheckenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_adssettingforintrusiveadssites()) {
      GOOGLE_DCHECK(adssettingforintrusiveadssites_ != NULL);
      adssettingforintrusiveadssites_->::enterprise_management::IntegerPolicyProto::Clear();
    }
  }
  if (_has_bits_[192 / 32] & 255u) {
    if (has_passwordprotectionwarningtrigger()) {
      GOOGLE_DCHECK(passwordprotectionwarningtrigger_ != NULL);
      passwordprotectionwarningtrigger_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_enablesymanteclegacyinfrastructure()) {
      GOOGLE_DCHECK(enablesymanteclegacyinfrastructure_ != NULL);
      enablesymanteclegacyinfrastructure_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_webdriveroverridesincompatiblepolicies()) {
      GOOGLE_DCHECK(webdriveroverridesincompatiblepolicies_ != NULL);
      webdriveroverridesincompatiblepolicies_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_relaunchnotification()) {
      GOOGLE_DCHECK(relaunchnotification_ != NULL);
      relaunchnotification_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_relaunchnotificationperiod()) {
      GOOGLE_DCHECK(relaunchnotificationperiod_ != NULL);
      relaunchnotificationperiod_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_safebrowsingwhitelistdomains()) {
      GOOGLE_DCHECK(safebrowsingwhitelistdomains_ != NULL);
      safebrowsingwhitelistdomains_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_passwordprotectionloginurls()) {
      GOOGLE_DCHECK(passwordprotectionloginurls_ != NULL);
      passwordprotectionloginurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_passwordprotectionchangepasswordurl()) {
      GOOGLE_DCHECK(passwordprotectionchangepasswordurl_ != NULL);
      passwordprotectionchangepasswordurl_->::enterprise_management::StringPolicyProto::Clear();
    }
  }
  if (_has_bits_[200 / 32] & 65280u) {
    if (has_machinelevelusercloudpolicyenrollmenttoken()) {
      GOOGLE_DCHECK(machinelevelusercloudpolicyenrollmenttoken_ != NULL);
      machinelevelusercloudpolicyenrollmenttoken_->::enterprise_management::StringPolicyProto::Clear();
    }
    if (has_safebrowsingextendedreportingenabled()) {
      GOOGLE_DCHECK(safebrowsingextendedreportingenabled_ != NULL);
      safebrowsingextendedreportingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_autoplayallowed()) {
      GOOGLE_DCHECK(autoplayallowed_ != NULL);
      autoplayallowed_->::enterprise_management::BooleanPolicyProto::Clear();
    }
    if (has_autoplaywhitelist()) {
      GOOGLE_DCHECK(autoplaywhitelist_ != NULL);
      autoplaywhitelist_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_defaultwebusbguardsetting()) {
      GOOGLE_DCHECK(defaultwebusbguardsetting_ != NULL);
      defaultwebusbguardsetting_->::enterprise_management::IntegerPolicyProto::Clear();
    }
    if (has_certificatetransparencyenforcementdisabledforcas()) {
      GOOGLE_DCHECK(certificatetransparencyenforcementdisabledforcas_ != NULL);
      certificatetransparencyenforcementdisabledforcas_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_certificatetransparencyenforcementdisabledforlegacycas()) {
      GOOGLE_DCHECK(certificatetransparencyenforcementdisabledforlegacycas_ != NULL);
      certificatetransparencyenforcementdisabledforlegacycas_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_mediaroutercastallowallips()) {
      GOOGLE_DCHECK(mediaroutercastallowallips_ != NULL);
      mediaroutercastallowallips_->::enterprise_management::BooleanPolicyProto::Clear();
    }
  }
  if (_has_bits_[208 / 32] & 458752u) {
    if (has_webusbaskforurls()) {
      GOOGLE_DCHECK(webusbaskforurls_ != NULL);
      webusbaskforurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_webusbblockedforurls()) {
      GOOGLE_DCHECK(webusbblockedforurls_ != NULL);
      webusbblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    }
    if (has_developertoolsavailability()) {
      GOOGLE_DCHECK(developertoolsavailability_ != NULL);
      developertoolsavailability_->::enterprise_management::IntegerPolicyProto::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloudPolicySettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:enterprise_management.CloudPolicySettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .enterprise_management.StringPolicyProto HomepageLocation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_homepagelocation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto HomepageIsNewTabPage = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_homepageisnewtabpage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto DefaultBrowserSettingEnabled = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultbrowsersettingenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto AlternateErrorPagesEnabled = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_alternateerrorpagesenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto SearchSuggestEnabled = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_searchsuggestenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto JavascriptEnabled = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_javascriptenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto IncognitoEnabled = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_incognitoenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto SavingBrowserHistoryDisabled = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_savingbrowserhistorydisabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto PrintingEnabled = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_printingenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto CloudPrintProxyEnabled = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cloudprintproxyenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto SafeBrowsingEnabled = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_safebrowsingenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto MetricsReportingEnabled = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_metricsreportingenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto PasswordManagerEnabled = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_passwordmanagerenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto AutoFillEnabled = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_autofillenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto DisabledPlugins = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_disabledplugins()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto SyncDisabled = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_syncdisabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto ProxyMode = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_proxymode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto ProxyServerMode = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_proxyservermode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto ProxyServer = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_proxyserver()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto ProxyPacUrl = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_proxypacurl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto ProxyBypassList = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_proxybypasslist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto AuthSchemes = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_authschemes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto DisableAuthNegotiateCnameLookup = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_disableauthnegotiatecnamelookup()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto EnableAuthNegotiatePort = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_enableauthnegotiateport()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto AuthServerWhitelist = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_authserverwhitelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto AuthNegotiateDelegateWhitelist = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_authnegotiatedelegatewhitelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto GSSAPILibraryName = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gssapilibraryname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto ExtensionInstallBlacklist = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extensioninstallblacklist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto ExtensionInstallWhitelist = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extensioninstallwhitelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto ExtensionInstallForcelist = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extensioninstallforcelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto ShowHomeButton = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_showhomebutton()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto DeveloperToolsDisabled = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_developertoolsdisabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto RestoreOnStartup = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_restoreonstartup()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto RestoreOnStartupURLs = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_restoreonstartupurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto BlockThirdPartyCookies = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_blockthirdpartycookies()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderEnabled = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultsearchproviderenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderName = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultsearchprovidername()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderKeyword = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultsearchproviderkeyword()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURL = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultsearchprovidersearchurl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURL = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultsearchprovidersuggesturl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderIconURL = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultsearchprovidericonurl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto DefaultSearchProviderEncodings = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultsearchproviderencodings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto DefaultCookiesSetting = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultcookiessetting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto DefaultImagesSetting = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultimagessetting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptSetting = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultjavascriptsetting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto DefaultPluginsSetting = 53;
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultpluginssetting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto DefaultPopupsSetting = 54;
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultpopupssetting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto DefaultNotificationsSetting = 55;
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultnotificationssetting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto DefaultGeolocationSetting = 56;
      case 56: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultgeolocationsetting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto Disable3DAPIs = 57;
      case 57: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_disable3dapis()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto DownloadDirectory = 66;
      case 66: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_downloaddirectory()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto CookiesBlockedForUrls = 69;
      case 69: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cookiesblockedforurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto CookiesSessionOnlyForUrls = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cookiessessiononlyforurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto ImagesAllowedForUrls = 71;
      case 71: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_imagesallowedforurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto ImagesBlockedForUrls = 72;
      case 72: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_imagesblockedforurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto JavaScriptAllowedForUrls = 73;
      case 73: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_javascriptallowedforurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto JavaScriptBlockedForUrls = 74;
      case 74: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_javascriptblockedforurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto PluginsAllowedForUrls = 75;
      case 75: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pluginsallowedforurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto PluginsBlockedForUrls = 76;
      case 76: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pluginsblockedforurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto PopupsAllowedForUrls = 77;
      case 77: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_popupsallowedforurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto PopupsBlockedForUrls = 78;
      case 78: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_popupsblockedforurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto CookiesAllowedForUrls = 79;
      case 79: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cookiesallowedforurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto EnabledPlugins = 80;
      case 80: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_enabledplugins()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto DisabledPluginsExceptions = 81;
      case 81: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_disabledpluginsexceptions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto TranslateEnabled = 82;
      case 82: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_translateenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto AllowOutdatedPlugins = 83;
      case 83: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_allowoutdatedplugins()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto BookmarkBarEnabled = 84;
      case 84: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bookmarkbarenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto EditBookmarksEnabled = 85;
      case 85: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_editbookmarksenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto AllowFileSelectionDialogs = 86;
      case 86: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_allowfileselectiondialogs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto DisabledSchemes = 87;
      case 87: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_disabledschemes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto DiskCacheDir = 90;
      case 90: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_diskcachedir()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto AllowCrossOriginAuthPrompt = 91;
      case 91: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_allowcrossoriginauthprompt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto MaxConnectionsPerProxy = 94;
      case 94: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_maxconnectionsperproxy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto IncognitoModeAvailability = 95;
      case 95: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_incognitomodeavailability()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto RemoteAccessHostFirewallTraversal = 97;
      case 97: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remoteaccesshostfirewalltraversal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto ImportBookmarks = 99;
      case 99: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_importbookmarks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto ImportHistory = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_importhistory()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto ImportHomepage = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_importhomepage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto ImportSearchEngine = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_importsearchengine()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto ImportSavedPasswords = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_importsavedpasswords()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto AutoSelectCertificateForUrls = 104;
      case 104: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_autoselectcertificateforurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto URLBlacklist = 105;
      case 105: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_urlblacklist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto URLWhitelist = 106;
      case 106: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_urlwhitelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto NotificationsAllowedForUrls = 107;
      case 107: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_notificationsallowedforurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto NotificationsBlockedForUrls = 108;
      case 108: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_notificationsblockedforurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto CloudPrintSubmitEnabled = 111;
      case 111: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cloudprintsubmitenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto DiskCacheSize = 112;
      case 112: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_diskcachesize()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto MediaCacheSize = 113;
      case 113: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mediacachesize()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto ProxySettings = 118;
      case 118: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_proxysettings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto DisablePrintPreview = 119;
      case 119: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_disableprintpreview()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto EnableOnlineRevocationChecks = 131;
      case 131: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_enableonlinerevocationchecks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto BackgroundModeEnabled = 140;
      case 140: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_backgroundmodeenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto RestrictSigninToPattern = 149;
      case 149: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_restrictsignintopattern()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto ExtensionInstallSources = 150;
      case 150: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extensioninstallsources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto DefaultMediaStreamSetting = 151;
      case 151: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultmediastreamsetting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto DisableSafeBrowsingProceedAnyway = 152;
      case 152: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_disablesafebrowsingproceedanyway()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto SpellCheckServiceEnabled = 153;
      case 153: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spellcheckserviceenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto DisableScreenshots = 155;
      case 155: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_disablescreenshots()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto RemoteAccessHostDomain = 156;
      case 156: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remoteaccesshostdomain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto RemoteAccessHostTalkGadgetPrefix = 158;
      case 158: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remoteaccesshosttalkgadgetprefix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto RemoteAccessHostRequireCurtain = 159;
      case 159: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remoteaccesshostrequirecurtain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto AudioCaptureAllowed = 162;
      case 162: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_audiocaptureallowed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto DefaultSearchProviderAlternateURLs = 163;
      case 163: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultsearchprovideralternateurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto ForceSafeSearch = 164;
      case 164: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_forcesafesearch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto BuiltInDnsClientEnabled = 167;
      case 167: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_builtindnsclientenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto VideoCaptureAllowed = 169;
      case 169: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_videocaptureallowed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto ExtensionAllowedTypes = 170;
      case 170: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extensionallowedtypes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto AllowDeletingBrowserHistory = 189;
      case 189: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_allowdeletingbrowserhistory()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto HideWebStoreIcon = 191;
      case 191: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hidewebstoreicon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto SigninAllowed = 192;
      case 192: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_signinallowed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto VariationsRestrictParameter = 198;
      case 198: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_variationsrestrictparameter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto ContentPackDefaultFilteringBehavior = 206;
      case 206: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_contentpackdefaultfilteringbehavior()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto ContentPackManualBehaviorHosts = 207;
      case 207: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_contentpackmanualbehaviorhosts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto ContentPackManualBehaviorURLs = 208;
      case 208: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_contentpackmanualbehaviorurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto AudioCaptureAllowedUrls = 210;
      case 210: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_audiocaptureallowedurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto VideoCaptureAllowedUrls = 211;
      case 211: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_videocaptureallowedurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto SupervisedUserCreationEnabled = 225;
      case 225: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_supervisedusercreationenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto ManagedBookmarks = 229;
      case 229: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_managedbookmarks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto MaxInvalidationFetchDelay = 230;
      case 230: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_maxinvalidationfetchdelay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURL = 231;
      case 231: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultsearchproviderimageurl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURLPostParams = 232;
      case 232: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultsearchprovidersearchurlpostparams()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURLPostParams = 233;
      case 233: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultsearchprovidersuggesturlpostparams()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURLPostParams = 235;
      case 235: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultsearchproviderimageurlpostparams()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowClientPairing = 236;
      case 236: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remoteaccesshostallowclientpairing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto RequireOnlineRevocationChecksForLocalAnchors = 237;
      case 237: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_requireonlinerevocationchecksforlocalanchors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderNewTabURL = 239;
      case 239: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultsearchprovidernewtaburl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto FullscreenAllowed = 242;
      case 242: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fullscreenallowed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto ForceEphemeralProfiles = 247;
      case 247: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_forceephemeralprofiles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto NativeMessagingBlacklist = 253;
      case 253: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nativemessagingblacklist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto NativeMessagingWhitelist = 254;
      case 254: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nativemessagingwhitelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto NativeMessagingUserLevelHosts = 255;
      case 255: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nativemessaginguserlevelhosts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowGnubbyAuth = 259;
      case 259: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remoteaccesshostallowgnubbyauth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto WPADQuickCheckEnabled = 263;
      case 263: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_wpadquickcheckenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowRelayedConnection = 265;
      case 265: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remoteaccesshostallowrelayedconnection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto RemoteAccessHostUdpPortRange = 266;
      case 266: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remoteaccesshostudpportrange()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto ShowAppsShortcutInBookmarkBar = 269;
      case 269: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_showappsshortcutinbookmarkbar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto RegisteredProtocolHandlers = 270;
      case 270: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_registeredprotocolhandlers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto EnableDeprecatedWebPlatformFeatures = 272;
      case 272: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_enabledeprecatedwebplatformfeatures()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto NetworkPredictionOptions = 275;
      case 275: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_networkpredictionoptions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto BrowserGuestModeEnabled = 277;
      case 277: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_browserguestmodeenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto BrowserAddPersonEnabled = 278;
      case 278: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_browseraddpersonenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto ImportAutofillFormData = 279;
      case 279: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_importautofillformdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto ExtensionSettings = 280;
      case 280: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extensionsettings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto SSLVersionMin = 281;
      case 281: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sslversionmin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto ForceGoogleSafeSearch = 284;
      case 284: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_forcegooglesafesearch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto ForceYouTubeSafetyMode = 285;
      case 285: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_forceyoutubesafetymode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto RemoteAccessHostMatchUsername = 287;
      case 287: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remoteaccesshostmatchusername()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenUrl = 288;
      case 288: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remoteaccesshosttokenurl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenValidationUrl = 289;
      case 289: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remoteaccesshosttokenvalidationurl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenValidationCertificateIssuer = 290;
      case 290: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remoteaccesshosttokenvalidationcertificateissuer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto SafeBrowsingExtendedReportingOptInAllowed = 301;
      case 301: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_safebrowsingextendedreportingoptinallowed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto SSLErrorOverrideAllowed = 302;
      case 302: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sslerroroverrideallowed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto QuicAllowed = 303;
      case 303: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_quicallowed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto HardwareAccelerationModeEnabled = 306;
      case 306: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hardwareaccelerationmodeenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto DefaultPrinterSelection = 310;
      case 310: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultprinterselection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto AllowDinosaurEasterEgg = 311;
      case 311: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_allowdinosaureasteregg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto RemoteAccessHostClientDomain = 318;
      case 318: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remoteaccesshostclientdomain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto DefaultWebBluetoothGuardSetting = 322;
      case 322: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultwebbluetoothguardsetting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto SuppressUnsupportedOSWarning = 326;
      case 326: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_suppressunsupportedoswarning()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto TaskManagerEndProcessEnabled = 329;
      case 329: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_taskmanagerendprocessenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto AllowedDomainsForApps = 333;
      case 333: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_alloweddomainsforapps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto PacHttpsUrlStrippingEnabled = 334;
      case 334: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pachttpsurlstrippingenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto EnableMediaRouter = 335;
      case 335: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_enablemediarouter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForUrls = 337;
      case 337: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_certificatetransparencyenforcementdisabledforurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto WebRtcUdpPortRange = 341;
      case 341: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_webrtcudpportrange()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto EnableSha1ForLocalAnchors = 342;
      case 342: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_enablesha1forlocalanchors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto ComponentUpdatesEnabled = 344;
      case 344: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_componentupdatesenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto Http09OnNonDefaultPortsEnabled = 347;
      case 347: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_http09onnondefaultportsenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto AlwaysOpenPdfExternally = 349;
      case 349: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_alwaysopenpdfexternally()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto ForceYouTubeRestrict = 350;
      case 350: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_forceyoutuberestrict()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto NewTabPageLocation = 362;
      case 362: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_newtabpagelocation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto SSLVersionMax = 363;
      case 363: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sslversionmax()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto ShowCastIconInToolbar = 364;
      case 364: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_showcasticonintoolbar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto RemoteAccessHostDomainList = 370;
      case 370: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remoteaccesshostdomainlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto RemoteAccessHostClientDomainList = 371;
      case 371: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remoteaccesshostclientdomainlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto BrowserNetworkTimeQueriesEnabled = 372;
      case 372: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_browsernetworktimequeriesenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto DownloadRestrictions = 373;
      case 373: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_downloadrestrictions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto PrintPreviewUseSystemDefaultPrinter = 375;
      case 375: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_printpreviewusesystemdefaultprinter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto CloudPolicyOverridesMachinePolicy = 383;
      case 383: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cloudpolicyoverridesmachinepolicy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto RunAllFlashInAllowMode = 393;
      case 393: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_runallflashinallowmode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto AutofillCreditCardEnabled = 394;
      case 394: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_autofillcreditcardenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto NtlmV2Enabled = 395;
      case 395: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ntlmv2enabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto PromptForDownloadLocation = 397;
      case 397: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_promptfordownloadlocation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto IsolateOrigins = 400;
      case 400: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_isolateorigins()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto SitePerProcess = 401;
      case 401: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_siteperprocess()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto UnsafelyTreatInsecureOriginAsSecure = 402;
      case 402: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unsafelytreatinsecureoriginassecure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto DefaultDownloadDirectory = 403;
      case 403: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultdownloaddirectory()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto SecurityKeyPermitAttestation = 404;
      case 404: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_securitykeypermitattestation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto AbusiveExperienceInterventionEnforce = 406;
      case 406: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_abusiveexperienceinterventionenforce()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto SpellcheckLanguage = 407;
      case 407: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spellchecklanguage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto SpellcheckEnabled = 410;
      case 410: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spellcheckenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto AdsSettingForIntrusiveAdsSites = 411;
      case 411: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_adssettingforintrusiveadssites()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto PasswordProtectionWarningTrigger = 413;
      case 413: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_passwordprotectionwarningtrigger()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto EnableSymantecLegacyInfrastructure = 415;
      case 415: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_enablesymanteclegacyinfrastructure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto WebDriverOverridesIncompatiblePolicies = 416;
      case 416: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_webdriveroverridesincompatiblepolicies()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto RelaunchNotification = 421;
      case 421: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_relaunchnotification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto RelaunchNotificationPeriod = 422;
      case 422: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_relaunchnotificationperiod()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto SafeBrowsingWhitelistDomains = 424;
      case 424: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_safebrowsingwhitelistdomains()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto PasswordProtectionLoginURLs = 425;
      case 425: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_passwordprotectionloginurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto PasswordProtectionChangePasswordURL = 426;
      case 426: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_passwordprotectionchangepasswordurl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringPolicyProto MachineLevelUserCloudPolicyEnrollmentToken = 430;
      case 430: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_machinelevelusercloudpolicyenrollmenttoken()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto SafeBrowsingExtendedReportingEnabled = 431;
      case 431: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_safebrowsingextendedreportingenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto AutoplayAllowed = 432;
      case 432: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_autoplayallowed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto AutoplayWhitelist = 433;
      case 433: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_autoplaywhitelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto DefaultWebUsbGuardSetting = 436;
      case 436: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultwebusbguardsetting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForCas = 437;
      case 437: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_certificatetransparencyenforcementdisabledforcas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForLegacyCas = 438;
      case 438: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_certificatetransparencyenforcementdisabledforlegacycas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.BooleanPolicyProto MediaRouterCastAllowAllIPs = 439;
      case 439: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mediaroutercastallowallips()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto WebUsbAskForUrls = 441;
      case 441: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_webusbaskforurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.StringListPolicyProto WebUsbBlockedForUrls = 442;
      case 442: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_webusbblockedforurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .enterprise_management.IntegerPolicyProto DeveloperToolsAvailability = 445;
      case 445: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_developertoolsavailability()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:enterprise_management.CloudPolicySettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:enterprise_management.CloudPolicySettings)
  return false;
#undef DO_
}

void CloudPolicySettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:enterprise_management.CloudPolicySettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .enterprise_management.StringPolicyProto HomepageLocation = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, *this->homepagelocation_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto HomepageIsNewTabPage = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, *this->homepageisnewtabpage_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto DefaultBrowserSettingEnabled = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, *this->defaultbrowsersettingenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto AlternateErrorPagesEnabled = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7, *this->alternateerrorpagesenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto SearchSuggestEnabled = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      8, *this->searchsuggestenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto JavascriptEnabled = 11;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      11, *this->javascriptenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto IncognitoEnabled = 12;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      12, *this->incognitoenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto SavingBrowserHistoryDisabled = 13;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      13, *this->savingbrowserhistorydisabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto PrintingEnabled = 14;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      14, *this->printingenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto CloudPrintProxyEnabled = 15;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      15, *this->cloudprintproxyenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto SafeBrowsingEnabled = 16;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      16, *this->safebrowsingenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto MetricsReportingEnabled = 17;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      17, *this->metricsreportingenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto PasswordManagerEnabled = 18;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      18, *this->passwordmanagerenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto AutoFillEnabled = 20;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      20, *this->autofillenabled_, output);
  }

  // optional .enterprise_management.StringListPolicyProto DisabledPlugins = 21;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      21, *this->disabledplugins_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto SyncDisabled = 22;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      22, *this->syncdisabled_, output);
  }

  // optional .enterprise_management.StringPolicyProto ProxyMode = 23;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      23, *this->proxymode_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto ProxyServerMode = 24;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      24, *this->proxyservermode_, output);
  }

  // optional .enterprise_management.StringPolicyProto ProxyServer = 25;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      25, *this->proxyserver_, output);
  }

  // optional .enterprise_management.StringPolicyProto ProxyPacUrl = 26;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      26, *this->proxypacurl_, output);
  }

  // optional .enterprise_management.StringPolicyProto ProxyBypassList = 27;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      27, *this->proxybypasslist_, output);
  }

  // optional .enterprise_management.StringPolicyProto AuthSchemes = 28;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      28, *this->authschemes_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto DisableAuthNegotiateCnameLookup = 29;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      29, *this->disableauthnegotiatecnamelookup_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto EnableAuthNegotiatePort = 30;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      30, *this->enableauthnegotiateport_, output);
  }

  // optional .enterprise_management.StringPolicyProto AuthServerWhitelist = 31;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      31, *this->authserverwhitelist_, output);
  }

  // optional .enterprise_management.StringPolicyProto AuthNegotiateDelegateWhitelist = 32;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      32, *this->authnegotiatedelegatewhitelist_, output);
  }

  // optional .enterprise_management.StringPolicyProto GSSAPILibraryName = 33;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      33, *this->gssapilibraryname_, output);
  }

  // optional .enterprise_management.StringListPolicyProto ExtensionInstallBlacklist = 34;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      34, *this->extensioninstallblacklist_, output);
  }

  // optional .enterprise_management.StringListPolicyProto ExtensionInstallWhitelist = 35;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      35, *this->extensioninstallwhitelist_, output);
  }

  // optional .enterprise_management.StringListPolicyProto ExtensionInstallForcelist = 36;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      36, *this->extensioninstallforcelist_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto ShowHomeButton = 37;
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      37, *this->showhomebutton_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto DeveloperToolsDisabled = 38;
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      38, *this->developertoolsdisabled_, output);
  }

  cached_has_bits = _has_bits_[1];
  // optional .enterprise_management.IntegerPolicyProto RestoreOnStartup = 39;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      39, *this->restoreonstartup_, output);
  }

  // optional .enterprise_management.StringListPolicyProto RestoreOnStartupURLs = 40;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      40, *this->restoreonstartupurls_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto BlockThirdPartyCookies = 41;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      41, *this->blockthirdpartycookies_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderEnabled = 42;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      42, *this->defaultsearchproviderenabled_, output);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderName = 43;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      43, *this->defaultsearchprovidername_, output);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderKeyword = 44;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      44, *this->defaultsearchproviderkeyword_, output);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURL = 45;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      45, *this->defaultsearchprovidersearchurl_, output);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURL = 46;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      46, *this->defaultsearchprovidersuggesturl_, output);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderIconURL = 48;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      48, *this->defaultsearchprovidericonurl_, output);
  }

  // optional .enterprise_management.StringListPolicyProto DefaultSearchProviderEncodings = 49;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      49, *this->defaultsearchproviderencodings_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto DefaultCookiesSetting = 50;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      50, *this->defaultcookiessetting_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto DefaultImagesSetting = 51;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      51, *this->defaultimagessetting_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptSetting = 52;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      52, *this->defaultjavascriptsetting_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto DefaultPluginsSetting = 53;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      53, *this->defaultpluginssetting_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto DefaultPopupsSetting = 54;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      54, *this->defaultpopupssetting_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto DefaultNotificationsSetting = 55;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      55, *this->defaultnotificationssetting_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto DefaultGeolocationSetting = 56;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      56, *this->defaultgeolocationsetting_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto Disable3DAPIs = 57;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      57, *this->disable3dapis_, output);
  }

  // optional .enterprise_management.StringPolicyProto DownloadDirectory = 66;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      66, *this->downloaddirectory_, output);
  }

  // optional .enterprise_management.StringListPolicyProto CookiesBlockedForUrls = 69;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      69, *this->cookiesblockedforurls_, output);
  }

  // optional .enterprise_management.StringListPolicyProto CookiesSessionOnlyForUrls = 70;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      70, *this->cookiessessiononlyforurls_, output);
  }

  // optional .enterprise_management.StringListPolicyProto ImagesAllowedForUrls = 71;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      71, *this->imagesallowedforurls_, output);
  }

  // optional .enterprise_management.StringListPolicyProto ImagesBlockedForUrls = 72;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      72, *this->imagesblockedforurls_, output);
  }

  // optional .enterprise_management.StringListPolicyProto JavaScriptAllowedForUrls = 73;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      73, *this->javascriptallowedforurls_, output);
  }

  // optional .enterprise_management.StringListPolicyProto JavaScriptBlockedForUrls = 74;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      74, *this->javascriptblockedforurls_, output);
  }

  // optional .enterprise_management.StringListPolicyProto PluginsAllowedForUrls = 75;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      75, *this->pluginsallowedforurls_, output);
  }

  // optional .enterprise_management.StringListPolicyProto PluginsBlockedForUrls = 76;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      76, *this->pluginsblockedforurls_, output);
  }

  // optional .enterprise_management.StringListPolicyProto PopupsAllowedForUrls = 77;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      77, *this->popupsallowedforurls_, output);
  }

  // optional .enterprise_management.StringListPolicyProto PopupsBlockedForUrls = 78;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      78, *this->popupsblockedforurls_, output);
  }

  // optional .enterprise_management.StringListPolicyProto CookiesAllowedForUrls = 79;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      79, *this->cookiesallowedforurls_, output);
  }

  // optional .enterprise_management.StringListPolicyProto EnabledPlugins = 80;
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      80, *this->enabledplugins_, output);
  }

  // optional .enterprise_management.StringListPolicyProto DisabledPluginsExceptions = 81;
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      81, *this->disabledpluginsexceptions_, output);
  }

  cached_has_bits = _has_bits_[2];
  // optional .enterprise_management.BooleanPolicyProto TranslateEnabled = 82;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      82, *this->translateenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto AllowOutdatedPlugins = 83;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      83, *this->allowoutdatedplugins_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto BookmarkBarEnabled = 84;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      84, *this->bookmarkbarenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto EditBookmarksEnabled = 85;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      85, *this->editbookmarksenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto AllowFileSelectionDialogs = 86;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      86, *this->allowfileselectiondialogs_, output);
  }

  // optional .enterprise_management.StringListPolicyProto DisabledSchemes = 87;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      87, *this->disabledschemes_, output);
  }

  // optional .enterprise_management.StringPolicyProto DiskCacheDir = 90;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      90, *this->diskcachedir_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto AllowCrossOriginAuthPrompt = 91;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      91, *this->allowcrossoriginauthprompt_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto MaxConnectionsPerProxy = 94;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      94, *this->maxconnectionsperproxy_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto IncognitoModeAvailability = 95;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      95, *this->incognitomodeavailability_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto RemoteAccessHostFirewallTraversal = 97;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      97, *this->remoteaccesshostfirewalltraversal_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto ImportBookmarks = 99;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      99, *this->importbookmarks_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto ImportHistory = 100;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      100, *this->importhistory_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto ImportHomepage = 101;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      101, *this->importhomepage_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto ImportSearchEngine = 102;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      102, *this->importsearchengine_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto ImportSavedPasswords = 103;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      103, *this->importsavedpasswords_, output);
  }

  // optional .enterprise_management.StringListPolicyProto AutoSelectCertificateForUrls = 104;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      104, *this->autoselectcertificateforurls_, output);
  }

  // optional .enterprise_management.StringListPolicyProto URLBlacklist = 105;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      105, *this->urlblacklist_, output);
  }

  // optional .enterprise_management.StringListPolicyProto URLWhitelist = 106;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      106, *this->urlwhitelist_, output);
  }

  // optional .enterprise_management.StringListPolicyProto NotificationsAllowedForUrls = 107;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      107, *this->notificationsallowedforurls_, output);
  }

  // optional .enterprise_management.StringListPolicyProto NotificationsBlockedForUrls = 108;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      108, *this->notificationsblockedforurls_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto CloudPrintSubmitEnabled = 111;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      111, *this->cloudprintsubmitenabled_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto DiskCacheSize = 112;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      112, *this->diskcachesize_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto MediaCacheSize = 113;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      113, *this->mediacachesize_, output);
  }

  // optional .enterprise_management.StringPolicyProto ProxySettings = 118;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      118, *this->proxysettings_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto DisablePrintPreview = 119;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      119, *this->disableprintpreview_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto EnableOnlineRevocationChecks = 131;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      131, *this->enableonlinerevocationchecks_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto BackgroundModeEnabled = 140;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      140, *this->backgroundmodeenabled_, output);
  }

  // optional .enterprise_management.StringPolicyProto RestrictSigninToPattern = 149;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      149, *this->restrictsignintopattern_, output);
  }

  // optional .enterprise_management.StringListPolicyProto ExtensionInstallSources = 150;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      150, *this->extensioninstallsources_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto DefaultMediaStreamSetting = 151;
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      151, *this->defaultmediastreamsetting_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto DisableSafeBrowsingProceedAnyway = 152;
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      152, *this->disablesafebrowsingproceedanyway_, output);
  }

  cached_has_bits = _has_bits_[3];
  // optional .enterprise_management.BooleanPolicyProto SpellCheckServiceEnabled = 153;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      153, *this->spellcheckserviceenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto DisableScreenshots = 155;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      155, *this->disablescreenshots_, output);
  }

  // optional .enterprise_management.StringPolicyProto RemoteAccessHostDomain = 156;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      156, *this->remoteaccesshostdomain_, output);
  }

  // optional .enterprise_management.StringPolicyProto RemoteAccessHostTalkGadgetPrefix = 158;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      158, *this->remoteaccesshosttalkgadgetprefix_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto RemoteAccessHostRequireCurtain = 159;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      159, *this->remoteaccesshostrequirecurtain_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto AudioCaptureAllowed = 162;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      162, *this->audiocaptureallowed_, output);
  }

  // optional .enterprise_management.StringListPolicyProto DefaultSearchProviderAlternateURLs = 163;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      163, *this->defaultsearchprovideralternateurls_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto ForceSafeSearch = 164;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      164, *this->forcesafesearch_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto BuiltInDnsClientEnabled = 167;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      167, *this->builtindnsclientenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto VideoCaptureAllowed = 169;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      169, *this->videocaptureallowed_, output);
  }

  // optional .enterprise_management.StringListPolicyProto ExtensionAllowedTypes = 170;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      170, *this->extensionallowedtypes_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto AllowDeletingBrowserHistory = 189;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      189, *this->allowdeletingbrowserhistory_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto HideWebStoreIcon = 191;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      191, *this->hidewebstoreicon_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto SigninAllowed = 192;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      192, *this->signinallowed_, output);
  }

  // optional .enterprise_management.StringPolicyProto VariationsRestrictParameter = 198;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      198, *this->variationsrestrictparameter_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto ContentPackDefaultFilteringBehavior = 206;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      206, *this->contentpackdefaultfilteringbehavior_, output);
  }

  // optional .enterprise_management.StringPolicyProto ContentPackManualBehaviorHosts = 207;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      207, *this->contentpackmanualbehaviorhosts_, output);
  }

  // optional .enterprise_management.StringPolicyProto ContentPackManualBehaviorURLs = 208;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      208, *this->contentpackmanualbehaviorurls_, output);
  }

  // optional .enterprise_management.StringListPolicyProto AudioCaptureAllowedUrls = 210;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      210, *this->audiocaptureallowedurls_, output);
  }

  // optional .enterprise_management.StringListPolicyProto VideoCaptureAllowedUrls = 211;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      211, *this->videocaptureallowedurls_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto SupervisedUserCreationEnabled = 225;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      225, *this->supervisedusercreationenabled_, output);
  }

  // optional .enterprise_management.StringPolicyProto ManagedBookmarks = 229;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      229, *this->managedbookmarks_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto MaxInvalidationFetchDelay = 230;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      230, *this->maxinvalidationfetchdelay_, output);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURL = 231;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      231, *this->defaultsearchproviderimageurl_, output);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURLPostParams = 232;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      232, *this->defaultsearchprovidersearchurlpostparams_, output);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURLPostParams = 233;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      233, *this->defaultsearchprovidersuggesturlpostparams_, output);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURLPostParams = 235;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      235, *this->defaultsearchproviderimageurlpostparams_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowClientPairing = 236;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      236, *this->remoteaccesshostallowclientpairing_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto RequireOnlineRevocationChecksForLocalAnchors = 237;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      237, *this->requireonlinerevocationchecksforlocalanchors_, output);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderNewTabURL = 239;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      239, *this->defaultsearchprovidernewtaburl_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto FullscreenAllowed = 242;
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      242, *this->fullscreenallowed_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto ForceEphemeralProfiles = 247;
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      247, *this->forceephemeralprofiles_, output);
  }

  cached_has_bits = _has_bits_[4];
  // optional .enterprise_management.StringListPolicyProto NativeMessagingBlacklist = 253;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      253, *this->nativemessagingblacklist_, output);
  }

  // optional .enterprise_management.StringListPolicyProto NativeMessagingWhitelist = 254;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      254, *this->nativemessagingwhitelist_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto NativeMessagingUserLevelHosts = 255;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      255, *this->nativemessaginguserlevelhosts_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowGnubbyAuth = 259;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      259, *this->remoteaccesshostallowgnubbyauth_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto WPADQuickCheckEnabled = 263;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      263, *this->wpadquickcheckenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowRelayedConnection = 265;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      265, *this->remoteaccesshostallowrelayedconnection_, output);
  }

  // optional .enterprise_management.StringPolicyProto RemoteAccessHostUdpPortRange = 266;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      266, *this->remoteaccesshostudpportrange_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto ShowAppsShortcutInBookmarkBar = 269;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      269, *this->showappsshortcutinbookmarkbar_, output);
  }

  // optional .enterprise_management.StringPolicyProto RegisteredProtocolHandlers = 270;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      270, *this->registeredprotocolhandlers_, output);
  }

  // optional .enterprise_management.StringListPolicyProto EnableDeprecatedWebPlatformFeatures = 272;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      272, *this->enabledeprecatedwebplatformfeatures_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto NetworkPredictionOptions = 275;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      275, *this->networkpredictionoptions_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto BrowserGuestModeEnabled = 277;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      277, *this->browserguestmodeenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto BrowserAddPersonEnabled = 278;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      278, *this->browseraddpersonenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto ImportAutofillFormData = 279;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      279, *this->importautofillformdata_, output);
  }

  // optional .enterprise_management.StringPolicyProto ExtensionSettings = 280;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      280, *this->extensionsettings_, output);
  }

  // optional .enterprise_management.StringPolicyProto SSLVersionMin = 281;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      281, *this->sslversionmin_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto ForceGoogleSafeSearch = 284;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      284, *this->forcegooglesafesearch_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto ForceYouTubeSafetyMode = 285;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      285, *this->forceyoutubesafetymode_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto RemoteAccessHostMatchUsername = 287;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      287, *this->remoteaccesshostmatchusername_, output);
  }

  // optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenUrl = 288;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      288, *this->remoteaccesshosttokenurl_, output);
  }

  // optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenValidationUrl = 289;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      289, *this->remoteaccesshosttokenvalidationurl_, output);
  }

  // optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenValidationCertificateIssuer = 290;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      290, *this->remoteaccesshosttokenvalidationcertificateissuer_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto SafeBrowsingExtendedReportingOptInAllowed = 301;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      301, *this->safebrowsingextendedreportingoptinallowed_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto SSLErrorOverrideAllowed = 302;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      302, *this->sslerroroverrideallowed_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto QuicAllowed = 303;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      303, *this->quicallowed_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto HardwareAccelerationModeEnabled = 306;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      306, *this->hardwareaccelerationmodeenabled_, output);
  }

  // optional .enterprise_management.StringPolicyProto DefaultPrinterSelection = 310;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      310, *this->defaultprinterselection_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto AllowDinosaurEasterEgg = 311;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      311, *this->allowdinosaureasteregg_, output);
  }

  // optional .enterprise_management.StringPolicyProto RemoteAccessHostClientDomain = 318;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      318, *this->remoteaccesshostclientdomain_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto DefaultWebBluetoothGuardSetting = 322;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      322, *this->defaultwebbluetoothguardsetting_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto SuppressUnsupportedOSWarning = 326;
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      326, *this->suppressunsupportedoswarning_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto TaskManagerEndProcessEnabled = 329;
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      329, *this->taskmanagerendprocessenabled_, output);
  }

  cached_has_bits = _has_bits_[5];
  // optional .enterprise_management.StringPolicyProto AllowedDomainsForApps = 333;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      333, *this->alloweddomainsforapps_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto PacHttpsUrlStrippingEnabled = 334;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      334, *this->pachttpsurlstrippingenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto EnableMediaRouter = 335;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      335, *this->enablemediarouter_, output);
  }

  // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForUrls = 337;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      337, *this->certificatetransparencyenforcementdisabledforurls_, output);
  }

  // optional .enterprise_management.StringPolicyProto WebRtcUdpPortRange = 341;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      341, *this->webrtcudpportrange_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto EnableSha1ForLocalAnchors = 342;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      342, *this->enablesha1forlocalanchors_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto ComponentUpdatesEnabled = 344;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      344, *this->componentupdatesenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto Http09OnNonDefaultPortsEnabled = 347;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      347, *this->http09onnondefaultportsenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto AlwaysOpenPdfExternally = 349;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      349, *this->alwaysopenpdfexternally_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto ForceYouTubeRestrict = 350;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      350, *this->forceyoutuberestrict_, output);
  }

  // optional .enterprise_management.StringPolicyProto NewTabPageLocation = 362;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      362, *this->newtabpagelocation_, output);
  }

  // optional .enterprise_management.StringPolicyProto SSLVersionMax = 363;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      363, *this->sslversionmax_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto ShowCastIconInToolbar = 364;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      364, *this->showcasticonintoolbar_, output);
  }

  // optional .enterprise_management.StringListPolicyProto RemoteAccessHostDomainList = 370;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      370, *this->remoteaccesshostdomainlist_, output);
  }

  // optional .enterprise_management.StringListPolicyProto RemoteAccessHostClientDomainList = 371;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      371, *this->remoteaccesshostclientdomainlist_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto BrowserNetworkTimeQueriesEnabled = 372;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      372, *this->browsernetworktimequeriesenabled_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto DownloadRestrictions = 373;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      373, *this->downloadrestrictions_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto PrintPreviewUseSystemDefaultPrinter = 375;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      375, *this->printpreviewusesystemdefaultprinter_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto CloudPolicyOverridesMachinePolicy = 383;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      383, *this->cloudpolicyoverridesmachinepolicy_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto RunAllFlashInAllowMode = 393;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      393, *this->runallflashinallowmode_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto AutofillCreditCardEnabled = 394;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      394, *this->autofillcreditcardenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto NtlmV2Enabled = 395;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      395, *this->ntlmv2enabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto PromptForDownloadLocation = 397;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      397, *this->promptfordownloadlocation_, output);
  }

  // optional .enterprise_management.StringPolicyProto IsolateOrigins = 400;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      400, *this->isolateorigins_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto SitePerProcess = 401;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      401, *this->siteperprocess_, output);
  }

  // optional .enterprise_management.StringListPolicyProto UnsafelyTreatInsecureOriginAsSecure = 402;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      402, *this->unsafelytreatinsecureoriginassecure_, output);
  }

  // optional .enterprise_management.StringPolicyProto DefaultDownloadDirectory = 403;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      403, *this->defaultdownloaddirectory_, output);
  }

  // optional .enterprise_management.StringListPolicyProto SecurityKeyPermitAttestation = 404;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      404, *this->securitykeypermitattestation_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto AbusiveExperienceInterventionEnforce = 406;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      406, *this->abusiveexperienceinterventionenforce_, output);
  }

  // optional .enterprise_management.StringListPolicyProto SpellcheckLanguage = 407;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      407, *this->spellchecklanguage_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto SpellcheckEnabled = 410;
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      410, *this->spellcheckenabled_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto AdsSettingForIntrusiveAdsSites = 411;
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      411, *this->adssettingforintrusiveadssites_, output);
  }

  cached_has_bits = _has_bits_[6];
  // optional .enterprise_management.IntegerPolicyProto PasswordProtectionWarningTrigger = 413;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      413, *this->passwordprotectionwarningtrigger_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto EnableSymantecLegacyInfrastructure = 415;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      415, *this->enablesymanteclegacyinfrastructure_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto WebDriverOverridesIncompatiblePolicies = 416;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      416, *this->webdriveroverridesincompatiblepolicies_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto RelaunchNotification = 421;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      421, *this->relaunchnotification_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto RelaunchNotificationPeriod = 422;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      422, *this->relaunchnotificationperiod_, output);
  }

  // optional .enterprise_management.StringListPolicyProto SafeBrowsingWhitelistDomains = 424;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      424, *this->safebrowsingwhitelistdomains_, output);
  }

  // optional .enterprise_management.StringListPolicyProto PasswordProtectionLoginURLs = 425;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      425, *this->passwordprotectionloginurls_, output);
  }

  // optional .enterprise_management.StringPolicyProto PasswordProtectionChangePasswordURL = 426;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      426, *this->passwordprotectionchangepasswordurl_, output);
  }

  // optional .enterprise_management.StringPolicyProto MachineLevelUserCloudPolicyEnrollmentToken = 430;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      430, *this->machinelevelusercloudpolicyenrollmenttoken_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto SafeBrowsingExtendedReportingEnabled = 431;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      431, *this->safebrowsingextendedreportingenabled_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto AutoplayAllowed = 432;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      432, *this->autoplayallowed_, output);
  }

  // optional .enterprise_management.StringListPolicyProto AutoplayWhitelist = 433;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      433, *this->autoplaywhitelist_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto DefaultWebUsbGuardSetting = 436;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      436, *this->defaultwebusbguardsetting_, output);
  }

  // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForCas = 437;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      437, *this->certificatetransparencyenforcementdisabledforcas_, output);
  }

  // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForLegacyCas = 438;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      438, *this->certificatetransparencyenforcementdisabledforlegacycas_, output);
  }

  // optional .enterprise_management.BooleanPolicyProto MediaRouterCastAllowAllIPs = 439;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      439, *this->mediaroutercastallowallips_, output);
  }

  // optional .enterprise_management.StringListPolicyProto WebUsbAskForUrls = 441;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      441, *this->webusbaskforurls_, output);
  }

  // optional .enterprise_management.StringListPolicyProto WebUsbBlockedForUrls = 442;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      442, *this->webusbblockedforurls_, output);
  }

  // optional .enterprise_management.IntegerPolicyProto DeveloperToolsAvailability = 445;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      445, *this->developertoolsavailability_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:enterprise_management.CloudPolicySettings)
}

size_t CloudPolicySettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:enterprise_management.CloudPolicySettings)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional .enterprise_management.StringPolicyProto HomepageLocation = 3;
    if (has_homepagelocation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->homepagelocation_);
    }

    // optional .enterprise_management.BooleanPolicyProto HomepageIsNewTabPage = 4;
    if (has_homepageisnewtabpage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->homepageisnewtabpage_);
    }

    // optional .enterprise_management.BooleanPolicyProto DefaultBrowserSettingEnabled = 5;
    if (has_defaultbrowsersettingenabled()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultbrowsersettingenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto AlternateErrorPagesEnabled = 7;
    if (has_alternateerrorpagesenabled()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->alternateerrorpagesenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto SearchSuggestEnabled = 8;
    if (has_searchsuggestenabled()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->searchsuggestenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto JavascriptEnabled = 11;
    if (has_javascriptenabled()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->javascriptenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto IncognitoEnabled = 12;
    if (has_incognitoenabled()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->incognitoenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto SavingBrowserHistoryDisabled = 13;
    if (has_savingbrowserhistorydisabled()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->savingbrowserhistorydisabled_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .enterprise_management.BooleanPolicyProto PrintingEnabled = 14;
    if (has_printingenabled()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->printingenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto CloudPrintProxyEnabled = 15;
    if (has_cloudprintproxyenabled()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->cloudprintproxyenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto SafeBrowsingEnabled = 16;
    if (has_safebrowsingenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->safebrowsingenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto MetricsReportingEnabled = 17;
    if (has_metricsreportingenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->metricsreportingenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto PasswordManagerEnabled = 18;
    if (has_passwordmanagerenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->passwordmanagerenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto AutoFillEnabled = 20;
    if (has_autofillenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->autofillenabled_);
    }

    // optional .enterprise_management.StringListPolicyProto DisabledPlugins = 21;
    if (has_disabledplugins()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->disabledplugins_);
    }

    // optional .enterprise_management.BooleanPolicyProto SyncDisabled = 22;
    if (has_syncdisabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->syncdisabled_);
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional .enterprise_management.StringPolicyProto ProxyMode = 23;
    if (has_proxymode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->proxymode_);
    }

    // optional .enterprise_management.IntegerPolicyProto ProxyServerMode = 24;
    if (has_proxyservermode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->proxyservermode_);
    }

    // optional .enterprise_management.StringPolicyProto ProxyServer = 25;
    if (has_proxyserver()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->proxyserver_);
    }

    // optional .enterprise_management.StringPolicyProto ProxyPacUrl = 26;
    if (has_proxypacurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->proxypacurl_);
    }

    // optional .enterprise_management.StringPolicyProto ProxyBypassList = 27;
    if (has_proxybypasslist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->proxybypasslist_);
    }

    // optional .enterprise_management.StringPolicyProto AuthSchemes = 28;
    if (has_authschemes()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->authschemes_);
    }

    // optional .enterprise_management.BooleanPolicyProto DisableAuthNegotiateCnameLookup = 29;
    if (has_disableauthnegotiatecnamelookup()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->disableauthnegotiatecnamelookup_);
    }

    // optional .enterprise_management.BooleanPolicyProto EnableAuthNegotiatePort = 30;
    if (has_enableauthnegotiateport()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->enableauthnegotiateport_);
    }

  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    // optional .enterprise_management.StringPolicyProto AuthServerWhitelist = 31;
    if (has_authserverwhitelist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->authserverwhitelist_);
    }

    // optional .enterprise_management.StringPolicyProto AuthNegotiateDelegateWhitelist = 32;
    if (has_authnegotiatedelegatewhitelist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->authnegotiatedelegatewhitelist_);
    }

    // optional .enterprise_management.StringPolicyProto GSSAPILibraryName = 33;
    if (has_gssapilibraryname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gssapilibraryname_);
    }

    // optional .enterprise_management.StringListPolicyProto ExtensionInstallBlacklist = 34;
    if (has_extensioninstallblacklist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->extensioninstallblacklist_);
    }

    // optional .enterprise_management.StringListPolicyProto ExtensionInstallWhitelist = 35;
    if (has_extensioninstallwhitelist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->extensioninstallwhitelist_);
    }

    // optional .enterprise_management.StringListPolicyProto ExtensionInstallForcelist = 36;
    if (has_extensioninstallforcelist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->extensioninstallforcelist_);
    }

    // optional .enterprise_management.BooleanPolicyProto ShowHomeButton = 37;
    if (has_showhomebutton()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->showhomebutton_);
    }

    // optional .enterprise_management.BooleanPolicyProto DeveloperToolsDisabled = 38;
    if (has_developertoolsdisabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->developertoolsdisabled_);
    }

  }
  if (_has_bits_[32 / 32] & 255u) {
    // optional .enterprise_management.IntegerPolicyProto RestoreOnStartup = 39;
    if (has_restoreonstartup()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->restoreonstartup_);
    }

    // optional .enterprise_management.StringListPolicyProto RestoreOnStartupURLs = 40;
    if (has_restoreonstartupurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->restoreonstartupurls_);
    }

    // optional .enterprise_management.BooleanPolicyProto BlockThirdPartyCookies = 41;
    if (has_blockthirdpartycookies()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->blockthirdpartycookies_);
    }

    // optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderEnabled = 42;
    if (has_defaultsearchproviderenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultsearchproviderenabled_);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderName = 43;
    if (has_defaultsearchprovidername()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultsearchprovidername_);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderKeyword = 44;
    if (has_defaultsearchproviderkeyword()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultsearchproviderkeyword_);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURL = 45;
    if (has_defaultsearchprovidersearchurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultsearchprovidersearchurl_);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURL = 46;
    if (has_defaultsearchprovidersuggesturl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultsearchprovidersuggesturl_);
    }

  }
  if (_has_bits_[40 / 32] & 65280u) {
    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderIconURL = 48;
    if (has_defaultsearchprovidericonurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultsearchprovidericonurl_);
    }

    // optional .enterprise_management.StringListPolicyProto DefaultSearchProviderEncodings = 49;
    if (has_defaultsearchproviderencodings()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultsearchproviderencodings_);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultCookiesSetting = 50;
    if (has_defaultcookiessetting()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultcookiessetting_);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultImagesSetting = 51;
    if (has_defaultimagessetting()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultimagessetting_);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptSetting = 52;
    if (has_defaultjavascriptsetting()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultjavascriptsetting_);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultPluginsSetting = 53;
    if (has_defaultpluginssetting()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultpluginssetting_);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultPopupsSetting = 54;
    if (has_defaultpopupssetting()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultpopupssetting_);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultNotificationsSetting = 55;
    if (has_defaultnotificationssetting()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultnotificationssetting_);
    }

  }
  if (_has_bits_[48 / 32] & 16711680u) {
    // optional .enterprise_management.IntegerPolicyProto DefaultGeolocationSetting = 56;
    if (has_defaultgeolocationsetting()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultgeolocationsetting_);
    }

    // optional .enterprise_management.BooleanPolicyProto Disable3DAPIs = 57;
    if (has_disable3dapis()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->disable3dapis_);
    }

    // optional .enterprise_management.StringPolicyProto DownloadDirectory = 66;
    if (has_downloaddirectory()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->downloaddirectory_);
    }

    // optional .enterprise_management.StringListPolicyProto CookiesBlockedForUrls = 69;
    if (has_cookiesblockedforurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->cookiesblockedforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto CookiesSessionOnlyForUrls = 70;
    if (has_cookiessessiononlyforurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->cookiessessiononlyforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto ImagesAllowedForUrls = 71;
    if (has_imagesallowedforurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->imagesallowedforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto ImagesBlockedForUrls = 72;
    if (has_imagesblockedforurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->imagesblockedforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto JavaScriptAllowedForUrls = 73;
    if (has_javascriptallowedforurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->javascriptallowedforurls_);
    }

  }
  if (_has_bits_[56 / 32] & 4278190080u) {
    // optional .enterprise_management.StringListPolicyProto JavaScriptBlockedForUrls = 74;
    if (has_javascriptblockedforurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->javascriptblockedforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto PluginsAllowedForUrls = 75;
    if (has_pluginsallowedforurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pluginsallowedforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto PluginsBlockedForUrls = 76;
    if (has_pluginsblockedforurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pluginsblockedforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto PopupsAllowedForUrls = 77;
    if (has_popupsallowedforurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->popupsallowedforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto PopupsBlockedForUrls = 78;
    if (has_popupsblockedforurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->popupsblockedforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto CookiesAllowedForUrls = 79;
    if (has_cookiesallowedforurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->cookiesallowedforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto EnabledPlugins = 80;
    if (has_enabledplugins()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->enabledplugins_);
    }

    // optional .enterprise_management.StringListPolicyProto DisabledPluginsExceptions = 81;
    if (has_disabledpluginsexceptions()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->disabledpluginsexceptions_);
    }

  }
  if (_has_bits_[64 / 32] & 255u) {
    // optional .enterprise_management.BooleanPolicyProto TranslateEnabled = 82;
    if (has_translateenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->translateenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto AllowOutdatedPlugins = 83;
    if (has_allowoutdatedplugins()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->allowoutdatedplugins_);
    }

    // optional .enterprise_management.BooleanPolicyProto BookmarkBarEnabled = 84;
    if (has_bookmarkbarenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bookmarkbarenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto EditBookmarksEnabled = 85;
    if (has_editbookmarksenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->editbookmarksenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto AllowFileSelectionDialogs = 86;
    if (has_allowfileselectiondialogs()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->allowfileselectiondialogs_);
    }

    // optional .enterprise_management.StringListPolicyProto DisabledSchemes = 87;
    if (has_disabledschemes()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->disabledschemes_);
    }

    // optional .enterprise_management.StringPolicyProto DiskCacheDir = 90;
    if (has_diskcachedir()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->diskcachedir_);
    }

    // optional .enterprise_management.BooleanPolicyProto AllowCrossOriginAuthPrompt = 91;
    if (has_allowcrossoriginauthprompt()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->allowcrossoriginauthprompt_);
    }

  }
  if (_has_bits_[72 / 32] & 65280u) {
    // optional .enterprise_management.IntegerPolicyProto MaxConnectionsPerProxy = 94;
    if (has_maxconnectionsperproxy()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->maxconnectionsperproxy_);
    }

    // optional .enterprise_management.IntegerPolicyProto IncognitoModeAvailability = 95;
    if (has_incognitomodeavailability()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->incognitomodeavailability_);
    }

    // optional .enterprise_management.BooleanPolicyProto RemoteAccessHostFirewallTraversal = 97;
    if (has_remoteaccesshostfirewalltraversal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->remoteaccesshostfirewalltraversal_);
    }

    // optional .enterprise_management.BooleanPolicyProto ImportBookmarks = 99;
    if (has_importbookmarks()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->importbookmarks_);
    }

    // optional .enterprise_management.BooleanPolicyProto ImportHistory = 100;
    if (has_importhistory()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->importhistory_);
    }

    // optional .enterprise_management.BooleanPolicyProto ImportHomepage = 101;
    if (has_importhomepage()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->importhomepage_);
    }

    // optional .enterprise_management.BooleanPolicyProto ImportSearchEngine = 102;
    if (has_importsearchengine()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->importsearchengine_);
    }

    // optional .enterprise_management.BooleanPolicyProto ImportSavedPasswords = 103;
    if (has_importsavedpasswords()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->importsavedpasswords_);
    }

  }
  if (_has_bits_[80 / 32] & 16711680u) {
    // optional .enterprise_management.StringListPolicyProto AutoSelectCertificateForUrls = 104;
    if (has_autoselectcertificateforurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->autoselectcertificateforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto URLBlacklist = 105;
    if (has_urlblacklist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->urlblacklist_);
    }

    // optional .enterprise_management.StringListPolicyProto URLWhitelist = 106;
    if (has_urlwhitelist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->urlwhitelist_);
    }

    // optional .enterprise_management.StringListPolicyProto NotificationsAllowedForUrls = 107;
    if (has_notificationsallowedforurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->notificationsallowedforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto NotificationsBlockedForUrls = 108;
    if (has_notificationsblockedforurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->notificationsblockedforurls_);
    }

    // optional .enterprise_management.BooleanPolicyProto CloudPrintSubmitEnabled = 111;
    if (has_cloudprintsubmitenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->cloudprintsubmitenabled_);
    }

    // optional .enterprise_management.IntegerPolicyProto DiskCacheSize = 112;
    if (has_diskcachesize()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->diskcachesize_);
    }

    // optional .enterprise_management.IntegerPolicyProto MediaCacheSize = 113;
    if (has_mediacachesize()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->mediacachesize_);
    }

  }
  if (_has_bits_[88 / 32] & 4278190080u) {
    // optional .enterprise_management.StringPolicyProto ProxySettings = 118;
    if (has_proxysettings()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->proxysettings_);
    }

    // optional .enterprise_management.BooleanPolicyProto DisablePrintPreview = 119;
    if (has_disableprintpreview()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->disableprintpreview_);
    }

    // optional .enterprise_management.BooleanPolicyProto EnableOnlineRevocationChecks = 131;
    if (has_enableonlinerevocationchecks()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->enableonlinerevocationchecks_);
    }

    // optional .enterprise_management.BooleanPolicyProto BackgroundModeEnabled = 140;
    if (has_backgroundmodeenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->backgroundmodeenabled_);
    }

    // optional .enterprise_management.StringPolicyProto RestrictSigninToPattern = 149;
    if (has_restrictsignintopattern()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->restrictsignintopattern_);
    }

    // optional .enterprise_management.StringListPolicyProto ExtensionInstallSources = 150;
    if (has_extensioninstallsources()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->extensioninstallsources_);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultMediaStreamSetting = 151;
    if (has_defaultmediastreamsetting()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultmediastreamsetting_);
    }

    // optional .enterprise_management.BooleanPolicyProto DisableSafeBrowsingProceedAnyway = 152;
    if (has_disablesafebrowsingproceedanyway()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->disablesafebrowsingproceedanyway_);
    }

  }
  if (_has_bits_[96 / 32] & 255u) {
    // optional .enterprise_management.BooleanPolicyProto SpellCheckServiceEnabled = 153;
    if (has_spellcheckserviceenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->spellcheckserviceenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto DisableScreenshots = 155;
    if (has_disablescreenshots()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->disablescreenshots_);
    }

    // optional .enterprise_management.StringPolicyProto RemoteAccessHostDomain = 156;
    if (has_remoteaccesshostdomain()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->remoteaccesshostdomain_);
    }

    // optional .enterprise_management.StringPolicyProto RemoteAccessHostTalkGadgetPrefix = 158;
    if (has_remoteaccesshosttalkgadgetprefix()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->remoteaccesshosttalkgadgetprefix_);
    }

    // optional .enterprise_management.BooleanPolicyProto RemoteAccessHostRequireCurtain = 159;
    if (has_remoteaccesshostrequirecurtain()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->remoteaccesshostrequirecurtain_);
    }

    // optional .enterprise_management.BooleanPolicyProto AudioCaptureAllowed = 162;
    if (has_audiocaptureallowed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->audiocaptureallowed_);
    }

    // optional .enterprise_management.StringListPolicyProto DefaultSearchProviderAlternateURLs = 163;
    if (has_defaultsearchprovideralternateurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultsearchprovideralternateurls_);
    }

    // optional .enterprise_management.BooleanPolicyProto ForceSafeSearch = 164;
    if (has_forcesafesearch()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->forcesafesearch_);
    }

  }
  if (_has_bits_[104 / 32] & 65280u) {
    // optional .enterprise_management.BooleanPolicyProto BuiltInDnsClientEnabled = 167;
    if (has_builtindnsclientenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->builtindnsclientenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto VideoCaptureAllowed = 169;
    if (has_videocaptureallowed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->videocaptureallowed_);
    }

    // optional .enterprise_management.StringListPolicyProto ExtensionAllowedTypes = 170;
    if (has_extensionallowedtypes()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->extensionallowedtypes_);
    }

    // optional .enterprise_management.BooleanPolicyProto AllowDeletingBrowserHistory = 189;
    if (has_allowdeletingbrowserhistory()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->allowdeletingbrowserhistory_);
    }

    // optional .enterprise_management.BooleanPolicyProto HideWebStoreIcon = 191;
    if (has_hidewebstoreicon()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->hidewebstoreicon_);
    }

    // optional .enterprise_management.BooleanPolicyProto SigninAllowed = 192;
    if (has_signinallowed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->signinallowed_);
    }

    // optional .enterprise_management.StringPolicyProto VariationsRestrictParameter = 198;
    if (has_variationsrestrictparameter()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->variationsrestrictparameter_);
    }

    // optional .enterprise_management.IntegerPolicyProto ContentPackDefaultFilteringBehavior = 206;
    if (has_contentpackdefaultfilteringbehavior()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->contentpackdefaultfilteringbehavior_);
    }

  }
  if (_has_bits_[112 / 32] & 16711680u) {
    // optional .enterprise_management.StringPolicyProto ContentPackManualBehaviorHosts = 207;
    if (has_contentpackmanualbehaviorhosts()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->contentpackmanualbehaviorhosts_);
    }

    // optional .enterprise_management.StringPolicyProto ContentPackManualBehaviorURLs = 208;
    if (has_contentpackmanualbehaviorurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->contentpackmanualbehaviorurls_);
    }

    // optional .enterprise_management.StringListPolicyProto AudioCaptureAllowedUrls = 210;
    if (has_audiocaptureallowedurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->audiocaptureallowedurls_);
    }

    // optional .enterprise_management.StringListPolicyProto VideoCaptureAllowedUrls = 211;
    if (has_videocaptureallowedurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->videocaptureallowedurls_);
    }

    // optional .enterprise_management.BooleanPolicyProto SupervisedUserCreationEnabled = 225;
    if (has_supervisedusercreationenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->supervisedusercreationenabled_);
    }

    // optional .enterprise_management.StringPolicyProto ManagedBookmarks = 229;
    if (has_managedbookmarks()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->managedbookmarks_);
    }

    // optional .enterprise_management.IntegerPolicyProto MaxInvalidationFetchDelay = 230;
    if (has_maxinvalidationfetchdelay()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->maxinvalidationfetchdelay_);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURL = 231;
    if (has_defaultsearchproviderimageurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultsearchproviderimageurl_);
    }

  }
  if (_has_bits_[120 / 32] & 4278190080u) {
    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURLPostParams = 232;
    if (has_defaultsearchprovidersearchurlpostparams()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultsearchprovidersearchurlpostparams_);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURLPostParams = 233;
    if (has_defaultsearchprovidersuggesturlpostparams()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultsearchprovidersuggesturlpostparams_);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURLPostParams = 235;
    if (has_defaultsearchproviderimageurlpostparams()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultsearchproviderimageurlpostparams_);
    }

    // optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowClientPairing = 236;
    if (has_remoteaccesshostallowclientpairing()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->remoteaccesshostallowclientpairing_);
    }

    // optional .enterprise_management.BooleanPolicyProto RequireOnlineRevocationChecksForLocalAnchors = 237;
    if (has_requireonlinerevocationchecksforlocalanchors()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->requireonlinerevocationchecksforlocalanchors_);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderNewTabURL = 239;
    if (has_defaultsearchprovidernewtaburl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultsearchprovidernewtaburl_);
    }

    // optional .enterprise_management.BooleanPolicyProto FullscreenAllowed = 242;
    if (has_fullscreenallowed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->fullscreenallowed_);
    }

    // optional .enterprise_management.BooleanPolicyProto ForceEphemeralProfiles = 247;
    if (has_forceephemeralprofiles()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->forceephemeralprofiles_);
    }

  }
  if (_has_bits_[128 / 32] & 255u) {
    // optional .enterprise_management.StringListPolicyProto NativeMessagingBlacklist = 253;
    if (has_nativemessagingblacklist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->nativemessagingblacklist_);
    }

    // optional .enterprise_management.StringListPolicyProto NativeMessagingWhitelist = 254;
    if (has_nativemessagingwhitelist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->nativemessagingwhitelist_);
    }

    // optional .enterprise_management.BooleanPolicyProto NativeMessagingUserLevelHosts = 255;
    if (has_nativemessaginguserlevelhosts()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->nativemessaginguserlevelhosts_);
    }

    // optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowGnubbyAuth = 259;
    if (has_remoteaccesshostallowgnubbyauth()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->remoteaccesshostallowgnubbyauth_);
    }

    // optional .enterprise_management.BooleanPolicyProto WPADQuickCheckEnabled = 263;
    if (has_wpadquickcheckenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->wpadquickcheckenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowRelayedConnection = 265;
    if (has_remoteaccesshostallowrelayedconnection()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->remoteaccesshostallowrelayedconnection_);
    }

    // optional .enterprise_management.StringPolicyProto RemoteAccessHostUdpPortRange = 266;
    if (has_remoteaccesshostudpportrange()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->remoteaccesshostudpportrange_);
    }

    // optional .enterprise_management.BooleanPolicyProto ShowAppsShortcutInBookmarkBar = 269;
    if (has_showappsshortcutinbookmarkbar()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->showappsshortcutinbookmarkbar_);
    }

  }
  if (_has_bits_[136 / 32] & 65280u) {
    // optional .enterprise_management.StringPolicyProto RegisteredProtocolHandlers = 270;
    if (has_registeredprotocolhandlers()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->registeredprotocolhandlers_);
    }

    // optional .enterprise_management.StringListPolicyProto EnableDeprecatedWebPlatformFeatures = 272;
    if (has_enabledeprecatedwebplatformfeatures()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->enabledeprecatedwebplatformfeatures_);
    }

    // optional .enterprise_management.IntegerPolicyProto NetworkPredictionOptions = 275;
    if (has_networkpredictionoptions()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->networkpredictionoptions_);
    }

    // optional .enterprise_management.BooleanPolicyProto BrowserGuestModeEnabled = 277;
    if (has_browserguestmodeenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->browserguestmodeenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto BrowserAddPersonEnabled = 278;
    if (has_browseraddpersonenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->browseraddpersonenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto ImportAutofillFormData = 279;
    if (has_importautofillformdata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->importautofillformdata_);
    }

    // optional .enterprise_management.StringPolicyProto ExtensionSettings = 280;
    if (has_extensionsettings()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->extensionsettings_);
    }

    // optional .enterprise_management.StringPolicyProto SSLVersionMin = 281;
    if (has_sslversionmin()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->sslversionmin_);
    }

  }
  if (_has_bits_[144 / 32] & 16711680u) {
    // optional .enterprise_management.BooleanPolicyProto ForceGoogleSafeSearch = 284;
    if (has_forcegooglesafesearch()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->forcegooglesafesearch_);
    }

    // optional .enterprise_management.BooleanPolicyProto ForceYouTubeSafetyMode = 285;
    if (has_forceyoutubesafetymode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->forceyoutubesafetymode_);
    }

    // optional .enterprise_management.BooleanPolicyProto RemoteAccessHostMatchUsername = 287;
    if (has_remoteaccesshostmatchusername()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->remoteaccesshostmatchusername_);
    }

    // optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenUrl = 288;
    if (has_remoteaccesshosttokenurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->remoteaccesshosttokenurl_);
    }

    // optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenValidationUrl = 289;
    if (has_remoteaccesshosttokenvalidationurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->remoteaccesshosttokenvalidationurl_);
    }

    // optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenValidationCertificateIssuer = 290;
    if (has_remoteaccesshosttokenvalidationcertificateissuer()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->remoteaccesshosttokenvalidationcertificateissuer_);
    }

    // optional .enterprise_management.BooleanPolicyProto SafeBrowsingExtendedReportingOptInAllowed = 301;
    if (has_safebrowsingextendedreportingoptinallowed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->safebrowsingextendedreportingoptinallowed_);
    }

    // optional .enterprise_management.BooleanPolicyProto SSLErrorOverrideAllowed = 302;
    if (has_sslerroroverrideallowed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->sslerroroverrideallowed_);
    }

  }
  if (_has_bits_[152 / 32] & 4278190080u) {
    // optional .enterprise_management.BooleanPolicyProto QuicAllowed = 303;
    if (has_quicallowed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->quicallowed_);
    }

    // optional .enterprise_management.BooleanPolicyProto HardwareAccelerationModeEnabled = 306;
    if (has_hardwareaccelerationmodeenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->hardwareaccelerationmodeenabled_);
    }

    // optional .enterprise_management.StringPolicyProto DefaultPrinterSelection = 310;
    if (has_defaultprinterselection()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultprinterselection_);
    }

    // optional .enterprise_management.BooleanPolicyProto AllowDinosaurEasterEgg = 311;
    if (has_allowdinosaureasteregg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->allowdinosaureasteregg_);
    }

    // optional .enterprise_management.StringPolicyProto RemoteAccessHostClientDomain = 318;
    if (has_remoteaccesshostclientdomain()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->remoteaccesshostclientdomain_);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultWebBluetoothGuardSetting = 322;
    if (has_defaultwebbluetoothguardsetting()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultwebbluetoothguardsetting_);
    }

    // optional .enterprise_management.BooleanPolicyProto SuppressUnsupportedOSWarning = 326;
    if (has_suppressunsupportedoswarning()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->suppressunsupportedoswarning_);
    }

    // optional .enterprise_management.BooleanPolicyProto TaskManagerEndProcessEnabled = 329;
    if (has_taskmanagerendprocessenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->taskmanagerendprocessenabled_);
    }

  }
  if (_has_bits_[160 / 32] & 255u) {
    // optional .enterprise_management.StringPolicyProto AllowedDomainsForApps = 333;
    if (has_alloweddomainsforapps()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->alloweddomainsforapps_);
    }

    // optional .enterprise_management.BooleanPolicyProto PacHttpsUrlStrippingEnabled = 334;
    if (has_pachttpsurlstrippingenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pachttpsurlstrippingenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto EnableMediaRouter = 335;
    if (has_enablemediarouter()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->enablemediarouter_);
    }

    // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForUrls = 337;
    if (has_certificatetransparencyenforcementdisabledforurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->certificatetransparencyenforcementdisabledforurls_);
    }

    // optional .enterprise_management.StringPolicyProto WebRtcUdpPortRange = 341;
    if (has_webrtcudpportrange()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->webrtcudpportrange_);
    }

    // optional .enterprise_management.BooleanPolicyProto EnableSha1ForLocalAnchors = 342;
    if (has_enablesha1forlocalanchors()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->enablesha1forlocalanchors_);
    }

    // optional .enterprise_management.BooleanPolicyProto ComponentUpdatesEnabled = 344;
    if (has_componentupdatesenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->componentupdatesenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto Http09OnNonDefaultPortsEnabled = 347;
    if (has_http09onnondefaultportsenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->http09onnondefaultportsenabled_);
    }

  }
  if (_has_bits_[168 / 32] & 65280u) {
    // optional .enterprise_management.BooleanPolicyProto AlwaysOpenPdfExternally = 349;
    if (has_alwaysopenpdfexternally()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->alwaysopenpdfexternally_);
    }

    // optional .enterprise_management.IntegerPolicyProto ForceYouTubeRestrict = 350;
    if (has_forceyoutuberestrict()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->forceyoutuberestrict_);
    }

    // optional .enterprise_management.StringPolicyProto NewTabPageLocation = 362;
    if (has_newtabpagelocation()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->newtabpagelocation_);
    }

    // optional .enterprise_management.StringPolicyProto SSLVersionMax = 363;
    if (has_sslversionmax()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->sslversionmax_);
    }

    // optional .enterprise_management.BooleanPolicyProto ShowCastIconInToolbar = 364;
    if (has_showcasticonintoolbar()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->showcasticonintoolbar_);
    }

    // optional .enterprise_management.StringListPolicyProto RemoteAccessHostDomainList = 370;
    if (has_remoteaccesshostdomainlist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->remoteaccesshostdomainlist_);
    }

    // optional .enterprise_management.StringListPolicyProto RemoteAccessHostClientDomainList = 371;
    if (has_remoteaccesshostclientdomainlist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->remoteaccesshostclientdomainlist_);
    }

    // optional .enterprise_management.BooleanPolicyProto BrowserNetworkTimeQueriesEnabled = 372;
    if (has_browsernetworktimequeriesenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->browsernetworktimequeriesenabled_);
    }

  }
  if (_has_bits_[176 / 32] & 16711680u) {
    // optional .enterprise_management.IntegerPolicyProto DownloadRestrictions = 373;
    if (has_downloadrestrictions()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->downloadrestrictions_);
    }

    // optional .enterprise_management.BooleanPolicyProto PrintPreviewUseSystemDefaultPrinter = 375;
    if (has_printpreviewusesystemdefaultprinter()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->printpreviewusesystemdefaultprinter_);
    }

    // optional .enterprise_management.BooleanPolicyProto CloudPolicyOverridesMachinePolicy = 383;
    if (has_cloudpolicyoverridesmachinepolicy()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->cloudpolicyoverridesmachinepolicy_);
    }

    // optional .enterprise_management.BooleanPolicyProto RunAllFlashInAllowMode = 393;
    if (has_runallflashinallowmode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->runallflashinallowmode_);
    }

    // optional .enterprise_management.BooleanPolicyProto AutofillCreditCardEnabled = 394;
    if (has_autofillcreditcardenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->autofillcreditcardenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto NtlmV2Enabled = 395;
    if (has_ntlmv2enabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->ntlmv2enabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto PromptForDownloadLocation = 397;
    if (has_promptfordownloadlocation()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->promptfordownloadlocation_);
    }

    // optional .enterprise_management.StringPolicyProto IsolateOrigins = 400;
    if (has_isolateorigins()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->isolateorigins_);
    }

  }
  if (_has_bits_[184 / 32] & 4278190080u) {
    // optional .enterprise_management.BooleanPolicyProto SitePerProcess = 401;
    if (has_siteperprocess()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->siteperprocess_);
    }

    // optional .enterprise_management.StringListPolicyProto UnsafelyTreatInsecureOriginAsSecure = 402;
    if (has_unsafelytreatinsecureoriginassecure()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->unsafelytreatinsecureoriginassecure_);
    }

    // optional .enterprise_management.StringPolicyProto DefaultDownloadDirectory = 403;
    if (has_defaultdownloaddirectory()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultdownloaddirectory_);
    }

    // optional .enterprise_management.StringListPolicyProto SecurityKeyPermitAttestation = 404;
    if (has_securitykeypermitattestation()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->securitykeypermitattestation_);
    }

    // optional .enterprise_management.BooleanPolicyProto AbusiveExperienceInterventionEnforce = 406;
    if (has_abusiveexperienceinterventionenforce()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->abusiveexperienceinterventionenforce_);
    }

    // optional .enterprise_management.StringListPolicyProto SpellcheckLanguage = 407;
    if (has_spellchecklanguage()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->spellchecklanguage_);
    }

    // optional .enterprise_management.BooleanPolicyProto SpellcheckEnabled = 410;
    if (has_spellcheckenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->spellcheckenabled_);
    }

    // optional .enterprise_management.IntegerPolicyProto AdsSettingForIntrusiveAdsSites = 411;
    if (has_adssettingforintrusiveadssites()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->adssettingforintrusiveadssites_);
    }

  }
  if (_has_bits_[192 / 32] & 255u) {
    // optional .enterprise_management.IntegerPolicyProto PasswordProtectionWarningTrigger = 413;
    if (has_passwordprotectionwarningtrigger()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->passwordprotectionwarningtrigger_);
    }

    // optional .enterprise_management.BooleanPolicyProto EnableSymantecLegacyInfrastructure = 415;
    if (has_enablesymanteclegacyinfrastructure()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->enablesymanteclegacyinfrastructure_);
    }

    // optional .enterprise_management.BooleanPolicyProto WebDriverOverridesIncompatiblePolicies = 416;
    if (has_webdriveroverridesincompatiblepolicies()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->webdriveroverridesincompatiblepolicies_);
    }

    // optional .enterprise_management.IntegerPolicyProto RelaunchNotification = 421;
    if (has_relaunchnotification()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->relaunchnotification_);
    }

    // optional .enterprise_management.IntegerPolicyProto RelaunchNotificationPeriod = 422;
    if (has_relaunchnotificationperiod()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->relaunchnotificationperiod_);
    }

    // optional .enterprise_management.StringListPolicyProto SafeBrowsingWhitelistDomains = 424;
    if (has_safebrowsingwhitelistdomains()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->safebrowsingwhitelistdomains_);
    }

    // optional .enterprise_management.StringListPolicyProto PasswordProtectionLoginURLs = 425;
    if (has_passwordprotectionloginurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->passwordprotectionloginurls_);
    }

    // optional .enterprise_management.StringPolicyProto PasswordProtectionChangePasswordURL = 426;
    if (has_passwordprotectionchangepasswordurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->passwordprotectionchangepasswordurl_);
    }

  }
  if (_has_bits_[200 / 32] & 65280u) {
    // optional .enterprise_management.StringPolicyProto MachineLevelUserCloudPolicyEnrollmentToken = 430;
    if (has_machinelevelusercloudpolicyenrollmenttoken()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->machinelevelusercloudpolicyenrollmenttoken_);
    }

    // optional .enterprise_management.BooleanPolicyProto SafeBrowsingExtendedReportingEnabled = 431;
    if (has_safebrowsingextendedreportingenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->safebrowsingextendedreportingenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto AutoplayAllowed = 432;
    if (has_autoplayallowed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->autoplayallowed_);
    }

    // optional .enterprise_management.StringListPolicyProto AutoplayWhitelist = 433;
    if (has_autoplaywhitelist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->autoplaywhitelist_);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultWebUsbGuardSetting = 436;
    if (has_defaultwebusbguardsetting()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->defaultwebusbguardsetting_);
    }

    // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForCas = 437;
    if (has_certificatetransparencyenforcementdisabledforcas()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->certificatetransparencyenforcementdisabledforcas_);
    }

    // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForLegacyCas = 438;
    if (has_certificatetransparencyenforcementdisabledforlegacycas()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->certificatetransparencyenforcementdisabledforlegacycas_);
    }

    // optional .enterprise_management.BooleanPolicyProto MediaRouterCastAllowAllIPs = 439;
    if (has_mediaroutercastallowallips()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->mediaroutercastallowallips_);
    }

  }
  if (_has_bits_[208 / 32] & 458752u) {
    // optional .enterprise_management.StringListPolicyProto WebUsbAskForUrls = 441;
    if (has_webusbaskforurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->webusbaskforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto WebUsbBlockedForUrls = 442;
    if (has_webusbblockedforurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->webusbblockedforurls_);
    }

    // optional .enterprise_management.IntegerPolicyProto DeveloperToolsAvailability = 445;
    if (has_developertoolsavailability()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->developertoolsavailability_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloudPolicySettings::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CloudPolicySettings*>(&from));
}

void CloudPolicySettings::MergeFrom(const CloudPolicySettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:enterprise_management.CloudPolicySettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_homepagelocation()->::enterprise_management::StringPolicyProto::MergeFrom(from.homepagelocation());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_homepageisnewtabpage()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.homepageisnewtabpage());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_defaultbrowsersettingenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.defaultbrowsersettingenabled());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_alternateerrorpagesenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.alternateerrorpagesenabled());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_searchsuggestenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.searchsuggestenabled());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_javascriptenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.javascriptenabled());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_incognitoenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.incognitoenabled());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_savingbrowserhistorydisabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.savingbrowserhistorydisabled());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_printingenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.printingenabled());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_cloudprintproxyenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.cloudprintproxyenabled());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_safebrowsingenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.safebrowsingenabled());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_metricsreportingenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.metricsreportingenabled());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_passwordmanagerenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.passwordmanagerenabled());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_autofillenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.autofillenabled());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_disabledplugins()->::enterprise_management::StringListPolicyProto::MergeFrom(from.disabledplugins());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_syncdisabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.syncdisabled());
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      mutable_proxymode()->::enterprise_management::StringPolicyProto::MergeFrom(from.proxymode());
    }
    if (cached_has_bits & 0x00020000u) {
      mutable_proxyservermode()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.proxyservermode());
    }
    if (cached_has_bits & 0x00040000u) {
      mutable_proxyserver()->::enterprise_management::StringPolicyProto::MergeFrom(from.proxyserver());
    }
    if (cached_has_bits & 0x00080000u) {
      mutable_proxypacurl()->::enterprise_management::StringPolicyProto::MergeFrom(from.proxypacurl());
    }
    if (cached_has_bits & 0x00100000u) {
      mutable_proxybypasslist()->::enterprise_management::StringPolicyProto::MergeFrom(from.proxybypasslist());
    }
    if (cached_has_bits & 0x00200000u) {
      mutable_authschemes()->::enterprise_management::StringPolicyProto::MergeFrom(from.authschemes());
    }
    if (cached_has_bits & 0x00400000u) {
      mutable_disableauthnegotiatecnamelookup()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.disableauthnegotiatecnamelookup());
    }
    if (cached_has_bits & 0x00800000u) {
      mutable_enableauthnegotiateport()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.enableauthnegotiateport());
    }
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      mutable_authserverwhitelist()->::enterprise_management::StringPolicyProto::MergeFrom(from.authserverwhitelist());
    }
    if (cached_has_bits & 0x02000000u) {
      mutable_authnegotiatedelegatewhitelist()->::enterprise_management::StringPolicyProto::MergeFrom(from.authnegotiatedelegatewhitelist());
    }
    if (cached_has_bits & 0x04000000u) {
      mutable_gssapilibraryname()->::enterprise_management::StringPolicyProto::MergeFrom(from.gssapilibraryname());
    }
    if (cached_has_bits & 0x08000000u) {
      mutable_extensioninstallblacklist()->::enterprise_management::StringListPolicyProto::MergeFrom(from.extensioninstallblacklist());
    }
    if (cached_has_bits & 0x10000000u) {
      mutable_extensioninstallwhitelist()->::enterprise_management::StringListPolicyProto::MergeFrom(from.extensioninstallwhitelist());
    }
    if (cached_has_bits & 0x20000000u) {
      mutable_extensioninstallforcelist()->::enterprise_management::StringListPolicyProto::MergeFrom(from.extensioninstallforcelist());
    }
    if (cached_has_bits & 0x40000000u) {
      mutable_showhomebutton()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.showhomebutton());
    }
    if (cached_has_bits & 0x80000000u) {
      mutable_developertoolsdisabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.developertoolsdisabled());
    }
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_restoreonstartup()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.restoreonstartup());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_restoreonstartupurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.restoreonstartupurls());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_blockthirdpartycookies()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.blockthirdpartycookies());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_defaultsearchproviderenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.defaultsearchproviderenabled());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_defaultsearchprovidername()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchprovidername());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_defaultsearchproviderkeyword()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchproviderkeyword());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_defaultsearchprovidersearchurl()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchprovidersearchurl());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_defaultsearchprovidersuggesturl()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchprovidersuggesturl());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_defaultsearchprovidericonurl()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchprovidericonurl());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_defaultsearchproviderencodings()->::enterprise_management::StringListPolicyProto::MergeFrom(from.defaultsearchproviderencodings());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_defaultcookiessetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.defaultcookiessetting());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_defaultimagessetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.defaultimagessetting());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_defaultjavascriptsetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.defaultjavascriptsetting());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_defaultpluginssetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.defaultpluginssetting());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_defaultpopupssetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.defaultpopupssetting());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_defaultnotificationssetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.defaultnotificationssetting());
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      mutable_defaultgeolocationsetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.defaultgeolocationsetting());
    }
    if (cached_has_bits & 0x00020000u) {
      mutable_disable3dapis()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.disable3dapis());
    }
    if (cached_has_bits & 0x00040000u) {
      mutable_downloaddirectory()->::enterprise_management::StringPolicyProto::MergeFrom(from.downloaddirectory());
    }
    if (cached_has_bits & 0x00080000u) {
      mutable_cookiesblockedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.cookiesblockedforurls());
    }
    if (cached_has_bits & 0x00100000u) {
      mutable_cookiessessiononlyforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.cookiessessiononlyforurls());
    }
    if (cached_has_bits & 0x00200000u) {
      mutable_imagesallowedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.imagesallowedforurls());
    }
    if (cached_has_bits & 0x00400000u) {
      mutable_imagesblockedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.imagesblockedforurls());
    }
    if (cached_has_bits & 0x00800000u) {
      mutable_javascriptallowedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.javascriptallowedforurls());
    }
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      mutable_javascriptblockedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.javascriptblockedforurls());
    }
    if (cached_has_bits & 0x02000000u) {
      mutable_pluginsallowedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.pluginsallowedforurls());
    }
    if (cached_has_bits & 0x04000000u) {
      mutable_pluginsblockedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.pluginsblockedforurls());
    }
    if (cached_has_bits & 0x08000000u) {
      mutable_popupsallowedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.popupsallowedforurls());
    }
    if (cached_has_bits & 0x10000000u) {
      mutable_popupsblockedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.popupsblockedforurls());
    }
    if (cached_has_bits & 0x20000000u) {
      mutable_cookiesallowedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.cookiesallowedforurls());
    }
    if (cached_has_bits & 0x40000000u) {
      mutable_enabledplugins()->::enterprise_management::StringListPolicyProto::MergeFrom(from.enabledplugins());
    }
    if (cached_has_bits & 0x80000000u) {
      mutable_disabledpluginsexceptions()->::enterprise_management::StringListPolicyProto::MergeFrom(from.disabledpluginsexceptions());
    }
  }
  cached_has_bits = from._has_bits_[2];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_translateenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.translateenabled());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_allowoutdatedplugins()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.allowoutdatedplugins());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_bookmarkbarenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.bookmarkbarenabled());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_editbookmarksenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.editbookmarksenabled());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_allowfileselectiondialogs()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.allowfileselectiondialogs());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_disabledschemes()->::enterprise_management::StringListPolicyProto::MergeFrom(from.disabledschemes());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_diskcachedir()->::enterprise_management::StringPolicyProto::MergeFrom(from.diskcachedir());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_allowcrossoriginauthprompt()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.allowcrossoriginauthprompt());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_maxconnectionsperproxy()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.maxconnectionsperproxy());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_incognitomodeavailability()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.incognitomodeavailability());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_remoteaccesshostfirewalltraversal()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.remoteaccesshostfirewalltraversal());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_importbookmarks()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.importbookmarks());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_importhistory()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.importhistory());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_importhomepage()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.importhomepage());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_importsearchengine()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.importsearchengine());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_importsavedpasswords()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.importsavedpasswords());
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      mutable_autoselectcertificateforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.autoselectcertificateforurls());
    }
    if (cached_has_bits & 0x00020000u) {
      mutable_urlblacklist()->::enterprise_management::StringListPolicyProto::MergeFrom(from.urlblacklist());
    }
    if (cached_has_bits & 0x00040000u) {
      mutable_urlwhitelist()->::enterprise_management::StringListPolicyProto::MergeFrom(from.urlwhitelist());
    }
    if (cached_has_bits & 0x00080000u) {
      mutable_notificationsallowedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.notificationsallowedforurls());
    }
    if (cached_has_bits & 0x00100000u) {
      mutable_notificationsblockedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.notificationsblockedforurls());
    }
    if (cached_has_bits & 0x00200000u) {
      mutable_cloudprintsubmitenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.cloudprintsubmitenabled());
    }
    if (cached_has_bits & 0x00400000u) {
      mutable_diskcachesize()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.diskcachesize());
    }
    if (cached_has_bits & 0x00800000u) {
      mutable_mediacachesize()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.mediacachesize());
    }
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      mutable_proxysettings()->::enterprise_management::StringPolicyProto::MergeFrom(from.proxysettings());
    }
    if (cached_has_bits & 0x02000000u) {
      mutable_disableprintpreview()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.disableprintpreview());
    }
    if (cached_has_bits & 0x04000000u) {
      mutable_enableonlinerevocationchecks()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.enableonlinerevocationchecks());
    }
    if (cached_has_bits & 0x08000000u) {
      mutable_backgroundmodeenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.backgroundmodeenabled());
    }
    if (cached_has_bits & 0x10000000u) {
      mutable_restrictsignintopattern()->::enterprise_management::StringPolicyProto::MergeFrom(from.restrictsignintopattern());
    }
    if (cached_has_bits & 0x20000000u) {
      mutable_extensioninstallsources()->::enterprise_management::StringListPolicyProto::MergeFrom(from.extensioninstallsources());
    }
    if (cached_has_bits & 0x40000000u) {
      mutable_defaultmediastreamsetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.defaultmediastreamsetting());
    }
    if (cached_has_bits & 0x80000000u) {
      mutable_disablesafebrowsingproceedanyway()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.disablesafebrowsingproceedanyway());
    }
  }
  cached_has_bits = from._has_bits_[3];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_spellcheckserviceenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.spellcheckserviceenabled());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_disablescreenshots()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.disablescreenshots());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_remoteaccesshostdomain()->::enterprise_management::StringPolicyProto::MergeFrom(from.remoteaccesshostdomain());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_remoteaccesshosttalkgadgetprefix()->::enterprise_management::StringPolicyProto::MergeFrom(from.remoteaccesshosttalkgadgetprefix());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_remoteaccesshostrequirecurtain()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.remoteaccesshostrequirecurtain());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_audiocaptureallowed()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.audiocaptureallowed());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_defaultsearchprovideralternateurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.defaultsearchprovideralternateurls());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_forcesafesearch()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.forcesafesearch());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_builtindnsclientenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.builtindnsclientenabled());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_videocaptureallowed()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.videocaptureallowed());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_extensionallowedtypes()->::enterprise_management::StringListPolicyProto::MergeFrom(from.extensionallowedtypes());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_allowdeletingbrowserhistory()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.allowdeletingbrowserhistory());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_hidewebstoreicon()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.hidewebstoreicon());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_signinallowed()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.signinallowed());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_variationsrestrictparameter()->::enterprise_management::StringPolicyProto::MergeFrom(from.variationsrestrictparameter());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_contentpackdefaultfilteringbehavior()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.contentpackdefaultfilteringbehavior());
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      mutable_contentpackmanualbehaviorhosts()->::enterprise_management::StringPolicyProto::MergeFrom(from.contentpackmanualbehaviorhosts());
    }
    if (cached_has_bits & 0x00020000u) {
      mutable_contentpackmanualbehaviorurls()->::enterprise_management::StringPolicyProto::MergeFrom(from.contentpackmanualbehaviorurls());
    }
    if (cached_has_bits & 0x00040000u) {
      mutable_audiocaptureallowedurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.audiocaptureallowedurls());
    }
    if (cached_has_bits & 0x00080000u) {
      mutable_videocaptureallowedurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.videocaptureallowedurls());
    }
    if (cached_has_bits & 0x00100000u) {
      mutable_supervisedusercreationenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.supervisedusercreationenabled());
    }
    if (cached_has_bits & 0x00200000u) {
      mutable_managedbookmarks()->::enterprise_management::StringPolicyProto::MergeFrom(from.managedbookmarks());
    }
    if (cached_has_bits & 0x00400000u) {
      mutable_maxinvalidationfetchdelay()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.maxinvalidationfetchdelay());
    }
    if (cached_has_bits & 0x00800000u) {
      mutable_defaultsearchproviderimageurl()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchproviderimageurl());
    }
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      mutable_defaultsearchprovidersearchurlpostparams()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchprovidersearchurlpostparams());
    }
    if (cached_has_bits & 0x02000000u) {
      mutable_defaultsearchprovidersuggesturlpostparams()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchprovidersuggesturlpostparams());
    }
    if (cached_has_bits & 0x04000000u) {
      mutable_defaultsearchproviderimageurlpostparams()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchproviderimageurlpostparams());
    }
    if (cached_has_bits & 0x08000000u) {
      mutable_remoteaccesshostallowclientpairing()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.remoteaccesshostallowclientpairing());
    }
    if (cached_has_bits & 0x10000000u) {
      mutable_requireonlinerevocationchecksforlocalanchors()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.requireonlinerevocationchecksforlocalanchors());
    }
    if (cached_has_bits & 0x20000000u) {
      mutable_defaultsearchprovidernewtaburl()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchprovidernewtaburl());
    }
    if (cached_has_bits & 0x40000000u) {
      mutable_fullscreenallowed()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.fullscreenallowed());
    }
    if (cached_has_bits & 0x80000000u) {
      mutable_forceephemeralprofiles()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.forceephemeralprofiles());
    }
  }
  cached_has_bits = from._has_bits_[4];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_nativemessagingblacklist()->::enterprise_management::StringListPolicyProto::MergeFrom(from.nativemessagingblacklist());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_nativemessagingwhitelist()->::enterprise_management::StringListPolicyProto::MergeFrom(from.nativemessagingwhitelist());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_nativemessaginguserlevelhosts()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.nativemessaginguserlevelhosts());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_remoteaccesshostallowgnubbyauth()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.remoteaccesshostallowgnubbyauth());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_wpadquickcheckenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.wpadquickcheckenabled());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_remoteaccesshostallowrelayedconnection()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.remoteaccesshostallowrelayedconnection());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_remoteaccesshostudpportrange()->::enterprise_management::StringPolicyProto::MergeFrom(from.remoteaccesshostudpportrange());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_showappsshortcutinbookmarkbar()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.showappsshortcutinbookmarkbar());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_registeredprotocolhandlers()->::enterprise_management::StringPolicyProto::MergeFrom(from.registeredprotocolhandlers());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_enabledeprecatedwebplatformfeatures()->::enterprise_management::StringListPolicyProto::MergeFrom(from.enabledeprecatedwebplatformfeatures());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_networkpredictionoptions()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.networkpredictionoptions());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_browserguestmodeenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.browserguestmodeenabled());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_browseraddpersonenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.browseraddpersonenabled());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_importautofillformdata()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.importautofillformdata());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_extensionsettings()->::enterprise_management::StringPolicyProto::MergeFrom(from.extensionsettings());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_sslversionmin()->::enterprise_management::StringPolicyProto::MergeFrom(from.sslversionmin());
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      mutable_forcegooglesafesearch()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.forcegooglesafesearch());
    }
    if (cached_has_bits & 0x00020000u) {
      mutable_forceyoutubesafetymode()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.forceyoutubesafetymode());
    }
    if (cached_has_bits & 0x00040000u) {
      mutable_remoteaccesshostmatchusername()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.remoteaccesshostmatchusername());
    }
    if (cached_has_bits & 0x00080000u) {
      mutable_remoteaccesshosttokenurl()->::enterprise_management::StringPolicyProto::MergeFrom(from.remoteaccesshosttokenurl());
    }
    if (cached_has_bits & 0x00100000u) {
      mutable_remoteaccesshosttokenvalidationurl()->::enterprise_management::StringPolicyProto::MergeFrom(from.remoteaccesshosttokenvalidationurl());
    }
    if (cached_has_bits & 0x00200000u) {
      mutable_remoteaccesshosttokenvalidationcertificateissuer()->::enterprise_management::StringPolicyProto::MergeFrom(from.remoteaccesshosttokenvalidationcertificateissuer());
    }
    if (cached_has_bits & 0x00400000u) {
      mutable_safebrowsingextendedreportingoptinallowed()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.safebrowsingextendedreportingoptinallowed());
    }
    if (cached_has_bits & 0x00800000u) {
      mutable_sslerroroverrideallowed()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.sslerroroverrideallowed());
    }
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      mutable_quicallowed()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.quicallowed());
    }
    if (cached_has_bits & 0x02000000u) {
      mutable_hardwareaccelerationmodeenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.hardwareaccelerationmodeenabled());
    }
    if (cached_has_bits & 0x04000000u) {
      mutable_defaultprinterselection()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultprinterselection());
    }
    if (cached_has_bits & 0x08000000u) {
      mutable_allowdinosaureasteregg()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.allowdinosaureasteregg());
    }
    if (cached_has_bits & 0x10000000u) {
      mutable_remoteaccesshostclientdomain()->::enterprise_management::StringPolicyProto::MergeFrom(from.remoteaccesshostclientdomain());
    }
    if (cached_has_bits & 0x20000000u) {
      mutable_defaultwebbluetoothguardsetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.defaultwebbluetoothguardsetting());
    }
    if (cached_has_bits & 0x40000000u) {
      mutable_suppressunsupportedoswarning()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.suppressunsupportedoswarning());
    }
    if (cached_has_bits & 0x80000000u) {
      mutable_taskmanagerendprocessenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.taskmanagerendprocessenabled());
    }
  }
  cached_has_bits = from._has_bits_[5];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_alloweddomainsforapps()->::enterprise_management::StringPolicyProto::MergeFrom(from.alloweddomainsforapps());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_pachttpsurlstrippingenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.pachttpsurlstrippingenabled());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_enablemediarouter()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.enablemediarouter());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_certificatetransparencyenforcementdisabledforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.certificatetransparencyenforcementdisabledforurls());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_webrtcudpportrange()->::enterprise_management::StringPolicyProto::MergeFrom(from.webrtcudpportrange());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_enablesha1forlocalanchors()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.enablesha1forlocalanchors());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_componentupdatesenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.componentupdatesenabled());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_http09onnondefaultportsenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.http09onnondefaultportsenabled());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_alwaysopenpdfexternally()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.alwaysopenpdfexternally());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_forceyoutuberestrict()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.forceyoutuberestrict());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_newtabpagelocation()->::enterprise_management::StringPolicyProto::MergeFrom(from.newtabpagelocation());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_sslversionmax()->::enterprise_management::StringPolicyProto::MergeFrom(from.sslversionmax());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_showcasticonintoolbar()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.showcasticonintoolbar());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_remoteaccesshostdomainlist()->::enterprise_management::StringListPolicyProto::MergeFrom(from.remoteaccesshostdomainlist());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_remoteaccesshostclientdomainlist()->::enterprise_management::StringListPolicyProto::MergeFrom(from.remoteaccesshostclientdomainlist());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_browsernetworktimequeriesenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.browsernetworktimequeriesenabled());
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      mutable_downloadrestrictions()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.downloadrestrictions());
    }
    if (cached_has_bits & 0x00020000u) {
      mutable_printpreviewusesystemdefaultprinter()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.printpreviewusesystemdefaultprinter());
    }
    if (cached_has_bits & 0x00040000u) {
      mutable_cloudpolicyoverridesmachinepolicy()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.cloudpolicyoverridesmachinepolicy());
    }
    if (cached_has_bits & 0x00080000u) {
      mutable_runallflashinallowmode()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.runallflashinallowmode());
    }
    if (cached_has_bits & 0x00100000u) {
      mutable_autofillcreditcardenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.autofillcreditcardenabled());
    }
    if (cached_has_bits & 0x00200000u) {
      mutable_ntlmv2enabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.ntlmv2enabled());
    }
    if (cached_has_bits & 0x00400000u) {
      mutable_promptfordownloadlocation()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.promptfordownloadlocation());
    }
    if (cached_has_bits & 0x00800000u) {
      mutable_isolateorigins()->::enterprise_management::StringPolicyProto::MergeFrom(from.isolateorigins());
    }
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      mutable_siteperprocess()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.siteperprocess());
    }
    if (cached_has_bits & 0x02000000u) {
      mutable_unsafelytreatinsecureoriginassecure()->::enterprise_management::StringListPolicyProto::MergeFrom(from.unsafelytreatinsecureoriginassecure());
    }
    if (cached_has_bits & 0x04000000u) {
      mutable_defaultdownloaddirectory()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultdownloaddirectory());
    }
    if (cached_has_bits & 0x08000000u) {
      mutable_securitykeypermitattestation()->::enterprise_management::StringListPolicyProto::MergeFrom(from.securitykeypermitattestation());
    }
    if (cached_has_bits & 0x10000000u) {
      mutable_abusiveexperienceinterventionenforce()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.abusiveexperienceinterventionenforce());
    }
    if (cached_has_bits & 0x20000000u) {
      mutable_spellchecklanguage()->::enterprise_management::StringListPolicyProto::MergeFrom(from.spellchecklanguage());
    }
    if (cached_has_bits & 0x40000000u) {
      mutable_spellcheckenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.spellcheckenabled());
    }
    if (cached_has_bits & 0x80000000u) {
      mutable_adssettingforintrusiveadssites()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.adssettingforintrusiveadssites());
    }
  }
  cached_has_bits = from._has_bits_[6];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_passwordprotectionwarningtrigger()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.passwordprotectionwarningtrigger());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_enablesymanteclegacyinfrastructure()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.enablesymanteclegacyinfrastructure());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_webdriveroverridesincompatiblepolicies()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.webdriveroverridesincompatiblepolicies());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_relaunchnotification()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.relaunchnotification());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_relaunchnotificationperiod()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.relaunchnotificationperiod());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_safebrowsingwhitelistdomains()->::enterprise_management::StringListPolicyProto::MergeFrom(from.safebrowsingwhitelistdomains());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_passwordprotectionloginurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.passwordprotectionloginurls());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_passwordprotectionchangepasswordurl()->::enterprise_management::StringPolicyProto::MergeFrom(from.passwordprotectionchangepasswordurl());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_machinelevelusercloudpolicyenrollmenttoken()->::enterprise_management::StringPolicyProto::MergeFrom(from.machinelevelusercloudpolicyenrollmenttoken());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_safebrowsingextendedreportingenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.safebrowsingextendedreportingenabled());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_autoplayallowed()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.autoplayallowed());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_autoplaywhitelist()->::enterprise_management::StringListPolicyProto::MergeFrom(from.autoplaywhitelist());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_defaultwebusbguardsetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.defaultwebusbguardsetting());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_certificatetransparencyenforcementdisabledforcas()->::enterprise_management::StringListPolicyProto::MergeFrom(from.certificatetransparencyenforcementdisabledforcas());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_certificatetransparencyenforcementdisabledforlegacycas()->::enterprise_management::StringListPolicyProto::MergeFrom(from.certificatetransparencyenforcementdisabledforlegacycas());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_mediaroutercastallowallips()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.mediaroutercastallowallips());
    }
  }
  if (cached_has_bits & 458752u) {
    if (cached_has_bits & 0x00010000u) {
      mutable_webusbaskforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.webusbaskforurls());
    }
    if (cached_has_bits & 0x00020000u) {
      mutable_webusbblockedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.webusbblockedforurls());
    }
    if (cached_has_bits & 0x00040000u) {
      mutable_developertoolsavailability()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.developertoolsavailability());
    }
  }
}

void CloudPolicySettings::CopyFrom(const CloudPolicySettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:enterprise_management.CloudPolicySettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloudPolicySettings::IsInitialized() const {
  return true;
}

void CloudPolicySettings::Swap(CloudPolicySettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloudPolicySettings::InternalSwap(CloudPolicySettings* other) {
  std::swap(homepagelocation_, other->homepagelocation_);
  std::swap(homepageisnewtabpage_, other->homepageisnewtabpage_);
  std::swap(defaultbrowsersettingenabled_, other->defaultbrowsersettingenabled_);
  std::swap(alternateerrorpagesenabled_, other->alternateerrorpagesenabled_);
  std::swap(searchsuggestenabled_, other->searchsuggestenabled_);
  std::swap(javascriptenabled_, other->javascriptenabled_);
  std::swap(incognitoenabled_, other->incognitoenabled_);
  std::swap(savingbrowserhistorydisabled_, other->savingbrowserhistorydisabled_);
  std::swap(printingenabled_, other->printingenabled_);
  std::swap(cloudprintproxyenabled_, other->cloudprintproxyenabled_);
  std::swap(safebrowsingenabled_, other->safebrowsingenabled_);
  std::swap(metricsreportingenabled_, other->metricsreportingenabled_);
  std::swap(passwordmanagerenabled_, other->passwordmanagerenabled_);
  std::swap(autofillenabled_, other->autofillenabled_);
  std::swap(disabledplugins_, other->disabledplugins_);
  std::swap(syncdisabled_, other->syncdisabled_);
  std::swap(proxymode_, other->proxymode_);
  std::swap(proxyservermode_, other->proxyservermode_);
  std::swap(proxyserver_, other->proxyserver_);
  std::swap(proxypacurl_, other->proxypacurl_);
  std::swap(proxybypasslist_, other->proxybypasslist_);
  std::swap(authschemes_, other->authschemes_);
  std::swap(disableauthnegotiatecnamelookup_, other->disableauthnegotiatecnamelookup_);
  std::swap(enableauthnegotiateport_, other->enableauthnegotiateport_);
  std::swap(authserverwhitelist_, other->authserverwhitelist_);
  std::swap(authnegotiatedelegatewhitelist_, other->authnegotiatedelegatewhitelist_);
  std::swap(gssapilibraryname_, other->gssapilibraryname_);
  std::swap(extensioninstallblacklist_, other->extensioninstallblacklist_);
  std::swap(extensioninstallwhitelist_, other->extensioninstallwhitelist_);
  std::swap(extensioninstallforcelist_, other->extensioninstallforcelist_);
  std::swap(showhomebutton_, other->showhomebutton_);
  std::swap(developertoolsdisabled_, other->developertoolsdisabled_);
  std::swap(restoreonstartup_, other->restoreonstartup_);
  std::swap(restoreonstartupurls_, other->restoreonstartupurls_);
  std::swap(blockthirdpartycookies_, other->blockthirdpartycookies_);
  std::swap(defaultsearchproviderenabled_, other->defaultsearchproviderenabled_);
  std::swap(defaultsearchprovidername_, other->defaultsearchprovidername_);
  std::swap(defaultsearchproviderkeyword_, other->defaultsearchproviderkeyword_);
  std::swap(defaultsearchprovidersearchurl_, other->defaultsearchprovidersearchurl_);
  std::swap(defaultsearchprovidersuggesturl_, other->defaultsearchprovidersuggesturl_);
  std::swap(defaultsearchprovidericonurl_, other->defaultsearchprovidericonurl_);
  std::swap(defaultsearchproviderencodings_, other->defaultsearchproviderencodings_);
  std::swap(defaultcookiessetting_, other->defaultcookiessetting_);
  std::swap(defaultimagessetting_, other->defaultimagessetting_);
  std::swap(defaultjavascriptsetting_, other->defaultjavascriptsetting_);
  std::swap(defaultpluginssetting_, other->defaultpluginssetting_);
  std::swap(defaultpopupssetting_, other->defaultpopupssetting_);
  std::swap(defaultnotificationssetting_, other->defaultnotificationssetting_);
  std::swap(defaultgeolocationsetting_, other->defaultgeolocationsetting_);
  std::swap(disable3dapis_, other->disable3dapis_);
  std::swap(downloaddirectory_, other->downloaddirectory_);
  std::swap(cookiesblockedforurls_, other->cookiesblockedforurls_);
  std::swap(cookiessessiononlyforurls_, other->cookiessessiononlyforurls_);
  std::swap(imagesallowedforurls_, other->imagesallowedforurls_);
  std::swap(imagesblockedforurls_, other->imagesblockedforurls_);
  std::swap(javascriptallowedforurls_, other->javascriptallowedforurls_);
  std::swap(javascriptblockedforurls_, other->javascriptblockedforurls_);
  std::swap(pluginsallowedforurls_, other->pluginsallowedforurls_);
  std::swap(pluginsblockedforurls_, other->pluginsblockedforurls_);
  std::swap(popupsallowedforurls_, other->popupsallowedforurls_);
  std::swap(popupsblockedforurls_, other->popupsblockedforurls_);
  std::swap(cookiesallowedforurls_, other->cookiesallowedforurls_);
  std::swap(enabledplugins_, other->enabledplugins_);
  std::swap(disabledpluginsexceptions_, other->disabledpluginsexceptions_);
  std::swap(translateenabled_, other->translateenabled_);
  std::swap(allowoutdatedplugins_, other->allowoutdatedplugins_);
  std::swap(bookmarkbarenabled_, other->bookmarkbarenabled_);
  std::swap(editbookmarksenabled_, other->editbookmarksenabled_);
  std::swap(allowfileselectiondialogs_, other->allowfileselectiondialogs_);
  std::swap(disabledschemes_, other->disabledschemes_);
  std::swap(diskcachedir_, other->diskcachedir_);
  std::swap(allowcrossoriginauthprompt_, other->allowcrossoriginauthprompt_);
  std::swap(maxconnectionsperproxy_, other->maxconnectionsperproxy_);
  std::swap(incognitomodeavailability_, other->incognitomodeavailability_);
  std::swap(remoteaccesshostfirewalltraversal_, other->remoteaccesshostfirewalltraversal_);
  std::swap(importbookmarks_, other->importbookmarks_);
  std::swap(importhistory_, other->importhistory_);
  std::swap(importhomepage_, other->importhomepage_);
  std::swap(importsearchengine_, other->importsearchengine_);
  std::swap(importsavedpasswords_, other->importsavedpasswords_);
  std::swap(autoselectcertificateforurls_, other->autoselectcertificateforurls_);
  std::swap(urlblacklist_, other->urlblacklist_);
  std::swap(urlwhitelist_, other->urlwhitelist_);
  std::swap(notificationsallowedforurls_, other->notificationsallowedforurls_);
  std::swap(notificationsblockedforurls_, other->notificationsblockedforurls_);
  std::swap(cloudprintsubmitenabled_, other->cloudprintsubmitenabled_);
  std::swap(diskcachesize_, other->diskcachesize_);
  std::swap(mediacachesize_, other->mediacachesize_);
  std::swap(proxysettings_, other->proxysettings_);
  std::swap(disableprintpreview_, other->disableprintpreview_);
  std::swap(enableonlinerevocationchecks_, other->enableonlinerevocationchecks_);
  std::swap(backgroundmodeenabled_, other->backgroundmodeenabled_);
  std::swap(restrictsignintopattern_, other->restrictsignintopattern_);
  std::swap(extensioninstallsources_, other->extensioninstallsources_);
  std::swap(defaultmediastreamsetting_, other->defaultmediastreamsetting_);
  std::swap(disablesafebrowsingproceedanyway_, other->disablesafebrowsingproceedanyway_);
  std::swap(spellcheckserviceenabled_, other->spellcheckserviceenabled_);
  std::swap(disablescreenshots_, other->disablescreenshots_);
  std::swap(remoteaccesshostdomain_, other->remoteaccesshostdomain_);
  std::swap(remoteaccesshosttalkgadgetprefix_, other->remoteaccesshosttalkgadgetprefix_);
  std::swap(remoteaccesshostrequirecurtain_, other->remoteaccesshostrequirecurtain_);
  std::swap(audiocaptureallowed_, other->audiocaptureallowed_);
  std::swap(defaultsearchprovideralternateurls_, other->defaultsearchprovideralternateurls_);
  std::swap(forcesafesearch_, other->forcesafesearch_);
  std::swap(builtindnsclientenabled_, other->builtindnsclientenabled_);
  std::swap(videocaptureallowed_, other->videocaptureallowed_);
  std::swap(extensionallowedtypes_, other->extensionallowedtypes_);
  std::swap(allowdeletingbrowserhistory_, other->allowdeletingbrowserhistory_);
  std::swap(hidewebstoreicon_, other->hidewebstoreicon_);
  std::swap(signinallowed_, other->signinallowed_);
  std::swap(variationsrestrictparameter_, other->variationsrestrictparameter_);
  std::swap(contentpackdefaultfilteringbehavior_, other->contentpackdefaultfilteringbehavior_);
  std::swap(contentpackmanualbehaviorhosts_, other->contentpackmanualbehaviorhosts_);
  std::swap(contentpackmanualbehaviorurls_, other->contentpackmanualbehaviorurls_);
  std::swap(audiocaptureallowedurls_, other->audiocaptureallowedurls_);
  std::swap(videocaptureallowedurls_, other->videocaptureallowedurls_);
  std::swap(supervisedusercreationenabled_, other->supervisedusercreationenabled_);
  std::swap(managedbookmarks_, other->managedbookmarks_);
  std::swap(maxinvalidationfetchdelay_, other->maxinvalidationfetchdelay_);
  std::swap(defaultsearchproviderimageurl_, other->defaultsearchproviderimageurl_);
  std::swap(defaultsearchprovidersearchurlpostparams_, other->defaultsearchprovidersearchurlpostparams_);
  std::swap(defaultsearchprovidersuggesturlpostparams_, other->defaultsearchprovidersuggesturlpostparams_);
  std::swap(defaultsearchproviderimageurlpostparams_, other->defaultsearchproviderimageurlpostparams_);
  std::swap(remoteaccesshostallowclientpairing_, other->remoteaccesshostallowclientpairing_);
  std::swap(requireonlinerevocationchecksforlocalanchors_, other->requireonlinerevocationchecksforlocalanchors_);
  std::swap(defaultsearchprovidernewtaburl_, other->defaultsearchprovidernewtaburl_);
  std::swap(fullscreenallowed_, other->fullscreenallowed_);
  std::swap(forceephemeralprofiles_, other->forceephemeralprofiles_);
  std::swap(nativemessagingblacklist_, other->nativemessagingblacklist_);
  std::swap(nativemessagingwhitelist_, other->nativemessagingwhitelist_);
  std::swap(nativemessaginguserlevelhosts_, other->nativemessaginguserlevelhosts_);
  std::swap(remoteaccesshostallowgnubbyauth_, other->remoteaccesshostallowgnubbyauth_);
  std::swap(wpadquickcheckenabled_, other->wpadquickcheckenabled_);
  std::swap(remoteaccesshostallowrelayedconnection_, other->remoteaccesshostallowrelayedconnection_);
  std::swap(remoteaccesshostudpportrange_, other->remoteaccesshostudpportrange_);
  std::swap(showappsshortcutinbookmarkbar_, other->showappsshortcutinbookmarkbar_);
  std::swap(registeredprotocolhandlers_, other->registeredprotocolhandlers_);
  std::swap(enabledeprecatedwebplatformfeatures_, other->enabledeprecatedwebplatformfeatures_);
  std::swap(networkpredictionoptions_, other->networkpredictionoptions_);
  std::swap(browserguestmodeenabled_, other->browserguestmodeenabled_);
  std::swap(browseraddpersonenabled_, other->browseraddpersonenabled_);
  std::swap(importautofillformdata_, other->importautofillformdata_);
  std::swap(extensionsettings_, other->extensionsettings_);
  std::swap(sslversionmin_, other->sslversionmin_);
  std::swap(forcegooglesafesearch_, other->forcegooglesafesearch_);
  std::swap(forceyoutubesafetymode_, other->forceyoutubesafetymode_);
  std::swap(remoteaccesshostmatchusername_, other->remoteaccesshostmatchusername_);
  std::swap(remoteaccesshosttokenurl_, other->remoteaccesshosttokenurl_);
  std::swap(remoteaccesshosttokenvalidationurl_, other->remoteaccesshosttokenvalidationurl_);
  std::swap(remoteaccesshosttokenvalidationcertificateissuer_, other->remoteaccesshosttokenvalidationcertificateissuer_);
  std::swap(safebrowsingextendedreportingoptinallowed_, other->safebrowsingextendedreportingoptinallowed_);
  std::swap(sslerroroverrideallowed_, other->sslerroroverrideallowed_);
  std::swap(quicallowed_, other->quicallowed_);
  std::swap(hardwareaccelerationmodeenabled_, other->hardwareaccelerationmodeenabled_);
  std::swap(defaultprinterselection_, other->defaultprinterselection_);
  std::swap(allowdinosaureasteregg_, other->allowdinosaureasteregg_);
  std::swap(remoteaccesshostclientdomain_, other->remoteaccesshostclientdomain_);
  std::swap(defaultwebbluetoothguardsetting_, other->defaultwebbluetoothguardsetting_);
  std::swap(suppressunsupportedoswarning_, other->suppressunsupportedoswarning_);
  std::swap(taskmanagerendprocessenabled_, other->taskmanagerendprocessenabled_);
  std::swap(alloweddomainsforapps_, other->alloweddomainsforapps_);
  std::swap(pachttpsurlstrippingenabled_, other->pachttpsurlstrippingenabled_);
  std::swap(enablemediarouter_, other->enablemediarouter_);
  std::swap(certificatetransparencyenforcementdisabledforurls_, other->certificatetransparencyenforcementdisabledforurls_);
  std::swap(webrtcudpportrange_, other->webrtcudpportrange_);
  std::swap(enablesha1forlocalanchors_, other->enablesha1forlocalanchors_);
  std::swap(componentupdatesenabled_, other->componentupdatesenabled_);
  std::swap(http09onnondefaultportsenabled_, other->http09onnondefaultportsenabled_);
  std::swap(alwaysopenpdfexternally_, other->alwaysopenpdfexternally_);
  std::swap(forceyoutuberestrict_, other->forceyoutuberestrict_);
  std::swap(newtabpagelocation_, other->newtabpagelocation_);
  std::swap(sslversionmax_, other->sslversionmax_);
  std::swap(showcasticonintoolbar_, other->showcasticonintoolbar_);
  std::swap(remoteaccesshostdomainlist_, other->remoteaccesshostdomainlist_);
  std::swap(remoteaccesshostclientdomainlist_, other->remoteaccesshostclientdomainlist_);
  std::swap(browsernetworktimequeriesenabled_, other->browsernetworktimequeriesenabled_);
  std::swap(downloadrestrictions_, other->downloadrestrictions_);
  std::swap(printpreviewusesystemdefaultprinter_, other->printpreviewusesystemdefaultprinter_);
  std::swap(cloudpolicyoverridesmachinepolicy_, other->cloudpolicyoverridesmachinepolicy_);
  std::swap(runallflashinallowmode_, other->runallflashinallowmode_);
  std::swap(autofillcreditcardenabled_, other->autofillcreditcardenabled_);
  std::swap(ntlmv2enabled_, other->ntlmv2enabled_);
  std::swap(promptfordownloadlocation_, other->promptfordownloadlocation_);
  std::swap(isolateorigins_, other->isolateorigins_);
  std::swap(siteperprocess_, other->siteperprocess_);
  std::swap(unsafelytreatinsecureoriginassecure_, other->unsafelytreatinsecureoriginassecure_);
  std::swap(defaultdownloaddirectory_, other->defaultdownloaddirectory_);
  std::swap(securitykeypermitattestation_, other->securitykeypermitattestation_);
  std::swap(abusiveexperienceinterventionenforce_, other->abusiveexperienceinterventionenforce_);
  std::swap(spellchecklanguage_, other->spellchecklanguage_);
  std::swap(spellcheckenabled_, other->spellcheckenabled_);
  std::swap(adssettingforintrusiveadssites_, other->adssettingforintrusiveadssites_);
  std::swap(passwordprotectionwarningtrigger_, other->passwordprotectionwarningtrigger_);
  std::swap(enablesymanteclegacyinfrastructure_, other->enablesymanteclegacyinfrastructure_);
  std::swap(webdriveroverridesincompatiblepolicies_, other->webdriveroverridesincompatiblepolicies_);
  std::swap(relaunchnotification_, other->relaunchnotification_);
  std::swap(relaunchnotificationperiod_, other->relaunchnotificationperiod_);
  std::swap(safebrowsingwhitelistdomains_, other->safebrowsingwhitelistdomains_);
  std::swap(passwordprotectionloginurls_, other->passwordprotectionloginurls_);
  std::swap(passwordprotectionchangepasswordurl_, other->passwordprotectionchangepasswordurl_);
  std::swap(machinelevelusercloudpolicyenrollmenttoken_, other->machinelevelusercloudpolicyenrollmenttoken_);
  std::swap(safebrowsingextendedreportingenabled_, other->safebrowsingextendedreportingenabled_);
  std::swap(autoplayallowed_, other->autoplayallowed_);
  std::swap(autoplaywhitelist_, other->autoplaywhitelist_);
  std::swap(defaultwebusbguardsetting_, other->defaultwebusbguardsetting_);
  std::swap(certificatetransparencyenforcementdisabledforcas_, other->certificatetransparencyenforcementdisabledforcas_);
  std::swap(certificatetransparencyenforcementdisabledforlegacycas_, other->certificatetransparencyenforcementdisabledforlegacycas_);
  std::swap(mediaroutercastallowallips_, other->mediaroutercastallowallips_);
  std::swap(webusbaskforurls_, other->webusbaskforurls_);
  std::swap(webusbblockedforurls_, other->webusbblockedforurls_);
  std::swap(developertoolsavailability_, other->developertoolsavailability_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  std::swap(_has_bits_[1], other->_has_bits_[1]);
  std::swap(_has_bits_[2], other->_has_bits_[2]);
  std::swap(_has_bits_[3], other->_has_bits_[3]);
  std::swap(_has_bits_[4], other->_has_bits_[4]);
  std::swap(_has_bits_[5], other->_has_bits_[5]);
  std::swap(_has_bits_[6], other->_has_bits_[6]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CloudPolicySettings::GetTypeName() const {
  return "enterprise_management.CloudPolicySettings";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CloudPolicySettings

// optional .enterprise_management.StringPolicyProto HomepageLocation = 3;
bool CloudPolicySettings::has_homepagelocation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CloudPolicySettings::set_has_homepagelocation() {
  _has_bits_[0] |= 0x00000001u;
}
void CloudPolicySettings::clear_has_homepagelocation() {
  _has_bits_[0] &= ~0x00000001u;
}
void CloudPolicySettings::clear_homepagelocation() {
  if (homepagelocation_ != NULL) homepagelocation_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_homepagelocation();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::homepagelocation() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.HomepageLocation)
  return homepagelocation_ != NULL ? *homepagelocation_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_homepagelocation() {
  set_has_homepagelocation();
  if (homepagelocation_ == NULL) {
    homepagelocation_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.HomepageLocation)
  return homepagelocation_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_homepagelocation() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.HomepageLocation)
  clear_has_homepagelocation();
  ::enterprise_management::StringPolicyProto* temp = homepagelocation_;
  homepagelocation_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_homepagelocation(::enterprise_management::StringPolicyProto* homepagelocation) {
  delete homepagelocation_;
  homepagelocation_ = homepagelocation;
  if (homepagelocation) {
    set_has_homepagelocation();
  } else {
    clear_has_homepagelocation();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.HomepageLocation)
}

// optional .enterprise_management.BooleanPolicyProto HomepageIsNewTabPage = 4;
bool CloudPolicySettings::has_homepageisnewtabpage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CloudPolicySettings::set_has_homepageisnewtabpage() {
  _has_bits_[0] |= 0x00000002u;
}
void CloudPolicySettings::clear_has_homepageisnewtabpage() {
  _has_bits_[0] &= ~0x00000002u;
}
void CloudPolicySettings::clear_homepageisnewtabpage() {
  if (homepageisnewtabpage_ != NULL) homepageisnewtabpage_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_homepageisnewtabpage();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::homepageisnewtabpage() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.HomepageIsNewTabPage)
  return homepageisnewtabpage_ != NULL ? *homepageisnewtabpage_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_homepageisnewtabpage() {
  set_has_homepageisnewtabpage();
  if (homepageisnewtabpage_ == NULL) {
    homepageisnewtabpage_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.HomepageIsNewTabPage)
  return homepageisnewtabpage_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_homepageisnewtabpage() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.HomepageIsNewTabPage)
  clear_has_homepageisnewtabpage();
  ::enterprise_management::BooleanPolicyProto* temp = homepageisnewtabpage_;
  homepageisnewtabpage_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_homepageisnewtabpage(::enterprise_management::BooleanPolicyProto* homepageisnewtabpage) {
  delete homepageisnewtabpage_;
  homepageisnewtabpage_ = homepageisnewtabpage;
  if (homepageisnewtabpage) {
    set_has_homepageisnewtabpage();
  } else {
    clear_has_homepageisnewtabpage();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.HomepageIsNewTabPage)
}

// optional .enterprise_management.StringPolicyProto NewTabPageLocation = 362;
bool CloudPolicySettings::has_newtabpagelocation() const {
  return (_has_bits_[5] & 0x00000400u) != 0;
}
void CloudPolicySettings::set_has_newtabpagelocation() {
  _has_bits_[5] |= 0x00000400u;
}
void CloudPolicySettings::clear_has_newtabpagelocation() {
  _has_bits_[5] &= ~0x00000400u;
}
void CloudPolicySettings::clear_newtabpagelocation() {
  if (newtabpagelocation_ != NULL) newtabpagelocation_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_newtabpagelocation();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::newtabpagelocation() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NewTabPageLocation)
  return newtabpagelocation_ != NULL ? *newtabpagelocation_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_newtabpagelocation() {
  set_has_newtabpagelocation();
  if (newtabpagelocation_ == NULL) {
    newtabpagelocation_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NewTabPageLocation)
  return newtabpagelocation_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_newtabpagelocation() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NewTabPageLocation)
  clear_has_newtabpagelocation();
  ::enterprise_management::StringPolicyProto* temp = newtabpagelocation_;
  newtabpagelocation_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_newtabpagelocation(::enterprise_management::StringPolicyProto* newtabpagelocation) {
  delete newtabpagelocation_;
  newtabpagelocation_ = newtabpagelocation;
  if (newtabpagelocation) {
    set_has_newtabpagelocation();
  } else {
    clear_has_newtabpagelocation();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NewTabPageLocation)
}

// optional .enterprise_management.BooleanPolicyProto DefaultBrowserSettingEnabled = 5;
bool CloudPolicySettings::has_defaultbrowsersettingenabled() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CloudPolicySettings::set_has_defaultbrowsersettingenabled() {
  _has_bits_[0] |= 0x00000004u;
}
void CloudPolicySettings::clear_has_defaultbrowsersettingenabled() {
  _has_bits_[0] &= ~0x00000004u;
}
void CloudPolicySettings::clear_defaultbrowsersettingenabled() {
  if (defaultbrowsersettingenabled_ != NULL) defaultbrowsersettingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_defaultbrowsersettingenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::defaultbrowsersettingenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultBrowserSettingEnabled)
  return defaultbrowsersettingenabled_ != NULL ? *defaultbrowsersettingenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_defaultbrowsersettingenabled() {
  set_has_defaultbrowsersettingenabled();
  if (defaultbrowsersettingenabled_ == NULL) {
    defaultbrowsersettingenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultBrowserSettingEnabled)
  return defaultbrowsersettingenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_defaultbrowsersettingenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultBrowserSettingEnabled)
  clear_has_defaultbrowsersettingenabled();
  ::enterprise_management::BooleanPolicyProto* temp = defaultbrowsersettingenabled_;
  defaultbrowsersettingenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultbrowsersettingenabled(::enterprise_management::BooleanPolicyProto* defaultbrowsersettingenabled) {
  delete defaultbrowsersettingenabled_;
  defaultbrowsersettingenabled_ = defaultbrowsersettingenabled;
  if (defaultbrowsersettingenabled) {
    set_has_defaultbrowsersettingenabled();
  } else {
    clear_has_defaultbrowsersettingenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultBrowserSettingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AlternateErrorPagesEnabled = 7;
bool CloudPolicySettings::has_alternateerrorpagesenabled() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CloudPolicySettings::set_has_alternateerrorpagesenabled() {
  _has_bits_[0] |= 0x00000008u;
}
void CloudPolicySettings::clear_has_alternateerrorpagesenabled() {
  _has_bits_[0] &= ~0x00000008u;
}
void CloudPolicySettings::clear_alternateerrorpagesenabled() {
  if (alternateerrorpagesenabled_ != NULL) alternateerrorpagesenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_alternateerrorpagesenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::alternateerrorpagesenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
  return alternateerrorpagesenabled_ != NULL ? *alternateerrorpagesenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_alternateerrorpagesenabled() {
  set_has_alternateerrorpagesenabled();
  if (alternateerrorpagesenabled_ == NULL) {
    alternateerrorpagesenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
  return alternateerrorpagesenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_alternateerrorpagesenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
  clear_has_alternateerrorpagesenabled();
  ::enterprise_management::BooleanPolicyProto* temp = alternateerrorpagesenabled_;
  alternateerrorpagesenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_alternateerrorpagesenabled(::enterprise_management::BooleanPolicyProto* alternateerrorpagesenabled) {
  delete alternateerrorpagesenabled_;
  alternateerrorpagesenabled_ = alternateerrorpagesenabled;
  if (alternateerrorpagesenabled) {
    set_has_alternateerrorpagesenabled();
  } else {
    clear_has_alternateerrorpagesenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
}

// optional .enterprise_management.BooleanPolicyProto SearchSuggestEnabled = 8;
bool CloudPolicySettings::has_searchsuggestenabled() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CloudPolicySettings::set_has_searchsuggestenabled() {
  _has_bits_[0] |= 0x00000010u;
}
void CloudPolicySettings::clear_has_searchsuggestenabled() {
  _has_bits_[0] &= ~0x00000010u;
}
void CloudPolicySettings::clear_searchsuggestenabled() {
  if (searchsuggestenabled_ != NULL) searchsuggestenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_searchsuggestenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::searchsuggestenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
  return searchsuggestenabled_ != NULL ? *searchsuggestenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_searchsuggestenabled() {
  set_has_searchsuggestenabled();
  if (searchsuggestenabled_ == NULL) {
    searchsuggestenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
  return searchsuggestenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_searchsuggestenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
  clear_has_searchsuggestenabled();
  ::enterprise_management::BooleanPolicyProto* temp = searchsuggestenabled_;
  searchsuggestenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_searchsuggestenabled(::enterprise_management::BooleanPolicyProto* searchsuggestenabled) {
  delete searchsuggestenabled_;
  searchsuggestenabled_ = searchsuggestenabled;
  if (searchsuggestenabled) {
    set_has_searchsuggestenabled();
  } else {
    clear_has_searchsuggestenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
}

// optional .enterprise_management.IntegerPolicyProto NetworkPredictionOptions = 275;
bool CloudPolicySettings::has_networkpredictionoptions() const {
  return (_has_bits_[4] & 0x00000400u) != 0;
}
void CloudPolicySettings::set_has_networkpredictionoptions() {
  _has_bits_[4] |= 0x00000400u;
}
void CloudPolicySettings::clear_has_networkpredictionoptions() {
  _has_bits_[4] &= ~0x00000400u;
}
void CloudPolicySettings::clear_networkpredictionoptions() {
  if (networkpredictionoptions_ != NULL) networkpredictionoptions_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_networkpredictionoptions();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::networkpredictionoptions() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
  return networkpredictionoptions_ != NULL ? *networkpredictionoptions_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_networkpredictionoptions() {
  set_has_networkpredictionoptions();
  if (networkpredictionoptions_ == NULL) {
    networkpredictionoptions_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
  return networkpredictionoptions_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_networkpredictionoptions() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
  clear_has_networkpredictionoptions();
  ::enterprise_management::IntegerPolicyProto* temp = networkpredictionoptions_;
  networkpredictionoptions_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_networkpredictionoptions(::enterprise_management::IntegerPolicyProto* networkpredictionoptions) {
  delete networkpredictionoptions_;
  networkpredictionoptions_ = networkpredictionoptions;
  if (networkpredictionoptions) {
    set_has_networkpredictionoptions();
  } else {
    clear_has_networkpredictionoptions();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
}

// optional .enterprise_management.BooleanPolicyProto WPADQuickCheckEnabled = 263;
bool CloudPolicySettings::has_wpadquickcheckenabled() const {
  return (_has_bits_[4] & 0x00000010u) != 0;
}
void CloudPolicySettings::set_has_wpadquickcheckenabled() {
  _has_bits_[4] |= 0x00000010u;
}
void CloudPolicySettings::clear_has_wpadquickcheckenabled() {
  _has_bits_[4] &= ~0x00000010u;
}
void CloudPolicySettings::clear_wpadquickcheckenabled() {
  if (wpadquickcheckenabled_ != NULL) wpadquickcheckenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_wpadquickcheckenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::wpadquickcheckenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WPADQuickCheckEnabled)
  return wpadquickcheckenabled_ != NULL ? *wpadquickcheckenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_wpadquickcheckenabled() {
  set_has_wpadquickcheckenabled();
  if (wpadquickcheckenabled_ == NULL) {
    wpadquickcheckenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WPADQuickCheckEnabled)
  return wpadquickcheckenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_wpadquickcheckenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WPADQuickCheckEnabled)
  clear_has_wpadquickcheckenabled();
  ::enterprise_management::BooleanPolicyProto* temp = wpadquickcheckenabled_;
  wpadquickcheckenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_wpadquickcheckenabled(::enterprise_management::BooleanPolicyProto* wpadquickcheckenabled) {
  delete wpadquickcheckenabled_;
  wpadquickcheckenabled_ = wpadquickcheckenabled;
  if (wpadquickcheckenabled) {
    set_has_wpadquickcheckenabled();
  } else {
    clear_has_wpadquickcheckenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WPADQuickCheckEnabled)
}

// optional .enterprise_management.StringListPolicyProto DisabledSchemes = 87;
bool CloudPolicySettings::has_disabledschemes() const {
  return (_has_bits_[2] & 0x00000020u) != 0;
}
void CloudPolicySettings::set_has_disabledschemes() {
  _has_bits_[2] |= 0x00000020u;
}
void CloudPolicySettings::clear_has_disabledschemes() {
  _has_bits_[2] &= ~0x00000020u;
}
void CloudPolicySettings::clear_disabledschemes() {
  if (disabledschemes_ != NULL) disabledschemes_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_disabledschemes();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::disabledschemes() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisabledSchemes)
  return disabledschemes_ != NULL ? *disabledschemes_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_disabledschemes() {
  set_has_disabledschemes();
  if (disabledschemes_ == NULL) {
    disabledschemes_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisabledSchemes)
  return disabledschemes_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_disabledschemes() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisabledSchemes)
  clear_has_disabledschemes();
  ::enterprise_management::StringListPolicyProto* temp = disabledschemes_;
  disabledschemes_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_disabledschemes(::enterprise_management::StringListPolicyProto* disabledschemes) {
  delete disabledschemes_;
  disabledschemes_ = disabledschemes;
  if (disabledschemes) {
    set_has_disabledschemes();
  } else {
    clear_has_disabledschemes();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisabledSchemes)
}

// optional .enterprise_management.BooleanPolicyProto Http09OnNonDefaultPortsEnabled = 347;
bool CloudPolicySettings::has_http09onnondefaultportsenabled() const {
  return (_has_bits_[5] & 0x00000080u) != 0;
}
void CloudPolicySettings::set_has_http09onnondefaultportsenabled() {
  _has_bits_[5] |= 0x00000080u;
}
void CloudPolicySettings::clear_has_http09onnondefaultportsenabled() {
  _has_bits_[5] &= ~0x00000080u;
}
void CloudPolicySettings::clear_http09onnondefaultportsenabled() {
  if (http09onnondefaultportsenabled_ != NULL) http09onnondefaultportsenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_http09onnondefaultportsenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::http09onnondefaultportsenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.Http09OnNonDefaultPortsEnabled)
  return http09onnondefaultportsenabled_ != NULL ? *http09onnondefaultportsenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_http09onnondefaultportsenabled() {
  set_has_http09onnondefaultportsenabled();
  if (http09onnondefaultportsenabled_ == NULL) {
    http09onnondefaultportsenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.Http09OnNonDefaultPortsEnabled)
  return http09onnondefaultportsenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_http09onnondefaultportsenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.Http09OnNonDefaultPortsEnabled)
  clear_has_http09onnondefaultportsenabled();
  ::enterprise_management::BooleanPolicyProto* temp = http09onnondefaultportsenabled_;
  http09onnondefaultportsenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_http09onnondefaultportsenabled(::enterprise_management::BooleanPolicyProto* http09onnondefaultportsenabled) {
  delete http09onnondefaultportsenabled_;
  http09onnondefaultportsenabled_ = http09onnondefaultportsenabled;
  if (http09onnondefaultportsenabled) {
    set_has_http09onnondefaultportsenabled();
  } else {
    clear_has_http09onnondefaultportsenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.Http09OnNonDefaultPortsEnabled)
}

// optional .enterprise_management.BooleanPolicyProto JavascriptEnabled = 11;
bool CloudPolicySettings::has_javascriptenabled() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CloudPolicySettings::set_has_javascriptenabled() {
  _has_bits_[0] |= 0x00000020u;
}
void CloudPolicySettings::clear_has_javascriptenabled() {
  _has_bits_[0] &= ~0x00000020u;
}
void CloudPolicySettings::clear_javascriptenabled() {
  if (javascriptenabled_ != NULL) javascriptenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_javascriptenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::javascriptenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavascriptEnabled)
  return javascriptenabled_ != NULL ? *javascriptenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_javascriptenabled() {
  set_has_javascriptenabled();
  if (javascriptenabled_ == NULL) {
    javascriptenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavascriptEnabled)
  return javascriptenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_javascriptenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavascriptEnabled)
  clear_has_javascriptenabled();
  ::enterprise_management::BooleanPolicyProto* temp = javascriptenabled_;
  javascriptenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_javascriptenabled(::enterprise_management::BooleanPolicyProto* javascriptenabled) {
  delete javascriptenabled_;
  javascriptenabled_ = javascriptenabled;
  if (javascriptenabled) {
    set_has_javascriptenabled();
  } else {
    clear_has_javascriptenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavascriptEnabled)
}

// optional .enterprise_management.BooleanPolicyProto IncognitoEnabled = 12;
bool CloudPolicySettings::has_incognitoenabled() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CloudPolicySettings::set_has_incognitoenabled() {
  _has_bits_[0] |= 0x00000040u;
}
void CloudPolicySettings::clear_has_incognitoenabled() {
  _has_bits_[0] &= ~0x00000040u;
}
void CloudPolicySettings::clear_incognitoenabled() {
  if (incognitoenabled_ != NULL) incognitoenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_incognitoenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::incognitoenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.IncognitoEnabled)
  return incognitoenabled_ != NULL ? *incognitoenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_incognitoenabled() {
  set_has_incognitoenabled();
  if (incognitoenabled_ == NULL) {
    incognitoenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.IncognitoEnabled)
  return incognitoenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_incognitoenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.IncognitoEnabled)
  clear_has_incognitoenabled();
  ::enterprise_management::BooleanPolicyProto* temp = incognitoenabled_;
  incognitoenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_incognitoenabled(::enterprise_management::BooleanPolicyProto* incognitoenabled) {
  delete incognitoenabled_;
  incognitoenabled_ = incognitoenabled;
  if (incognitoenabled) {
    set_has_incognitoenabled();
  } else {
    clear_has_incognitoenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.IncognitoEnabled)
}

// optional .enterprise_management.IntegerPolicyProto IncognitoModeAvailability = 95;
bool CloudPolicySettings::has_incognitomodeavailability() const {
  return (_has_bits_[2] & 0x00000200u) != 0;
}
void CloudPolicySettings::set_has_incognitomodeavailability() {
  _has_bits_[2] |= 0x00000200u;
}
void CloudPolicySettings::clear_has_incognitomodeavailability() {
  _has_bits_[2] &= ~0x00000200u;
}
void CloudPolicySettings::clear_incognitomodeavailability() {
  if (incognitomodeavailability_ != NULL) incognitomodeavailability_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_incognitomodeavailability();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::incognitomodeavailability() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
  return incognitomodeavailability_ != NULL ? *incognitomodeavailability_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_incognitomodeavailability() {
  set_has_incognitomodeavailability();
  if (incognitomodeavailability_ == NULL) {
    incognitomodeavailability_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
  return incognitomodeavailability_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_incognitomodeavailability() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
  clear_has_incognitomodeavailability();
  ::enterprise_management::IntegerPolicyProto* temp = incognitomodeavailability_;
  incognitomodeavailability_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_incognitomodeavailability(::enterprise_management::IntegerPolicyProto* incognitomodeavailability) {
  delete incognitomodeavailability_;
  incognitomodeavailability_ = incognitomodeavailability;
  if (incognitomodeavailability) {
    set_has_incognitomodeavailability();
  } else {
    clear_has_incognitomodeavailability();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
}

// optional .enterprise_management.BooleanPolicyProto SavingBrowserHistoryDisabled = 13;
bool CloudPolicySettings::has_savingbrowserhistorydisabled() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CloudPolicySettings::set_has_savingbrowserhistorydisabled() {
  _has_bits_[0] |= 0x00000080u;
}
void CloudPolicySettings::clear_has_savingbrowserhistorydisabled() {
  _has_bits_[0] &= ~0x00000080u;
}
void CloudPolicySettings::clear_savingbrowserhistorydisabled() {
  if (savingbrowserhistorydisabled_ != NULL) savingbrowserhistorydisabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_savingbrowserhistorydisabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::savingbrowserhistorydisabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
  return savingbrowserhistorydisabled_ != NULL ? *savingbrowserhistorydisabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_savingbrowserhistorydisabled() {
  set_has_savingbrowserhistorydisabled();
  if (savingbrowserhistorydisabled_ == NULL) {
    savingbrowserhistorydisabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
  return savingbrowserhistorydisabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_savingbrowserhistorydisabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
  clear_has_savingbrowserhistorydisabled();
  ::enterprise_management::BooleanPolicyProto* temp = savingbrowserhistorydisabled_;
  savingbrowserhistorydisabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_savingbrowserhistorydisabled(::enterprise_management::BooleanPolicyProto* savingbrowserhistorydisabled) {
  delete savingbrowserhistorydisabled_;
  savingbrowserhistorydisabled_ = savingbrowserhistorydisabled;
  if (savingbrowserhistorydisabled) {
    set_has_savingbrowserhistorydisabled();
  } else {
    clear_has_savingbrowserhistorydisabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
}

// optional .enterprise_management.BooleanPolicyProto AllowDeletingBrowserHistory = 189;
bool CloudPolicySettings::has_allowdeletingbrowserhistory() const {
  return (_has_bits_[3] & 0x00000800u) != 0;
}
void CloudPolicySettings::set_has_allowdeletingbrowserhistory() {
  _has_bits_[3] |= 0x00000800u;
}
void CloudPolicySettings::clear_has_allowdeletingbrowserhistory() {
  _has_bits_[3] &= ~0x00000800u;
}
void CloudPolicySettings::clear_allowdeletingbrowserhistory() {
  if (allowdeletingbrowserhistory_ != NULL) allowdeletingbrowserhistory_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_allowdeletingbrowserhistory();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allowdeletingbrowserhistory() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowDeletingBrowserHistory)
  return allowdeletingbrowserhistory_ != NULL ? *allowdeletingbrowserhistory_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allowdeletingbrowserhistory() {
  set_has_allowdeletingbrowserhistory();
  if (allowdeletingbrowserhistory_ == NULL) {
    allowdeletingbrowserhistory_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowDeletingBrowserHistory)
  return allowdeletingbrowserhistory_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allowdeletingbrowserhistory() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowDeletingBrowserHistory)
  clear_has_allowdeletingbrowserhistory();
  ::enterprise_management::BooleanPolicyProto* temp = allowdeletingbrowserhistory_;
  allowdeletingbrowserhistory_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_allowdeletingbrowserhistory(::enterprise_management::BooleanPolicyProto* allowdeletingbrowserhistory) {
  delete allowdeletingbrowserhistory_;
  allowdeletingbrowserhistory_ = allowdeletingbrowserhistory;
  if (allowdeletingbrowserhistory) {
    set_has_allowdeletingbrowserhistory();
  } else {
    clear_has_allowdeletingbrowserhistory();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowDeletingBrowserHistory)
}

// optional .enterprise_management.BooleanPolicyProto AllowDinosaurEasterEgg = 311;
bool CloudPolicySettings::has_allowdinosaureasteregg() const {
  return (_has_bits_[4] & 0x08000000u) != 0;
}
void CloudPolicySettings::set_has_allowdinosaureasteregg() {
  _has_bits_[4] |= 0x08000000u;
}
void CloudPolicySettings::clear_has_allowdinosaureasteregg() {
  _has_bits_[4] &= ~0x08000000u;
}
void CloudPolicySettings::clear_allowdinosaureasteregg() {
  if (allowdinosaureasteregg_ != NULL) allowdinosaureasteregg_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_allowdinosaureasteregg();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allowdinosaureasteregg() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowDinosaurEasterEgg)
  return allowdinosaureasteregg_ != NULL ? *allowdinosaureasteregg_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allowdinosaureasteregg() {
  set_has_allowdinosaureasteregg();
  if (allowdinosaureasteregg_ == NULL) {
    allowdinosaureasteregg_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowDinosaurEasterEgg)
  return allowdinosaureasteregg_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allowdinosaureasteregg() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowDinosaurEasterEgg)
  clear_has_allowdinosaureasteregg();
  ::enterprise_management::BooleanPolicyProto* temp = allowdinosaureasteregg_;
  allowdinosaureasteregg_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_allowdinosaureasteregg(::enterprise_management::BooleanPolicyProto* allowdinosaureasteregg) {
  delete allowdinosaureasteregg_;
  allowdinosaureasteregg_ = allowdinosaureasteregg;
  if (allowdinosaureasteregg) {
    set_has_allowdinosaureasteregg();
  } else {
    clear_has_allowdinosaureasteregg();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowDinosaurEasterEgg)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostClientDomain = 318;
bool CloudPolicySettings::has_remoteaccesshostclientdomain() const {
  return (_has_bits_[4] & 0x10000000u) != 0;
}
void CloudPolicySettings::set_has_remoteaccesshostclientdomain() {
  _has_bits_[4] |= 0x10000000u;
}
void CloudPolicySettings::clear_has_remoteaccesshostclientdomain() {
  _has_bits_[4] &= ~0x10000000u;
}
void CloudPolicySettings::clear_remoteaccesshostclientdomain() {
  if (remoteaccesshostclientdomain_ != NULL) remoteaccesshostclientdomain_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_remoteaccesshostclientdomain();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshostclientdomain() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomain)
  return remoteaccesshostclientdomain_ != NULL ? *remoteaccesshostclientdomain_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshostclientdomain() {
  set_has_remoteaccesshostclientdomain();
  if (remoteaccesshostclientdomain_ == NULL) {
    remoteaccesshostclientdomain_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomain)
  return remoteaccesshostclientdomain_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshostclientdomain() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomain)
  clear_has_remoteaccesshostclientdomain();
  ::enterprise_management::StringPolicyProto* temp = remoteaccesshostclientdomain_;
  remoteaccesshostclientdomain_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_remoteaccesshostclientdomain(::enterprise_management::StringPolicyProto* remoteaccesshostclientdomain) {
  delete remoteaccesshostclientdomain_;
  remoteaccesshostclientdomain_ = remoteaccesshostclientdomain;
  if (remoteaccesshostclientdomain) {
    set_has_remoteaccesshostclientdomain();
  } else {
    clear_has_remoteaccesshostclientdomain();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomain)
}

// optional .enterprise_management.StringListPolicyProto RemoteAccessHostClientDomainList = 371;
bool CloudPolicySettings::has_remoteaccesshostclientdomainlist() const {
  return (_has_bits_[5] & 0x00004000u) != 0;
}
void CloudPolicySettings::set_has_remoteaccesshostclientdomainlist() {
  _has_bits_[5] |= 0x00004000u;
}
void CloudPolicySettings::clear_has_remoteaccesshostclientdomainlist() {
  _has_bits_[5] &= ~0x00004000u;
}
void CloudPolicySettings::clear_remoteaccesshostclientdomainlist() {
  if (remoteaccesshostclientdomainlist_ != NULL) remoteaccesshostclientdomainlist_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_remoteaccesshostclientdomainlist();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::remoteaccesshostclientdomainlist() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomainList)
  return remoteaccesshostclientdomainlist_ != NULL ? *remoteaccesshostclientdomainlist_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_remoteaccesshostclientdomainlist() {
  set_has_remoteaccesshostclientdomainlist();
  if (remoteaccesshostclientdomainlist_ == NULL) {
    remoteaccesshostclientdomainlist_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomainList)
  return remoteaccesshostclientdomainlist_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_remoteaccesshostclientdomainlist() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomainList)
  clear_has_remoteaccesshostclientdomainlist();
  ::enterprise_management::StringListPolicyProto* temp = remoteaccesshostclientdomainlist_;
  remoteaccesshostclientdomainlist_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_remoteaccesshostclientdomainlist(::enterprise_management::StringListPolicyProto* remoteaccesshostclientdomainlist) {
  delete remoteaccesshostclientdomainlist_;
  remoteaccesshostclientdomainlist_ = remoteaccesshostclientdomainlist;
  if (remoteaccesshostclientdomainlist) {
    set_has_remoteaccesshostclientdomainlist();
  } else {
    clear_has_remoteaccesshostclientdomainlist();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomainList)
}

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostFirewallTraversal = 97;
bool CloudPolicySettings::has_remoteaccesshostfirewalltraversal() const {
  return (_has_bits_[2] & 0x00000400u) != 0;
}
void CloudPolicySettings::set_has_remoteaccesshostfirewalltraversal() {
  _has_bits_[2] |= 0x00000400u;
}
void CloudPolicySettings::clear_has_remoteaccesshostfirewalltraversal() {
  _has_bits_[2] &= ~0x00000400u;
}
void CloudPolicySettings::clear_remoteaccesshostfirewalltraversal() {
  if (remoteaccesshostfirewalltraversal_ != NULL) remoteaccesshostfirewalltraversal_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_remoteaccesshostfirewalltraversal();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::remoteaccesshostfirewalltraversal() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostFirewallTraversal)
  return remoteaccesshostfirewalltraversal_ != NULL ? *remoteaccesshostfirewalltraversal_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_remoteaccesshostfirewalltraversal() {
  set_has_remoteaccesshostfirewalltraversal();
  if (remoteaccesshostfirewalltraversal_ == NULL) {
    remoteaccesshostfirewalltraversal_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostFirewallTraversal)
  return remoteaccesshostfirewalltraversal_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_remoteaccesshostfirewalltraversal() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostFirewallTraversal)
  clear_has_remoteaccesshostfirewalltraversal();
  ::enterprise_management::BooleanPolicyProto* temp = remoteaccesshostfirewalltraversal_;
  remoteaccesshostfirewalltraversal_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_remoteaccesshostfirewalltraversal(::enterprise_management::BooleanPolicyProto* remoteaccesshostfirewalltraversal) {
  delete remoteaccesshostfirewalltraversal_;
  remoteaccesshostfirewalltraversal_ = remoteaccesshostfirewalltraversal;
  if (remoteaccesshostfirewalltraversal) {
    set_has_remoteaccesshostfirewalltraversal();
  } else {
    clear_has_remoteaccesshostfirewalltraversal();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostFirewallTraversal)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostDomain = 156;
bool CloudPolicySettings::has_remoteaccesshostdomain() const {
  return (_has_bits_[3] & 0x00000004u) != 0;
}
void CloudPolicySettings::set_has_remoteaccesshostdomain() {
  _has_bits_[3] |= 0x00000004u;
}
void CloudPolicySettings::clear_has_remoteaccesshostdomain() {
  _has_bits_[3] &= ~0x00000004u;
}
void CloudPolicySettings::clear_remoteaccesshostdomain() {
  if (remoteaccesshostdomain_ != NULL) remoteaccesshostdomain_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_remoteaccesshostdomain();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshostdomain() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostDomain)
  return remoteaccesshostdomain_ != NULL ? *remoteaccesshostdomain_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshostdomain() {
  set_has_remoteaccesshostdomain();
  if (remoteaccesshostdomain_ == NULL) {
    remoteaccesshostdomain_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostDomain)
  return remoteaccesshostdomain_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshostdomain() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostDomain)
  clear_has_remoteaccesshostdomain();
  ::enterprise_management::StringPolicyProto* temp = remoteaccesshostdomain_;
  remoteaccesshostdomain_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_remoteaccesshostdomain(::enterprise_management::StringPolicyProto* remoteaccesshostdomain) {
  delete remoteaccesshostdomain_;
  remoteaccesshostdomain_ = remoteaccesshostdomain;
  if (remoteaccesshostdomain) {
    set_has_remoteaccesshostdomain();
  } else {
    clear_has_remoteaccesshostdomain();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostDomain)
}

// optional .enterprise_management.StringListPolicyProto RemoteAccessHostDomainList = 370;
bool CloudPolicySettings::has_remoteaccesshostdomainlist() const {
  return (_has_bits_[5] & 0x00002000u) != 0;
}
void CloudPolicySettings::set_has_remoteaccesshostdomainlist() {
  _has_bits_[5] |= 0x00002000u;
}
void CloudPolicySettings::clear_has_remoteaccesshostdomainlist() {
  _has_bits_[5] &= ~0x00002000u;
}
void CloudPolicySettings::clear_remoteaccesshostdomainlist() {
  if (remoteaccesshostdomainlist_ != NULL) remoteaccesshostdomainlist_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_remoteaccesshostdomainlist();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::remoteaccesshostdomainlist() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostDomainList)
  return remoteaccesshostdomainlist_ != NULL ? *remoteaccesshostdomainlist_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_remoteaccesshostdomainlist() {
  set_has_remoteaccesshostdomainlist();
  if (remoteaccesshostdomainlist_ == NULL) {
    remoteaccesshostdomainlist_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostDomainList)
  return remoteaccesshostdomainlist_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_remoteaccesshostdomainlist() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostDomainList)
  clear_has_remoteaccesshostdomainlist();
  ::enterprise_management::StringListPolicyProto* temp = remoteaccesshostdomainlist_;
  remoteaccesshostdomainlist_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_remoteaccesshostdomainlist(::enterprise_management::StringListPolicyProto* remoteaccesshostdomainlist) {
  delete remoteaccesshostdomainlist_;
  remoteaccesshostdomainlist_ = remoteaccesshostdomainlist;
  if (remoteaccesshostdomainlist) {
    set_has_remoteaccesshostdomainlist();
  } else {
    clear_has_remoteaccesshostdomainlist();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostDomainList)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostTalkGadgetPrefix = 158;
bool CloudPolicySettings::has_remoteaccesshosttalkgadgetprefix() const {
  return (_has_bits_[3] & 0x00000008u) != 0;
}
void CloudPolicySettings::set_has_remoteaccesshosttalkgadgetprefix() {
  _has_bits_[3] |= 0x00000008u;
}
void CloudPolicySettings::clear_has_remoteaccesshosttalkgadgetprefix() {
  _has_bits_[3] &= ~0x00000008u;
}
void CloudPolicySettings::clear_remoteaccesshosttalkgadgetprefix() {
  if (remoteaccesshosttalkgadgetprefix_ != NULL) remoteaccesshosttalkgadgetprefix_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_remoteaccesshosttalkgadgetprefix();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshosttalkgadgetprefix() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostTalkGadgetPrefix)
  return remoteaccesshosttalkgadgetprefix_ != NULL ? *remoteaccesshosttalkgadgetprefix_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshosttalkgadgetprefix() {
  set_has_remoteaccesshosttalkgadgetprefix();
  if (remoteaccesshosttalkgadgetprefix_ == NULL) {
    remoteaccesshosttalkgadgetprefix_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostTalkGadgetPrefix)
  return remoteaccesshosttalkgadgetprefix_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshosttalkgadgetprefix() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostTalkGadgetPrefix)
  clear_has_remoteaccesshosttalkgadgetprefix();
  ::enterprise_management::StringPolicyProto* temp = remoteaccesshosttalkgadgetprefix_;
  remoteaccesshosttalkgadgetprefix_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_remoteaccesshosttalkgadgetprefix(::enterprise_management::StringPolicyProto* remoteaccesshosttalkgadgetprefix) {
  delete remoteaccesshosttalkgadgetprefix_;
  remoteaccesshosttalkgadgetprefix_ = remoteaccesshosttalkgadgetprefix;
  if (remoteaccesshosttalkgadgetprefix) {
    set_has_remoteaccesshosttalkgadgetprefix();
  } else {
    clear_has_remoteaccesshosttalkgadgetprefix();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostTalkGadgetPrefix)
}

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostRequireCurtain = 159;
bool CloudPolicySettings::has_remoteaccesshostrequirecurtain() const {
  return (_has_bits_[3] & 0x00000010u) != 0;
}
void CloudPolicySettings::set_has_remoteaccesshostrequirecurtain() {
  _has_bits_[3] |= 0x00000010u;
}
void CloudPolicySettings::clear_has_remoteaccesshostrequirecurtain() {
  _has_bits_[3] &= ~0x00000010u;
}
void CloudPolicySettings::clear_remoteaccesshostrequirecurtain() {
  if (remoteaccesshostrequirecurtain_ != NULL) remoteaccesshostrequirecurtain_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_remoteaccesshostrequirecurtain();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::remoteaccesshostrequirecurtain() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostRequireCurtain)
  return remoteaccesshostrequirecurtain_ != NULL ? *remoteaccesshostrequirecurtain_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_remoteaccesshostrequirecurtain() {
  set_has_remoteaccesshostrequirecurtain();
  if (remoteaccesshostrequirecurtain_ == NULL) {
    remoteaccesshostrequirecurtain_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostRequireCurtain)
  return remoteaccesshostrequirecurtain_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_remoteaccesshostrequirecurtain() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostRequireCurtain)
  clear_has_remoteaccesshostrequirecurtain();
  ::enterprise_management::BooleanPolicyProto* temp = remoteaccesshostrequirecurtain_;
  remoteaccesshostrequirecurtain_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_remoteaccesshostrequirecurtain(::enterprise_management::BooleanPolicyProto* remoteaccesshostrequirecurtain) {
  delete remoteaccesshostrequirecurtain_;
  remoteaccesshostrequirecurtain_ = remoteaccesshostrequirecurtain;
  if (remoteaccesshostrequirecurtain) {
    set_has_remoteaccesshostrequirecurtain();
  } else {
    clear_has_remoteaccesshostrequirecurtain();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostRequireCurtain)
}

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowClientPairing = 236;
bool CloudPolicySettings::has_remoteaccesshostallowclientpairing() const {
  return (_has_bits_[3] & 0x08000000u) != 0;
}
void CloudPolicySettings::set_has_remoteaccesshostallowclientpairing() {
  _has_bits_[3] |= 0x08000000u;
}
void CloudPolicySettings::clear_has_remoteaccesshostallowclientpairing() {
  _has_bits_[3] &= ~0x08000000u;
}
void CloudPolicySettings::clear_remoteaccesshostallowclientpairing() {
  if (remoteaccesshostallowclientpairing_ != NULL) remoteaccesshostallowclientpairing_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_remoteaccesshostallowclientpairing();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::remoteaccesshostallowclientpairing() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowClientPairing)
  return remoteaccesshostallowclientpairing_ != NULL ? *remoteaccesshostallowclientpairing_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_remoteaccesshostallowclientpairing() {
  set_has_remoteaccesshostallowclientpairing();
  if (remoteaccesshostallowclientpairing_ == NULL) {
    remoteaccesshostallowclientpairing_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowClientPairing)
  return remoteaccesshostallowclientpairing_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_remoteaccesshostallowclientpairing() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowClientPairing)
  clear_has_remoteaccesshostallowclientpairing();
  ::enterprise_management::BooleanPolicyProto* temp = remoteaccesshostallowclientpairing_;
  remoteaccesshostallowclientpairing_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_remoteaccesshostallowclientpairing(::enterprise_management::BooleanPolicyProto* remoteaccesshostallowclientpairing) {
  delete remoteaccesshostallowclientpairing_;
  remoteaccesshostallowclientpairing_ = remoteaccesshostallowclientpairing;
  if (remoteaccesshostallowclientpairing) {
    set_has_remoteaccesshostallowclientpairing();
  } else {
    clear_has_remoteaccesshostallowclientpairing();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowClientPairing)
}

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowGnubbyAuth = 259;
bool CloudPolicySettings::has_remoteaccesshostallowgnubbyauth() const {
  return (_has_bits_[4] & 0x00000008u) != 0;
}
void CloudPolicySettings::set_has_remoteaccesshostallowgnubbyauth() {
  _has_bits_[4] |= 0x00000008u;
}
void CloudPolicySettings::clear_has_remoteaccesshostallowgnubbyauth() {
  _has_bits_[4] &= ~0x00000008u;
}
void CloudPolicySettings::clear_remoteaccesshostallowgnubbyauth() {
  if (remoteaccesshostallowgnubbyauth_ != NULL) remoteaccesshostallowgnubbyauth_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_remoteaccesshostallowgnubbyauth();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::remoteaccesshostallowgnubbyauth() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowGnubbyAuth)
  return remoteaccesshostallowgnubbyauth_ != NULL ? *remoteaccesshostallowgnubbyauth_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_remoteaccesshostallowgnubbyauth() {
  set_has_remoteaccesshostallowgnubbyauth();
  if (remoteaccesshostallowgnubbyauth_ == NULL) {
    remoteaccesshostallowgnubbyauth_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowGnubbyAuth)
  return remoteaccesshostallowgnubbyauth_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_remoteaccesshostallowgnubbyauth() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowGnubbyAuth)
  clear_has_remoteaccesshostallowgnubbyauth();
  ::enterprise_management::BooleanPolicyProto* temp = remoteaccesshostallowgnubbyauth_;
  remoteaccesshostallowgnubbyauth_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_remoteaccesshostallowgnubbyauth(::enterprise_management::BooleanPolicyProto* remoteaccesshostallowgnubbyauth) {
  delete remoteaccesshostallowgnubbyauth_;
  remoteaccesshostallowgnubbyauth_ = remoteaccesshostallowgnubbyauth;
  if (remoteaccesshostallowgnubbyauth) {
    set_has_remoteaccesshostallowgnubbyauth();
  } else {
    clear_has_remoteaccesshostallowgnubbyauth();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowGnubbyAuth)
}

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowRelayedConnection = 265;
bool CloudPolicySettings::has_remoteaccesshostallowrelayedconnection() const {
  return (_has_bits_[4] & 0x00000020u) != 0;
}
void CloudPolicySettings::set_has_remoteaccesshostallowrelayedconnection() {
  _has_bits_[4] |= 0x00000020u;
}
void CloudPolicySettings::clear_has_remoteaccesshostallowrelayedconnection() {
  _has_bits_[4] &= ~0x00000020u;
}
void CloudPolicySettings::clear_remoteaccesshostallowrelayedconnection() {
  if (remoteaccesshostallowrelayedconnection_ != NULL) remoteaccesshostallowrelayedconnection_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_remoteaccesshostallowrelayedconnection();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::remoteaccesshostallowrelayedconnection() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowRelayedConnection)
  return remoteaccesshostallowrelayedconnection_ != NULL ? *remoteaccesshostallowrelayedconnection_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_remoteaccesshostallowrelayedconnection() {
  set_has_remoteaccesshostallowrelayedconnection();
  if (remoteaccesshostallowrelayedconnection_ == NULL) {
    remoteaccesshostallowrelayedconnection_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowRelayedConnection)
  return remoteaccesshostallowrelayedconnection_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_remoteaccesshostallowrelayedconnection() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowRelayedConnection)
  clear_has_remoteaccesshostallowrelayedconnection();
  ::enterprise_management::BooleanPolicyProto* temp = remoteaccesshostallowrelayedconnection_;
  remoteaccesshostallowrelayedconnection_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_remoteaccesshostallowrelayedconnection(::enterprise_management::BooleanPolicyProto* remoteaccesshostallowrelayedconnection) {
  delete remoteaccesshostallowrelayedconnection_;
  remoteaccesshostallowrelayedconnection_ = remoteaccesshostallowrelayedconnection;
  if (remoteaccesshostallowrelayedconnection) {
    set_has_remoteaccesshostallowrelayedconnection();
  } else {
    clear_has_remoteaccesshostallowrelayedconnection();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowRelayedConnection)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostUdpPortRange = 266;
bool CloudPolicySettings::has_remoteaccesshostudpportrange() const {
  return (_has_bits_[4] & 0x00000040u) != 0;
}
void CloudPolicySettings::set_has_remoteaccesshostudpportrange() {
  _has_bits_[4] |= 0x00000040u;
}
void CloudPolicySettings::clear_has_remoteaccesshostudpportrange() {
  _has_bits_[4] &= ~0x00000040u;
}
void CloudPolicySettings::clear_remoteaccesshostudpportrange() {
  if (remoteaccesshostudpportrange_ != NULL) remoteaccesshostudpportrange_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_remoteaccesshostudpportrange();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshostudpportrange() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostUdpPortRange)
  return remoteaccesshostudpportrange_ != NULL ? *remoteaccesshostudpportrange_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshostudpportrange() {
  set_has_remoteaccesshostudpportrange();
  if (remoteaccesshostudpportrange_ == NULL) {
    remoteaccesshostudpportrange_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostUdpPortRange)
  return remoteaccesshostudpportrange_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshostudpportrange() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostUdpPortRange)
  clear_has_remoteaccesshostudpportrange();
  ::enterprise_management::StringPolicyProto* temp = remoteaccesshostudpportrange_;
  remoteaccesshostudpportrange_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_remoteaccesshostudpportrange(::enterprise_management::StringPolicyProto* remoteaccesshostudpportrange) {
  delete remoteaccesshostudpportrange_;
  remoteaccesshostudpportrange_ = remoteaccesshostudpportrange;
  if (remoteaccesshostudpportrange) {
    set_has_remoteaccesshostudpportrange();
  } else {
    clear_has_remoteaccesshostudpportrange();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostUdpPortRange)
}

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostMatchUsername = 287;
bool CloudPolicySettings::has_remoteaccesshostmatchusername() const {
  return (_has_bits_[4] & 0x00040000u) != 0;
}
void CloudPolicySettings::set_has_remoteaccesshostmatchusername() {
  _has_bits_[4] |= 0x00040000u;
}
void CloudPolicySettings::clear_has_remoteaccesshostmatchusername() {
  _has_bits_[4] &= ~0x00040000u;
}
void CloudPolicySettings::clear_remoteaccesshostmatchusername() {
  if (remoteaccesshostmatchusername_ != NULL) remoteaccesshostmatchusername_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_remoteaccesshostmatchusername();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::remoteaccesshostmatchusername() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostMatchUsername)
  return remoteaccesshostmatchusername_ != NULL ? *remoteaccesshostmatchusername_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_remoteaccesshostmatchusername() {
  set_has_remoteaccesshostmatchusername();
  if (remoteaccesshostmatchusername_ == NULL) {
    remoteaccesshostmatchusername_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostMatchUsername)
  return remoteaccesshostmatchusername_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_remoteaccesshostmatchusername() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostMatchUsername)
  clear_has_remoteaccesshostmatchusername();
  ::enterprise_management::BooleanPolicyProto* temp = remoteaccesshostmatchusername_;
  remoteaccesshostmatchusername_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_remoteaccesshostmatchusername(::enterprise_management::BooleanPolicyProto* remoteaccesshostmatchusername) {
  delete remoteaccesshostmatchusername_;
  remoteaccesshostmatchusername_ = remoteaccesshostmatchusername;
  if (remoteaccesshostmatchusername) {
    set_has_remoteaccesshostmatchusername();
  } else {
    clear_has_remoteaccesshostmatchusername();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostMatchUsername)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenUrl = 288;
bool CloudPolicySettings::has_remoteaccesshosttokenurl() const {
  return (_has_bits_[4] & 0x00080000u) != 0;
}
void CloudPolicySettings::set_has_remoteaccesshosttokenurl() {
  _has_bits_[4] |= 0x00080000u;
}
void CloudPolicySettings::clear_has_remoteaccesshosttokenurl() {
  _has_bits_[4] &= ~0x00080000u;
}
void CloudPolicySettings::clear_remoteaccesshosttokenurl() {
  if (remoteaccesshosttokenurl_ != NULL) remoteaccesshosttokenurl_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_remoteaccesshosttokenurl();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshosttokenurl() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenUrl)
  return remoteaccesshosttokenurl_ != NULL ? *remoteaccesshosttokenurl_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshosttokenurl() {
  set_has_remoteaccesshosttokenurl();
  if (remoteaccesshosttokenurl_ == NULL) {
    remoteaccesshosttokenurl_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenUrl)
  return remoteaccesshosttokenurl_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshosttokenurl() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenUrl)
  clear_has_remoteaccesshosttokenurl();
  ::enterprise_management::StringPolicyProto* temp = remoteaccesshosttokenurl_;
  remoteaccesshosttokenurl_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_remoteaccesshosttokenurl(::enterprise_management::StringPolicyProto* remoteaccesshosttokenurl) {
  delete remoteaccesshosttokenurl_;
  remoteaccesshosttokenurl_ = remoteaccesshosttokenurl;
  if (remoteaccesshosttokenurl) {
    set_has_remoteaccesshosttokenurl();
  } else {
    clear_has_remoteaccesshosttokenurl();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenUrl)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenValidationUrl = 289;
bool CloudPolicySettings::has_remoteaccesshosttokenvalidationurl() const {
  return (_has_bits_[4] & 0x00100000u) != 0;
}
void CloudPolicySettings::set_has_remoteaccesshosttokenvalidationurl() {
  _has_bits_[4] |= 0x00100000u;
}
void CloudPolicySettings::clear_has_remoteaccesshosttokenvalidationurl() {
  _has_bits_[4] &= ~0x00100000u;
}
void CloudPolicySettings::clear_remoteaccesshosttokenvalidationurl() {
  if (remoteaccesshosttokenvalidationurl_ != NULL) remoteaccesshosttokenvalidationurl_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_remoteaccesshosttokenvalidationurl();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshosttokenvalidationurl() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationUrl)
  return remoteaccesshosttokenvalidationurl_ != NULL ? *remoteaccesshosttokenvalidationurl_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshosttokenvalidationurl() {
  set_has_remoteaccesshosttokenvalidationurl();
  if (remoteaccesshosttokenvalidationurl_ == NULL) {
    remoteaccesshosttokenvalidationurl_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationUrl)
  return remoteaccesshosttokenvalidationurl_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshosttokenvalidationurl() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationUrl)
  clear_has_remoteaccesshosttokenvalidationurl();
  ::enterprise_management::StringPolicyProto* temp = remoteaccesshosttokenvalidationurl_;
  remoteaccesshosttokenvalidationurl_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_remoteaccesshosttokenvalidationurl(::enterprise_management::StringPolicyProto* remoteaccesshosttokenvalidationurl) {
  delete remoteaccesshosttokenvalidationurl_;
  remoteaccesshosttokenvalidationurl_ = remoteaccesshosttokenvalidationurl;
  if (remoteaccesshosttokenvalidationurl) {
    set_has_remoteaccesshosttokenvalidationurl();
  } else {
    clear_has_remoteaccesshosttokenvalidationurl();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationUrl)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenValidationCertificateIssuer = 290;
bool CloudPolicySettings::has_remoteaccesshosttokenvalidationcertificateissuer() const {
  return (_has_bits_[4] & 0x00200000u) != 0;
}
void CloudPolicySettings::set_has_remoteaccesshosttokenvalidationcertificateissuer() {
  _has_bits_[4] |= 0x00200000u;
}
void CloudPolicySettings::clear_has_remoteaccesshosttokenvalidationcertificateissuer() {
  _has_bits_[4] &= ~0x00200000u;
}
void CloudPolicySettings::clear_remoteaccesshosttokenvalidationcertificateissuer() {
  if (remoteaccesshosttokenvalidationcertificateissuer_ != NULL) remoteaccesshosttokenvalidationcertificateissuer_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_remoteaccesshosttokenvalidationcertificateissuer();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshosttokenvalidationcertificateissuer() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationCertificateIssuer)
  return remoteaccesshosttokenvalidationcertificateissuer_ != NULL ? *remoteaccesshosttokenvalidationcertificateissuer_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshosttokenvalidationcertificateissuer() {
  set_has_remoteaccesshosttokenvalidationcertificateissuer();
  if (remoteaccesshosttokenvalidationcertificateissuer_ == NULL) {
    remoteaccesshosttokenvalidationcertificateissuer_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationCertificateIssuer)
  return remoteaccesshosttokenvalidationcertificateissuer_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshosttokenvalidationcertificateissuer() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationCertificateIssuer)
  clear_has_remoteaccesshosttokenvalidationcertificateissuer();
  ::enterprise_management::StringPolicyProto* temp = remoteaccesshosttokenvalidationcertificateissuer_;
  remoteaccesshosttokenvalidationcertificateissuer_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_remoteaccesshosttokenvalidationcertificateissuer(::enterprise_management::StringPolicyProto* remoteaccesshosttokenvalidationcertificateissuer) {
  delete remoteaccesshosttokenvalidationcertificateissuer_;
  remoteaccesshosttokenvalidationcertificateissuer_ = remoteaccesshosttokenvalidationcertificateissuer;
  if (remoteaccesshosttokenvalidationcertificateissuer) {
    set_has_remoteaccesshosttokenvalidationcertificateissuer();
  } else {
    clear_has_remoteaccesshosttokenvalidationcertificateissuer();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationCertificateIssuer)
}

// optional .enterprise_management.BooleanPolicyProto PrintingEnabled = 14;
bool CloudPolicySettings::has_printingenabled() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CloudPolicySettings::set_has_printingenabled() {
  _has_bits_[0] |= 0x00000100u;
}
void CloudPolicySettings::clear_has_printingenabled() {
  _has_bits_[0] &= ~0x00000100u;
}
void CloudPolicySettings::clear_printingenabled() {
  if (printingenabled_ != NULL) printingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_printingenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::printingenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PrintingEnabled)
  return printingenabled_ != NULL ? *printingenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_printingenabled() {
  set_has_printingenabled();
  if (printingenabled_ == NULL) {
    printingenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PrintingEnabled)
  return printingenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_printingenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PrintingEnabled)
  clear_has_printingenabled();
  ::enterprise_management::BooleanPolicyProto* temp = printingenabled_;
  printingenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_printingenabled(::enterprise_management::BooleanPolicyProto* printingenabled) {
  delete printingenabled_;
  printingenabled_ = printingenabled;
  if (printingenabled) {
    set_has_printingenabled();
  } else {
    clear_has_printingenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PrintingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto CloudPrintProxyEnabled = 15;
bool CloudPolicySettings::has_cloudprintproxyenabled() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CloudPolicySettings::set_has_cloudprintproxyenabled() {
  _has_bits_[0] |= 0x00000200u;
}
void CloudPolicySettings::clear_has_cloudprintproxyenabled() {
  _has_bits_[0] &= ~0x00000200u;
}
void CloudPolicySettings::clear_cloudprintproxyenabled() {
  if (cloudprintproxyenabled_ != NULL) cloudprintproxyenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_cloudprintproxyenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::cloudprintproxyenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudPrintProxyEnabled)
  return cloudprintproxyenabled_ != NULL ? *cloudprintproxyenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_cloudprintproxyenabled() {
  set_has_cloudprintproxyenabled();
  if (cloudprintproxyenabled_ == NULL) {
    cloudprintproxyenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudPrintProxyEnabled)
  return cloudprintproxyenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_cloudprintproxyenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudPrintProxyEnabled)
  clear_has_cloudprintproxyenabled();
  ::enterprise_management::BooleanPolicyProto* temp = cloudprintproxyenabled_;
  cloudprintproxyenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_cloudprintproxyenabled(::enterprise_management::BooleanPolicyProto* cloudprintproxyenabled) {
  delete cloudprintproxyenabled_;
  cloudprintproxyenabled_ = cloudprintproxyenabled;
  if (cloudprintproxyenabled) {
    set_has_cloudprintproxyenabled();
  } else {
    clear_has_cloudprintproxyenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudPrintProxyEnabled)
}

// optional .enterprise_management.BooleanPolicyProto ForceSafeSearch = 164;
bool CloudPolicySettings::has_forcesafesearch() const {
  return (_has_bits_[3] & 0x00000080u) != 0;
}
void CloudPolicySettings::set_has_forcesafesearch() {
  _has_bits_[3] |= 0x00000080u;
}
void CloudPolicySettings::clear_has_forcesafesearch() {
  _has_bits_[3] &= ~0x00000080u;
}
void CloudPolicySettings::clear_forcesafesearch() {
  if (forcesafesearch_ != NULL) forcesafesearch_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_forcesafesearch();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forcesafesearch() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceSafeSearch)
  return forcesafesearch_ != NULL ? *forcesafesearch_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forcesafesearch() {
  set_has_forcesafesearch();
  if (forcesafesearch_ == NULL) {
    forcesafesearch_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceSafeSearch)
  return forcesafesearch_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forcesafesearch() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceSafeSearch)
  clear_has_forcesafesearch();
  ::enterprise_management::BooleanPolicyProto* temp = forcesafesearch_;
  forcesafesearch_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_forcesafesearch(::enterprise_management::BooleanPolicyProto* forcesafesearch) {
  delete forcesafesearch_;
  forcesafesearch_ = forcesafesearch;
  if (forcesafesearch) {
    set_has_forcesafesearch();
  } else {
    clear_has_forcesafesearch();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceSafeSearch)
}

// optional .enterprise_management.BooleanPolicyProto ForceGoogleSafeSearch = 284;
bool CloudPolicySettings::has_forcegooglesafesearch() const {
  return (_has_bits_[4] & 0x00010000u) != 0;
}
void CloudPolicySettings::set_has_forcegooglesafesearch() {
  _has_bits_[4] |= 0x00010000u;
}
void CloudPolicySettings::clear_has_forcegooglesafesearch() {
  _has_bits_[4] &= ~0x00010000u;
}
void CloudPolicySettings::clear_forcegooglesafesearch() {
  if (forcegooglesafesearch_ != NULL) forcegooglesafesearch_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_forcegooglesafesearch();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forcegooglesafesearch() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
  return forcegooglesafesearch_ != NULL ? *forcegooglesafesearch_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forcegooglesafesearch() {
  set_has_forcegooglesafesearch();
  if (forcegooglesafesearch_ == NULL) {
    forcegooglesafesearch_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
  return forcegooglesafesearch_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forcegooglesafesearch() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
  clear_has_forcegooglesafesearch();
  ::enterprise_management::BooleanPolicyProto* temp = forcegooglesafesearch_;
  forcegooglesafesearch_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_forcegooglesafesearch(::enterprise_management::BooleanPolicyProto* forcegooglesafesearch) {
  delete forcegooglesafesearch_;
  forcegooglesafesearch_ = forcegooglesafesearch;
  if (forcegooglesafesearch) {
    set_has_forcegooglesafesearch();
  } else {
    clear_has_forcegooglesafesearch();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
}

// optional .enterprise_management.BooleanPolicyProto ForceYouTubeSafetyMode = 285;
bool CloudPolicySettings::has_forceyoutubesafetymode() const {
  return (_has_bits_[4] & 0x00020000u) != 0;
}
void CloudPolicySettings::set_has_forceyoutubesafetymode() {
  _has_bits_[4] |= 0x00020000u;
}
void CloudPolicySettings::clear_has_forceyoutubesafetymode() {
  _has_bits_[4] &= ~0x00020000u;
}
void CloudPolicySettings::clear_forceyoutubesafetymode() {
  if (forceyoutubesafetymode_ != NULL) forceyoutubesafetymode_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_forceyoutubesafetymode();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forceyoutubesafetymode() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
  return forceyoutubesafetymode_ != NULL ? *forceyoutubesafetymode_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forceyoutubesafetymode() {
  set_has_forceyoutubesafetymode();
  if (forceyoutubesafetymode_ == NULL) {
    forceyoutubesafetymode_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
  return forceyoutubesafetymode_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forceyoutubesafetymode() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
  clear_has_forceyoutubesafetymode();
  ::enterprise_management::BooleanPolicyProto* temp = forceyoutubesafetymode_;
  forceyoutubesafetymode_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_forceyoutubesafetymode(::enterprise_management::BooleanPolicyProto* forceyoutubesafetymode) {
  delete forceyoutubesafetymode_;
  forceyoutubesafetymode_ = forceyoutubesafetymode;
  if (forceyoutubesafetymode) {
    set_has_forceyoutubesafetymode();
  } else {
    clear_has_forceyoutubesafetymode();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
}

// optional .enterprise_management.IntegerPolicyProto ForceYouTubeRestrict = 350;
bool CloudPolicySettings::has_forceyoutuberestrict() const {
  return (_has_bits_[5] & 0x00000200u) != 0;
}
void CloudPolicySettings::set_has_forceyoutuberestrict() {
  _has_bits_[5] |= 0x00000200u;
}
void CloudPolicySettings::clear_has_forceyoutuberestrict() {
  _has_bits_[5] &= ~0x00000200u;
}
void CloudPolicySettings::clear_forceyoutuberestrict() {
  if (forceyoutuberestrict_ != NULL) forceyoutuberestrict_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_forceyoutuberestrict();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::forceyoutuberestrict() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
  return forceyoutuberestrict_ != NULL ? *forceyoutuberestrict_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_forceyoutuberestrict() {
  set_has_forceyoutuberestrict();
  if (forceyoutuberestrict_ == NULL) {
    forceyoutuberestrict_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
  return forceyoutuberestrict_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_forceyoutuberestrict() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
  clear_has_forceyoutuberestrict();
  ::enterprise_management::IntegerPolicyProto* temp = forceyoutuberestrict_;
  forceyoutuberestrict_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_forceyoutuberestrict(::enterprise_management::IntegerPolicyProto* forceyoutuberestrict) {
  delete forceyoutuberestrict_;
  forceyoutuberestrict_ = forceyoutuberestrict;
  if (forceyoutuberestrict) {
    set_has_forceyoutuberestrict();
  } else {
    clear_has_forceyoutuberestrict();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
}

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingEnabled = 16;
bool CloudPolicySettings::has_safebrowsingenabled() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CloudPolicySettings::set_has_safebrowsingenabled() {
  _has_bits_[0] |= 0x00000400u;
}
void CloudPolicySettings::clear_has_safebrowsingenabled() {
  _has_bits_[0] &= ~0x00000400u;
}
void CloudPolicySettings::clear_safebrowsingenabled() {
  if (safebrowsingenabled_ != NULL) safebrowsingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_safebrowsingenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::safebrowsingenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
  return safebrowsingenabled_ != NULL ? *safebrowsingenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_safebrowsingenabled() {
  set_has_safebrowsingenabled();
  if (safebrowsingenabled_ == NULL) {
    safebrowsingenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
  return safebrowsingenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_safebrowsingenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
  clear_has_safebrowsingenabled();
  ::enterprise_management::BooleanPolicyProto* temp = safebrowsingenabled_;
  safebrowsingenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_safebrowsingenabled(::enterprise_management::BooleanPolicyProto* safebrowsingenabled) {
  delete safebrowsingenabled_;
  safebrowsingenabled_ = safebrowsingenabled;
  if (safebrowsingenabled) {
    set_has_safebrowsingenabled();
  } else {
    clear_has_safebrowsingenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto MetricsReportingEnabled = 17;
bool CloudPolicySettings::has_metricsreportingenabled() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void CloudPolicySettings::set_has_metricsreportingenabled() {
  _has_bits_[0] |= 0x00000800u;
}
void CloudPolicySettings::clear_has_metricsreportingenabled() {
  _has_bits_[0] &= ~0x00000800u;
}
void CloudPolicySettings::clear_metricsreportingenabled() {
  if (metricsreportingenabled_ != NULL) metricsreportingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_metricsreportingenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::metricsreportingenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.MetricsReportingEnabled)
  return metricsreportingenabled_ != NULL ? *metricsreportingenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_metricsreportingenabled() {
  set_has_metricsreportingenabled();
  if (metricsreportingenabled_ == NULL) {
    metricsreportingenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.MetricsReportingEnabled)
  return metricsreportingenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_metricsreportingenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.MetricsReportingEnabled)
  clear_has_metricsreportingenabled();
  ::enterprise_management::BooleanPolicyProto* temp = metricsreportingenabled_;
  metricsreportingenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_metricsreportingenabled(::enterprise_management::BooleanPolicyProto* metricsreportingenabled) {
  delete metricsreportingenabled_;
  metricsreportingenabled_ = metricsreportingenabled;
  if (metricsreportingenabled) {
    set_has_metricsreportingenabled();
  } else {
    clear_has_metricsreportingenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.MetricsReportingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto PasswordManagerEnabled = 18;
bool CloudPolicySettings::has_passwordmanagerenabled() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void CloudPolicySettings::set_has_passwordmanagerenabled() {
  _has_bits_[0] |= 0x00001000u;
}
void CloudPolicySettings::clear_has_passwordmanagerenabled() {
  _has_bits_[0] &= ~0x00001000u;
}
void CloudPolicySettings::clear_passwordmanagerenabled() {
  if (passwordmanagerenabled_ != NULL) passwordmanagerenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_passwordmanagerenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::passwordmanagerenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
  return passwordmanagerenabled_ != NULL ? *passwordmanagerenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_passwordmanagerenabled() {
  set_has_passwordmanagerenabled();
  if (passwordmanagerenabled_ == NULL) {
    passwordmanagerenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
  return passwordmanagerenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_passwordmanagerenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
  clear_has_passwordmanagerenabled();
  ::enterprise_management::BooleanPolicyProto* temp = passwordmanagerenabled_;
  passwordmanagerenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_passwordmanagerenabled(::enterprise_management::BooleanPolicyProto* passwordmanagerenabled) {
  delete passwordmanagerenabled_;
  passwordmanagerenabled_ = passwordmanagerenabled;
  if (passwordmanagerenabled) {
    set_has_passwordmanagerenabled();
  } else {
    clear_has_passwordmanagerenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AutoFillEnabled = 20;
bool CloudPolicySettings::has_autofillenabled() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void CloudPolicySettings::set_has_autofillenabled() {
  _has_bits_[0] |= 0x00002000u;
}
void CloudPolicySettings::clear_has_autofillenabled() {
  _has_bits_[0] &= ~0x00002000u;
}
void CloudPolicySettings::clear_autofillenabled() {
  if (autofillenabled_ != NULL) autofillenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_autofillenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::autofillenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutoFillEnabled)
  return autofillenabled_ != NULL ? *autofillenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_autofillenabled() {
  set_has_autofillenabled();
  if (autofillenabled_ == NULL) {
    autofillenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutoFillEnabled)
  return autofillenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_autofillenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutoFillEnabled)
  clear_has_autofillenabled();
  ::enterprise_management::BooleanPolicyProto* temp = autofillenabled_;
  autofillenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_autofillenabled(::enterprise_management::BooleanPolicyProto* autofillenabled) {
  delete autofillenabled_;
  autofillenabled_ = autofillenabled;
  if (autofillenabled) {
    set_has_autofillenabled();
  } else {
    clear_has_autofillenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutoFillEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AutofillCreditCardEnabled = 394;
bool CloudPolicySettings::has_autofillcreditcardenabled() const {
  return (_has_bits_[5] & 0x00100000u) != 0;
}
void CloudPolicySettings::set_has_autofillcreditcardenabled() {
  _has_bits_[5] |= 0x00100000u;
}
void CloudPolicySettings::clear_has_autofillcreditcardenabled() {
  _has_bits_[5] &= ~0x00100000u;
}
void CloudPolicySettings::clear_autofillcreditcardenabled() {
  if (autofillcreditcardenabled_ != NULL) autofillcreditcardenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_autofillcreditcardenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::autofillcreditcardenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
  return autofillcreditcardenabled_ != NULL ? *autofillcreditcardenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_autofillcreditcardenabled() {
  set_has_autofillcreditcardenabled();
  if (autofillcreditcardenabled_ == NULL) {
    autofillcreditcardenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
  return autofillcreditcardenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_autofillcreditcardenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
  clear_has_autofillcreditcardenabled();
  ::enterprise_management::BooleanPolicyProto* temp = autofillcreditcardenabled_;
  autofillcreditcardenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_autofillcreditcardenabled(::enterprise_management::BooleanPolicyProto* autofillcreditcardenabled) {
  delete autofillcreditcardenabled_;
  autofillcreditcardenabled_ = autofillcreditcardenabled;
  if (autofillcreditcardenabled) {
    set_has_autofillcreditcardenabled();
  } else {
    clear_has_autofillcreditcardenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
}

// optional .enterprise_management.StringListPolicyProto DisabledPlugins = 21;
bool CloudPolicySettings::has_disabledplugins() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void CloudPolicySettings::set_has_disabledplugins() {
  _has_bits_[0] |= 0x00004000u;
}
void CloudPolicySettings::clear_has_disabledplugins() {
  _has_bits_[0] &= ~0x00004000u;
}
void CloudPolicySettings::clear_disabledplugins() {
  if (disabledplugins_ != NULL) disabledplugins_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_disabledplugins();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::disabledplugins() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisabledPlugins)
  return disabledplugins_ != NULL ? *disabledplugins_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_disabledplugins() {
  set_has_disabledplugins();
  if (disabledplugins_ == NULL) {
    disabledplugins_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisabledPlugins)
  return disabledplugins_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_disabledplugins() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisabledPlugins)
  clear_has_disabledplugins();
  ::enterprise_management::StringListPolicyProto* temp = disabledplugins_;
  disabledplugins_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_disabledplugins(::enterprise_management::StringListPolicyProto* disabledplugins) {
  delete disabledplugins_;
  disabledplugins_ = disabledplugins;
  if (disabledplugins) {
    set_has_disabledplugins();
  } else {
    clear_has_disabledplugins();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisabledPlugins)
}

// optional .enterprise_management.StringListPolicyProto EnabledPlugins = 80;
bool CloudPolicySettings::has_enabledplugins() const {
  return (_has_bits_[1] & 0x40000000u) != 0;
}
void CloudPolicySettings::set_has_enabledplugins() {
  _has_bits_[1] |= 0x40000000u;
}
void CloudPolicySettings::clear_has_enabledplugins() {
  _has_bits_[1] &= ~0x40000000u;
}
void CloudPolicySettings::clear_enabledplugins() {
  if (enabledplugins_ != NULL) enabledplugins_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_enabledplugins();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::enabledplugins() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnabledPlugins)
  return enabledplugins_ != NULL ? *enabledplugins_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_enabledplugins() {
  set_has_enabledplugins();
  if (enabledplugins_ == NULL) {
    enabledplugins_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnabledPlugins)
  return enabledplugins_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_enabledplugins() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnabledPlugins)
  clear_has_enabledplugins();
  ::enterprise_management::StringListPolicyProto* temp = enabledplugins_;
  enabledplugins_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_enabledplugins(::enterprise_management::StringListPolicyProto* enabledplugins) {
  delete enabledplugins_;
  enabledplugins_ = enabledplugins;
  if (enabledplugins) {
    set_has_enabledplugins();
  } else {
    clear_has_enabledplugins();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnabledPlugins)
}

// optional .enterprise_management.StringListPolicyProto DisabledPluginsExceptions = 81;
bool CloudPolicySettings::has_disabledpluginsexceptions() const {
  return (_has_bits_[1] & 0x80000000u) != 0;
}
void CloudPolicySettings::set_has_disabledpluginsexceptions() {
  _has_bits_[1] |= 0x80000000u;
}
void CloudPolicySettings::clear_has_disabledpluginsexceptions() {
  _has_bits_[1] &= ~0x80000000u;
}
void CloudPolicySettings::clear_disabledpluginsexceptions() {
  if (disabledpluginsexceptions_ != NULL) disabledpluginsexceptions_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_disabledpluginsexceptions();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::disabledpluginsexceptions() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisabledPluginsExceptions)
  return disabledpluginsexceptions_ != NULL ? *disabledpluginsexceptions_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_disabledpluginsexceptions() {
  set_has_disabledpluginsexceptions();
  if (disabledpluginsexceptions_ == NULL) {
    disabledpluginsexceptions_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisabledPluginsExceptions)
  return disabledpluginsexceptions_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_disabledpluginsexceptions() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisabledPluginsExceptions)
  clear_has_disabledpluginsexceptions();
  ::enterprise_management::StringListPolicyProto* temp = disabledpluginsexceptions_;
  disabledpluginsexceptions_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_disabledpluginsexceptions(::enterprise_management::StringListPolicyProto* disabledpluginsexceptions) {
  delete disabledpluginsexceptions_;
  disabledpluginsexceptions_ = disabledpluginsexceptions;
  if (disabledpluginsexceptions) {
    set_has_disabledpluginsexceptions();
  } else {
    clear_has_disabledpluginsexceptions();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisabledPluginsExceptions)
}

// optional .enterprise_management.BooleanPolicyProto AlwaysOpenPdfExternally = 349;
bool CloudPolicySettings::has_alwaysopenpdfexternally() const {
  return (_has_bits_[5] & 0x00000100u) != 0;
}
void CloudPolicySettings::set_has_alwaysopenpdfexternally() {
  _has_bits_[5] |= 0x00000100u;
}
void CloudPolicySettings::clear_has_alwaysopenpdfexternally() {
  _has_bits_[5] &= ~0x00000100u;
}
void CloudPolicySettings::clear_alwaysopenpdfexternally() {
  if (alwaysopenpdfexternally_ != NULL) alwaysopenpdfexternally_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_alwaysopenpdfexternally();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::alwaysopenpdfexternally() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AlwaysOpenPdfExternally)
  return alwaysopenpdfexternally_ != NULL ? *alwaysopenpdfexternally_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_alwaysopenpdfexternally() {
  set_has_alwaysopenpdfexternally();
  if (alwaysopenpdfexternally_ == NULL) {
    alwaysopenpdfexternally_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AlwaysOpenPdfExternally)
  return alwaysopenpdfexternally_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_alwaysopenpdfexternally() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AlwaysOpenPdfExternally)
  clear_has_alwaysopenpdfexternally();
  ::enterprise_management::BooleanPolicyProto* temp = alwaysopenpdfexternally_;
  alwaysopenpdfexternally_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_alwaysopenpdfexternally(::enterprise_management::BooleanPolicyProto* alwaysopenpdfexternally) {
  delete alwaysopenpdfexternally_;
  alwaysopenpdfexternally_ = alwaysopenpdfexternally;
  if (alwaysopenpdfexternally) {
    set_has_alwaysopenpdfexternally();
  } else {
    clear_has_alwaysopenpdfexternally();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AlwaysOpenPdfExternally)
}

// optional .enterprise_management.BooleanPolicyProto SyncDisabled = 22;
bool CloudPolicySettings::has_syncdisabled() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void CloudPolicySettings::set_has_syncdisabled() {
  _has_bits_[0] |= 0x00008000u;
}
void CloudPolicySettings::clear_has_syncdisabled() {
  _has_bits_[0] &= ~0x00008000u;
}
void CloudPolicySettings::clear_syncdisabled() {
  if (syncdisabled_ != NULL) syncdisabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_syncdisabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::syncdisabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SyncDisabled)
  return syncdisabled_ != NULL ? *syncdisabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_syncdisabled() {
  set_has_syncdisabled();
  if (syncdisabled_ == NULL) {
    syncdisabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SyncDisabled)
  return syncdisabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_syncdisabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SyncDisabled)
  clear_has_syncdisabled();
  ::enterprise_management::BooleanPolicyProto* temp = syncdisabled_;
  syncdisabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_syncdisabled(::enterprise_management::BooleanPolicyProto* syncdisabled) {
  delete syncdisabled_;
  syncdisabled_ = syncdisabled;
  if (syncdisabled) {
    set_has_syncdisabled();
  } else {
    clear_has_syncdisabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SyncDisabled)
}

// optional .enterprise_management.BooleanPolicyProto SigninAllowed = 192;
bool CloudPolicySettings::has_signinallowed() const {
  return (_has_bits_[3] & 0x00002000u) != 0;
}
void CloudPolicySettings::set_has_signinallowed() {
  _has_bits_[3] |= 0x00002000u;
}
void CloudPolicySettings::clear_has_signinallowed() {
  _has_bits_[3] &= ~0x00002000u;
}
void CloudPolicySettings::clear_signinallowed() {
  if (signinallowed_ != NULL) signinallowed_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_signinallowed();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::signinallowed() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SigninAllowed)
  return signinallowed_ != NULL ? *signinallowed_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_signinallowed() {
  set_has_signinallowed();
  if (signinallowed_ == NULL) {
    signinallowed_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SigninAllowed)
  return signinallowed_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_signinallowed() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SigninAllowed)
  clear_has_signinallowed();
  ::enterprise_management::BooleanPolicyProto* temp = signinallowed_;
  signinallowed_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_signinallowed(::enterprise_management::BooleanPolicyProto* signinallowed) {
  delete signinallowed_;
  signinallowed_ = signinallowed;
  if (signinallowed) {
    set_has_signinallowed();
  } else {
    clear_has_signinallowed();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SigninAllowed)
}

// optional .enterprise_management.StringPolicyProto DiskCacheDir = 90;
bool CloudPolicySettings::has_diskcachedir() const {
  return (_has_bits_[2] & 0x00000040u) != 0;
}
void CloudPolicySettings::set_has_diskcachedir() {
  _has_bits_[2] |= 0x00000040u;
}
void CloudPolicySettings::clear_has_diskcachedir() {
  _has_bits_[2] &= ~0x00000040u;
}
void CloudPolicySettings::clear_diskcachedir() {
  if (diskcachedir_ != NULL) diskcachedir_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_diskcachedir();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::diskcachedir() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DiskCacheDir)
  return diskcachedir_ != NULL ? *diskcachedir_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_diskcachedir() {
  set_has_diskcachedir();
  if (diskcachedir_ == NULL) {
    diskcachedir_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DiskCacheDir)
  return diskcachedir_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_diskcachedir() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DiskCacheDir)
  clear_has_diskcachedir();
  ::enterprise_management::StringPolicyProto* temp = diskcachedir_;
  diskcachedir_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_diskcachedir(::enterprise_management::StringPolicyProto* diskcachedir) {
  delete diskcachedir_;
  diskcachedir_ = diskcachedir;
  if (diskcachedir) {
    set_has_diskcachedir();
  } else {
    clear_has_diskcachedir();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DiskCacheDir)
}

// optional .enterprise_management.IntegerPolicyProto DiskCacheSize = 112;
bool CloudPolicySettings::has_diskcachesize() const {
  return (_has_bits_[2] & 0x00400000u) != 0;
}
void CloudPolicySettings::set_has_diskcachesize() {
  _has_bits_[2] |= 0x00400000u;
}
void CloudPolicySettings::clear_has_diskcachesize() {
  _has_bits_[2] &= ~0x00400000u;
}
void CloudPolicySettings::clear_diskcachesize() {
  if (diskcachesize_ != NULL) diskcachesize_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_diskcachesize();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::diskcachesize() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DiskCacheSize)
  return diskcachesize_ != NULL ? *diskcachesize_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_diskcachesize() {
  set_has_diskcachesize();
  if (diskcachesize_ == NULL) {
    diskcachesize_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DiskCacheSize)
  return diskcachesize_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_diskcachesize() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DiskCacheSize)
  clear_has_diskcachesize();
  ::enterprise_management::IntegerPolicyProto* temp = diskcachesize_;
  diskcachesize_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_diskcachesize(::enterprise_management::IntegerPolicyProto* diskcachesize) {
  delete diskcachesize_;
  diskcachesize_ = diskcachesize;
  if (diskcachesize) {
    set_has_diskcachesize();
  } else {
    clear_has_diskcachesize();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DiskCacheSize)
}

// optional .enterprise_management.IntegerPolicyProto MediaCacheSize = 113;
bool CloudPolicySettings::has_mediacachesize() const {
  return (_has_bits_[2] & 0x00800000u) != 0;
}
void CloudPolicySettings::set_has_mediacachesize() {
  _has_bits_[2] |= 0x00800000u;
}
void CloudPolicySettings::clear_has_mediacachesize() {
  _has_bits_[2] &= ~0x00800000u;
}
void CloudPolicySettings::clear_mediacachesize() {
  if (mediacachesize_ != NULL) mediacachesize_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_mediacachesize();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::mediacachesize() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.MediaCacheSize)
  return mediacachesize_ != NULL ? *mediacachesize_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_mediacachesize() {
  set_has_mediacachesize();
  if (mediacachesize_ == NULL) {
    mediacachesize_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.MediaCacheSize)
  return mediacachesize_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_mediacachesize() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.MediaCacheSize)
  clear_has_mediacachesize();
  ::enterprise_management::IntegerPolicyProto* temp = mediacachesize_;
  mediacachesize_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_mediacachesize(::enterprise_management::IntegerPolicyProto* mediacachesize) {
  delete mediacachesize_;
  mediacachesize_ = mediacachesize;
  if (mediacachesize) {
    set_has_mediacachesize();
  } else {
    clear_has_mediacachesize();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.MediaCacheSize)
}

// optional .enterprise_management.IntegerPolicyProto DownloadRestrictions = 373;
bool CloudPolicySettings::has_downloadrestrictions() const {
  return (_has_bits_[5] & 0x00010000u) != 0;
}
void CloudPolicySettings::set_has_downloadrestrictions() {
  _has_bits_[5] |= 0x00010000u;
}
void CloudPolicySettings::clear_has_downloadrestrictions() {
  _has_bits_[5] &= ~0x00010000u;
}
void CloudPolicySettings::clear_downloadrestrictions() {
  if (downloadrestrictions_ != NULL) downloadrestrictions_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_downloadrestrictions();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::downloadrestrictions() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DownloadRestrictions)
  return downloadrestrictions_ != NULL ? *downloadrestrictions_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_downloadrestrictions() {
  set_has_downloadrestrictions();
  if (downloadrestrictions_ == NULL) {
    downloadrestrictions_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DownloadRestrictions)
  return downloadrestrictions_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_downloadrestrictions() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DownloadRestrictions)
  clear_has_downloadrestrictions();
  ::enterprise_management::IntegerPolicyProto* temp = downloadrestrictions_;
  downloadrestrictions_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_downloadrestrictions(::enterprise_management::IntegerPolicyProto* downloadrestrictions) {
  delete downloadrestrictions_;
  downloadrestrictions_ = downloadrestrictions;
  if (downloadrestrictions) {
    set_has_downloadrestrictions();
  } else {
    clear_has_downloadrestrictions();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DownloadRestrictions)
}

// optional .enterprise_management.StringPolicyProto DownloadDirectory = 66;
bool CloudPolicySettings::has_downloaddirectory() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
void CloudPolicySettings::set_has_downloaddirectory() {
  _has_bits_[1] |= 0x00040000u;
}
void CloudPolicySettings::clear_has_downloaddirectory() {
  _has_bits_[1] &= ~0x00040000u;
}
void CloudPolicySettings::clear_downloaddirectory() {
  if (downloaddirectory_ != NULL) downloaddirectory_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_downloaddirectory();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::downloaddirectory() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DownloadDirectory)
  return downloaddirectory_ != NULL ? *downloaddirectory_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_downloaddirectory() {
  set_has_downloaddirectory();
  if (downloaddirectory_ == NULL) {
    downloaddirectory_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DownloadDirectory)
  return downloaddirectory_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_downloaddirectory() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DownloadDirectory)
  clear_has_downloaddirectory();
  ::enterprise_management::StringPolicyProto* temp = downloaddirectory_;
  downloaddirectory_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_downloaddirectory(::enterprise_management::StringPolicyProto* downloaddirectory) {
  delete downloaddirectory_;
  downloaddirectory_ = downloaddirectory;
  if (downloaddirectory) {
    set_has_downloaddirectory();
  } else {
    clear_has_downloaddirectory();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DownloadDirectory)
}

// optional .enterprise_management.StringPolicyProto ProxyMode = 23;
bool CloudPolicySettings::has_proxymode() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void CloudPolicySettings::set_has_proxymode() {
  _has_bits_[0] |= 0x00010000u;
}
void CloudPolicySettings::clear_has_proxymode() {
  _has_bits_[0] &= ~0x00010000u;
}
void CloudPolicySettings::clear_proxymode() {
  if (proxymode_ != NULL) proxymode_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_proxymode();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxymode() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyMode)
  return proxymode_ != NULL ? *proxymode_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxymode() {
  set_has_proxymode();
  if (proxymode_ == NULL) {
    proxymode_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyMode)
  return proxymode_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxymode() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyMode)
  clear_has_proxymode();
  ::enterprise_management::StringPolicyProto* temp = proxymode_;
  proxymode_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_proxymode(::enterprise_management::StringPolicyProto* proxymode) {
  delete proxymode_;
  proxymode_ = proxymode;
  if (proxymode) {
    set_has_proxymode();
  } else {
    clear_has_proxymode();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyMode)
}

// optional .enterprise_management.IntegerPolicyProto ProxyServerMode = 24;
bool CloudPolicySettings::has_proxyservermode() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void CloudPolicySettings::set_has_proxyservermode() {
  _has_bits_[0] |= 0x00020000u;
}
void CloudPolicySettings::clear_has_proxyservermode() {
  _has_bits_[0] &= ~0x00020000u;
}
void CloudPolicySettings::clear_proxyservermode() {
  if (proxyservermode_ != NULL) proxyservermode_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_proxyservermode();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::proxyservermode() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyServerMode)
  return proxyservermode_ != NULL ? *proxyservermode_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_proxyservermode() {
  set_has_proxyservermode();
  if (proxyservermode_ == NULL) {
    proxyservermode_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyServerMode)
  return proxyservermode_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_proxyservermode() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyServerMode)
  clear_has_proxyservermode();
  ::enterprise_management::IntegerPolicyProto* temp = proxyservermode_;
  proxyservermode_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_proxyservermode(::enterprise_management::IntegerPolicyProto* proxyservermode) {
  delete proxyservermode_;
  proxyservermode_ = proxyservermode;
  if (proxyservermode) {
    set_has_proxyservermode();
  } else {
    clear_has_proxyservermode();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyServerMode)
}

// optional .enterprise_management.StringPolicyProto ProxyServer = 25;
bool CloudPolicySettings::has_proxyserver() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void CloudPolicySettings::set_has_proxyserver() {
  _has_bits_[0] |= 0x00040000u;
}
void CloudPolicySettings::clear_has_proxyserver() {
  _has_bits_[0] &= ~0x00040000u;
}
void CloudPolicySettings::clear_proxyserver() {
  if (proxyserver_ != NULL) proxyserver_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_proxyserver();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxyserver() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyServer)
  return proxyserver_ != NULL ? *proxyserver_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxyserver() {
  set_has_proxyserver();
  if (proxyserver_ == NULL) {
    proxyserver_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyServer)
  return proxyserver_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxyserver() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyServer)
  clear_has_proxyserver();
  ::enterprise_management::StringPolicyProto* temp = proxyserver_;
  proxyserver_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_proxyserver(::enterprise_management::StringPolicyProto* proxyserver) {
  delete proxyserver_;
  proxyserver_ = proxyserver;
  if (proxyserver) {
    set_has_proxyserver();
  } else {
    clear_has_proxyserver();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyServer)
}

// optional .enterprise_management.StringPolicyProto ProxyPacUrl = 26;
bool CloudPolicySettings::has_proxypacurl() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void CloudPolicySettings::set_has_proxypacurl() {
  _has_bits_[0] |= 0x00080000u;
}
void CloudPolicySettings::clear_has_proxypacurl() {
  _has_bits_[0] &= ~0x00080000u;
}
void CloudPolicySettings::clear_proxypacurl() {
  if (proxypacurl_ != NULL) proxypacurl_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_proxypacurl();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxypacurl() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyPacUrl)
  return proxypacurl_ != NULL ? *proxypacurl_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxypacurl() {
  set_has_proxypacurl();
  if (proxypacurl_ == NULL) {
    proxypacurl_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyPacUrl)
  return proxypacurl_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxypacurl() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyPacUrl)
  clear_has_proxypacurl();
  ::enterprise_management::StringPolicyProto* temp = proxypacurl_;
  proxypacurl_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_proxypacurl(::enterprise_management::StringPolicyProto* proxypacurl) {
  delete proxypacurl_;
  proxypacurl_ = proxypacurl;
  if (proxypacurl) {
    set_has_proxypacurl();
  } else {
    clear_has_proxypacurl();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyPacUrl)
}

// optional .enterprise_management.StringPolicyProto ProxyBypassList = 27;
bool CloudPolicySettings::has_proxybypasslist() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void CloudPolicySettings::set_has_proxybypasslist() {
  _has_bits_[0] |= 0x00100000u;
}
void CloudPolicySettings::clear_has_proxybypasslist() {
  _has_bits_[0] &= ~0x00100000u;
}
void CloudPolicySettings::clear_proxybypasslist() {
  if (proxybypasslist_ != NULL) proxybypasslist_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_proxybypasslist();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxybypasslist() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyBypassList)
  return proxybypasslist_ != NULL ? *proxybypasslist_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxybypasslist() {
  set_has_proxybypasslist();
  if (proxybypasslist_ == NULL) {
    proxybypasslist_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyBypassList)
  return proxybypasslist_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxybypasslist() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyBypassList)
  clear_has_proxybypasslist();
  ::enterprise_management::StringPolicyProto* temp = proxybypasslist_;
  proxybypasslist_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_proxybypasslist(::enterprise_management::StringPolicyProto* proxybypasslist) {
  delete proxybypasslist_;
  proxybypasslist_ = proxybypasslist;
  if (proxybypasslist) {
    set_has_proxybypasslist();
  } else {
    clear_has_proxybypasslist();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyBypassList)
}

// optional .enterprise_management.StringPolicyProto ProxySettings = 118;
bool CloudPolicySettings::has_proxysettings() const {
  return (_has_bits_[2] & 0x01000000u) != 0;
}
void CloudPolicySettings::set_has_proxysettings() {
  _has_bits_[2] |= 0x01000000u;
}
void CloudPolicySettings::clear_has_proxysettings() {
  _has_bits_[2] &= ~0x01000000u;
}
void CloudPolicySettings::clear_proxysettings() {
  if (proxysettings_ != NULL) proxysettings_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_proxysettings();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxysettings() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxySettings)
  return proxysettings_ != NULL ? *proxysettings_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxysettings() {
  set_has_proxysettings();
  if (proxysettings_ == NULL) {
    proxysettings_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxySettings)
  return proxysettings_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxysettings() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxySettings)
  clear_has_proxysettings();
  ::enterprise_management::StringPolicyProto* temp = proxysettings_;
  proxysettings_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_proxysettings(::enterprise_management::StringPolicyProto* proxysettings) {
  delete proxysettings_;
  proxysettings_ = proxysettings;
  if (proxysettings) {
    set_has_proxysettings();
  } else {
    clear_has_proxysettings();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxySettings)
}

// optional .enterprise_management.StringPolicyProto AuthSchemes = 28;
bool CloudPolicySettings::has_authschemes() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void CloudPolicySettings::set_has_authschemes() {
  _has_bits_[0] |= 0x00200000u;
}
void CloudPolicySettings::clear_has_authschemes() {
  _has_bits_[0] &= ~0x00200000u;
}
void CloudPolicySettings::clear_authschemes() {
  if (authschemes_ != NULL) authschemes_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_authschemes();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authschemes() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthSchemes)
  return authschemes_ != NULL ? *authschemes_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authschemes() {
  set_has_authschemes();
  if (authschemes_ == NULL) {
    authschemes_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthSchemes)
  return authschemes_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authschemes() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthSchemes)
  clear_has_authschemes();
  ::enterprise_management::StringPolicyProto* temp = authschemes_;
  authschemes_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_authschemes(::enterprise_management::StringPolicyProto* authschemes) {
  delete authschemes_;
  authschemes_ = authschemes;
  if (authschemes) {
    set_has_authschemes();
  } else {
    clear_has_authschemes();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthSchemes)
}

// optional .enterprise_management.BooleanPolicyProto DisableAuthNegotiateCnameLookup = 29;
bool CloudPolicySettings::has_disableauthnegotiatecnamelookup() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void CloudPolicySettings::set_has_disableauthnegotiatecnamelookup() {
  _has_bits_[0] |= 0x00400000u;
}
void CloudPolicySettings::clear_has_disableauthnegotiatecnamelookup() {
  _has_bits_[0] &= ~0x00400000u;
}
void CloudPolicySettings::clear_disableauthnegotiatecnamelookup() {
  if (disableauthnegotiatecnamelookup_ != NULL) disableauthnegotiatecnamelookup_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_disableauthnegotiatecnamelookup();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disableauthnegotiatecnamelookup() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
  return disableauthnegotiatecnamelookup_ != NULL ? *disableauthnegotiatecnamelookup_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disableauthnegotiatecnamelookup() {
  set_has_disableauthnegotiatecnamelookup();
  if (disableauthnegotiatecnamelookup_ == NULL) {
    disableauthnegotiatecnamelookup_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
  return disableauthnegotiatecnamelookup_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disableauthnegotiatecnamelookup() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
  clear_has_disableauthnegotiatecnamelookup();
  ::enterprise_management::BooleanPolicyProto* temp = disableauthnegotiatecnamelookup_;
  disableauthnegotiatecnamelookup_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_disableauthnegotiatecnamelookup(::enterprise_management::BooleanPolicyProto* disableauthnegotiatecnamelookup) {
  delete disableauthnegotiatecnamelookup_;
  disableauthnegotiatecnamelookup_ = disableauthnegotiatecnamelookup;
  if (disableauthnegotiatecnamelookup) {
    set_has_disableauthnegotiatecnamelookup();
  } else {
    clear_has_disableauthnegotiatecnamelookup();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
}

// optional .enterprise_management.BooleanPolicyProto EnableAuthNegotiatePort = 30;
bool CloudPolicySettings::has_enableauthnegotiateport() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void CloudPolicySettings::set_has_enableauthnegotiateport() {
  _has_bits_[0] |= 0x00800000u;
}
void CloudPolicySettings::clear_has_enableauthnegotiateport() {
  _has_bits_[0] &= ~0x00800000u;
}
void CloudPolicySettings::clear_enableauthnegotiateport() {
  if (enableauthnegotiateport_ != NULL) enableauthnegotiateport_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_enableauthnegotiateport();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enableauthnegotiateport() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableAuthNegotiatePort)
  return enableauthnegotiateport_ != NULL ? *enableauthnegotiateport_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enableauthnegotiateport() {
  set_has_enableauthnegotiateport();
  if (enableauthnegotiateport_ == NULL) {
    enableauthnegotiateport_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableAuthNegotiatePort)
  return enableauthnegotiateport_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enableauthnegotiateport() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableAuthNegotiatePort)
  clear_has_enableauthnegotiateport();
  ::enterprise_management::BooleanPolicyProto* temp = enableauthnegotiateport_;
  enableauthnegotiateport_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_enableauthnegotiateport(::enterprise_management::BooleanPolicyProto* enableauthnegotiateport) {
  delete enableauthnegotiateport_;
  enableauthnegotiateport_ = enableauthnegotiateport;
  if (enableauthnegotiateport) {
    set_has_enableauthnegotiateport();
  } else {
    clear_has_enableauthnegotiateport();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableAuthNegotiatePort)
}

// optional .enterprise_management.StringPolicyProto AuthServerWhitelist = 31;
bool CloudPolicySettings::has_authserverwhitelist() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void CloudPolicySettings::set_has_authserverwhitelist() {
  _has_bits_[0] |= 0x01000000u;
}
void CloudPolicySettings::clear_has_authserverwhitelist() {
  _has_bits_[0] &= ~0x01000000u;
}
void CloudPolicySettings::clear_authserverwhitelist() {
  if (authserverwhitelist_ != NULL) authserverwhitelist_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_authserverwhitelist();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authserverwhitelist() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
  return authserverwhitelist_ != NULL ? *authserverwhitelist_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authserverwhitelist() {
  set_has_authserverwhitelist();
  if (authserverwhitelist_ == NULL) {
    authserverwhitelist_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
  return authserverwhitelist_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authserverwhitelist() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
  clear_has_authserverwhitelist();
  ::enterprise_management::StringPolicyProto* temp = authserverwhitelist_;
  authserverwhitelist_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_authserverwhitelist(::enterprise_management::StringPolicyProto* authserverwhitelist) {
  delete authserverwhitelist_;
  authserverwhitelist_ = authserverwhitelist;
  if (authserverwhitelist) {
    set_has_authserverwhitelist();
  } else {
    clear_has_authserverwhitelist();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
}

// optional .enterprise_management.StringPolicyProto AuthNegotiateDelegateWhitelist = 32;
bool CloudPolicySettings::has_authnegotiatedelegatewhitelist() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
void CloudPolicySettings::set_has_authnegotiatedelegatewhitelist() {
  _has_bits_[0] |= 0x02000000u;
}
void CloudPolicySettings::clear_has_authnegotiatedelegatewhitelist() {
  _has_bits_[0] &= ~0x02000000u;
}
void CloudPolicySettings::clear_authnegotiatedelegatewhitelist() {
  if (authnegotiatedelegatewhitelist_ != NULL) authnegotiatedelegatewhitelist_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_authnegotiatedelegatewhitelist();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authnegotiatedelegatewhitelist() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
  return authnegotiatedelegatewhitelist_ != NULL ? *authnegotiatedelegatewhitelist_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authnegotiatedelegatewhitelist() {
  set_has_authnegotiatedelegatewhitelist();
  if (authnegotiatedelegatewhitelist_ == NULL) {
    authnegotiatedelegatewhitelist_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
  return authnegotiatedelegatewhitelist_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authnegotiatedelegatewhitelist() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
  clear_has_authnegotiatedelegatewhitelist();
  ::enterprise_management::StringPolicyProto* temp = authnegotiatedelegatewhitelist_;
  authnegotiatedelegatewhitelist_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_authnegotiatedelegatewhitelist(::enterprise_management::StringPolicyProto* authnegotiatedelegatewhitelist) {
  delete authnegotiatedelegatewhitelist_;
  authnegotiatedelegatewhitelist_ = authnegotiatedelegatewhitelist;
  if (authnegotiatedelegatewhitelist) {
    set_has_authnegotiatedelegatewhitelist();
  } else {
    clear_has_authnegotiatedelegatewhitelist();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
}

// optional .enterprise_management.StringPolicyProto GSSAPILibraryName = 33;
bool CloudPolicySettings::has_gssapilibraryname() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
void CloudPolicySettings::set_has_gssapilibraryname() {
  _has_bits_[0] |= 0x04000000u;
}
void CloudPolicySettings::clear_has_gssapilibraryname() {
  _has_bits_[0] &= ~0x04000000u;
}
void CloudPolicySettings::clear_gssapilibraryname() {
  if (gssapilibraryname_ != NULL) gssapilibraryname_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_gssapilibraryname();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::gssapilibraryname() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.GSSAPILibraryName)
  return gssapilibraryname_ != NULL ? *gssapilibraryname_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_gssapilibraryname() {
  set_has_gssapilibraryname();
  if (gssapilibraryname_ == NULL) {
    gssapilibraryname_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.GSSAPILibraryName)
  return gssapilibraryname_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_gssapilibraryname() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.GSSAPILibraryName)
  clear_has_gssapilibraryname();
  ::enterprise_management::StringPolicyProto* temp = gssapilibraryname_;
  gssapilibraryname_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_gssapilibraryname(::enterprise_management::StringPolicyProto* gssapilibraryname) {
  delete gssapilibraryname_;
  gssapilibraryname_ = gssapilibraryname;
  if (gssapilibraryname) {
    set_has_gssapilibraryname();
  } else {
    clear_has_gssapilibraryname();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.GSSAPILibraryName)
}

// optional .enterprise_management.BooleanPolicyProto AllowCrossOriginAuthPrompt = 91;
bool CloudPolicySettings::has_allowcrossoriginauthprompt() const {
  return (_has_bits_[2] & 0x00000080u) != 0;
}
void CloudPolicySettings::set_has_allowcrossoriginauthprompt() {
  _has_bits_[2] |= 0x00000080u;
}
void CloudPolicySettings::clear_has_allowcrossoriginauthprompt() {
  _has_bits_[2] &= ~0x00000080u;
}
void CloudPolicySettings::clear_allowcrossoriginauthprompt() {
  if (allowcrossoriginauthprompt_ != NULL) allowcrossoriginauthprompt_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_allowcrossoriginauthprompt();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allowcrossoriginauthprompt() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowCrossOriginAuthPrompt)
  return allowcrossoriginauthprompt_ != NULL ? *allowcrossoriginauthprompt_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allowcrossoriginauthprompt() {
  set_has_allowcrossoriginauthprompt();
  if (allowcrossoriginauthprompt_ == NULL) {
    allowcrossoriginauthprompt_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowCrossOriginAuthPrompt)
  return allowcrossoriginauthprompt_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allowcrossoriginauthprompt() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowCrossOriginAuthPrompt)
  clear_has_allowcrossoriginauthprompt();
  ::enterprise_management::BooleanPolicyProto* temp = allowcrossoriginauthprompt_;
  allowcrossoriginauthprompt_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_allowcrossoriginauthprompt(::enterprise_management::BooleanPolicyProto* allowcrossoriginauthprompt) {
  delete allowcrossoriginauthprompt_;
  allowcrossoriginauthprompt_ = allowcrossoriginauthprompt;
  if (allowcrossoriginauthprompt) {
    set_has_allowcrossoriginauthprompt();
  } else {
    clear_has_allowcrossoriginauthprompt();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowCrossOriginAuthPrompt)
}

// optional .enterprise_management.BooleanPolicyProto NtlmV2Enabled = 395;
bool CloudPolicySettings::has_ntlmv2enabled() const {
  return (_has_bits_[5] & 0x00200000u) != 0;
}
void CloudPolicySettings::set_has_ntlmv2enabled() {
  _has_bits_[5] |= 0x00200000u;
}
void CloudPolicySettings::clear_has_ntlmv2enabled() {
  _has_bits_[5] &= ~0x00200000u;
}
void CloudPolicySettings::clear_ntlmv2enabled() {
  if (ntlmv2enabled_ != NULL) ntlmv2enabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_ntlmv2enabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::ntlmv2enabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
  return ntlmv2enabled_ != NULL ? *ntlmv2enabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_ntlmv2enabled() {
  set_has_ntlmv2enabled();
  if (ntlmv2enabled_ == NULL) {
    ntlmv2enabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
  return ntlmv2enabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_ntlmv2enabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
  clear_has_ntlmv2enabled();
  ::enterprise_management::BooleanPolicyProto* temp = ntlmv2enabled_;
  ntlmv2enabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_ntlmv2enabled(::enterprise_management::BooleanPolicyProto* ntlmv2enabled) {
  delete ntlmv2enabled_;
  ntlmv2enabled_ = ntlmv2enabled;
  if (ntlmv2enabled) {
    set_has_ntlmv2enabled();
  } else {
    clear_has_ntlmv2enabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
}

// optional .enterprise_management.StringListPolicyProto ExtensionInstallBlacklist = 34;
bool CloudPolicySettings::has_extensioninstallblacklist() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
void CloudPolicySettings::set_has_extensioninstallblacklist() {
  _has_bits_[0] |= 0x08000000u;
}
void CloudPolicySettings::clear_has_extensioninstallblacklist() {
  _has_bits_[0] &= ~0x08000000u;
}
void CloudPolicySettings::clear_extensioninstallblacklist() {
  if (extensioninstallblacklist_ != NULL) extensioninstallblacklist_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_extensioninstallblacklist();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::extensioninstallblacklist() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExtensionInstallBlacklist)
  return extensioninstallblacklist_ != NULL ? *extensioninstallblacklist_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_extensioninstallblacklist() {
  set_has_extensioninstallblacklist();
  if (extensioninstallblacklist_ == NULL) {
    extensioninstallblacklist_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExtensionInstallBlacklist)
  return extensioninstallblacklist_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_extensioninstallblacklist() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExtensionInstallBlacklist)
  clear_has_extensioninstallblacklist();
  ::enterprise_management::StringListPolicyProto* temp = extensioninstallblacklist_;
  extensioninstallblacklist_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_extensioninstallblacklist(::enterprise_management::StringListPolicyProto* extensioninstallblacklist) {
  delete extensioninstallblacklist_;
  extensioninstallblacklist_ = extensioninstallblacklist;
  if (extensioninstallblacklist) {
    set_has_extensioninstallblacklist();
  } else {
    clear_has_extensioninstallblacklist();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExtensionInstallBlacklist)
}

// optional .enterprise_management.StringListPolicyProto ExtensionInstallWhitelist = 35;
bool CloudPolicySettings::has_extensioninstallwhitelist() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
void CloudPolicySettings::set_has_extensioninstallwhitelist() {
  _has_bits_[0] |= 0x10000000u;
}
void CloudPolicySettings::clear_has_extensioninstallwhitelist() {
  _has_bits_[0] &= ~0x10000000u;
}
void CloudPolicySettings::clear_extensioninstallwhitelist() {
  if (extensioninstallwhitelist_ != NULL) extensioninstallwhitelist_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_extensioninstallwhitelist();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::extensioninstallwhitelist() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExtensionInstallWhitelist)
  return extensioninstallwhitelist_ != NULL ? *extensioninstallwhitelist_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_extensioninstallwhitelist() {
  set_has_extensioninstallwhitelist();
  if (extensioninstallwhitelist_ == NULL) {
    extensioninstallwhitelist_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExtensionInstallWhitelist)
  return extensioninstallwhitelist_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_extensioninstallwhitelist() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExtensionInstallWhitelist)
  clear_has_extensioninstallwhitelist();
  ::enterprise_management::StringListPolicyProto* temp = extensioninstallwhitelist_;
  extensioninstallwhitelist_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_extensioninstallwhitelist(::enterprise_management::StringListPolicyProto* extensioninstallwhitelist) {
  delete extensioninstallwhitelist_;
  extensioninstallwhitelist_ = extensioninstallwhitelist;
  if (extensioninstallwhitelist) {
    set_has_extensioninstallwhitelist();
  } else {
    clear_has_extensioninstallwhitelist();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExtensionInstallWhitelist)
}

// optional .enterprise_management.StringListPolicyProto ExtensionInstallForcelist = 36;
bool CloudPolicySettings::has_extensioninstallforcelist() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
void CloudPolicySettings::set_has_extensioninstallforcelist() {
  _has_bits_[0] |= 0x20000000u;
}
void CloudPolicySettings::clear_has_extensioninstallforcelist() {
  _has_bits_[0] &= ~0x20000000u;
}
void CloudPolicySettings::clear_extensioninstallforcelist() {
  if (extensioninstallforcelist_ != NULL) extensioninstallforcelist_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_extensioninstallforcelist();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::extensioninstallforcelist() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExtensionInstallForcelist)
  return extensioninstallforcelist_ != NULL ? *extensioninstallforcelist_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_extensioninstallforcelist() {
  set_has_extensioninstallforcelist();
  if (extensioninstallforcelist_ == NULL) {
    extensioninstallforcelist_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExtensionInstallForcelist)
  return extensioninstallforcelist_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_extensioninstallforcelist() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExtensionInstallForcelist)
  clear_has_extensioninstallforcelist();
  ::enterprise_management::StringListPolicyProto* temp = extensioninstallforcelist_;
  extensioninstallforcelist_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_extensioninstallforcelist(::enterprise_management::StringListPolicyProto* extensioninstallforcelist) {
  delete extensioninstallforcelist_;
  extensioninstallforcelist_ = extensioninstallforcelist;
  if (extensioninstallforcelist) {
    set_has_extensioninstallforcelist();
  } else {
    clear_has_extensioninstallforcelist();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExtensionInstallForcelist)
}

// optional .enterprise_management.StringListPolicyProto ExtensionInstallSources = 150;
bool CloudPolicySettings::has_extensioninstallsources() const {
  return (_has_bits_[2] & 0x20000000u) != 0;
}
void CloudPolicySettings::set_has_extensioninstallsources() {
  _has_bits_[2] |= 0x20000000u;
}
void CloudPolicySettings::clear_has_extensioninstallsources() {
  _has_bits_[2] &= ~0x20000000u;
}
void CloudPolicySettings::clear_extensioninstallsources() {
  if (extensioninstallsources_ != NULL) extensioninstallsources_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_extensioninstallsources();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::extensioninstallsources() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExtensionInstallSources)
  return extensioninstallsources_ != NULL ? *extensioninstallsources_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_extensioninstallsources() {
  set_has_extensioninstallsources();
  if (extensioninstallsources_ == NULL) {
    extensioninstallsources_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExtensionInstallSources)
  return extensioninstallsources_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_extensioninstallsources() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExtensionInstallSources)
  clear_has_extensioninstallsources();
  ::enterprise_management::StringListPolicyProto* temp = extensioninstallsources_;
  extensioninstallsources_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_extensioninstallsources(::enterprise_management::StringListPolicyProto* extensioninstallsources) {
  delete extensioninstallsources_;
  extensioninstallsources_ = extensioninstallsources;
  if (extensioninstallsources) {
    set_has_extensioninstallsources();
  } else {
    clear_has_extensioninstallsources();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExtensionInstallSources)
}

// optional .enterprise_management.StringListPolicyProto ExtensionAllowedTypes = 170;
bool CloudPolicySettings::has_extensionallowedtypes() const {
  return (_has_bits_[3] & 0x00000400u) != 0;
}
void CloudPolicySettings::set_has_extensionallowedtypes() {
  _has_bits_[3] |= 0x00000400u;
}
void CloudPolicySettings::clear_has_extensionallowedtypes() {
  _has_bits_[3] &= ~0x00000400u;
}
void CloudPolicySettings::clear_extensionallowedtypes() {
  if (extensionallowedtypes_ != NULL) extensionallowedtypes_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_extensionallowedtypes();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::extensionallowedtypes() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExtensionAllowedTypes)
  return extensionallowedtypes_ != NULL ? *extensionallowedtypes_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_extensionallowedtypes() {
  set_has_extensionallowedtypes();
  if (extensionallowedtypes_ == NULL) {
    extensionallowedtypes_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExtensionAllowedTypes)
  return extensionallowedtypes_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_extensionallowedtypes() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExtensionAllowedTypes)
  clear_has_extensionallowedtypes();
  ::enterprise_management::StringListPolicyProto* temp = extensionallowedtypes_;
  extensionallowedtypes_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_extensionallowedtypes(::enterprise_management::StringListPolicyProto* extensionallowedtypes) {
  delete extensionallowedtypes_;
  extensionallowedtypes_ = extensionallowedtypes;
  if (extensionallowedtypes) {
    set_has_extensionallowedtypes();
  } else {
    clear_has_extensionallowedtypes();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExtensionAllowedTypes)
}

// optional .enterprise_management.StringPolicyProto ExtensionSettings = 280;
bool CloudPolicySettings::has_extensionsettings() const {
  return (_has_bits_[4] & 0x00004000u) != 0;
}
void CloudPolicySettings::set_has_extensionsettings() {
  _has_bits_[4] |= 0x00004000u;
}
void CloudPolicySettings::clear_has_extensionsettings() {
  _has_bits_[4] &= ~0x00004000u;
}
void CloudPolicySettings::clear_extensionsettings() {
  if (extensionsettings_ != NULL) extensionsettings_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_extensionsettings();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::extensionsettings() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExtensionSettings)
  return extensionsettings_ != NULL ? *extensionsettings_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_extensionsettings() {
  set_has_extensionsettings();
  if (extensionsettings_ == NULL) {
    extensionsettings_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExtensionSettings)
  return extensionsettings_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_extensionsettings() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExtensionSettings)
  clear_has_extensionsettings();
  ::enterprise_management::StringPolicyProto* temp = extensionsettings_;
  extensionsettings_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_extensionsettings(::enterprise_management::StringPolicyProto* extensionsettings) {
  delete extensionsettings_;
  extensionsettings_ = extensionsettings;
  if (extensionsettings) {
    set_has_extensionsettings();
  } else {
    clear_has_extensionsettings();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExtensionSettings)
}

// optional .enterprise_management.BooleanPolicyProto ShowHomeButton = 37;
bool CloudPolicySettings::has_showhomebutton() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
void CloudPolicySettings::set_has_showhomebutton() {
  _has_bits_[0] |= 0x40000000u;
}
void CloudPolicySettings::clear_has_showhomebutton() {
  _has_bits_[0] &= ~0x40000000u;
}
void CloudPolicySettings::clear_showhomebutton() {
  if (showhomebutton_ != NULL) showhomebutton_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_showhomebutton();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::showhomebutton() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ShowHomeButton)
  return showhomebutton_ != NULL ? *showhomebutton_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_showhomebutton() {
  set_has_showhomebutton();
  if (showhomebutton_ == NULL) {
    showhomebutton_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ShowHomeButton)
  return showhomebutton_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_showhomebutton() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ShowHomeButton)
  clear_has_showhomebutton();
  ::enterprise_management::BooleanPolicyProto* temp = showhomebutton_;
  showhomebutton_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_showhomebutton(::enterprise_management::BooleanPolicyProto* showhomebutton) {
  delete showhomebutton_;
  showhomebutton_ = showhomebutton;
  if (showhomebutton) {
    set_has_showhomebutton();
  } else {
    clear_has_showhomebutton();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ShowHomeButton)
}

// optional .enterprise_management.BooleanPolicyProto DeveloperToolsDisabled = 38;
bool CloudPolicySettings::has_developertoolsdisabled() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
void CloudPolicySettings::set_has_developertoolsdisabled() {
  _has_bits_[0] |= 0x80000000u;
}
void CloudPolicySettings::clear_has_developertoolsdisabled() {
  _has_bits_[0] &= ~0x80000000u;
}
void CloudPolicySettings::clear_developertoolsdisabled() {
  if (developertoolsdisabled_ != NULL) developertoolsdisabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_developertoolsdisabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::developertoolsdisabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DeveloperToolsDisabled)
  return developertoolsdisabled_ != NULL ? *developertoolsdisabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_developertoolsdisabled() {
  set_has_developertoolsdisabled();
  if (developertoolsdisabled_ == NULL) {
    developertoolsdisabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DeveloperToolsDisabled)
  return developertoolsdisabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_developertoolsdisabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DeveloperToolsDisabled)
  clear_has_developertoolsdisabled();
  ::enterprise_management::BooleanPolicyProto* temp = developertoolsdisabled_;
  developertoolsdisabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_developertoolsdisabled(::enterprise_management::BooleanPolicyProto* developertoolsdisabled) {
  delete developertoolsdisabled_;
  developertoolsdisabled_ = developertoolsdisabled;
  if (developertoolsdisabled) {
    set_has_developertoolsdisabled();
  } else {
    clear_has_developertoolsdisabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DeveloperToolsDisabled)
}

// optional .enterprise_management.IntegerPolicyProto DeveloperToolsAvailability = 445;
bool CloudPolicySettings::has_developertoolsavailability() const {
  return (_has_bits_[6] & 0x00040000u) != 0;
}
void CloudPolicySettings::set_has_developertoolsavailability() {
  _has_bits_[6] |= 0x00040000u;
}
void CloudPolicySettings::clear_has_developertoolsavailability() {
  _has_bits_[6] &= ~0x00040000u;
}
void CloudPolicySettings::clear_developertoolsavailability() {
  if (developertoolsavailability_ != NULL) developertoolsavailability_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_developertoolsavailability();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::developertoolsavailability() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DeveloperToolsAvailability)
  return developertoolsavailability_ != NULL ? *developertoolsavailability_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_developertoolsavailability() {
  set_has_developertoolsavailability();
  if (developertoolsavailability_ == NULL) {
    developertoolsavailability_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DeveloperToolsAvailability)
  return developertoolsavailability_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_developertoolsavailability() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DeveloperToolsAvailability)
  clear_has_developertoolsavailability();
  ::enterprise_management::IntegerPolicyProto* temp = developertoolsavailability_;
  developertoolsavailability_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_developertoolsavailability(::enterprise_management::IntegerPolicyProto* developertoolsavailability) {
  delete developertoolsavailability_;
  developertoolsavailability_ = developertoolsavailability;
  if (developertoolsavailability) {
    set_has_developertoolsavailability();
  } else {
    clear_has_developertoolsavailability();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DeveloperToolsAvailability)
}

// optional .enterprise_management.IntegerPolicyProto RestoreOnStartup = 39;
bool CloudPolicySettings::has_restoreonstartup() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
void CloudPolicySettings::set_has_restoreonstartup() {
  _has_bits_[1] |= 0x00000001u;
}
void CloudPolicySettings::clear_has_restoreonstartup() {
  _has_bits_[1] &= ~0x00000001u;
}
void CloudPolicySettings::clear_restoreonstartup() {
  if (restoreonstartup_ != NULL) restoreonstartup_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_restoreonstartup();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::restoreonstartup() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RestoreOnStartup)
  return restoreonstartup_ != NULL ? *restoreonstartup_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_restoreonstartup() {
  set_has_restoreonstartup();
  if (restoreonstartup_ == NULL) {
    restoreonstartup_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RestoreOnStartup)
  return restoreonstartup_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_restoreonstartup() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RestoreOnStartup)
  clear_has_restoreonstartup();
  ::enterprise_management::IntegerPolicyProto* temp = restoreonstartup_;
  restoreonstartup_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_restoreonstartup(::enterprise_management::IntegerPolicyProto* restoreonstartup) {
  delete restoreonstartup_;
  restoreonstartup_ = restoreonstartup;
  if (restoreonstartup) {
    set_has_restoreonstartup();
  } else {
    clear_has_restoreonstartup();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RestoreOnStartup)
}

// optional .enterprise_management.StringListPolicyProto RestoreOnStartupURLs = 40;
bool CloudPolicySettings::has_restoreonstartupurls() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
void CloudPolicySettings::set_has_restoreonstartupurls() {
  _has_bits_[1] |= 0x00000002u;
}
void CloudPolicySettings::clear_has_restoreonstartupurls() {
  _has_bits_[1] &= ~0x00000002u;
}
void CloudPolicySettings::clear_restoreonstartupurls() {
  if (restoreonstartupurls_ != NULL) restoreonstartupurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_restoreonstartupurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::restoreonstartupurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RestoreOnStartupURLs)
  return restoreonstartupurls_ != NULL ? *restoreonstartupurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_restoreonstartupurls() {
  set_has_restoreonstartupurls();
  if (restoreonstartupurls_ == NULL) {
    restoreonstartupurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RestoreOnStartupURLs)
  return restoreonstartupurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_restoreonstartupurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RestoreOnStartupURLs)
  clear_has_restoreonstartupurls();
  ::enterprise_management::StringListPolicyProto* temp = restoreonstartupurls_;
  restoreonstartupurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_restoreonstartupurls(::enterprise_management::StringListPolicyProto* restoreonstartupurls) {
  delete restoreonstartupurls_;
  restoreonstartupurls_ = restoreonstartupurls;
  if (restoreonstartupurls) {
    set_has_restoreonstartupurls();
  } else {
    clear_has_restoreonstartupurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RestoreOnStartupURLs)
}

// optional .enterprise_management.BooleanPolicyProto BlockThirdPartyCookies = 41;
bool CloudPolicySettings::has_blockthirdpartycookies() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
void CloudPolicySettings::set_has_blockthirdpartycookies() {
  _has_bits_[1] |= 0x00000004u;
}
void CloudPolicySettings::clear_has_blockthirdpartycookies() {
  _has_bits_[1] &= ~0x00000004u;
}
void CloudPolicySettings::clear_blockthirdpartycookies() {
  if (blockthirdpartycookies_ != NULL) blockthirdpartycookies_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_blockthirdpartycookies();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::blockthirdpartycookies() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BlockThirdPartyCookies)
  return blockthirdpartycookies_ != NULL ? *blockthirdpartycookies_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_blockthirdpartycookies() {
  set_has_blockthirdpartycookies();
  if (blockthirdpartycookies_ == NULL) {
    blockthirdpartycookies_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BlockThirdPartyCookies)
  return blockthirdpartycookies_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_blockthirdpartycookies() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BlockThirdPartyCookies)
  clear_has_blockthirdpartycookies();
  ::enterprise_management::BooleanPolicyProto* temp = blockthirdpartycookies_;
  blockthirdpartycookies_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_blockthirdpartycookies(::enterprise_management::BooleanPolicyProto* blockthirdpartycookies) {
  delete blockthirdpartycookies_;
  blockthirdpartycookies_ = blockthirdpartycookies;
  if (blockthirdpartycookies) {
    set_has_blockthirdpartycookies();
  } else {
    clear_has_blockthirdpartycookies();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BlockThirdPartyCookies)
}

// optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderEnabled = 42;
bool CloudPolicySettings::has_defaultsearchproviderenabled() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchproviderenabled() {
  _has_bits_[1] |= 0x00000008u;
}
void CloudPolicySettings::clear_has_defaultsearchproviderenabled() {
  _has_bits_[1] &= ~0x00000008u;
}
void CloudPolicySettings::clear_defaultsearchproviderenabled() {
  if (defaultsearchproviderenabled_ != NULL) defaultsearchproviderenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_defaultsearchproviderenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::defaultsearchproviderenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
  return defaultsearchproviderenabled_ != NULL ? *defaultsearchproviderenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderenabled() {
  set_has_defaultsearchproviderenabled();
  if (defaultsearchproviderenabled_ == NULL) {
    defaultsearchproviderenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
  return defaultsearchproviderenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_defaultsearchproviderenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
  clear_has_defaultsearchproviderenabled();
  ::enterprise_management::BooleanPolicyProto* temp = defaultsearchproviderenabled_;
  defaultsearchproviderenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchproviderenabled(::enterprise_management::BooleanPolicyProto* defaultsearchproviderenabled) {
  delete defaultsearchproviderenabled_;
  defaultsearchproviderenabled_ = defaultsearchproviderenabled;
  if (defaultsearchproviderenabled) {
    set_has_defaultsearchproviderenabled();
  } else {
    clear_has_defaultsearchproviderenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderName = 43;
bool CloudPolicySettings::has_defaultsearchprovidername() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchprovidername() {
  _has_bits_[1] |= 0x00000010u;
}
void CloudPolicySettings::clear_has_defaultsearchprovidername() {
  _has_bits_[1] &= ~0x00000010u;
}
void CloudPolicySettings::clear_defaultsearchprovidername() {
  if (defaultsearchprovidername_ != NULL) defaultsearchprovidername_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_defaultsearchprovidername();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidername() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
  return defaultsearchprovidername_ != NULL ? *defaultsearchprovidername_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidername() {
  set_has_defaultsearchprovidername();
  if (defaultsearchprovidername_ == NULL) {
    defaultsearchprovidername_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
  return defaultsearchprovidername_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidername() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
  clear_has_defaultsearchprovidername();
  ::enterprise_management::StringPolicyProto* temp = defaultsearchprovidername_;
  defaultsearchprovidername_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchprovidername(::enterprise_management::StringPolicyProto* defaultsearchprovidername) {
  delete defaultsearchprovidername_;
  defaultsearchprovidername_ = defaultsearchprovidername;
  if (defaultsearchprovidername) {
    set_has_defaultsearchprovidername();
  } else {
    clear_has_defaultsearchprovidername();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderKeyword = 44;
bool CloudPolicySettings::has_defaultsearchproviderkeyword() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchproviderkeyword() {
  _has_bits_[1] |= 0x00000020u;
}
void CloudPolicySettings::clear_has_defaultsearchproviderkeyword() {
  _has_bits_[1] &= ~0x00000020u;
}
void CloudPolicySettings::clear_defaultsearchproviderkeyword() {
  if (defaultsearchproviderkeyword_ != NULL) defaultsearchproviderkeyword_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_defaultsearchproviderkeyword();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderkeyword() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
  return defaultsearchproviderkeyword_ != NULL ? *defaultsearchproviderkeyword_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderkeyword() {
  set_has_defaultsearchproviderkeyword();
  if (defaultsearchproviderkeyword_ == NULL) {
    defaultsearchproviderkeyword_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
  return defaultsearchproviderkeyword_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderkeyword() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
  clear_has_defaultsearchproviderkeyword();
  ::enterprise_management::StringPolicyProto* temp = defaultsearchproviderkeyword_;
  defaultsearchproviderkeyword_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchproviderkeyword(::enterprise_management::StringPolicyProto* defaultsearchproviderkeyword) {
  delete defaultsearchproviderkeyword_;
  defaultsearchproviderkeyword_ = defaultsearchproviderkeyword;
  if (defaultsearchproviderkeyword) {
    set_has_defaultsearchproviderkeyword();
  } else {
    clear_has_defaultsearchproviderkeyword();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURL = 45;
bool CloudPolicySettings::has_defaultsearchprovidersearchurl() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchprovidersearchurl() {
  _has_bits_[1] |= 0x00000040u;
}
void CloudPolicySettings::clear_has_defaultsearchprovidersearchurl() {
  _has_bits_[1] &= ~0x00000040u;
}
void CloudPolicySettings::clear_defaultsearchprovidersearchurl() {
  if (defaultsearchprovidersearchurl_ != NULL) defaultsearchprovidersearchurl_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_defaultsearchprovidersearchurl();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersearchurl() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
  return defaultsearchprovidersearchurl_ != NULL ? *defaultsearchprovidersearchurl_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersearchurl() {
  set_has_defaultsearchprovidersearchurl();
  if (defaultsearchprovidersearchurl_ == NULL) {
    defaultsearchprovidersearchurl_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
  return defaultsearchprovidersearchurl_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersearchurl() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
  clear_has_defaultsearchprovidersearchurl();
  ::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersearchurl_;
  defaultsearchprovidersearchurl_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchprovidersearchurl(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurl) {
  delete defaultsearchprovidersearchurl_;
  defaultsearchprovidersearchurl_ = defaultsearchprovidersearchurl;
  if (defaultsearchprovidersearchurl) {
    set_has_defaultsearchprovidersearchurl();
  } else {
    clear_has_defaultsearchprovidersearchurl();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURL = 46;
bool CloudPolicySettings::has_defaultsearchprovidersuggesturl() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchprovidersuggesturl() {
  _has_bits_[1] |= 0x00000080u;
}
void CloudPolicySettings::clear_has_defaultsearchprovidersuggesturl() {
  _has_bits_[1] &= ~0x00000080u;
}
void CloudPolicySettings::clear_defaultsearchprovidersuggesturl() {
  if (defaultsearchprovidersuggesturl_ != NULL) defaultsearchprovidersuggesturl_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_defaultsearchprovidersuggesturl();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersuggesturl() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
  return defaultsearchprovidersuggesturl_ != NULL ? *defaultsearchprovidersuggesturl_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersuggesturl() {
  set_has_defaultsearchprovidersuggesturl();
  if (defaultsearchprovidersuggesturl_ == NULL) {
    defaultsearchprovidersuggesturl_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
  return defaultsearchprovidersuggesturl_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersuggesturl() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
  clear_has_defaultsearchprovidersuggesturl();
  ::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersuggesturl_;
  defaultsearchprovidersuggesturl_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchprovidersuggesturl(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturl) {
  delete defaultsearchprovidersuggesturl_;
  defaultsearchprovidersuggesturl_ = defaultsearchprovidersuggesturl;
  if (defaultsearchprovidersuggesturl) {
    set_has_defaultsearchprovidersuggesturl();
  } else {
    clear_has_defaultsearchprovidersuggesturl();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderIconURL = 48;
bool CloudPolicySettings::has_defaultsearchprovidericonurl() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchprovidericonurl() {
  _has_bits_[1] |= 0x00000100u;
}
void CloudPolicySettings::clear_has_defaultsearchprovidericonurl() {
  _has_bits_[1] &= ~0x00000100u;
}
void CloudPolicySettings::clear_defaultsearchprovidericonurl() {
  if (defaultsearchprovidericonurl_ != NULL) defaultsearchprovidericonurl_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_defaultsearchprovidericonurl();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidericonurl() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
  return defaultsearchprovidericonurl_ != NULL ? *defaultsearchprovidericonurl_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidericonurl() {
  set_has_defaultsearchprovidericonurl();
  if (defaultsearchprovidericonurl_ == NULL) {
    defaultsearchprovidericonurl_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
  return defaultsearchprovidericonurl_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidericonurl() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
  clear_has_defaultsearchprovidericonurl();
  ::enterprise_management::StringPolicyProto* temp = defaultsearchprovidericonurl_;
  defaultsearchprovidericonurl_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchprovidericonurl(::enterprise_management::StringPolicyProto* defaultsearchprovidericonurl) {
  delete defaultsearchprovidericonurl_;
  defaultsearchprovidericonurl_ = defaultsearchprovidericonurl;
  if (defaultsearchprovidericonurl) {
    set_has_defaultsearchprovidericonurl();
  } else {
    clear_has_defaultsearchprovidericonurl();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
}

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderEncodings = 49;
bool CloudPolicySettings::has_defaultsearchproviderencodings() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchproviderencodings() {
  _has_bits_[1] |= 0x00000200u;
}
void CloudPolicySettings::clear_has_defaultsearchproviderencodings() {
  _has_bits_[1] &= ~0x00000200u;
}
void CloudPolicySettings::clear_defaultsearchproviderencodings() {
  if (defaultsearchproviderencodings_ != NULL) defaultsearchproviderencodings_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_defaultsearchproviderencodings();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::defaultsearchproviderencodings() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
  return defaultsearchproviderencodings_ != NULL ? *defaultsearchproviderencodings_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderencodings() {
  set_has_defaultsearchproviderencodings();
  if (defaultsearchproviderencodings_ == NULL) {
    defaultsearchproviderencodings_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
  return defaultsearchproviderencodings_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_defaultsearchproviderencodings() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
  clear_has_defaultsearchproviderencodings();
  ::enterprise_management::StringListPolicyProto* temp = defaultsearchproviderencodings_;
  defaultsearchproviderencodings_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchproviderencodings(::enterprise_management::StringListPolicyProto* defaultsearchproviderencodings) {
  delete defaultsearchproviderencodings_;
  defaultsearchproviderencodings_ = defaultsearchproviderencodings;
  if (defaultsearchproviderencodings) {
    set_has_defaultsearchproviderencodings();
  } else {
    clear_has_defaultsearchproviderencodings();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
}

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderAlternateURLs = 163;
bool CloudPolicySettings::has_defaultsearchprovideralternateurls() const {
  return (_has_bits_[3] & 0x00000040u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchprovideralternateurls() {
  _has_bits_[3] |= 0x00000040u;
}
void CloudPolicySettings::clear_has_defaultsearchprovideralternateurls() {
  _has_bits_[3] &= ~0x00000040u;
}
void CloudPolicySettings::clear_defaultsearchprovideralternateurls() {
  if (defaultsearchprovideralternateurls_ != NULL) defaultsearchprovideralternateurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_defaultsearchprovideralternateurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::defaultsearchprovideralternateurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
  return defaultsearchprovideralternateurls_ != NULL ? *defaultsearchprovideralternateurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_defaultsearchprovideralternateurls() {
  set_has_defaultsearchprovideralternateurls();
  if (defaultsearchprovideralternateurls_ == NULL) {
    defaultsearchprovideralternateurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
  return defaultsearchprovideralternateurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_defaultsearchprovideralternateurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
  clear_has_defaultsearchprovideralternateurls();
  ::enterprise_management::StringListPolicyProto* temp = defaultsearchprovideralternateurls_;
  defaultsearchprovideralternateurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchprovideralternateurls(::enterprise_management::StringListPolicyProto* defaultsearchprovideralternateurls) {
  delete defaultsearchprovideralternateurls_;
  defaultsearchprovideralternateurls_ = defaultsearchprovideralternateurls;
  if (defaultsearchprovideralternateurls) {
    set_has_defaultsearchprovideralternateurls();
  } else {
    clear_has_defaultsearchprovideralternateurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURL = 231;
bool CloudPolicySettings::has_defaultsearchproviderimageurl() const {
  return (_has_bits_[3] & 0x00800000u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchproviderimageurl() {
  _has_bits_[3] |= 0x00800000u;
}
void CloudPolicySettings::clear_has_defaultsearchproviderimageurl() {
  _has_bits_[3] &= ~0x00800000u;
}
void CloudPolicySettings::clear_defaultsearchproviderimageurl() {
  if (defaultsearchproviderimageurl_ != NULL) defaultsearchproviderimageurl_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_defaultsearchproviderimageurl();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderimageurl() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
  return defaultsearchproviderimageurl_ != NULL ? *defaultsearchproviderimageurl_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderimageurl() {
  set_has_defaultsearchproviderimageurl();
  if (defaultsearchproviderimageurl_ == NULL) {
    defaultsearchproviderimageurl_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
  return defaultsearchproviderimageurl_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderimageurl() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
  clear_has_defaultsearchproviderimageurl();
  ::enterprise_management::StringPolicyProto* temp = defaultsearchproviderimageurl_;
  defaultsearchproviderimageurl_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchproviderimageurl(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurl) {
  delete defaultsearchproviderimageurl_;
  defaultsearchproviderimageurl_ = defaultsearchproviderimageurl;
  if (defaultsearchproviderimageurl) {
    set_has_defaultsearchproviderimageurl();
  } else {
    clear_has_defaultsearchproviderimageurl();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderNewTabURL = 239;
bool CloudPolicySettings::has_defaultsearchprovidernewtaburl() const {
  return (_has_bits_[3] & 0x20000000u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchprovidernewtaburl() {
  _has_bits_[3] |= 0x20000000u;
}
void CloudPolicySettings::clear_has_defaultsearchprovidernewtaburl() {
  _has_bits_[3] &= ~0x20000000u;
}
void CloudPolicySettings::clear_defaultsearchprovidernewtaburl() {
  if (defaultsearchprovidernewtaburl_ != NULL) defaultsearchprovidernewtaburl_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_defaultsearchprovidernewtaburl();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidernewtaburl() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
  return defaultsearchprovidernewtaburl_ != NULL ? *defaultsearchprovidernewtaburl_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidernewtaburl() {
  set_has_defaultsearchprovidernewtaburl();
  if (defaultsearchprovidernewtaburl_ == NULL) {
    defaultsearchprovidernewtaburl_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
  return defaultsearchprovidernewtaburl_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidernewtaburl() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
  clear_has_defaultsearchprovidernewtaburl();
  ::enterprise_management::StringPolicyProto* temp = defaultsearchprovidernewtaburl_;
  defaultsearchprovidernewtaburl_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchprovidernewtaburl(::enterprise_management::StringPolicyProto* defaultsearchprovidernewtaburl) {
  delete defaultsearchprovidernewtaburl_;
  defaultsearchprovidernewtaburl_ = defaultsearchprovidernewtaburl;
  if (defaultsearchprovidernewtaburl) {
    set_has_defaultsearchprovidernewtaburl();
  } else {
    clear_has_defaultsearchprovidernewtaburl();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURLPostParams = 232;
bool CloudPolicySettings::has_defaultsearchprovidersearchurlpostparams() const {
  return (_has_bits_[3] & 0x01000000u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchprovidersearchurlpostparams() {
  _has_bits_[3] |= 0x01000000u;
}
void CloudPolicySettings::clear_has_defaultsearchprovidersearchurlpostparams() {
  _has_bits_[3] &= ~0x01000000u;
}
void CloudPolicySettings::clear_defaultsearchprovidersearchurlpostparams() {
  if (defaultsearchprovidersearchurlpostparams_ != NULL) defaultsearchprovidersearchurlpostparams_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_defaultsearchprovidersearchurlpostparams();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersearchurlpostparams() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
  return defaultsearchprovidersearchurlpostparams_ != NULL ? *defaultsearchprovidersearchurlpostparams_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersearchurlpostparams() {
  set_has_defaultsearchprovidersearchurlpostparams();
  if (defaultsearchprovidersearchurlpostparams_ == NULL) {
    defaultsearchprovidersearchurlpostparams_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
  return defaultsearchprovidersearchurlpostparams_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersearchurlpostparams() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
  clear_has_defaultsearchprovidersearchurlpostparams();
  ::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersearchurlpostparams_;
  defaultsearchprovidersearchurlpostparams_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchprovidersearchurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurlpostparams) {
  delete defaultsearchprovidersearchurlpostparams_;
  defaultsearchprovidersearchurlpostparams_ = defaultsearchprovidersearchurlpostparams;
  if (defaultsearchprovidersearchurlpostparams) {
    set_has_defaultsearchprovidersearchurlpostparams();
  } else {
    clear_has_defaultsearchprovidersearchurlpostparams();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURLPostParams = 233;
bool CloudPolicySettings::has_defaultsearchprovidersuggesturlpostparams() const {
  return (_has_bits_[3] & 0x02000000u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchprovidersuggesturlpostparams() {
  _has_bits_[3] |= 0x02000000u;
}
void CloudPolicySettings::clear_has_defaultsearchprovidersuggesturlpostparams() {
  _has_bits_[3] &= ~0x02000000u;
}
void CloudPolicySettings::clear_defaultsearchprovidersuggesturlpostparams() {
  if (defaultsearchprovidersuggesturlpostparams_ != NULL) defaultsearchprovidersuggesturlpostparams_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_defaultsearchprovidersuggesturlpostparams();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersuggesturlpostparams() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
  return defaultsearchprovidersuggesturlpostparams_ != NULL ? *defaultsearchprovidersuggesturlpostparams_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersuggesturlpostparams() {
  set_has_defaultsearchprovidersuggesturlpostparams();
  if (defaultsearchprovidersuggesturlpostparams_ == NULL) {
    defaultsearchprovidersuggesturlpostparams_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
  return defaultsearchprovidersuggesturlpostparams_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersuggesturlpostparams() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
  clear_has_defaultsearchprovidersuggesturlpostparams();
  ::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersuggesturlpostparams_;
  defaultsearchprovidersuggesturlpostparams_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchprovidersuggesturlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturlpostparams) {
  delete defaultsearchprovidersuggesturlpostparams_;
  defaultsearchprovidersuggesturlpostparams_ = defaultsearchprovidersuggesturlpostparams;
  if (defaultsearchprovidersuggesturlpostparams) {
    set_has_defaultsearchprovidersuggesturlpostparams();
  } else {
    clear_has_defaultsearchprovidersuggesturlpostparams();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURLPostParams = 235;
bool CloudPolicySettings::has_defaultsearchproviderimageurlpostparams() const {
  return (_has_bits_[3] & 0x04000000u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchproviderimageurlpostparams() {
  _has_bits_[3] |= 0x04000000u;
}
void CloudPolicySettings::clear_has_defaultsearchproviderimageurlpostparams() {
  _has_bits_[3] &= ~0x04000000u;
}
void CloudPolicySettings::clear_defaultsearchproviderimageurlpostparams() {
  if (defaultsearchproviderimageurlpostparams_ != NULL) defaultsearchproviderimageurlpostparams_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_defaultsearchproviderimageurlpostparams();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderimageurlpostparams() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
  return defaultsearchproviderimageurlpostparams_ != NULL ? *defaultsearchproviderimageurlpostparams_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderimageurlpostparams() {
  set_has_defaultsearchproviderimageurlpostparams();
  if (defaultsearchproviderimageurlpostparams_ == NULL) {
    defaultsearchproviderimageurlpostparams_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
  return defaultsearchproviderimageurlpostparams_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderimageurlpostparams() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
  clear_has_defaultsearchproviderimageurlpostparams();
  ::enterprise_management::StringPolicyProto* temp = defaultsearchproviderimageurlpostparams_;
  defaultsearchproviderimageurlpostparams_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchproviderimageurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurlpostparams) {
  delete defaultsearchproviderimageurlpostparams_;
  defaultsearchproviderimageurlpostparams_ = defaultsearchproviderimageurlpostparams;
  if (defaultsearchproviderimageurlpostparams) {
    set_has_defaultsearchproviderimageurlpostparams();
  } else {
    clear_has_defaultsearchproviderimageurlpostparams();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
}

// optional .enterprise_management.IntegerPolicyProto DefaultCookiesSetting = 50;
bool CloudPolicySettings::has_defaultcookiessetting() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
void CloudPolicySettings::set_has_defaultcookiessetting() {
  _has_bits_[1] |= 0x00000400u;
}
void CloudPolicySettings::clear_has_defaultcookiessetting() {
  _has_bits_[1] &= ~0x00000400u;
}
void CloudPolicySettings::clear_defaultcookiessetting() {
  if (defaultcookiessetting_ != NULL) defaultcookiessetting_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_defaultcookiessetting();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultcookiessetting() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
  return defaultcookiessetting_ != NULL ? *defaultcookiessetting_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultcookiessetting() {
  set_has_defaultcookiessetting();
  if (defaultcookiessetting_ == NULL) {
    defaultcookiessetting_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
  return defaultcookiessetting_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultcookiessetting() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
  clear_has_defaultcookiessetting();
  ::enterprise_management::IntegerPolicyProto* temp = defaultcookiessetting_;
  defaultcookiessetting_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultcookiessetting(::enterprise_management::IntegerPolicyProto* defaultcookiessetting) {
  delete defaultcookiessetting_;
  defaultcookiessetting_ = defaultcookiessetting;
  if (defaultcookiessetting) {
    set_has_defaultcookiessetting();
  } else {
    clear_has_defaultcookiessetting();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultImagesSetting = 51;
bool CloudPolicySettings::has_defaultimagessetting() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
void CloudPolicySettings::set_has_defaultimagessetting() {
  _has_bits_[1] |= 0x00000800u;
}
void CloudPolicySettings::clear_has_defaultimagessetting() {
  _has_bits_[1] &= ~0x00000800u;
}
void CloudPolicySettings::clear_defaultimagessetting() {
  if (defaultimagessetting_ != NULL) defaultimagessetting_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_defaultimagessetting();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultimagessetting() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultImagesSetting)
  return defaultimagessetting_ != NULL ? *defaultimagessetting_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultimagessetting() {
  set_has_defaultimagessetting();
  if (defaultimagessetting_ == NULL) {
    defaultimagessetting_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultImagesSetting)
  return defaultimagessetting_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultimagessetting() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultImagesSetting)
  clear_has_defaultimagessetting();
  ::enterprise_management::IntegerPolicyProto* temp = defaultimagessetting_;
  defaultimagessetting_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultimagessetting(::enterprise_management::IntegerPolicyProto* defaultimagessetting) {
  delete defaultimagessetting_;
  defaultimagessetting_ = defaultimagessetting;
  if (defaultimagessetting) {
    set_has_defaultimagessetting();
  } else {
    clear_has_defaultimagessetting();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultImagesSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptSetting = 52;
bool CloudPolicySettings::has_defaultjavascriptsetting() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
void CloudPolicySettings::set_has_defaultjavascriptsetting() {
  _has_bits_[1] |= 0x00001000u;
}
void CloudPolicySettings::clear_has_defaultjavascriptsetting() {
  _has_bits_[1] &= ~0x00001000u;
}
void CloudPolicySettings::clear_defaultjavascriptsetting() {
  if (defaultjavascriptsetting_ != NULL) defaultjavascriptsetting_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_defaultjavascriptsetting();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultjavascriptsetting() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
  return defaultjavascriptsetting_ != NULL ? *defaultjavascriptsetting_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultjavascriptsetting() {
  set_has_defaultjavascriptsetting();
  if (defaultjavascriptsetting_ == NULL) {
    defaultjavascriptsetting_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
  return defaultjavascriptsetting_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultjavascriptsetting() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
  clear_has_defaultjavascriptsetting();
  ::enterprise_management::IntegerPolicyProto* temp = defaultjavascriptsetting_;
  defaultjavascriptsetting_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultjavascriptsetting(::enterprise_management::IntegerPolicyProto* defaultjavascriptsetting) {
  delete defaultjavascriptsetting_;
  defaultjavascriptsetting_ = defaultjavascriptsetting;
  if (defaultjavascriptsetting) {
    set_has_defaultjavascriptsetting();
  } else {
    clear_has_defaultjavascriptsetting();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultPluginsSetting = 53;
bool CloudPolicySettings::has_defaultpluginssetting() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
void CloudPolicySettings::set_has_defaultpluginssetting() {
  _has_bits_[1] |= 0x00002000u;
}
void CloudPolicySettings::clear_has_defaultpluginssetting() {
  _has_bits_[1] &= ~0x00002000u;
}
void CloudPolicySettings::clear_defaultpluginssetting() {
  if (defaultpluginssetting_ != NULL) defaultpluginssetting_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_defaultpluginssetting();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultpluginssetting() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultPluginsSetting)
  return defaultpluginssetting_ != NULL ? *defaultpluginssetting_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultpluginssetting() {
  set_has_defaultpluginssetting();
  if (defaultpluginssetting_ == NULL) {
    defaultpluginssetting_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultPluginsSetting)
  return defaultpluginssetting_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultpluginssetting() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultPluginsSetting)
  clear_has_defaultpluginssetting();
  ::enterprise_management::IntegerPolicyProto* temp = defaultpluginssetting_;
  defaultpluginssetting_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultpluginssetting(::enterprise_management::IntegerPolicyProto* defaultpluginssetting) {
  delete defaultpluginssetting_;
  defaultpluginssetting_ = defaultpluginssetting;
  if (defaultpluginssetting) {
    set_has_defaultpluginssetting();
  } else {
    clear_has_defaultpluginssetting();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultPluginsSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultPopupsSetting = 54;
bool CloudPolicySettings::has_defaultpopupssetting() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
void CloudPolicySettings::set_has_defaultpopupssetting() {
  _has_bits_[1] |= 0x00004000u;
}
void CloudPolicySettings::clear_has_defaultpopupssetting() {
  _has_bits_[1] &= ~0x00004000u;
}
void CloudPolicySettings::clear_defaultpopupssetting() {
  if (defaultpopupssetting_ != NULL) defaultpopupssetting_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_defaultpopupssetting();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultpopupssetting() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
  return defaultpopupssetting_ != NULL ? *defaultpopupssetting_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultpopupssetting() {
  set_has_defaultpopupssetting();
  if (defaultpopupssetting_ == NULL) {
    defaultpopupssetting_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
  return defaultpopupssetting_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultpopupssetting() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
  clear_has_defaultpopupssetting();
  ::enterprise_management::IntegerPolicyProto* temp = defaultpopupssetting_;
  defaultpopupssetting_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultpopupssetting(::enterprise_management::IntegerPolicyProto* defaultpopupssetting) {
  delete defaultpopupssetting_;
  defaultpopupssetting_ = defaultpopupssetting;
  if (defaultpopupssetting) {
    set_has_defaultpopupssetting();
  } else {
    clear_has_defaultpopupssetting();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultNotificationsSetting = 55;
bool CloudPolicySettings::has_defaultnotificationssetting() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
void CloudPolicySettings::set_has_defaultnotificationssetting() {
  _has_bits_[1] |= 0x00008000u;
}
void CloudPolicySettings::clear_has_defaultnotificationssetting() {
  _has_bits_[1] &= ~0x00008000u;
}
void CloudPolicySettings::clear_defaultnotificationssetting() {
  if (defaultnotificationssetting_ != NULL) defaultnotificationssetting_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_defaultnotificationssetting();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultnotificationssetting() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultNotificationsSetting)
  return defaultnotificationssetting_ != NULL ? *defaultnotificationssetting_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultnotificationssetting() {
  set_has_defaultnotificationssetting();
  if (defaultnotificationssetting_ == NULL) {
    defaultnotificationssetting_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultNotificationsSetting)
  return defaultnotificationssetting_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultnotificationssetting() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultNotificationsSetting)
  clear_has_defaultnotificationssetting();
  ::enterprise_management::IntegerPolicyProto* temp = defaultnotificationssetting_;
  defaultnotificationssetting_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultnotificationssetting(::enterprise_management::IntegerPolicyProto* defaultnotificationssetting) {
  delete defaultnotificationssetting_;
  defaultnotificationssetting_ = defaultnotificationssetting;
  if (defaultnotificationssetting) {
    set_has_defaultnotificationssetting();
  } else {
    clear_has_defaultnotificationssetting();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultNotificationsSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultGeolocationSetting = 56;
bool CloudPolicySettings::has_defaultgeolocationsetting() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
void CloudPolicySettings::set_has_defaultgeolocationsetting() {
  _has_bits_[1] |= 0x00010000u;
}
void CloudPolicySettings::clear_has_defaultgeolocationsetting() {
  _has_bits_[1] &= ~0x00010000u;
}
void CloudPolicySettings::clear_defaultgeolocationsetting() {
  if (defaultgeolocationsetting_ != NULL) defaultgeolocationsetting_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_defaultgeolocationsetting();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultgeolocationsetting() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
  return defaultgeolocationsetting_ != NULL ? *defaultgeolocationsetting_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultgeolocationsetting() {
  set_has_defaultgeolocationsetting();
  if (defaultgeolocationsetting_ == NULL) {
    defaultgeolocationsetting_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
  return defaultgeolocationsetting_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultgeolocationsetting() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
  clear_has_defaultgeolocationsetting();
  ::enterprise_management::IntegerPolicyProto* temp = defaultgeolocationsetting_;
  defaultgeolocationsetting_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultgeolocationsetting(::enterprise_management::IntegerPolicyProto* defaultgeolocationsetting) {
  delete defaultgeolocationsetting_;
  defaultgeolocationsetting_ = defaultgeolocationsetting;
  if (defaultgeolocationsetting) {
    set_has_defaultgeolocationsetting();
  } else {
    clear_has_defaultgeolocationsetting();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultMediaStreamSetting = 151;
bool CloudPolicySettings::has_defaultmediastreamsetting() const {
  return (_has_bits_[2] & 0x40000000u) != 0;
}
void CloudPolicySettings::set_has_defaultmediastreamsetting() {
  _has_bits_[2] |= 0x40000000u;
}
void CloudPolicySettings::clear_has_defaultmediastreamsetting() {
  _has_bits_[2] &= ~0x40000000u;
}
void CloudPolicySettings::clear_defaultmediastreamsetting() {
  if (defaultmediastreamsetting_ != NULL) defaultmediastreamsetting_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_defaultmediastreamsetting();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultmediastreamsetting() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultMediaStreamSetting)
  return defaultmediastreamsetting_ != NULL ? *defaultmediastreamsetting_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultmediastreamsetting() {
  set_has_defaultmediastreamsetting();
  if (defaultmediastreamsetting_ == NULL) {
    defaultmediastreamsetting_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultMediaStreamSetting)
  return defaultmediastreamsetting_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultmediastreamsetting() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultMediaStreamSetting)
  clear_has_defaultmediastreamsetting();
  ::enterprise_management::IntegerPolicyProto* temp = defaultmediastreamsetting_;
  defaultmediastreamsetting_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultmediastreamsetting(::enterprise_management::IntegerPolicyProto* defaultmediastreamsetting) {
  delete defaultmediastreamsetting_;
  defaultmediastreamsetting_ = defaultmediastreamsetting;
  if (defaultmediastreamsetting) {
    set_has_defaultmediastreamsetting();
  } else {
    clear_has_defaultmediastreamsetting();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultMediaStreamSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultWebBluetoothGuardSetting = 322;
bool CloudPolicySettings::has_defaultwebbluetoothguardsetting() const {
  return (_has_bits_[4] & 0x20000000u) != 0;
}
void CloudPolicySettings::set_has_defaultwebbluetoothguardsetting() {
  _has_bits_[4] |= 0x20000000u;
}
void CloudPolicySettings::clear_has_defaultwebbluetoothguardsetting() {
  _has_bits_[4] &= ~0x20000000u;
}
void CloudPolicySettings::clear_defaultwebbluetoothguardsetting() {
  if (defaultwebbluetoothguardsetting_ != NULL) defaultwebbluetoothguardsetting_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_defaultwebbluetoothguardsetting();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultwebbluetoothguardsetting() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
  return defaultwebbluetoothguardsetting_ != NULL ? *defaultwebbluetoothguardsetting_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultwebbluetoothguardsetting() {
  set_has_defaultwebbluetoothguardsetting();
  if (defaultwebbluetoothguardsetting_ == NULL) {
    defaultwebbluetoothguardsetting_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
  return defaultwebbluetoothguardsetting_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultwebbluetoothguardsetting() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
  clear_has_defaultwebbluetoothguardsetting();
  ::enterprise_management::IntegerPolicyProto* temp = defaultwebbluetoothguardsetting_;
  defaultwebbluetoothguardsetting_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultwebbluetoothguardsetting(::enterprise_management::IntegerPolicyProto* defaultwebbluetoothguardsetting) {
  delete defaultwebbluetoothguardsetting_;
  defaultwebbluetoothguardsetting_ = defaultwebbluetoothguardsetting;
  if (defaultwebbluetoothguardsetting) {
    set_has_defaultwebbluetoothguardsetting();
  } else {
    clear_has_defaultwebbluetoothguardsetting();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultWebUsbGuardSetting = 436;
bool CloudPolicySettings::has_defaultwebusbguardsetting() const {
  return (_has_bits_[6] & 0x00001000u) != 0;
}
void CloudPolicySettings::set_has_defaultwebusbguardsetting() {
  _has_bits_[6] |= 0x00001000u;
}
void CloudPolicySettings::clear_has_defaultwebusbguardsetting() {
  _has_bits_[6] &= ~0x00001000u;
}
void CloudPolicySettings::clear_defaultwebusbguardsetting() {
  if (defaultwebusbguardsetting_ != NULL) defaultwebusbguardsetting_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_defaultwebusbguardsetting();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultwebusbguardsetting() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
  return defaultwebusbguardsetting_ != NULL ? *defaultwebusbguardsetting_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultwebusbguardsetting() {
  set_has_defaultwebusbguardsetting();
  if (defaultwebusbguardsetting_ == NULL) {
    defaultwebusbguardsetting_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
  return defaultwebusbguardsetting_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultwebusbguardsetting() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
  clear_has_defaultwebusbguardsetting();
  ::enterprise_management::IntegerPolicyProto* temp = defaultwebusbguardsetting_;
  defaultwebusbguardsetting_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultwebusbguardsetting(::enterprise_management::IntegerPolicyProto* defaultwebusbguardsetting) {
  delete defaultwebusbguardsetting_;
  defaultwebusbguardsetting_ = defaultwebusbguardsetting;
  if (defaultwebusbguardsetting) {
    set_has_defaultwebusbguardsetting();
  } else {
    clear_has_defaultwebusbguardsetting();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
}

// optional .enterprise_management.StringListPolicyProto WebUsbAskForUrls = 441;
bool CloudPolicySettings::has_webusbaskforurls() const {
  return (_has_bits_[6] & 0x00010000u) != 0;
}
void CloudPolicySettings::set_has_webusbaskforurls() {
  _has_bits_[6] |= 0x00010000u;
}
void CloudPolicySettings::clear_has_webusbaskforurls() {
  _has_bits_[6] &= ~0x00010000u;
}
void CloudPolicySettings::clear_webusbaskforurls() {
  if (webusbaskforurls_ != NULL) webusbaskforurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_webusbaskforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::webusbaskforurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
  return webusbaskforurls_ != NULL ? *webusbaskforurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_webusbaskforurls() {
  set_has_webusbaskforurls();
  if (webusbaskforurls_ == NULL) {
    webusbaskforurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
  return webusbaskforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_webusbaskforurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
  clear_has_webusbaskforurls();
  ::enterprise_management::StringListPolicyProto* temp = webusbaskforurls_;
  webusbaskforurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_webusbaskforurls(::enterprise_management::StringListPolicyProto* webusbaskforurls) {
  delete webusbaskforurls_;
  webusbaskforurls_ = webusbaskforurls;
  if (webusbaskforurls) {
    set_has_webusbaskforurls();
  } else {
    clear_has_webusbaskforurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
}

// optional .enterprise_management.StringListPolicyProto WebUsbBlockedForUrls = 442;
bool CloudPolicySettings::has_webusbblockedforurls() const {
  return (_has_bits_[6] & 0x00020000u) != 0;
}
void CloudPolicySettings::set_has_webusbblockedforurls() {
  _has_bits_[6] |= 0x00020000u;
}
void CloudPolicySettings::clear_has_webusbblockedforurls() {
  _has_bits_[6] &= ~0x00020000u;
}
void CloudPolicySettings::clear_webusbblockedforurls() {
  if (webusbblockedforurls_ != NULL) webusbblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_webusbblockedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::webusbblockedforurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
  return webusbblockedforurls_ != NULL ? *webusbblockedforurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_webusbblockedforurls() {
  set_has_webusbblockedforurls();
  if (webusbblockedforurls_ == NULL) {
    webusbblockedforurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
  return webusbblockedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_webusbblockedforurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
  clear_has_webusbblockedforurls();
  ::enterprise_management::StringListPolicyProto* temp = webusbblockedforurls_;
  webusbblockedforurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_webusbblockedforurls(::enterprise_management::StringListPolicyProto* webusbblockedforurls) {
  delete webusbblockedforurls_;
  webusbblockedforurls_ = webusbblockedforurls;
  if (webusbblockedforurls) {
    set_has_webusbblockedforurls();
  } else {
    clear_has_webusbblockedforurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto AutoSelectCertificateForUrls = 104;
bool CloudPolicySettings::has_autoselectcertificateforurls() const {
  return (_has_bits_[2] & 0x00010000u) != 0;
}
void CloudPolicySettings::set_has_autoselectcertificateforurls() {
  _has_bits_[2] |= 0x00010000u;
}
void CloudPolicySettings::clear_has_autoselectcertificateforurls() {
  _has_bits_[2] &= ~0x00010000u;
}
void CloudPolicySettings::clear_autoselectcertificateforurls() {
  if (autoselectcertificateforurls_ != NULL) autoselectcertificateforurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_autoselectcertificateforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::autoselectcertificateforurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutoSelectCertificateForUrls)
  return autoselectcertificateforurls_ != NULL ? *autoselectcertificateforurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_autoselectcertificateforurls() {
  set_has_autoselectcertificateforurls();
  if (autoselectcertificateforurls_ == NULL) {
    autoselectcertificateforurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutoSelectCertificateForUrls)
  return autoselectcertificateforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_autoselectcertificateforurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutoSelectCertificateForUrls)
  clear_has_autoselectcertificateforurls();
  ::enterprise_management::StringListPolicyProto* temp = autoselectcertificateforurls_;
  autoselectcertificateforurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_autoselectcertificateforurls(::enterprise_management::StringListPolicyProto* autoselectcertificateforurls) {
  delete autoselectcertificateforurls_;
  autoselectcertificateforurls_ = autoselectcertificateforurls;
  if (autoselectcertificateforurls) {
    set_has_autoselectcertificateforurls();
  } else {
    clear_has_autoselectcertificateforurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutoSelectCertificateForUrls)
}

// optional .enterprise_management.StringListPolicyProto CookiesAllowedForUrls = 79;
bool CloudPolicySettings::has_cookiesallowedforurls() const {
  return (_has_bits_[1] & 0x20000000u) != 0;
}
void CloudPolicySettings::set_has_cookiesallowedforurls() {
  _has_bits_[1] |= 0x20000000u;
}
void CloudPolicySettings::clear_has_cookiesallowedforurls() {
  _has_bits_[1] &= ~0x20000000u;
}
void CloudPolicySettings::clear_cookiesallowedforurls() {
  if (cookiesallowedforurls_ != NULL) cookiesallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_cookiesallowedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::cookiesallowedforurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
  return cookiesallowedforurls_ != NULL ? *cookiesallowedforurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_cookiesallowedforurls() {
  set_has_cookiesallowedforurls();
  if (cookiesallowedforurls_ == NULL) {
    cookiesallowedforurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
  return cookiesallowedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_cookiesallowedforurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
  clear_has_cookiesallowedforurls();
  ::enterprise_management::StringListPolicyProto* temp = cookiesallowedforurls_;
  cookiesallowedforurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_cookiesallowedforurls(::enterprise_management::StringListPolicyProto* cookiesallowedforurls) {
  delete cookiesallowedforurls_;
  cookiesallowedforurls_ = cookiesallowedforurls;
  if (cookiesallowedforurls) {
    set_has_cookiesallowedforurls();
  } else {
    clear_has_cookiesallowedforurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto CookiesBlockedForUrls = 69;
bool CloudPolicySettings::has_cookiesblockedforurls() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
void CloudPolicySettings::set_has_cookiesblockedforurls() {
  _has_bits_[1] |= 0x00080000u;
}
void CloudPolicySettings::clear_has_cookiesblockedforurls() {
  _has_bits_[1] &= ~0x00080000u;
}
void CloudPolicySettings::clear_cookiesblockedforurls() {
  if (cookiesblockedforurls_ != NULL) cookiesblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_cookiesblockedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::cookiesblockedforurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
  return cookiesblockedforurls_ != NULL ? *cookiesblockedforurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_cookiesblockedforurls() {
  set_has_cookiesblockedforurls();
  if (cookiesblockedforurls_ == NULL) {
    cookiesblockedforurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
  return cookiesblockedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_cookiesblockedforurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
  clear_has_cookiesblockedforurls();
  ::enterprise_management::StringListPolicyProto* temp = cookiesblockedforurls_;
  cookiesblockedforurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_cookiesblockedforurls(::enterprise_management::StringListPolicyProto* cookiesblockedforurls) {
  delete cookiesblockedforurls_;
  cookiesblockedforurls_ = cookiesblockedforurls;
  if (cookiesblockedforurls) {
    set_has_cookiesblockedforurls();
  } else {
    clear_has_cookiesblockedforurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto CookiesSessionOnlyForUrls = 70;
bool CloudPolicySettings::has_cookiessessiononlyforurls() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
void CloudPolicySettings::set_has_cookiessessiononlyforurls() {
  _has_bits_[1] |= 0x00100000u;
}
void CloudPolicySettings::clear_has_cookiessessiononlyforurls() {
  _has_bits_[1] &= ~0x00100000u;
}
void CloudPolicySettings::clear_cookiessessiononlyforurls() {
  if (cookiessessiononlyforurls_ != NULL) cookiessessiononlyforurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_cookiessessiononlyforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::cookiessessiononlyforurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
  return cookiessessiononlyforurls_ != NULL ? *cookiessessiononlyforurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_cookiessessiononlyforurls() {
  set_has_cookiessessiononlyforurls();
  if (cookiessessiononlyforurls_ == NULL) {
    cookiessessiononlyforurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
  return cookiessessiononlyforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_cookiessessiononlyforurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
  clear_has_cookiessessiononlyforurls();
  ::enterprise_management::StringListPolicyProto* temp = cookiessessiononlyforurls_;
  cookiessessiononlyforurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_cookiessessiononlyforurls(::enterprise_management::StringListPolicyProto* cookiessessiononlyforurls) {
  delete cookiessessiononlyforurls_;
  cookiessessiononlyforurls_ = cookiessessiononlyforurls;
  if (cookiessessiononlyforurls) {
    set_has_cookiessessiononlyforurls();
  } else {
    clear_has_cookiessessiononlyforurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
}

// optional .enterprise_management.StringListPolicyProto ImagesAllowedForUrls = 71;
bool CloudPolicySettings::has_imagesallowedforurls() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
void CloudPolicySettings::set_has_imagesallowedforurls() {
  _has_bits_[1] |= 0x00200000u;
}
void CloudPolicySettings::clear_has_imagesallowedforurls() {
  _has_bits_[1] &= ~0x00200000u;
}
void CloudPolicySettings::clear_imagesallowedforurls() {
  if (imagesallowedforurls_ != NULL) imagesallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_imagesallowedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::imagesallowedforurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImagesAllowedForUrls)
  return imagesallowedforurls_ != NULL ? *imagesallowedforurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_imagesallowedforurls() {
  set_has_imagesallowedforurls();
  if (imagesallowedforurls_ == NULL) {
    imagesallowedforurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImagesAllowedForUrls)
  return imagesallowedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_imagesallowedforurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImagesAllowedForUrls)
  clear_has_imagesallowedforurls();
  ::enterprise_management::StringListPolicyProto* temp = imagesallowedforurls_;
  imagesallowedforurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_imagesallowedforurls(::enterprise_management::StringListPolicyProto* imagesallowedforurls) {
  delete imagesallowedforurls_;
  imagesallowedforurls_ = imagesallowedforurls;
  if (imagesallowedforurls) {
    set_has_imagesallowedforurls();
  } else {
    clear_has_imagesallowedforurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImagesAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto ImagesBlockedForUrls = 72;
bool CloudPolicySettings::has_imagesblockedforurls() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
void CloudPolicySettings::set_has_imagesblockedforurls() {
  _has_bits_[1] |= 0x00400000u;
}
void CloudPolicySettings::clear_has_imagesblockedforurls() {
  _has_bits_[1] &= ~0x00400000u;
}
void CloudPolicySettings::clear_imagesblockedforurls() {
  if (imagesblockedforurls_ != NULL) imagesblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_imagesblockedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::imagesblockedforurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImagesBlockedForUrls)
  return imagesblockedforurls_ != NULL ? *imagesblockedforurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_imagesblockedforurls() {
  set_has_imagesblockedforurls();
  if (imagesblockedforurls_ == NULL) {
    imagesblockedforurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImagesBlockedForUrls)
  return imagesblockedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_imagesblockedforurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImagesBlockedForUrls)
  clear_has_imagesblockedforurls();
  ::enterprise_management::StringListPolicyProto* temp = imagesblockedforurls_;
  imagesblockedforurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_imagesblockedforurls(::enterprise_management::StringListPolicyProto* imagesblockedforurls) {
  delete imagesblockedforurls_;
  imagesblockedforurls_ = imagesblockedforurls;
  if (imagesblockedforurls) {
    set_has_imagesblockedforurls();
  } else {
    clear_has_imagesblockedforurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImagesBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto JavaScriptAllowedForUrls = 73;
bool CloudPolicySettings::has_javascriptallowedforurls() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
void CloudPolicySettings::set_has_javascriptallowedforurls() {
  _has_bits_[1] |= 0x00800000u;
}
void CloudPolicySettings::clear_has_javascriptallowedforurls() {
  _has_bits_[1] &= ~0x00800000u;
}
void CloudPolicySettings::clear_javascriptallowedforurls() {
  if (javascriptallowedforurls_ != NULL) javascriptallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_javascriptallowedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::javascriptallowedforurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
  return javascriptallowedforurls_ != NULL ? *javascriptallowedforurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_javascriptallowedforurls() {
  set_has_javascriptallowedforurls();
  if (javascriptallowedforurls_ == NULL) {
    javascriptallowedforurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
  return javascriptallowedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_javascriptallowedforurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
  clear_has_javascriptallowedforurls();
  ::enterprise_management::StringListPolicyProto* temp = javascriptallowedforurls_;
  javascriptallowedforurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_javascriptallowedforurls(::enterprise_management::StringListPolicyProto* javascriptallowedforurls) {
  delete javascriptallowedforurls_;
  javascriptallowedforurls_ = javascriptallowedforurls;
  if (javascriptallowedforurls) {
    set_has_javascriptallowedforurls();
  } else {
    clear_has_javascriptallowedforurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto JavaScriptBlockedForUrls = 74;
bool CloudPolicySettings::has_javascriptblockedforurls() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
void CloudPolicySettings::set_has_javascriptblockedforurls() {
  _has_bits_[1] |= 0x01000000u;
}
void CloudPolicySettings::clear_has_javascriptblockedforurls() {
  _has_bits_[1] &= ~0x01000000u;
}
void CloudPolicySettings::clear_javascriptblockedforurls() {
  if (javascriptblockedforurls_ != NULL) javascriptblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_javascriptblockedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::javascriptblockedforurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
  return javascriptblockedforurls_ != NULL ? *javascriptblockedforurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_javascriptblockedforurls() {
  set_has_javascriptblockedforurls();
  if (javascriptblockedforurls_ == NULL) {
    javascriptblockedforurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
  return javascriptblockedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_javascriptblockedforurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
  clear_has_javascriptblockedforurls();
  ::enterprise_management::StringListPolicyProto* temp = javascriptblockedforurls_;
  javascriptblockedforurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_javascriptblockedforurls(::enterprise_management::StringListPolicyProto* javascriptblockedforurls) {
  delete javascriptblockedforurls_;
  javascriptblockedforurls_ = javascriptblockedforurls;
  if (javascriptblockedforurls) {
    set_has_javascriptblockedforurls();
  } else {
    clear_has_javascriptblockedforurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto PluginsAllowedForUrls = 75;
bool CloudPolicySettings::has_pluginsallowedforurls() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
void CloudPolicySettings::set_has_pluginsallowedforurls() {
  _has_bits_[1] |= 0x02000000u;
}
void CloudPolicySettings::clear_has_pluginsallowedforurls() {
  _has_bits_[1] &= ~0x02000000u;
}
void CloudPolicySettings::clear_pluginsallowedforurls() {
  if (pluginsallowedforurls_ != NULL) pluginsallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_pluginsallowedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::pluginsallowedforurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PluginsAllowedForUrls)
  return pluginsallowedforurls_ != NULL ? *pluginsallowedforurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_pluginsallowedforurls() {
  set_has_pluginsallowedforurls();
  if (pluginsallowedforurls_ == NULL) {
    pluginsallowedforurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PluginsAllowedForUrls)
  return pluginsallowedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_pluginsallowedforurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PluginsAllowedForUrls)
  clear_has_pluginsallowedforurls();
  ::enterprise_management::StringListPolicyProto* temp = pluginsallowedforurls_;
  pluginsallowedforurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_pluginsallowedforurls(::enterprise_management::StringListPolicyProto* pluginsallowedforurls) {
  delete pluginsallowedforurls_;
  pluginsallowedforurls_ = pluginsallowedforurls;
  if (pluginsallowedforurls) {
    set_has_pluginsallowedforurls();
  } else {
    clear_has_pluginsallowedforurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PluginsAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto PluginsBlockedForUrls = 76;
bool CloudPolicySettings::has_pluginsblockedforurls() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
void CloudPolicySettings::set_has_pluginsblockedforurls() {
  _has_bits_[1] |= 0x04000000u;
}
void CloudPolicySettings::clear_has_pluginsblockedforurls() {
  _has_bits_[1] &= ~0x04000000u;
}
void CloudPolicySettings::clear_pluginsblockedforurls() {
  if (pluginsblockedforurls_ != NULL) pluginsblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_pluginsblockedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::pluginsblockedforurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PluginsBlockedForUrls)
  return pluginsblockedforurls_ != NULL ? *pluginsblockedforurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_pluginsblockedforurls() {
  set_has_pluginsblockedforurls();
  if (pluginsblockedforurls_ == NULL) {
    pluginsblockedforurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PluginsBlockedForUrls)
  return pluginsblockedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_pluginsblockedforurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PluginsBlockedForUrls)
  clear_has_pluginsblockedforurls();
  ::enterprise_management::StringListPolicyProto* temp = pluginsblockedforurls_;
  pluginsblockedforurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_pluginsblockedforurls(::enterprise_management::StringListPolicyProto* pluginsblockedforurls) {
  delete pluginsblockedforurls_;
  pluginsblockedforurls_ = pluginsblockedforurls;
  if (pluginsblockedforurls) {
    set_has_pluginsblockedforurls();
  } else {
    clear_has_pluginsblockedforurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PluginsBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto PopupsAllowedForUrls = 77;
bool CloudPolicySettings::has_popupsallowedforurls() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
void CloudPolicySettings::set_has_popupsallowedforurls() {
  _has_bits_[1] |= 0x08000000u;
}
void CloudPolicySettings::clear_has_popupsallowedforurls() {
  _has_bits_[1] &= ~0x08000000u;
}
void CloudPolicySettings::clear_popupsallowedforurls() {
  if (popupsallowedforurls_ != NULL) popupsallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_popupsallowedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::popupsallowedforurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
  return popupsallowedforurls_ != NULL ? *popupsallowedforurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_popupsallowedforurls() {
  set_has_popupsallowedforurls();
  if (popupsallowedforurls_ == NULL) {
    popupsallowedforurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
  return popupsallowedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_popupsallowedforurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
  clear_has_popupsallowedforurls();
  ::enterprise_management::StringListPolicyProto* temp = popupsallowedforurls_;
  popupsallowedforurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_popupsallowedforurls(::enterprise_management::StringListPolicyProto* popupsallowedforurls) {
  delete popupsallowedforurls_;
  popupsallowedforurls_ = popupsallowedforurls;
  if (popupsallowedforurls) {
    set_has_popupsallowedforurls();
  } else {
    clear_has_popupsallowedforurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
}

// optional .enterprise_management.StringPolicyProto RegisteredProtocolHandlers = 270;
bool CloudPolicySettings::has_registeredprotocolhandlers() const {
  return (_has_bits_[4] & 0x00000100u) != 0;
}
void CloudPolicySettings::set_has_registeredprotocolhandlers() {
  _has_bits_[4] |= 0x00000100u;
}
void CloudPolicySettings::clear_has_registeredprotocolhandlers() {
  _has_bits_[4] &= ~0x00000100u;
}
void CloudPolicySettings::clear_registeredprotocolhandlers() {
  if (registeredprotocolhandlers_ != NULL) registeredprotocolhandlers_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_registeredprotocolhandlers();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::registeredprotocolhandlers() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RegisteredProtocolHandlers)
  return registeredprotocolhandlers_ != NULL ? *registeredprotocolhandlers_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_registeredprotocolhandlers() {
  set_has_registeredprotocolhandlers();
  if (registeredprotocolhandlers_ == NULL) {
    registeredprotocolhandlers_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RegisteredProtocolHandlers)
  return registeredprotocolhandlers_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_registeredprotocolhandlers() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RegisteredProtocolHandlers)
  clear_has_registeredprotocolhandlers();
  ::enterprise_management::StringPolicyProto* temp = registeredprotocolhandlers_;
  registeredprotocolhandlers_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_registeredprotocolhandlers(::enterprise_management::StringPolicyProto* registeredprotocolhandlers) {
  delete registeredprotocolhandlers_;
  registeredprotocolhandlers_ = registeredprotocolhandlers;
  if (registeredprotocolhandlers) {
    set_has_registeredprotocolhandlers();
  } else {
    clear_has_registeredprotocolhandlers();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RegisteredProtocolHandlers)
}

// optional .enterprise_management.StringListPolicyProto PopupsBlockedForUrls = 78;
bool CloudPolicySettings::has_popupsblockedforurls() const {
  return (_has_bits_[1] & 0x10000000u) != 0;
}
void CloudPolicySettings::set_has_popupsblockedforurls() {
  _has_bits_[1] |= 0x10000000u;
}
void CloudPolicySettings::clear_has_popupsblockedforurls() {
  _has_bits_[1] &= ~0x10000000u;
}
void CloudPolicySettings::clear_popupsblockedforurls() {
  if (popupsblockedforurls_ != NULL) popupsblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_popupsblockedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::popupsblockedforurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
  return popupsblockedforurls_ != NULL ? *popupsblockedforurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_popupsblockedforurls() {
  set_has_popupsblockedforurls();
  if (popupsblockedforurls_ == NULL) {
    popupsblockedforurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
  return popupsblockedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_popupsblockedforurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
  clear_has_popupsblockedforurls();
  ::enterprise_management::StringListPolicyProto* temp = popupsblockedforurls_;
  popupsblockedforurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_popupsblockedforurls(::enterprise_management::StringListPolicyProto* popupsblockedforurls) {
  delete popupsblockedforurls_;
  popupsblockedforurls_ = popupsblockedforurls;
  if (popupsblockedforurls) {
    set_has_popupsblockedforurls();
  } else {
    clear_has_popupsblockedforurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto NotificationsAllowedForUrls = 107;
bool CloudPolicySettings::has_notificationsallowedforurls() const {
  return (_has_bits_[2] & 0x00080000u) != 0;
}
void CloudPolicySettings::set_has_notificationsallowedforurls() {
  _has_bits_[2] |= 0x00080000u;
}
void CloudPolicySettings::clear_has_notificationsallowedforurls() {
  _has_bits_[2] &= ~0x00080000u;
}
void CloudPolicySettings::clear_notificationsallowedforurls() {
  if (notificationsallowedforurls_ != NULL) notificationsallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_notificationsallowedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::notificationsallowedforurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NotificationsAllowedForUrls)
  return notificationsallowedforurls_ != NULL ? *notificationsallowedforurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_notificationsallowedforurls() {
  set_has_notificationsallowedforurls();
  if (notificationsallowedforurls_ == NULL) {
    notificationsallowedforurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NotificationsAllowedForUrls)
  return notificationsallowedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_notificationsallowedforurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NotificationsAllowedForUrls)
  clear_has_notificationsallowedforurls();
  ::enterprise_management::StringListPolicyProto* temp = notificationsallowedforurls_;
  notificationsallowedforurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_notificationsallowedforurls(::enterprise_management::StringListPolicyProto* notificationsallowedforurls) {
  delete notificationsallowedforurls_;
  notificationsallowedforurls_ = notificationsallowedforurls;
  if (notificationsallowedforurls) {
    set_has_notificationsallowedforurls();
  } else {
    clear_has_notificationsallowedforurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NotificationsAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto NotificationsBlockedForUrls = 108;
bool CloudPolicySettings::has_notificationsblockedforurls() const {
  return (_has_bits_[2] & 0x00100000u) != 0;
}
void CloudPolicySettings::set_has_notificationsblockedforurls() {
  _has_bits_[2] |= 0x00100000u;
}
void CloudPolicySettings::clear_has_notificationsblockedforurls() {
  _has_bits_[2] &= ~0x00100000u;
}
void CloudPolicySettings::clear_notificationsblockedforurls() {
  if (notificationsblockedforurls_ != NULL) notificationsblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_notificationsblockedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::notificationsblockedforurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NotificationsBlockedForUrls)
  return notificationsblockedforurls_ != NULL ? *notificationsblockedforurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_notificationsblockedforurls() {
  set_has_notificationsblockedforurls();
  if (notificationsblockedforurls_ == NULL) {
    notificationsblockedforurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NotificationsBlockedForUrls)
  return notificationsblockedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_notificationsblockedforurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NotificationsBlockedForUrls)
  clear_has_notificationsblockedforurls();
  ::enterprise_management::StringListPolicyProto* temp = notificationsblockedforurls_;
  notificationsblockedforurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_notificationsblockedforurls(::enterprise_management::StringListPolicyProto* notificationsblockedforurls) {
  delete notificationsblockedforurls_;
  notificationsblockedforurls_ = notificationsblockedforurls;
  if (notificationsblockedforurls) {
    set_has_notificationsblockedforurls();
  } else {
    clear_has_notificationsblockedforurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NotificationsBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto NativeMessagingBlacklist = 253;
bool CloudPolicySettings::has_nativemessagingblacklist() const {
  return (_has_bits_[4] & 0x00000001u) != 0;
}
void CloudPolicySettings::set_has_nativemessagingblacklist() {
  _has_bits_[4] |= 0x00000001u;
}
void CloudPolicySettings::clear_has_nativemessagingblacklist() {
  _has_bits_[4] &= ~0x00000001u;
}
void CloudPolicySettings::clear_nativemessagingblacklist() {
  if (nativemessagingblacklist_ != NULL) nativemessagingblacklist_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_nativemessagingblacklist();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::nativemessagingblacklist() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NativeMessagingBlacklist)
  return nativemessagingblacklist_ != NULL ? *nativemessagingblacklist_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_nativemessagingblacklist() {
  set_has_nativemessagingblacklist();
  if (nativemessagingblacklist_ == NULL) {
    nativemessagingblacklist_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NativeMessagingBlacklist)
  return nativemessagingblacklist_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_nativemessagingblacklist() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NativeMessagingBlacklist)
  clear_has_nativemessagingblacklist();
  ::enterprise_management::StringListPolicyProto* temp = nativemessagingblacklist_;
  nativemessagingblacklist_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_nativemessagingblacklist(::enterprise_management::StringListPolicyProto* nativemessagingblacklist) {
  delete nativemessagingblacklist_;
  nativemessagingblacklist_ = nativemessagingblacklist;
  if (nativemessagingblacklist) {
    set_has_nativemessagingblacklist();
  } else {
    clear_has_nativemessagingblacklist();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NativeMessagingBlacklist)
}

// optional .enterprise_management.StringListPolicyProto NativeMessagingWhitelist = 254;
bool CloudPolicySettings::has_nativemessagingwhitelist() const {
  return (_has_bits_[4] & 0x00000002u) != 0;
}
void CloudPolicySettings::set_has_nativemessagingwhitelist() {
  _has_bits_[4] |= 0x00000002u;
}
void CloudPolicySettings::clear_has_nativemessagingwhitelist() {
  _has_bits_[4] &= ~0x00000002u;
}
void CloudPolicySettings::clear_nativemessagingwhitelist() {
  if (nativemessagingwhitelist_ != NULL) nativemessagingwhitelist_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_nativemessagingwhitelist();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::nativemessagingwhitelist() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NativeMessagingWhitelist)
  return nativemessagingwhitelist_ != NULL ? *nativemessagingwhitelist_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_nativemessagingwhitelist() {
  set_has_nativemessagingwhitelist();
  if (nativemessagingwhitelist_ == NULL) {
    nativemessagingwhitelist_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NativeMessagingWhitelist)
  return nativemessagingwhitelist_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_nativemessagingwhitelist() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NativeMessagingWhitelist)
  clear_has_nativemessagingwhitelist();
  ::enterprise_management::StringListPolicyProto* temp = nativemessagingwhitelist_;
  nativemessagingwhitelist_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_nativemessagingwhitelist(::enterprise_management::StringListPolicyProto* nativemessagingwhitelist) {
  delete nativemessagingwhitelist_;
  nativemessagingwhitelist_ = nativemessagingwhitelist;
  if (nativemessagingwhitelist) {
    set_has_nativemessagingwhitelist();
  } else {
    clear_has_nativemessagingwhitelist();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NativeMessagingWhitelist)
}

// optional .enterprise_management.BooleanPolicyProto NativeMessagingUserLevelHosts = 255;
bool CloudPolicySettings::has_nativemessaginguserlevelhosts() const {
  return (_has_bits_[4] & 0x00000004u) != 0;
}
void CloudPolicySettings::set_has_nativemessaginguserlevelhosts() {
  _has_bits_[4] |= 0x00000004u;
}
void CloudPolicySettings::clear_has_nativemessaginguserlevelhosts() {
  _has_bits_[4] &= ~0x00000004u;
}
void CloudPolicySettings::clear_nativemessaginguserlevelhosts() {
  if (nativemessaginguserlevelhosts_ != NULL) nativemessaginguserlevelhosts_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_nativemessaginguserlevelhosts();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::nativemessaginguserlevelhosts() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NativeMessagingUserLevelHosts)
  return nativemessaginguserlevelhosts_ != NULL ? *nativemessaginguserlevelhosts_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_nativemessaginguserlevelhosts() {
  set_has_nativemessaginguserlevelhosts();
  if (nativemessaginguserlevelhosts_ == NULL) {
    nativemessaginguserlevelhosts_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NativeMessagingUserLevelHosts)
  return nativemessaginguserlevelhosts_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_nativemessaginguserlevelhosts() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NativeMessagingUserLevelHosts)
  clear_has_nativemessaginguserlevelhosts();
  ::enterprise_management::BooleanPolicyProto* temp = nativemessaginguserlevelhosts_;
  nativemessaginguserlevelhosts_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_nativemessaginguserlevelhosts(::enterprise_management::BooleanPolicyProto* nativemessaginguserlevelhosts) {
  delete nativemessaginguserlevelhosts_;
  nativemessaginguserlevelhosts_ = nativemessaginguserlevelhosts;
  if (nativemessaginguserlevelhosts) {
    set_has_nativemessaginguserlevelhosts();
  } else {
    clear_has_nativemessaginguserlevelhosts();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NativeMessagingUserLevelHosts)
}

// optional .enterprise_management.BooleanPolicyProto Disable3DAPIs = 57;
bool CloudPolicySettings::has_disable3dapis() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
void CloudPolicySettings::set_has_disable3dapis() {
  _has_bits_[1] |= 0x00020000u;
}
void CloudPolicySettings::clear_has_disable3dapis() {
  _has_bits_[1] &= ~0x00020000u;
}
void CloudPolicySettings::clear_disable3dapis() {
  if (disable3dapis_ != NULL) disable3dapis_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_disable3dapis();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disable3dapis() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.Disable3DAPIs)
  return disable3dapis_ != NULL ? *disable3dapis_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disable3dapis() {
  set_has_disable3dapis();
  if (disable3dapis_ == NULL) {
    disable3dapis_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.Disable3DAPIs)
  return disable3dapis_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disable3dapis() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.Disable3DAPIs)
  clear_has_disable3dapis();
  ::enterprise_management::BooleanPolicyProto* temp = disable3dapis_;
  disable3dapis_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_disable3dapis(::enterprise_management::BooleanPolicyProto* disable3dapis) {
  delete disable3dapis_;
  disable3dapis_ = disable3dapis;
  if (disable3dapis) {
    set_has_disable3dapis();
  } else {
    clear_has_disable3dapis();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.Disable3DAPIs)
}

// optional .enterprise_management.IntegerPolicyProto MaxInvalidationFetchDelay = 230;
bool CloudPolicySettings::has_maxinvalidationfetchdelay() const {
  return (_has_bits_[3] & 0x00400000u) != 0;
}
void CloudPolicySettings::set_has_maxinvalidationfetchdelay() {
  _has_bits_[3] |= 0x00400000u;
}
void CloudPolicySettings::clear_has_maxinvalidationfetchdelay() {
  _has_bits_[3] &= ~0x00400000u;
}
void CloudPolicySettings::clear_maxinvalidationfetchdelay() {
  if (maxinvalidationfetchdelay_ != NULL) maxinvalidationfetchdelay_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_maxinvalidationfetchdelay();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::maxinvalidationfetchdelay() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.MaxInvalidationFetchDelay)
  return maxinvalidationfetchdelay_ != NULL ? *maxinvalidationfetchdelay_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_maxinvalidationfetchdelay() {
  set_has_maxinvalidationfetchdelay();
  if (maxinvalidationfetchdelay_ == NULL) {
    maxinvalidationfetchdelay_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.MaxInvalidationFetchDelay)
  return maxinvalidationfetchdelay_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_maxinvalidationfetchdelay() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.MaxInvalidationFetchDelay)
  clear_has_maxinvalidationfetchdelay();
  ::enterprise_management::IntegerPolicyProto* temp = maxinvalidationfetchdelay_;
  maxinvalidationfetchdelay_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_maxinvalidationfetchdelay(::enterprise_management::IntegerPolicyProto* maxinvalidationfetchdelay) {
  delete maxinvalidationfetchdelay_;
  maxinvalidationfetchdelay_ = maxinvalidationfetchdelay;
  if (maxinvalidationfetchdelay) {
    set_has_maxinvalidationfetchdelay();
  } else {
    clear_has_maxinvalidationfetchdelay();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.MaxInvalidationFetchDelay)
}

// optional .enterprise_management.BooleanPolicyProto TranslateEnabled = 82;
bool CloudPolicySettings::has_translateenabled() const {
  return (_has_bits_[2] & 0x00000001u) != 0;
}
void CloudPolicySettings::set_has_translateenabled() {
  _has_bits_[2] |= 0x00000001u;
}
void CloudPolicySettings::clear_has_translateenabled() {
  _has_bits_[2] &= ~0x00000001u;
}
void CloudPolicySettings::clear_translateenabled() {
  if (translateenabled_ != NULL) translateenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_translateenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::translateenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.TranslateEnabled)
  return translateenabled_ != NULL ? *translateenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_translateenabled() {
  set_has_translateenabled();
  if (translateenabled_ == NULL) {
    translateenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.TranslateEnabled)
  return translateenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_translateenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.TranslateEnabled)
  clear_has_translateenabled();
  ::enterprise_management::BooleanPolicyProto* temp = translateenabled_;
  translateenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_translateenabled(::enterprise_management::BooleanPolicyProto* translateenabled) {
  delete translateenabled_;
  translateenabled_ = translateenabled;
  if (translateenabled) {
    set_has_translateenabled();
  } else {
    clear_has_translateenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.TranslateEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AllowOutdatedPlugins = 83;
bool CloudPolicySettings::has_allowoutdatedplugins() const {
  return (_has_bits_[2] & 0x00000002u) != 0;
}
void CloudPolicySettings::set_has_allowoutdatedplugins() {
  _has_bits_[2] |= 0x00000002u;
}
void CloudPolicySettings::clear_has_allowoutdatedplugins() {
  _has_bits_[2] &= ~0x00000002u;
}
void CloudPolicySettings::clear_allowoutdatedplugins() {
  if (allowoutdatedplugins_ != NULL) allowoutdatedplugins_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_allowoutdatedplugins();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allowoutdatedplugins() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowOutdatedPlugins)
  return allowoutdatedplugins_ != NULL ? *allowoutdatedplugins_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allowoutdatedplugins() {
  set_has_allowoutdatedplugins();
  if (allowoutdatedplugins_ == NULL) {
    allowoutdatedplugins_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowOutdatedPlugins)
  return allowoutdatedplugins_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allowoutdatedplugins() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowOutdatedPlugins)
  clear_has_allowoutdatedplugins();
  ::enterprise_management::BooleanPolicyProto* temp = allowoutdatedplugins_;
  allowoutdatedplugins_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_allowoutdatedplugins(::enterprise_management::BooleanPolicyProto* allowoutdatedplugins) {
  delete allowoutdatedplugins_;
  allowoutdatedplugins_ = allowoutdatedplugins;
  if (allowoutdatedplugins) {
    set_has_allowoutdatedplugins();
  } else {
    clear_has_allowoutdatedplugins();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowOutdatedPlugins)
}

// optional .enterprise_management.BooleanPolicyProto RunAllFlashInAllowMode = 393;
bool CloudPolicySettings::has_runallflashinallowmode() const {
  return (_has_bits_[5] & 0x00080000u) != 0;
}
void CloudPolicySettings::set_has_runallflashinallowmode() {
  _has_bits_[5] |= 0x00080000u;
}
void CloudPolicySettings::clear_has_runallflashinallowmode() {
  _has_bits_[5] &= ~0x00080000u;
}
void CloudPolicySettings::clear_runallflashinallowmode() {
  if (runallflashinallowmode_ != NULL) runallflashinallowmode_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_runallflashinallowmode();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::runallflashinallowmode() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RunAllFlashInAllowMode)
  return runallflashinallowmode_ != NULL ? *runallflashinallowmode_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_runallflashinallowmode() {
  set_has_runallflashinallowmode();
  if (runallflashinallowmode_ == NULL) {
    runallflashinallowmode_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RunAllFlashInAllowMode)
  return runallflashinallowmode_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_runallflashinallowmode() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RunAllFlashInAllowMode)
  clear_has_runallflashinallowmode();
  ::enterprise_management::BooleanPolicyProto* temp = runallflashinallowmode_;
  runallflashinallowmode_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_runallflashinallowmode(::enterprise_management::BooleanPolicyProto* runallflashinallowmode) {
  delete runallflashinallowmode_;
  runallflashinallowmode_ = runallflashinallowmode;
  if (runallflashinallowmode) {
    set_has_runallflashinallowmode();
  } else {
    clear_has_runallflashinallowmode();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RunAllFlashInAllowMode)
}

// optional .enterprise_management.BooleanPolicyProto BookmarkBarEnabled = 84;
bool CloudPolicySettings::has_bookmarkbarenabled() const {
  return (_has_bits_[2] & 0x00000004u) != 0;
}
void CloudPolicySettings::set_has_bookmarkbarenabled() {
  _has_bits_[2] |= 0x00000004u;
}
void CloudPolicySettings::clear_has_bookmarkbarenabled() {
  _has_bits_[2] &= ~0x00000004u;
}
void CloudPolicySettings::clear_bookmarkbarenabled() {
  if (bookmarkbarenabled_ != NULL) bookmarkbarenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_bookmarkbarenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::bookmarkbarenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BookmarkBarEnabled)
  return bookmarkbarenabled_ != NULL ? *bookmarkbarenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_bookmarkbarenabled() {
  set_has_bookmarkbarenabled();
  if (bookmarkbarenabled_ == NULL) {
    bookmarkbarenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BookmarkBarEnabled)
  return bookmarkbarenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_bookmarkbarenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BookmarkBarEnabled)
  clear_has_bookmarkbarenabled();
  ::enterprise_management::BooleanPolicyProto* temp = bookmarkbarenabled_;
  bookmarkbarenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_bookmarkbarenabled(::enterprise_management::BooleanPolicyProto* bookmarkbarenabled) {
  delete bookmarkbarenabled_;
  bookmarkbarenabled_ = bookmarkbarenabled;
  if (bookmarkbarenabled) {
    set_has_bookmarkbarenabled();
  } else {
    clear_has_bookmarkbarenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BookmarkBarEnabled)
}

// optional .enterprise_management.BooleanPolicyProto EditBookmarksEnabled = 85;
bool CloudPolicySettings::has_editbookmarksenabled() const {
  return (_has_bits_[2] & 0x00000008u) != 0;
}
void CloudPolicySettings::set_has_editbookmarksenabled() {
  _has_bits_[2] |= 0x00000008u;
}
void CloudPolicySettings::clear_has_editbookmarksenabled() {
  _has_bits_[2] &= ~0x00000008u;
}
void CloudPolicySettings::clear_editbookmarksenabled() {
  if (editbookmarksenabled_ != NULL) editbookmarksenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_editbookmarksenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::editbookmarksenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
  return editbookmarksenabled_ != NULL ? *editbookmarksenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_editbookmarksenabled() {
  set_has_editbookmarksenabled();
  if (editbookmarksenabled_ == NULL) {
    editbookmarksenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
  return editbookmarksenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_editbookmarksenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
  clear_has_editbookmarksenabled();
  ::enterprise_management::BooleanPolicyProto* temp = editbookmarksenabled_;
  editbookmarksenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_editbookmarksenabled(::enterprise_management::BooleanPolicyProto* editbookmarksenabled) {
  delete editbookmarksenabled_;
  editbookmarksenabled_ = editbookmarksenabled;
  if (editbookmarksenabled) {
    set_has_editbookmarksenabled();
  } else {
    clear_has_editbookmarksenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
}

// optional .enterprise_management.BooleanPolicyProto ShowAppsShortcutInBookmarkBar = 269;
bool CloudPolicySettings::has_showappsshortcutinbookmarkbar() const {
  return (_has_bits_[4] & 0x00000080u) != 0;
}
void CloudPolicySettings::set_has_showappsshortcutinbookmarkbar() {
  _has_bits_[4] |= 0x00000080u;
}
void CloudPolicySettings::clear_has_showappsshortcutinbookmarkbar() {
  _has_bits_[4] &= ~0x00000080u;
}
void CloudPolicySettings::clear_showappsshortcutinbookmarkbar() {
  if (showappsshortcutinbookmarkbar_ != NULL) showappsshortcutinbookmarkbar_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_showappsshortcutinbookmarkbar();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::showappsshortcutinbookmarkbar() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ShowAppsShortcutInBookmarkBar)
  return showappsshortcutinbookmarkbar_ != NULL ? *showappsshortcutinbookmarkbar_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_showappsshortcutinbookmarkbar() {
  set_has_showappsshortcutinbookmarkbar();
  if (showappsshortcutinbookmarkbar_ == NULL) {
    showappsshortcutinbookmarkbar_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ShowAppsShortcutInBookmarkBar)
  return showappsshortcutinbookmarkbar_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_showappsshortcutinbookmarkbar() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ShowAppsShortcutInBookmarkBar)
  clear_has_showappsshortcutinbookmarkbar();
  ::enterprise_management::BooleanPolicyProto* temp = showappsshortcutinbookmarkbar_;
  showappsshortcutinbookmarkbar_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_showappsshortcutinbookmarkbar(::enterprise_management::BooleanPolicyProto* showappsshortcutinbookmarkbar) {
  delete showappsshortcutinbookmarkbar_;
  showappsshortcutinbookmarkbar_ = showappsshortcutinbookmarkbar;
  if (showappsshortcutinbookmarkbar) {
    set_has_showappsshortcutinbookmarkbar();
  } else {
    clear_has_showappsshortcutinbookmarkbar();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ShowAppsShortcutInBookmarkBar)
}

// optional .enterprise_management.BooleanPolicyProto AllowFileSelectionDialogs = 86;
bool CloudPolicySettings::has_allowfileselectiondialogs() const {
  return (_has_bits_[2] & 0x00000010u) != 0;
}
void CloudPolicySettings::set_has_allowfileselectiondialogs() {
  _has_bits_[2] |= 0x00000010u;
}
void CloudPolicySettings::clear_has_allowfileselectiondialogs() {
  _has_bits_[2] &= ~0x00000010u;
}
void CloudPolicySettings::clear_allowfileselectiondialogs() {
  if (allowfileselectiondialogs_ != NULL) allowfileselectiondialogs_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_allowfileselectiondialogs();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allowfileselectiondialogs() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowFileSelectionDialogs)
  return allowfileselectiondialogs_ != NULL ? *allowfileselectiondialogs_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allowfileselectiondialogs() {
  set_has_allowfileselectiondialogs();
  if (allowfileselectiondialogs_ == NULL) {
    allowfileselectiondialogs_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowFileSelectionDialogs)
  return allowfileselectiondialogs_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allowfileselectiondialogs() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowFileSelectionDialogs)
  clear_has_allowfileselectiondialogs();
  ::enterprise_management::BooleanPolicyProto* temp = allowfileselectiondialogs_;
  allowfileselectiondialogs_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_allowfileselectiondialogs(::enterprise_management::BooleanPolicyProto* allowfileselectiondialogs) {
  delete allowfileselectiondialogs_;
  allowfileselectiondialogs_ = allowfileselectiondialogs;
  if (allowfileselectiondialogs) {
    set_has_allowfileselectiondialogs();
  } else {
    clear_has_allowfileselectiondialogs();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowFileSelectionDialogs)
}

// optional .enterprise_management.StringListPolicyProto SecurityKeyPermitAttestation = 404;
bool CloudPolicySettings::has_securitykeypermitattestation() const {
  return (_has_bits_[5] & 0x08000000u) != 0;
}
void CloudPolicySettings::set_has_securitykeypermitattestation() {
  _has_bits_[5] |= 0x08000000u;
}
void CloudPolicySettings::clear_has_securitykeypermitattestation() {
  _has_bits_[5] &= ~0x08000000u;
}
void CloudPolicySettings::clear_securitykeypermitattestation() {
  if (securitykeypermitattestation_ != NULL) securitykeypermitattestation_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_securitykeypermitattestation();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::securitykeypermitattestation() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SecurityKeyPermitAttestation)
  return securitykeypermitattestation_ != NULL ? *securitykeypermitattestation_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_securitykeypermitattestation() {
  set_has_securitykeypermitattestation();
  if (securitykeypermitattestation_ == NULL) {
    securitykeypermitattestation_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SecurityKeyPermitAttestation)
  return securitykeypermitattestation_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_securitykeypermitattestation() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SecurityKeyPermitAttestation)
  clear_has_securitykeypermitattestation();
  ::enterprise_management::StringListPolicyProto* temp = securitykeypermitattestation_;
  securitykeypermitattestation_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_securitykeypermitattestation(::enterprise_management::StringListPolicyProto* securitykeypermitattestation) {
  delete securitykeypermitattestation_;
  securitykeypermitattestation_ = securitykeypermitattestation;
  if (securitykeypermitattestation) {
    set_has_securitykeypermitattestation();
  } else {
    clear_has_securitykeypermitattestation();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SecurityKeyPermitAttestation)
}

// optional .enterprise_management.BooleanPolicyProto ImportBookmarks = 99;
bool CloudPolicySettings::has_importbookmarks() const {
  return (_has_bits_[2] & 0x00000800u) != 0;
}
void CloudPolicySettings::set_has_importbookmarks() {
  _has_bits_[2] |= 0x00000800u;
}
void CloudPolicySettings::clear_has_importbookmarks() {
  _has_bits_[2] &= ~0x00000800u;
}
void CloudPolicySettings::clear_importbookmarks() {
  if (importbookmarks_ != NULL) importbookmarks_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_importbookmarks();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::importbookmarks() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImportBookmarks)
  return importbookmarks_ != NULL ? *importbookmarks_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_importbookmarks() {
  set_has_importbookmarks();
  if (importbookmarks_ == NULL) {
    importbookmarks_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImportBookmarks)
  return importbookmarks_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_importbookmarks() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImportBookmarks)
  clear_has_importbookmarks();
  ::enterprise_management::BooleanPolicyProto* temp = importbookmarks_;
  importbookmarks_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_importbookmarks(::enterprise_management::BooleanPolicyProto* importbookmarks) {
  delete importbookmarks_;
  importbookmarks_ = importbookmarks;
  if (importbookmarks) {
    set_has_importbookmarks();
  } else {
    clear_has_importbookmarks();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImportBookmarks)
}

// optional .enterprise_management.BooleanPolicyProto ImportHistory = 100;
bool CloudPolicySettings::has_importhistory() const {
  return (_has_bits_[2] & 0x00001000u) != 0;
}
void CloudPolicySettings::set_has_importhistory() {
  _has_bits_[2] |= 0x00001000u;
}
void CloudPolicySettings::clear_has_importhistory() {
  _has_bits_[2] &= ~0x00001000u;
}
void CloudPolicySettings::clear_importhistory() {
  if (importhistory_ != NULL) importhistory_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_importhistory();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::importhistory() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImportHistory)
  return importhistory_ != NULL ? *importhistory_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_importhistory() {
  set_has_importhistory();
  if (importhistory_ == NULL) {
    importhistory_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImportHistory)
  return importhistory_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_importhistory() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImportHistory)
  clear_has_importhistory();
  ::enterprise_management::BooleanPolicyProto* temp = importhistory_;
  importhistory_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_importhistory(::enterprise_management::BooleanPolicyProto* importhistory) {
  delete importhistory_;
  importhistory_ = importhistory;
  if (importhistory) {
    set_has_importhistory();
  } else {
    clear_has_importhistory();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImportHistory)
}

// optional .enterprise_management.BooleanPolicyProto ImportHomepage = 101;
bool CloudPolicySettings::has_importhomepage() const {
  return (_has_bits_[2] & 0x00002000u) != 0;
}
void CloudPolicySettings::set_has_importhomepage() {
  _has_bits_[2] |= 0x00002000u;
}
void CloudPolicySettings::clear_has_importhomepage() {
  _has_bits_[2] &= ~0x00002000u;
}
void CloudPolicySettings::clear_importhomepage() {
  if (importhomepage_ != NULL) importhomepage_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_importhomepage();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::importhomepage() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImportHomepage)
  return importhomepage_ != NULL ? *importhomepage_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_importhomepage() {
  set_has_importhomepage();
  if (importhomepage_ == NULL) {
    importhomepage_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImportHomepage)
  return importhomepage_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_importhomepage() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImportHomepage)
  clear_has_importhomepage();
  ::enterprise_management::BooleanPolicyProto* temp = importhomepage_;
  importhomepage_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_importhomepage(::enterprise_management::BooleanPolicyProto* importhomepage) {
  delete importhomepage_;
  importhomepage_ = importhomepage;
  if (importhomepage) {
    set_has_importhomepage();
  } else {
    clear_has_importhomepage();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImportHomepage)
}

// optional .enterprise_management.BooleanPolicyProto ImportSearchEngine = 102;
bool CloudPolicySettings::has_importsearchengine() const {
  return (_has_bits_[2] & 0x00004000u) != 0;
}
void CloudPolicySettings::set_has_importsearchengine() {
  _has_bits_[2] |= 0x00004000u;
}
void CloudPolicySettings::clear_has_importsearchengine() {
  _has_bits_[2] &= ~0x00004000u;
}
void CloudPolicySettings::clear_importsearchengine() {
  if (importsearchengine_ != NULL) importsearchengine_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_importsearchengine();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::importsearchengine() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImportSearchEngine)
  return importsearchengine_ != NULL ? *importsearchengine_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_importsearchengine() {
  set_has_importsearchengine();
  if (importsearchengine_ == NULL) {
    importsearchengine_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImportSearchEngine)
  return importsearchengine_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_importsearchengine() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImportSearchEngine)
  clear_has_importsearchengine();
  ::enterprise_management::BooleanPolicyProto* temp = importsearchengine_;
  importsearchengine_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_importsearchengine(::enterprise_management::BooleanPolicyProto* importsearchengine) {
  delete importsearchengine_;
  importsearchengine_ = importsearchengine;
  if (importsearchengine) {
    set_has_importsearchengine();
  } else {
    clear_has_importsearchengine();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImportSearchEngine)
}

// optional .enterprise_management.BooleanPolicyProto ImportSavedPasswords = 103;
bool CloudPolicySettings::has_importsavedpasswords() const {
  return (_has_bits_[2] & 0x00008000u) != 0;
}
void CloudPolicySettings::set_has_importsavedpasswords() {
  _has_bits_[2] |= 0x00008000u;
}
void CloudPolicySettings::clear_has_importsavedpasswords() {
  _has_bits_[2] &= ~0x00008000u;
}
void CloudPolicySettings::clear_importsavedpasswords() {
  if (importsavedpasswords_ != NULL) importsavedpasswords_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_importsavedpasswords();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::importsavedpasswords() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImportSavedPasswords)
  return importsavedpasswords_ != NULL ? *importsavedpasswords_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_importsavedpasswords() {
  set_has_importsavedpasswords();
  if (importsavedpasswords_ == NULL) {
    importsavedpasswords_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImportSavedPasswords)
  return importsavedpasswords_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_importsavedpasswords() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImportSavedPasswords)
  clear_has_importsavedpasswords();
  ::enterprise_management::BooleanPolicyProto* temp = importsavedpasswords_;
  importsavedpasswords_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_importsavedpasswords(::enterprise_management::BooleanPolicyProto* importsavedpasswords) {
  delete importsavedpasswords_;
  importsavedpasswords_ = importsavedpasswords;
  if (importsavedpasswords) {
    set_has_importsavedpasswords();
  } else {
    clear_has_importsavedpasswords();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImportSavedPasswords)
}

// optional .enterprise_management.BooleanPolicyProto ImportAutofillFormData = 279;
bool CloudPolicySettings::has_importautofillformdata() const {
  return (_has_bits_[4] & 0x00002000u) != 0;
}
void CloudPolicySettings::set_has_importautofillformdata() {
  _has_bits_[4] |= 0x00002000u;
}
void CloudPolicySettings::clear_has_importautofillformdata() {
  _has_bits_[4] &= ~0x00002000u;
}
void CloudPolicySettings::clear_importautofillformdata() {
  if (importautofillformdata_ != NULL) importautofillformdata_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_importautofillformdata();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::importautofillformdata() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImportAutofillFormData)
  return importautofillformdata_ != NULL ? *importautofillformdata_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_importautofillformdata() {
  set_has_importautofillformdata();
  if (importautofillformdata_ == NULL) {
    importautofillformdata_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImportAutofillFormData)
  return importautofillformdata_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_importautofillformdata() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImportAutofillFormData)
  clear_has_importautofillformdata();
  ::enterprise_management::BooleanPolicyProto* temp = importautofillformdata_;
  importautofillformdata_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_importautofillformdata(::enterprise_management::BooleanPolicyProto* importautofillformdata) {
  delete importautofillformdata_;
  importautofillformdata_ = importautofillformdata;
  if (importautofillformdata) {
    set_has_importautofillformdata();
  } else {
    clear_has_importautofillformdata();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImportAutofillFormData)
}

// optional .enterprise_management.IntegerPolicyProto MaxConnectionsPerProxy = 94;
bool CloudPolicySettings::has_maxconnectionsperproxy() const {
  return (_has_bits_[2] & 0x00000100u) != 0;
}
void CloudPolicySettings::set_has_maxconnectionsperproxy() {
  _has_bits_[2] |= 0x00000100u;
}
void CloudPolicySettings::clear_has_maxconnectionsperproxy() {
  _has_bits_[2] &= ~0x00000100u;
}
void CloudPolicySettings::clear_maxconnectionsperproxy() {
  if (maxconnectionsperproxy_ != NULL) maxconnectionsperproxy_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_maxconnectionsperproxy();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::maxconnectionsperproxy() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.MaxConnectionsPerProxy)
  return maxconnectionsperproxy_ != NULL ? *maxconnectionsperproxy_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_maxconnectionsperproxy() {
  set_has_maxconnectionsperproxy();
  if (maxconnectionsperproxy_ == NULL) {
    maxconnectionsperproxy_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.MaxConnectionsPerProxy)
  return maxconnectionsperproxy_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_maxconnectionsperproxy() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.MaxConnectionsPerProxy)
  clear_has_maxconnectionsperproxy();
  ::enterprise_management::IntegerPolicyProto* temp = maxconnectionsperproxy_;
  maxconnectionsperproxy_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_maxconnectionsperproxy(::enterprise_management::IntegerPolicyProto* maxconnectionsperproxy) {
  delete maxconnectionsperproxy_;
  maxconnectionsperproxy_ = maxconnectionsperproxy;
  if (maxconnectionsperproxy) {
    set_has_maxconnectionsperproxy();
  } else {
    clear_has_maxconnectionsperproxy();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.MaxConnectionsPerProxy)
}

// optional .enterprise_management.StringListPolicyProto URLBlacklist = 105;
bool CloudPolicySettings::has_urlblacklist() const {
  return (_has_bits_[2] & 0x00020000u) != 0;
}
void CloudPolicySettings::set_has_urlblacklist() {
  _has_bits_[2] |= 0x00020000u;
}
void CloudPolicySettings::clear_has_urlblacklist() {
  _has_bits_[2] &= ~0x00020000u;
}
void CloudPolicySettings::clear_urlblacklist() {
  if (urlblacklist_ != NULL) urlblacklist_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_urlblacklist();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::urlblacklist() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.URLBlacklist)
  return urlblacklist_ != NULL ? *urlblacklist_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_urlblacklist() {
  set_has_urlblacklist();
  if (urlblacklist_ == NULL) {
    urlblacklist_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.URLBlacklist)
  return urlblacklist_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_urlblacklist() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.URLBlacklist)
  clear_has_urlblacklist();
  ::enterprise_management::StringListPolicyProto* temp = urlblacklist_;
  urlblacklist_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_urlblacklist(::enterprise_management::StringListPolicyProto* urlblacklist) {
  delete urlblacklist_;
  urlblacklist_ = urlblacklist;
  if (urlblacklist) {
    set_has_urlblacklist();
  } else {
    clear_has_urlblacklist();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.URLBlacklist)
}

// optional .enterprise_management.StringListPolicyProto URLWhitelist = 106;
bool CloudPolicySettings::has_urlwhitelist() const {
  return (_has_bits_[2] & 0x00040000u) != 0;
}
void CloudPolicySettings::set_has_urlwhitelist() {
  _has_bits_[2] |= 0x00040000u;
}
void CloudPolicySettings::clear_has_urlwhitelist() {
  _has_bits_[2] &= ~0x00040000u;
}
void CloudPolicySettings::clear_urlwhitelist() {
  if (urlwhitelist_ != NULL) urlwhitelist_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_urlwhitelist();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::urlwhitelist() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.URLWhitelist)
  return urlwhitelist_ != NULL ? *urlwhitelist_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_urlwhitelist() {
  set_has_urlwhitelist();
  if (urlwhitelist_ == NULL) {
    urlwhitelist_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.URLWhitelist)
  return urlwhitelist_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_urlwhitelist() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.URLWhitelist)
  clear_has_urlwhitelist();
  ::enterprise_management::StringListPolicyProto* temp = urlwhitelist_;
  urlwhitelist_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_urlwhitelist(::enterprise_management::StringListPolicyProto* urlwhitelist) {
  delete urlwhitelist_;
  urlwhitelist_ = urlwhitelist;
  if (urlwhitelist) {
    set_has_urlwhitelist();
  } else {
    clear_has_urlwhitelist();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.URLWhitelist)
}

// optional .enterprise_management.BooleanPolicyProto CloudPrintSubmitEnabled = 111;
bool CloudPolicySettings::has_cloudprintsubmitenabled() const {
  return (_has_bits_[2] & 0x00200000u) != 0;
}
void CloudPolicySettings::set_has_cloudprintsubmitenabled() {
  _has_bits_[2] |= 0x00200000u;
}
void CloudPolicySettings::clear_has_cloudprintsubmitenabled() {
  _has_bits_[2] &= ~0x00200000u;
}
void CloudPolicySettings::clear_cloudprintsubmitenabled() {
  if (cloudprintsubmitenabled_ != NULL) cloudprintsubmitenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_cloudprintsubmitenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::cloudprintsubmitenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudPrintSubmitEnabled)
  return cloudprintsubmitenabled_ != NULL ? *cloudprintsubmitenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_cloudprintsubmitenabled() {
  set_has_cloudprintsubmitenabled();
  if (cloudprintsubmitenabled_ == NULL) {
    cloudprintsubmitenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudPrintSubmitEnabled)
  return cloudprintsubmitenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_cloudprintsubmitenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudPrintSubmitEnabled)
  clear_has_cloudprintsubmitenabled();
  ::enterprise_management::BooleanPolicyProto* temp = cloudprintsubmitenabled_;
  cloudprintsubmitenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_cloudprintsubmitenabled(::enterprise_management::BooleanPolicyProto* cloudprintsubmitenabled) {
  delete cloudprintsubmitenabled_;
  cloudprintsubmitenabled_ = cloudprintsubmitenabled;
  if (cloudprintsubmitenabled) {
    set_has_cloudprintsubmitenabled();
  } else {
    clear_has_cloudprintsubmitenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudPrintSubmitEnabled)
}

// optional .enterprise_management.BooleanPolicyProto DisablePrintPreview = 119;
bool CloudPolicySettings::has_disableprintpreview() const {
  return (_has_bits_[2] & 0x02000000u) != 0;
}
void CloudPolicySettings::set_has_disableprintpreview() {
  _has_bits_[2] |= 0x02000000u;
}
void CloudPolicySettings::clear_has_disableprintpreview() {
  _has_bits_[2] &= ~0x02000000u;
}
void CloudPolicySettings::clear_disableprintpreview() {
  if (disableprintpreview_ != NULL) disableprintpreview_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_disableprintpreview();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disableprintpreview() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisablePrintPreview)
  return disableprintpreview_ != NULL ? *disableprintpreview_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disableprintpreview() {
  set_has_disableprintpreview();
  if (disableprintpreview_ == NULL) {
    disableprintpreview_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisablePrintPreview)
  return disableprintpreview_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disableprintpreview() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisablePrintPreview)
  clear_has_disableprintpreview();
  ::enterprise_management::BooleanPolicyProto* temp = disableprintpreview_;
  disableprintpreview_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_disableprintpreview(::enterprise_management::BooleanPolicyProto* disableprintpreview) {
  delete disableprintpreview_;
  disableprintpreview_ = disableprintpreview;
  if (disableprintpreview) {
    set_has_disableprintpreview();
  } else {
    clear_has_disableprintpreview();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisablePrintPreview)
}

// optional .enterprise_management.StringPolicyProto DefaultPrinterSelection = 310;
bool CloudPolicySettings::has_defaultprinterselection() const {
  return (_has_bits_[4] & 0x04000000u) != 0;
}
void CloudPolicySettings::set_has_defaultprinterselection() {
  _has_bits_[4] |= 0x04000000u;
}
void CloudPolicySettings::clear_has_defaultprinterselection() {
  _has_bits_[4] &= ~0x04000000u;
}
void CloudPolicySettings::clear_defaultprinterselection() {
  if (defaultprinterselection_ != NULL) defaultprinterselection_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_defaultprinterselection();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultprinterselection() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultPrinterSelection)
  return defaultprinterselection_ != NULL ? *defaultprinterselection_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultprinterselection() {
  set_has_defaultprinterselection();
  if (defaultprinterselection_ == NULL) {
    defaultprinterselection_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultPrinterSelection)
  return defaultprinterselection_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultprinterselection() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultPrinterSelection)
  clear_has_defaultprinterselection();
  ::enterprise_management::StringPolicyProto* temp = defaultprinterselection_;
  defaultprinterselection_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultprinterselection(::enterprise_management::StringPolicyProto* defaultprinterselection) {
  delete defaultprinterselection_;
  defaultprinterselection_ = defaultprinterselection;
  if (defaultprinterselection) {
    set_has_defaultprinterselection();
  } else {
    clear_has_defaultprinterselection();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultPrinterSelection)
}

// optional .enterprise_management.BooleanPolicyProto EnableOnlineRevocationChecks = 131;
bool CloudPolicySettings::has_enableonlinerevocationchecks() const {
  return (_has_bits_[2] & 0x04000000u) != 0;
}
void CloudPolicySettings::set_has_enableonlinerevocationchecks() {
  _has_bits_[2] |= 0x04000000u;
}
void CloudPolicySettings::clear_has_enableonlinerevocationchecks() {
  _has_bits_[2] &= ~0x04000000u;
}
void CloudPolicySettings::clear_enableonlinerevocationchecks() {
  if (enableonlinerevocationchecks_ != NULL) enableonlinerevocationchecks_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_enableonlinerevocationchecks();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enableonlinerevocationchecks() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableOnlineRevocationChecks)
  return enableonlinerevocationchecks_ != NULL ? *enableonlinerevocationchecks_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enableonlinerevocationchecks() {
  set_has_enableonlinerevocationchecks();
  if (enableonlinerevocationchecks_ == NULL) {
    enableonlinerevocationchecks_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableOnlineRevocationChecks)
  return enableonlinerevocationchecks_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enableonlinerevocationchecks() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableOnlineRevocationChecks)
  clear_has_enableonlinerevocationchecks();
  ::enterprise_management::BooleanPolicyProto* temp = enableonlinerevocationchecks_;
  enableonlinerevocationchecks_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_enableonlinerevocationchecks(::enterprise_management::BooleanPolicyProto* enableonlinerevocationchecks) {
  delete enableonlinerevocationchecks_;
  enableonlinerevocationchecks_ = enableonlinerevocationchecks;
  if (enableonlinerevocationchecks) {
    set_has_enableonlinerevocationchecks();
  } else {
    clear_has_enableonlinerevocationchecks();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableOnlineRevocationChecks)
}

// optional .enterprise_management.BooleanPolicyProto RequireOnlineRevocationChecksForLocalAnchors = 237;
bool CloudPolicySettings::has_requireonlinerevocationchecksforlocalanchors() const {
  return (_has_bits_[3] & 0x10000000u) != 0;
}
void CloudPolicySettings::set_has_requireonlinerevocationchecksforlocalanchors() {
  _has_bits_[3] |= 0x10000000u;
}
void CloudPolicySettings::clear_has_requireonlinerevocationchecksforlocalanchors() {
  _has_bits_[3] &= ~0x10000000u;
}
void CloudPolicySettings::clear_requireonlinerevocationchecksforlocalanchors() {
  if (requireonlinerevocationchecksforlocalanchors_ != NULL) requireonlinerevocationchecksforlocalanchors_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_requireonlinerevocationchecksforlocalanchors();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::requireonlinerevocationchecksforlocalanchors() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RequireOnlineRevocationChecksForLocalAnchors)
  return requireonlinerevocationchecksforlocalanchors_ != NULL ? *requireonlinerevocationchecksforlocalanchors_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_requireonlinerevocationchecksforlocalanchors() {
  set_has_requireonlinerevocationchecksforlocalanchors();
  if (requireonlinerevocationchecksforlocalanchors_ == NULL) {
    requireonlinerevocationchecksforlocalanchors_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RequireOnlineRevocationChecksForLocalAnchors)
  return requireonlinerevocationchecksforlocalanchors_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_requireonlinerevocationchecksforlocalanchors() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RequireOnlineRevocationChecksForLocalAnchors)
  clear_has_requireonlinerevocationchecksforlocalanchors();
  ::enterprise_management::BooleanPolicyProto* temp = requireonlinerevocationchecksforlocalanchors_;
  requireonlinerevocationchecksforlocalanchors_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_requireonlinerevocationchecksforlocalanchors(::enterprise_management::BooleanPolicyProto* requireonlinerevocationchecksforlocalanchors) {
  delete requireonlinerevocationchecksforlocalanchors_;
  requireonlinerevocationchecksforlocalanchors_ = requireonlinerevocationchecksforlocalanchors;
  if (requireonlinerevocationchecksforlocalanchors) {
    set_has_requireonlinerevocationchecksforlocalanchors();
  } else {
    clear_has_requireonlinerevocationchecksforlocalanchors();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RequireOnlineRevocationChecksForLocalAnchors)
}

// optional .enterprise_management.BooleanPolicyProto EnableSha1ForLocalAnchors = 342;
bool CloudPolicySettings::has_enablesha1forlocalanchors() const {
  return (_has_bits_[5] & 0x00000020u) != 0;
}
void CloudPolicySettings::set_has_enablesha1forlocalanchors() {
  _has_bits_[5] |= 0x00000020u;
}
void CloudPolicySettings::clear_has_enablesha1forlocalanchors() {
  _has_bits_[5] &= ~0x00000020u;
}
void CloudPolicySettings::clear_enablesha1forlocalanchors() {
  if (enablesha1forlocalanchors_ != NULL) enablesha1forlocalanchors_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_enablesha1forlocalanchors();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enablesha1forlocalanchors() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableSha1ForLocalAnchors)
  return enablesha1forlocalanchors_ != NULL ? *enablesha1forlocalanchors_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enablesha1forlocalanchors() {
  set_has_enablesha1forlocalanchors();
  if (enablesha1forlocalanchors_ == NULL) {
    enablesha1forlocalanchors_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableSha1ForLocalAnchors)
  return enablesha1forlocalanchors_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enablesha1forlocalanchors() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableSha1ForLocalAnchors)
  clear_has_enablesha1forlocalanchors();
  ::enterprise_management::BooleanPolicyProto* temp = enablesha1forlocalanchors_;
  enablesha1forlocalanchors_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_enablesha1forlocalanchors(::enterprise_management::BooleanPolicyProto* enablesha1forlocalanchors) {
  delete enablesha1forlocalanchors_;
  enablesha1forlocalanchors_ = enablesha1forlocalanchors;
  if (enablesha1forlocalanchors) {
    set_has_enablesha1forlocalanchors();
  } else {
    clear_has_enablesha1forlocalanchors();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableSha1ForLocalAnchors)
}

// optional .enterprise_management.BooleanPolicyProto EnableSymantecLegacyInfrastructure = 415;
bool CloudPolicySettings::has_enablesymanteclegacyinfrastructure() const {
  return (_has_bits_[6] & 0x00000002u) != 0;
}
void CloudPolicySettings::set_has_enablesymanteclegacyinfrastructure() {
  _has_bits_[6] |= 0x00000002u;
}
void CloudPolicySettings::clear_has_enablesymanteclegacyinfrastructure() {
  _has_bits_[6] &= ~0x00000002u;
}
void CloudPolicySettings::clear_enablesymanteclegacyinfrastructure() {
  if (enablesymanteclegacyinfrastructure_ != NULL) enablesymanteclegacyinfrastructure_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_enablesymanteclegacyinfrastructure();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enablesymanteclegacyinfrastructure() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableSymantecLegacyInfrastructure)
  return enablesymanteclegacyinfrastructure_ != NULL ? *enablesymanteclegacyinfrastructure_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enablesymanteclegacyinfrastructure() {
  set_has_enablesymanteclegacyinfrastructure();
  if (enablesymanteclegacyinfrastructure_ == NULL) {
    enablesymanteclegacyinfrastructure_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableSymantecLegacyInfrastructure)
  return enablesymanteclegacyinfrastructure_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enablesymanteclegacyinfrastructure() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableSymantecLegacyInfrastructure)
  clear_has_enablesymanteclegacyinfrastructure();
  ::enterprise_management::BooleanPolicyProto* temp = enablesymanteclegacyinfrastructure_;
  enablesymanteclegacyinfrastructure_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_enablesymanteclegacyinfrastructure(::enterprise_management::BooleanPolicyProto* enablesymanteclegacyinfrastructure) {
  delete enablesymanteclegacyinfrastructure_;
  enablesymanteclegacyinfrastructure_ = enablesymanteclegacyinfrastructure;
  if (enablesymanteclegacyinfrastructure) {
    set_has_enablesymanteclegacyinfrastructure();
  } else {
    clear_has_enablesymanteclegacyinfrastructure();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableSymantecLegacyInfrastructure)
}

// optional .enterprise_management.BooleanPolicyProto ForceEphemeralProfiles = 247;
bool CloudPolicySettings::has_forceephemeralprofiles() const {
  return (_has_bits_[3] & 0x80000000u) != 0;
}
void CloudPolicySettings::set_has_forceephemeralprofiles() {
  _has_bits_[3] |= 0x80000000u;
}
void CloudPolicySettings::clear_has_forceephemeralprofiles() {
  _has_bits_[3] &= ~0x80000000u;
}
void CloudPolicySettings::clear_forceephemeralprofiles() {
  if (forceephemeralprofiles_ != NULL) forceephemeralprofiles_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_forceephemeralprofiles();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forceephemeralprofiles() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceEphemeralProfiles)
  return forceephemeralprofiles_ != NULL ? *forceephemeralprofiles_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forceephemeralprofiles() {
  set_has_forceephemeralprofiles();
  if (forceephemeralprofiles_ == NULL) {
    forceephemeralprofiles_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceEphemeralProfiles)
  return forceephemeralprofiles_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forceephemeralprofiles() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceEphemeralProfiles)
  clear_has_forceephemeralprofiles();
  ::enterprise_management::BooleanPolicyProto* temp = forceephemeralprofiles_;
  forceephemeralprofiles_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_forceephemeralprofiles(::enterprise_management::BooleanPolicyProto* forceephemeralprofiles) {
  delete forceephemeralprofiles_;
  forceephemeralprofiles_ = forceephemeralprofiles;
  if (forceephemeralprofiles) {
    set_has_forceephemeralprofiles();
  } else {
    clear_has_forceephemeralprofiles();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceEphemeralProfiles)
}

// optional .enterprise_management.BooleanPolicyProto BackgroundModeEnabled = 140;
bool CloudPolicySettings::has_backgroundmodeenabled() const {
  return (_has_bits_[2] & 0x08000000u) != 0;
}
void CloudPolicySettings::set_has_backgroundmodeenabled() {
  _has_bits_[2] |= 0x08000000u;
}
void CloudPolicySettings::clear_has_backgroundmodeenabled() {
  _has_bits_[2] &= ~0x08000000u;
}
void CloudPolicySettings::clear_backgroundmodeenabled() {
  if (backgroundmodeenabled_ != NULL) backgroundmodeenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_backgroundmodeenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::backgroundmodeenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BackgroundModeEnabled)
  return backgroundmodeenabled_ != NULL ? *backgroundmodeenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_backgroundmodeenabled() {
  set_has_backgroundmodeenabled();
  if (backgroundmodeenabled_ == NULL) {
    backgroundmodeenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BackgroundModeEnabled)
  return backgroundmodeenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_backgroundmodeenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BackgroundModeEnabled)
  clear_has_backgroundmodeenabled();
  ::enterprise_management::BooleanPolicyProto* temp = backgroundmodeenabled_;
  backgroundmodeenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_backgroundmodeenabled(::enterprise_management::BooleanPolicyProto* backgroundmodeenabled) {
  delete backgroundmodeenabled_;
  backgroundmodeenabled_ = backgroundmodeenabled;
  if (backgroundmodeenabled) {
    set_has_backgroundmodeenabled();
  } else {
    clear_has_backgroundmodeenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BackgroundModeEnabled)
}

// optional .enterprise_management.StringPolicyProto RestrictSigninToPattern = 149;
bool CloudPolicySettings::has_restrictsignintopattern() const {
  return (_has_bits_[2] & 0x10000000u) != 0;
}
void CloudPolicySettings::set_has_restrictsignintopattern() {
  _has_bits_[2] |= 0x10000000u;
}
void CloudPolicySettings::clear_has_restrictsignintopattern() {
  _has_bits_[2] &= ~0x10000000u;
}
void CloudPolicySettings::clear_restrictsignintopattern() {
  if (restrictsignintopattern_ != NULL) restrictsignintopattern_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_restrictsignintopattern();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::restrictsignintopattern() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RestrictSigninToPattern)
  return restrictsignintopattern_ != NULL ? *restrictsignintopattern_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_restrictsignintopattern() {
  set_has_restrictsignintopattern();
  if (restrictsignintopattern_ == NULL) {
    restrictsignintopattern_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RestrictSigninToPattern)
  return restrictsignintopattern_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_restrictsignintopattern() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RestrictSigninToPattern)
  clear_has_restrictsignintopattern();
  ::enterprise_management::StringPolicyProto* temp = restrictsignintopattern_;
  restrictsignintopattern_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_restrictsignintopattern(::enterprise_management::StringPolicyProto* restrictsignintopattern) {
  delete restrictsignintopattern_;
  restrictsignintopattern_ = restrictsignintopattern;
  if (restrictsignintopattern) {
    set_has_restrictsignintopattern();
  } else {
    clear_has_restrictsignintopattern();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RestrictSigninToPattern)
}

// optional .enterprise_management.BooleanPolicyProto DisableSafeBrowsingProceedAnyway = 152;
bool CloudPolicySettings::has_disablesafebrowsingproceedanyway() const {
  return (_has_bits_[2] & 0x80000000u) != 0;
}
void CloudPolicySettings::set_has_disablesafebrowsingproceedanyway() {
  _has_bits_[2] |= 0x80000000u;
}
void CloudPolicySettings::clear_has_disablesafebrowsingproceedanyway() {
  _has_bits_[2] &= ~0x80000000u;
}
void CloudPolicySettings::clear_disablesafebrowsingproceedanyway() {
  if (disablesafebrowsingproceedanyway_ != NULL) disablesafebrowsingproceedanyway_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_disablesafebrowsingproceedanyway();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disablesafebrowsingproceedanyway() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
  return disablesafebrowsingproceedanyway_ != NULL ? *disablesafebrowsingproceedanyway_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disablesafebrowsingproceedanyway() {
  set_has_disablesafebrowsingproceedanyway();
  if (disablesafebrowsingproceedanyway_ == NULL) {
    disablesafebrowsingproceedanyway_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
  return disablesafebrowsingproceedanyway_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disablesafebrowsingproceedanyway() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
  clear_has_disablesafebrowsingproceedanyway();
  ::enterprise_management::BooleanPolicyProto* temp = disablesafebrowsingproceedanyway_;
  disablesafebrowsingproceedanyway_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_disablesafebrowsingproceedanyway(::enterprise_management::BooleanPolicyProto* disablesafebrowsingproceedanyway) {
  delete disablesafebrowsingproceedanyway_;
  disablesafebrowsingproceedanyway_ = disablesafebrowsingproceedanyway;
  if (disablesafebrowsingproceedanyway) {
    set_has_disablesafebrowsingproceedanyway();
  } else {
    clear_has_disablesafebrowsingproceedanyway();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
}

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingExtendedReportingOptInAllowed = 301;
bool CloudPolicySettings::has_safebrowsingextendedreportingoptinallowed() const {
  return (_has_bits_[4] & 0x00400000u) != 0;
}
void CloudPolicySettings::set_has_safebrowsingextendedreportingoptinallowed() {
  _has_bits_[4] |= 0x00400000u;
}
void CloudPolicySettings::clear_has_safebrowsingextendedreportingoptinallowed() {
  _has_bits_[4] &= ~0x00400000u;
}
void CloudPolicySettings::clear_safebrowsingextendedreportingoptinallowed() {
  if (safebrowsingextendedreportingoptinallowed_ != NULL) safebrowsingextendedreportingoptinallowed_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_safebrowsingextendedreportingoptinallowed();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::safebrowsingextendedreportingoptinallowed() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingOptInAllowed)
  return safebrowsingextendedreportingoptinallowed_ != NULL ? *safebrowsingextendedreportingoptinallowed_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_safebrowsingextendedreportingoptinallowed() {
  set_has_safebrowsingextendedreportingoptinallowed();
  if (safebrowsingextendedreportingoptinallowed_ == NULL) {
    safebrowsingextendedreportingoptinallowed_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingOptInAllowed)
  return safebrowsingextendedreportingoptinallowed_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_safebrowsingextendedreportingoptinallowed() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingOptInAllowed)
  clear_has_safebrowsingextendedreportingoptinallowed();
  ::enterprise_management::BooleanPolicyProto* temp = safebrowsingextendedreportingoptinallowed_;
  safebrowsingextendedreportingoptinallowed_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_safebrowsingextendedreportingoptinallowed(::enterprise_management::BooleanPolicyProto* safebrowsingextendedreportingoptinallowed) {
  delete safebrowsingextendedreportingoptinallowed_;
  safebrowsingextendedreportingoptinallowed_ = safebrowsingextendedreportingoptinallowed;
  if (safebrowsingextendedreportingoptinallowed) {
    set_has_safebrowsingextendedreportingoptinallowed();
  } else {
    clear_has_safebrowsingextendedreportingoptinallowed();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingOptInAllowed)
}

// optional .enterprise_management.BooleanPolicyProto SpellCheckServiceEnabled = 153;
bool CloudPolicySettings::has_spellcheckserviceenabled() const {
  return (_has_bits_[3] & 0x00000001u) != 0;
}
void CloudPolicySettings::set_has_spellcheckserviceenabled() {
  _has_bits_[3] |= 0x00000001u;
}
void CloudPolicySettings::clear_has_spellcheckserviceenabled() {
  _has_bits_[3] &= ~0x00000001u;
}
void CloudPolicySettings::clear_spellcheckserviceenabled() {
  if (spellcheckserviceenabled_ != NULL) spellcheckserviceenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_spellcheckserviceenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::spellcheckserviceenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SpellCheckServiceEnabled)
  return spellcheckserviceenabled_ != NULL ? *spellcheckserviceenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_spellcheckserviceenabled() {
  set_has_spellcheckserviceenabled();
  if (spellcheckserviceenabled_ == NULL) {
    spellcheckserviceenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SpellCheckServiceEnabled)
  return spellcheckserviceenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_spellcheckserviceenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SpellCheckServiceEnabled)
  clear_has_spellcheckserviceenabled();
  ::enterprise_management::BooleanPolicyProto* temp = spellcheckserviceenabled_;
  spellcheckserviceenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_spellcheckserviceenabled(::enterprise_management::BooleanPolicyProto* spellcheckserviceenabled) {
  delete spellcheckserviceenabled_;
  spellcheckserviceenabled_ = spellcheckserviceenabled;
  if (spellcheckserviceenabled) {
    set_has_spellcheckserviceenabled();
  } else {
    clear_has_spellcheckserviceenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SpellCheckServiceEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AudioCaptureAllowed = 162;
bool CloudPolicySettings::has_audiocaptureallowed() const {
  return (_has_bits_[3] & 0x00000020u) != 0;
}
void CloudPolicySettings::set_has_audiocaptureallowed() {
  _has_bits_[3] |= 0x00000020u;
}
void CloudPolicySettings::clear_has_audiocaptureallowed() {
  _has_bits_[3] &= ~0x00000020u;
}
void CloudPolicySettings::clear_audiocaptureallowed() {
  if (audiocaptureallowed_ != NULL) audiocaptureallowed_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_audiocaptureallowed();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::audiocaptureallowed() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AudioCaptureAllowed)
  return audiocaptureallowed_ != NULL ? *audiocaptureallowed_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_audiocaptureallowed() {
  set_has_audiocaptureallowed();
  if (audiocaptureallowed_ == NULL) {
    audiocaptureallowed_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AudioCaptureAllowed)
  return audiocaptureallowed_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_audiocaptureallowed() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AudioCaptureAllowed)
  clear_has_audiocaptureallowed();
  ::enterprise_management::BooleanPolicyProto* temp = audiocaptureallowed_;
  audiocaptureallowed_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_audiocaptureallowed(::enterprise_management::BooleanPolicyProto* audiocaptureallowed) {
  delete audiocaptureallowed_;
  audiocaptureallowed_ = audiocaptureallowed;
  if (audiocaptureallowed) {
    set_has_audiocaptureallowed();
  } else {
    clear_has_audiocaptureallowed();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AudioCaptureAllowed)
}

// optional .enterprise_management.StringListPolicyProto AudioCaptureAllowedUrls = 210;
bool CloudPolicySettings::has_audiocaptureallowedurls() const {
  return (_has_bits_[3] & 0x00040000u) != 0;
}
void CloudPolicySettings::set_has_audiocaptureallowedurls() {
  _has_bits_[3] |= 0x00040000u;
}
void CloudPolicySettings::clear_has_audiocaptureallowedurls() {
  _has_bits_[3] &= ~0x00040000u;
}
void CloudPolicySettings::clear_audiocaptureallowedurls() {
  if (audiocaptureallowedurls_ != NULL) audiocaptureallowedurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_audiocaptureallowedurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::audiocaptureallowedurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AudioCaptureAllowedUrls)
  return audiocaptureallowedurls_ != NULL ? *audiocaptureallowedurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_audiocaptureallowedurls() {
  set_has_audiocaptureallowedurls();
  if (audiocaptureallowedurls_ == NULL) {
    audiocaptureallowedurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AudioCaptureAllowedUrls)
  return audiocaptureallowedurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_audiocaptureallowedurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AudioCaptureAllowedUrls)
  clear_has_audiocaptureallowedurls();
  ::enterprise_management::StringListPolicyProto* temp = audiocaptureallowedurls_;
  audiocaptureallowedurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_audiocaptureallowedurls(::enterprise_management::StringListPolicyProto* audiocaptureallowedurls) {
  delete audiocaptureallowedurls_;
  audiocaptureallowedurls_ = audiocaptureallowedurls;
  if (audiocaptureallowedurls) {
    set_has_audiocaptureallowedurls();
  } else {
    clear_has_audiocaptureallowedurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AudioCaptureAllowedUrls)
}

// optional .enterprise_management.BooleanPolicyProto VideoCaptureAllowed = 169;
bool CloudPolicySettings::has_videocaptureallowed() const {
  return (_has_bits_[3] & 0x00000200u) != 0;
}
void CloudPolicySettings::set_has_videocaptureallowed() {
  _has_bits_[3] |= 0x00000200u;
}
void CloudPolicySettings::clear_has_videocaptureallowed() {
  _has_bits_[3] &= ~0x00000200u;
}
void CloudPolicySettings::clear_videocaptureallowed() {
  if (videocaptureallowed_ != NULL) videocaptureallowed_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_videocaptureallowed();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::videocaptureallowed() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.VideoCaptureAllowed)
  return videocaptureallowed_ != NULL ? *videocaptureallowed_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_videocaptureallowed() {
  set_has_videocaptureallowed();
  if (videocaptureallowed_ == NULL) {
    videocaptureallowed_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.VideoCaptureAllowed)
  return videocaptureallowed_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_videocaptureallowed() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.VideoCaptureAllowed)
  clear_has_videocaptureallowed();
  ::enterprise_management::BooleanPolicyProto* temp = videocaptureallowed_;
  videocaptureallowed_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_videocaptureallowed(::enterprise_management::BooleanPolicyProto* videocaptureallowed) {
  delete videocaptureallowed_;
  videocaptureallowed_ = videocaptureallowed;
  if (videocaptureallowed) {
    set_has_videocaptureallowed();
  } else {
    clear_has_videocaptureallowed();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.VideoCaptureAllowed)
}

// optional .enterprise_management.StringListPolicyProto VideoCaptureAllowedUrls = 211;
bool CloudPolicySettings::has_videocaptureallowedurls() const {
  return (_has_bits_[3] & 0x00080000u) != 0;
}
void CloudPolicySettings::set_has_videocaptureallowedurls() {
  _has_bits_[3] |= 0x00080000u;
}
void CloudPolicySettings::clear_has_videocaptureallowedurls() {
  _has_bits_[3] &= ~0x00080000u;
}
void CloudPolicySettings::clear_videocaptureallowedurls() {
  if (videocaptureallowedurls_ != NULL) videocaptureallowedurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_videocaptureallowedurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::videocaptureallowedurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.VideoCaptureAllowedUrls)
  return videocaptureallowedurls_ != NULL ? *videocaptureallowedurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_videocaptureallowedurls() {
  set_has_videocaptureallowedurls();
  if (videocaptureallowedurls_ == NULL) {
    videocaptureallowedurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.VideoCaptureAllowedUrls)
  return videocaptureallowedurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_videocaptureallowedurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.VideoCaptureAllowedUrls)
  clear_has_videocaptureallowedurls();
  ::enterprise_management::StringListPolicyProto* temp = videocaptureallowedurls_;
  videocaptureallowedurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_videocaptureallowedurls(::enterprise_management::StringListPolicyProto* videocaptureallowedurls) {
  delete videocaptureallowedurls_;
  videocaptureallowedurls_ = videocaptureallowedurls;
  if (videocaptureallowedurls) {
    set_has_videocaptureallowedurls();
  } else {
    clear_has_videocaptureallowedurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.VideoCaptureAllowedUrls)
}

// optional .enterprise_management.BooleanPolicyProto DisableScreenshots = 155;
bool CloudPolicySettings::has_disablescreenshots() const {
  return (_has_bits_[3] & 0x00000002u) != 0;
}
void CloudPolicySettings::set_has_disablescreenshots() {
  _has_bits_[3] |= 0x00000002u;
}
void CloudPolicySettings::clear_has_disablescreenshots() {
  _has_bits_[3] &= ~0x00000002u;
}
void CloudPolicySettings::clear_disablescreenshots() {
  if (disablescreenshots_ != NULL) disablescreenshots_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_disablescreenshots();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disablescreenshots() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisableScreenshots)
  return disablescreenshots_ != NULL ? *disablescreenshots_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disablescreenshots() {
  set_has_disablescreenshots();
  if (disablescreenshots_ == NULL) {
    disablescreenshots_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisableScreenshots)
  return disablescreenshots_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disablescreenshots() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisableScreenshots)
  clear_has_disablescreenshots();
  ::enterprise_management::BooleanPolicyProto* temp = disablescreenshots_;
  disablescreenshots_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_disablescreenshots(::enterprise_management::BooleanPolicyProto* disablescreenshots) {
  delete disablescreenshots_;
  disablescreenshots_ = disablescreenshots;
  if (disablescreenshots) {
    set_has_disablescreenshots();
  } else {
    clear_has_disablescreenshots();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisableScreenshots)
}

// optional .enterprise_management.BooleanPolicyProto BuiltInDnsClientEnabled = 167;
bool CloudPolicySettings::has_builtindnsclientenabled() const {
  return (_has_bits_[3] & 0x00000100u) != 0;
}
void CloudPolicySettings::set_has_builtindnsclientenabled() {
  _has_bits_[3] |= 0x00000100u;
}
void CloudPolicySettings::clear_has_builtindnsclientenabled() {
  _has_bits_[3] &= ~0x00000100u;
}
void CloudPolicySettings::clear_builtindnsclientenabled() {
  if (builtindnsclientenabled_ != NULL) builtindnsclientenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_builtindnsclientenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::builtindnsclientenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BuiltInDnsClientEnabled)
  return builtindnsclientenabled_ != NULL ? *builtindnsclientenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_builtindnsclientenabled() {
  set_has_builtindnsclientenabled();
  if (builtindnsclientenabled_ == NULL) {
    builtindnsclientenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BuiltInDnsClientEnabled)
  return builtindnsclientenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_builtindnsclientenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BuiltInDnsClientEnabled)
  clear_has_builtindnsclientenabled();
  ::enterprise_management::BooleanPolicyProto* temp = builtindnsclientenabled_;
  builtindnsclientenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_builtindnsclientenabled(::enterprise_management::BooleanPolicyProto* builtindnsclientenabled) {
  delete builtindnsclientenabled_;
  builtindnsclientenabled_ = builtindnsclientenabled;
  if (builtindnsclientenabled) {
    set_has_builtindnsclientenabled();
  } else {
    clear_has_builtindnsclientenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BuiltInDnsClientEnabled)
}

// optional .enterprise_management.BooleanPolicyProto FullscreenAllowed = 242;
bool CloudPolicySettings::has_fullscreenallowed() const {
  return (_has_bits_[3] & 0x40000000u) != 0;
}
void CloudPolicySettings::set_has_fullscreenallowed() {
  _has_bits_[3] |= 0x40000000u;
}
void CloudPolicySettings::clear_has_fullscreenallowed() {
  _has_bits_[3] &= ~0x40000000u;
}
void CloudPolicySettings::clear_fullscreenallowed() {
  if (fullscreenallowed_ != NULL) fullscreenallowed_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_fullscreenallowed();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::fullscreenallowed() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.FullscreenAllowed)
  return fullscreenallowed_ != NULL ? *fullscreenallowed_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_fullscreenallowed() {
  set_has_fullscreenallowed();
  if (fullscreenallowed_ == NULL) {
    fullscreenallowed_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.FullscreenAllowed)
  return fullscreenallowed_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_fullscreenallowed() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.FullscreenAllowed)
  clear_has_fullscreenallowed();
  ::enterprise_management::BooleanPolicyProto* temp = fullscreenallowed_;
  fullscreenallowed_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_fullscreenallowed(::enterprise_management::BooleanPolicyProto* fullscreenallowed) {
  delete fullscreenallowed_;
  fullscreenallowed_ = fullscreenallowed;
  if (fullscreenallowed) {
    set_has_fullscreenallowed();
  } else {
    clear_has_fullscreenallowed();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.FullscreenAllowed)
}

// optional .enterprise_management.BooleanPolicyProto HideWebStoreIcon = 191;
bool CloudPolicySettings::has_hidewebstoreicon() const {
  return (_has_bits_[3] & 0x00001000u) != 0;
}
void CloudPolicySettings::set_has_hidewebstoreicon() {
  _has_bits_[3] |= 0x00001000u;
}
void CloudPolicySettings::clear_has_hidewebstoreicon() {
  _has_bits_[3] &= ~0x00001000u;
}
void CloudPolicySettings::clear_hidewebstoreicon() {
  if (hidewebstoreicon_ != NULL) hidewebstoreicon_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_hidewebstoreicon();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::hidewebstoreicon() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.HideWebStoreIcon)
  return hidewebstoreicon_ != NULL ? *hidewebstoreicon_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_hidewebstoreicon() {
  set_has_hidewebstoreicon();
  if (hidewebstoreicon_ == NULL) {
    hidewebstoreicon_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.HideWebStoreIcon)
  return hidewebstoreicon_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_hidewebstoreicon() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.HideWebStoreIcon)
  clear_has_hidewebstoreicon();
  ::enterprise_management::BooleanPolicyProto* temp = hidewebstoreicon_;
  hidewebstoreicon_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_hidewebstoreicon(::enterprise_management::BooleanPolicyProto* hidewebstoreicon) {
  delete hidewebstoreicon_;
  hidewebstoreicon_ = hidewebstoreicon;
  if (hidewebstoreicon) {
    set_has_hidewebstoreicon();
  } else {
    clear_has_hidewebstoreicon();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.HideWebStoreIcon)
}

// optional .enterprise_management.StringPolicyProto VariationsRestrictParameter = 198;
bool CloudPolicySettings::has_variationsrestrictparameter() const {
  return (_has_bits_[3] & 0x00004000u) != 0;
}
void CloudPolicySettings::set_has_variationsrestrictparameter() {
  _has_bits_[3] |= 0x00004000u;
}
void CloudPolicySettings::clear_has_variationsrestrictparameter() {
  _has_bits_[3] &= ~0x00004000u;
}
void CloudPolicySettings::clear_variationsrestrictparameter() {
  if (variationsrestrictparameter_ != NULL) variationsrestrictparameter_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_variationsrestrictparameter();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::variationsrestrictparameter() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
  return variationsrestrictparameter_ != NULL ? *variationsrestrictparameter_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_variationsrestrictparameter() {
  set_has_variationsrestrictparameter();
  if (variationsrestrictparameter_ == NULL) {
    variationsrestrictparameter_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
  return variationsrestrictparameter_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_variationsrestrictparameter() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
  clear_has_variationsrestrictparameter();
  ::enterprise_management::StringPolicyProto* temp = variationsrestrictparameter_;
  variationsrestrictparameter_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_variationsrestrictparameter(::enterprise_management::StringPolicyProto* variationsrestrictparameter) {
  delete variationsrestrictparameter_;
  variationsrestrictparameter_ = variationsrestrictparameter;
  if (variationsrestrictparameter) {
    set_has_variationsrestrictparameter();
  } else {
    clear_has_variationsrestrictparameter();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
}

// optional .enterprise_management.IntegerPolicyProto ContentPackDefaultFilteringBehavior = 206;
bool CloudPolicySettings::has_contentpackdefaultfilteringbehavior() const {
  return (_has_bits_[3] & 0x00008000u) != 0;
}
void CloudPolicySettings::set_has_contentpackdefaultfilteringbehavior() {
  _has_bits_[3] |= 0x00008000u;
}
void CloudPolicySettings::clear_has_contentpackdefaultfilteringbehavior() {
  _has_bits_[3] &= ~0x00008000u;
}
void CloudPolicySettings::clear_contentpackdefaultfilteringbehavior() {
  if (contentpackdefaultfilteringbehavior_ != NULL) contentpackdefaultfilteringbehavior_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_contentpackdefaultfilteringbehavior();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::contentpackdefaultfilteringbehavior() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ContentPackDefaultFilteringBehavior)
  return contentpackdefaultfilteringbehavior_ != NULL ? *contentpackdefaultfilteringbehavior_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_contentpackdefaultfilteringbehavior() {
  set_has_contentpackdefaultfilteringbehavior();
  if (contentpackdefaultfilteringbehavior_ == NULL) {
    contentpackdefaultfilteringbehavior_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ContentPackDefaultFilteringBehavior)
  return contentpackdefaultfilteringbehavior_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_contentpackdefaultfilteringbehavior() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ContentPackDefaultFilteringBehavior)
  clear_has_contentpackdefaultfilteringbehavior();
  ::enterprise_management::IntegerPolicyProto* temp = contentpackdefaultfilteringbehavior_;
  contentpackdefaultfilteringbehavior_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_contentpackdefaultfilteringbehavior(::enterprise_management::IntegerPolicyProto* contentpackdefaultfilteringbehavior) {
  delete contentpackdefaultfilteringbehavior_;
  contentpackdefaultfilteringbehavior_ = contentpackdefaultfilteringbehavior;
  if (contentpackdefaultfilteringbehavior) {
    set_has_contentpackdefaultfilteringbehavior();
  } else {
    clear_has_contentpackdefaultfilteringbehavior();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ContentPackDefaultFilteringBehavior)
}

// optional .enterprise_management.StringPolicyProto ContentPackManualBehaviorHosts = 207;
bool CloudPolicySettings::has_contentpackmanualbehaviorhosts() const {
  return (_has_bits_[3] & 0x00010000u) != 0;
}
void CloudPolicySettings::set_has_contentpackmanualbehaviorhosts() {
  _has_bits_[3] |= 0x00010000u;
}
void CloudPolicySettings::clear_has_contentpackmanualbehaviorhosts() {
  _has_bits_[3] &= ~0x00010000u;
}
void CloudPolicySettings::clear_contentpackmanualbehaviorhosts() {
  if (contentpackmanualbehaviorhosts_ != NULL) contentpackmanualbehaviorhosts_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_contentpackmanualbehaviorhosts();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::contentpackmanualbehaviorhosts() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorHosts)
  return contentpackmanualbehaviorhosts_ != NULL ? *contentpackmanualbehaviorhosts_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_contentpackmanualbehaviorhosts() {
  set_has_contentpackmanualbehaviorhosts();
  if (contentpackmanualbehaviorhosts_ == NULL) {
    contentpackmanualbehaviorhosts_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorHosts)
  return contentpackmanualbehaviorhosts_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_contentpackmanualbehaviorhosts() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorHosts)
  clear_has_contentpackmanualbehaviorhosts();
  ::enterprise_management::StringPolicyProto* temp = contentpackmanualbehaviorhosts_;
  contentpackmanualbehaviorhosts_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_contentpackmanualbehaviorhosts(::enterprise_management::StringPolicyProto* contentpackmanualbehaviorhosts) {
  delete contentpackmanualbehaviorhosts_;
  contentpackmanualbehaviorhosts_ = contentpackmanualbehaviorhosts;
  if (contentpackmanualbehaviorhosts) {
    set_has_contentpackmanualbehaviorhosts();
  } else {
    clear_has_contentpackmanualbehaviorhosts();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorHosts)
}

// optional .enterprise_management.StringPolicyProto ContentPackManualBehaviorURLs = 208;
bool CloudPolicySettings::has_contentpackmanualbehaviorurls() const {
  return (_has_bits_[3] & 0x00020000u) != 0;
}
void CloudPolicySettings::set_has_contentpackmanualbehaviorurls() {
  _has_bits_[3] |= 0x00020000u;
}
void CloudPolicySettings::clear_has_contentpackmanualbehaviorurls() {
  _has_bits_[3] &= ~0x00020000u;
}
void CloudPolicySettings::clear_contentpackmanualbehaviorurls() {
  if (contentpackmanualbehaviorurls_ != NULL) contentpackmanualbehaviorurls_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_contentpackmanualbehaviorurls();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::contentpackmanualbehaviorurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorURLs)
  return contentpackmanualbehaviorurls_ != NULL ? *contentpackmanualbehaviorurls_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_contentpackmanualbehaviorurls() {
  set_has_contentpackmanualbehaviorurls();
  if (contentpackmanualbehaviorurls_ == NULL) {
    contentpackmanualbehaviorurls_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorURLs)
  return contentpackmanualbehaviorurls_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_contentpackmanualbehaviorurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorURLs)
  clear_has_contentpackmanualbehaviorurls();
  ::enterprise_management::StringPolicyProto* temp = contentpackmanualbehaviorurls_;
  contentpackmanualbehaviorurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_contentpackmanualbehaviorurls(::enterprise_management::StringPolicyProto* contentpackmanualbehaviorurls) {
  delete contentpackmanualbehaviorurls_;
  contentpackmanualbehaviorurls_ = contentpackmanualbehaviorurls;
  if (contentpackmanualbehaviorurls) {
    set_has_contentpackmanualbehaviorurls();
  } else {
    clear_has_contentpackmanualbehaviorurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorURLs)
}

// optional .enterprise_management.BooleanPolicyProto SupervisedUserCreationEnabled = 225;
bool CloudPolicySettings::has_supervisedusercreationenabled() const {
  return (_has_bits_[3] & 0x00100000u) != 0;
}
void CloudPolicySettings::set_has_supervisedusercreationenabled() {
  _has_bits_[3] |= 0x00100000u;
}
void CloudPolicySettings::clear_has_supervisedusercreationenabled() {
  _has_bits_[3] &= ~0x00100000u;
}
void CloudPolicySettings::clear_supervisedusercreationenabled() {
  if (supervisedusercreationenabled_ != NULL) supervisedusercreationenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_supervisedusercreationenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::supervisedusercreationenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SupervisedUserCreationEnabled)
  return supervisedusercreationenabled_ != NULL ? *supervisedusercreationenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_supervisedusercreationenabled() {
  set_has_supervisedusercreationenabled();
  if (supervisedusercreationenabled_ == NULL) {
    supervisedusercreationenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SupervisedUserCreationEnabled)
  return supervisedusercreationenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_supervisedusercreationenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SupervisedUserCreationEnabled)
  clear_has_supervisedusercreationenabled();
  ::enterprise_management::BooleanPolicyProto* temp = supervisedusercreationenabled_;
  supervisedusercreationenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_supervisedusercreationenabled(::enterprise_management::BooleanPolicyProto* supervisedusercreationenabled) {
  delete supervisedusercreationenabled_;
  supervisedusercreationenabled_ = supervisedusercreationenabled;
  if (supervisedusercreationenabled) {
    set_has_supervisedusercreationenabled();
  } else {
    clear_has_supervisedusercreationenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SupervisedUserCreationEnabled)
}

// optional .enterprise_management.StringPolicyProto ManagedBookmarks = 229;
bool CloudPolicySettings::has_managedbookmarks() const {
  return (_has_bits_[3] & 0x00200000u) != 0;
}
void CloudPolicySettings::set_has_managedbookmarks() {
  _has_bits_[3] |= 0x00200000u;
}
void CloudPolicySettings::clear_has_managedbookmarks() {
  _has_bits_[3] &= ~0x00200000u;
}
void CloudPolicySettings::clear_managedbookmarks() {
  if (managedbookmarks_ != NULL) managedbookmarks_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_managedbookmarks();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::managedbookmarks() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ManagedBookmarks)
  return managedbookmarks_ != NULL ? *managedbookmarks_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_managedbookmarks() {
  set_has_managedbookmarks();
  if (managedbookmarks_ == NULL) {
    managedbookmarks_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ManagedBookmarks)
  return managedbookmarks_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_managedbookmarks() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ManagedBookmarks)
  clear_has_managedbookmarks();
  ::enterprise_management::StringPolicyProto* temp = managedbookmarks_;
  managedbookmarks_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_managedbookmarks(::enterprise_management::StringPolicyProto* managedbookmarks) {
  delete managedbookmarks_;
  managedbookmarks_ = managedbookmarks;
  if (managedbookmarks) {
    set_has_managedbookmarks();
  } else {
    clear_has_managedbookmarks();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ManagedBookmarks)
}

// optional .enterprise_management.StringListPolicyProto EnableDeprecatedWebPlatformFeatures = 272;
bool CloudPolicySettings::has_enabledeprecatedwebplatformfeatures() const {
  return (_has_bits_[4] & 0x00000200u) != 0;
}
void CloudPolicySettings::set_has_enabledeprecatedwebplatformfeatures() {
  _has_bits_[4] |= 0x00000200u;
}
void CloudPolicySettings::clear_has_enabledeprecatedwebplatformfeatures() {
  _has_bits_[4] &= ~0x00000200u;
}
void CloudPolicySettings::clear_enabledeprecatedwebplatformfeatures() {
  if (enabledeprecatedwebplatformfeatures_ != NULL) enabledeprecatedwebplatformfeatures_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_enabledeprecatedwebplatformfeatures();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::enabledeprecatedwebplatformfeatures() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
  return enabledeprecatedwebplatformfeatures_ != NULL ? *enabledeprecatedwebplatformfeatures_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_enabledeprecatedwebplatformfeatures() {
  set_has_enabledeprecatedwebplatformfeatures();
  if (enabledeprecatedwebplatformfeatures_ == NULL) {
    enabledeprecatedwebplatformfeatures_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
  return enabledeprecatedwebplatformfeatures_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_enabledeprecatedwebplatformfeatures() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
  clear_has_enabledeprecatedwebplatformfeatures();
  ::enterprise_management::StringListPolicyProto* temp = enabledeprecatedwebplatformfeatures_;
  enabledeprecatedwebplatformfeatures_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_enabledeprecatedwebplatformfeatures(::enterprise_management::StringListPolicyProto* enabledeprecatedwebplatformfeatures) {
  delete enabledeprecatedwebplatformfeatures_;
  enabledeprecatedwebplatformfeatures_ = enabledeprecatedwebplatformfeatures;
  if (enabledeprecatedwebplatformfeatures) {
    set_has_enabledeprecatedwebplatformfeatures();
  } else {
    clear_has_enabledeprecatedwebplatformfeatures();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
}

// optional .enterprise_management.BooleanPolicyProto BrowserGuestModeEnabled = 277;
bool CloudPolicySettings::has_browserguestmodeenabled() const {
  return (_has_bits_[4] & 0x00000800u) != 0;
}
void CloudPolicySettings::set_has_browserguestmodeenabled() {
  _has_bits_[4] |= 0x00000800u;
}
void CloudPolicySettings::clear_has_browserguestmodeenabled() {
  _has_bits_[4] &= ~0x00000800u;
}
void CloudPolicySettings::clear_browserguestmodeenabled() {
  if (browserguestmodeenabled_ != NULL) browserguestmodeenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_browserguestmodeenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::browserguestmodeenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserGuestModeEnabled)
  return browserguestmodeenabled_ != NULL ? *browserguestmodeenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_browserguestmodeenabled() {
  set_has_browserguestmodeenabled();
  if (browserguestmodeenabled_ == NULL) {
    browserguestmodeenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserGuestModeEnabled)
  return browserguestmodeenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_browserguestmodeenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserGuestModeEnabled)
  clear_has_browserguestmodeenabled();
  ::enterprise_management::BooleanPolicyProto* temp = browserguestmodeenabled_;
  browserguestmodeenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_browserguestmodeenabled(::enterprise_management::BooleanPolicyProto* browserguestmodeenabled) {
  delete browserguestmodeenabled_;
  browserguestmodeenabled_ = browserguestmodeenabled;
  if (browserguestmodeenabled) {
    set_has_browserguestmodeenabled();
  } else {
    clear_has_browserguestmodeenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserGuestModeEnabled)
}

// optional .enterprise_management.BooleanPolicyProto BrowserAddPersonEnabled = 278;
bool CloudPolicySettings::has_browseraddpersonenabled() const {
  return (_has_bits_[4] & 0x00001000u) != 0;
}
void CloudPolicySettings::set_has_browseraddpersonenabled() {
  _has_bits_[4] |= 0x00001000u;
}
void CloudPolicySettings::clear_has_browseraddpersonenabled() {
  _has_bits_[4] &= ~0x00001000u;
}
void CloudPolicySettings::clear_browseraddpersonenabled() {
  if (browseraddpersonenabled_ != NULL) browseraddpersonenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_browseraddpersonenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::browseraddpersonenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserAddPersonEnabled)
  return browseraddpersonenabled_ != NULL ? *browseraddpersonenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_browseraddpersonenabled() {
  set_has_browseraddpersonenabled();
  if (browseraddpersonenabled_ == NULL) {
    browseraddpersonenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserAddPersonEnabled)
  return browseraddpersonenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_browseraddpersonenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserAddPersonEnabled)
  clear_has_browseraddpersonenabled();
  ::enterprise_management::BooleanPolicyProto* temp = browseraddpersonenabled_;
  browseraddpersonenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_browseraddpersonenabled(::enterprise_management::BooleanPolicyProto* browseraddpersonenabled) {
  delete browseraddpersonenabled_;
  browseraddpersonenabled_ = browseraddpersonenabled;
  if (browseraddpersonenabled) {
    set_has_browseraddpersonenabled();
  } else {
    clear_has_browseraddpersonenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserAddPersonEnabled)
}

// optional .enterprise_management.StringPolicyProto SSLVersionMin = 281;
bool CloudPolicySettings::has_sslversionmin() const {
  return (_has_bits_[4] & 0x00008000u) != 0;
}
void CloudPolicySettings::set_has_sslversionmin() {
  _has_bits_[4] |= 0x00008000u;
}
void CloudPolicySettings::clear_has_sslversionmin() {
  _has_bits_[4] &= ~0x00008000u;
}
void CloudPolicySettings::clear_sslversionmin() {
  if (sslversionmin_ != NULL) sslversionmin_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_sslversionmin();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::sslversionmin() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SSLVersionMin)
  return sslversionmin_ != NULL ? *sslversionmin_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_sslversionmin() {
  set_has_sslversionmin();
  if (sslversionmin_ == NULL) {
    sslversionmin_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SSLVersionMin)
  return sslversionmin_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_sslversionmin() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SSLVersionMin)
  clear_has_sslversionmin();
  ::enterprise_management::StringPolicyProto* temp = sslversionmin_;
  sslversionmin_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_sslversionmin(::enterprise_management::StringPolicyProto* sslversionmin) {
  delete sslversionmin_;
  sslversionmin_ = sslversionmin;
  if (sslversionmin) {
    set_has_sslversionmin();
  } else {
    clear_has_sslversionmin();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SSLVersionMin)
}

// optional .enterprise_management.StringPolicyProto SSLVersionMax = 363;
bool CloudPolicySettings::has_sslversionmax() const {
  return (_has_bits_[5] & 0x00000800u) != 0;
}
void CloudPolicySettings::set_has_sslversionmax() {
  _has_bits_[5] |= 0x00000800u;
}
void CloudPolicySettings::clear_has_sslversionmax() {
  _has_bits_[5] &= ~0x00000800u;
}
void CloudPolicySettings::clear_sslversionmax() {
  if (sslversionmax_ != NULL) sslversionmax_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_sslversionmax();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::sslversionmax() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SSLVersionMax)
  return sslversionmax_ != NULL ? *sslversionmax_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_sslversionmax() {
  set_has_sslversionmax();
  if (sslversionmax_ == NULL) {
    sslversionmax_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SSLVersionMax)
  return sslversionmax_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_sslversionmax() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SSLVersionMax)
  clear_has_sslversionmax();
  ::enterprise_management::StringPolicyProto* temp = sslversionmax_;
  sslversionmax_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_sslversionmax(::enterprise_management::StringPolicyProto* sslversionmax) {
  delete sslversionmax_;
  sslversionmax_ = sslversionmax;
  if (sslversionmax) {
    set_has_sslversionmax();
  } else {
    clear_has_sslversionmax();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SSLVersionMax)
}

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForUrls = 337;
bool CloudPolicySettings::has_certificatetransparencyenforcementdisabledforurls() const {
  return (_has_bits_[5] & 0x00000008u) != 0;
}
void CloudPolicySettings::set_has_certificatetransparencyenforcementdisabledforurls() {
  _has_bits_[5] |= 0x00000008u;
}
void CloudPolicySettings::clear_has_certificatetransparencyenforcementdisabledforurls() {
  _has_bits_[5] &= ~0x00000008u;
}
void CloudPolicySettings::clear_certificatetransparencyenforcementdisabledforurls() {
  if (certificatetransparencyenforcementdisabledforurls_ != NULL) certificatetransparencyenforcementdisabledforurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_certificatetransparencyenforcementdisabledforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::certificatetransparencyenforcementdisabledforurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
  return certificatetransparencyenforcementdisabledforurls_ != NULL ? *certificatetransparencyenforcementdisabledforurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_certificatetransparencyenforcementdisabledforurls() {
  set_has_certificatetransparencyenforcementdisabledforurls();
  if (certificatetransparencyenforcementdisabledforurls_ == NULL) {
    certificatetransparencyenforcementdisabledforurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
  return certificatetransparencyenforcementdisabledforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_certificatetransparencyenforcementdisabledforurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
  clear_has_certificatetransparencyenforcementdisabledforurls();
  ::enterprise_management::StringListPolicyProto* temp = certificatetransparencyenforcementdisabledforurls_;
  certificatetransparencyenforcementdisabledforurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_certificatetransparencyenforcementdisabledforurls(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforurls) {
  delete certificatetransparencyenforcementdisabledforurls_;
  certificatetransparencyenforcementdisabledforurls_ = certificatetransparencyenforcementdisabledforurls;
  if (certificatetransparencyenforcementdisabledforurls) {
    set_has_certificatetransparencyenforcementdisabledforurls();
  } else {
    clear_has_certificatetransparencyenforcementdisabledforurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
}

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForCas = 437;
bool CloudPolicySettings::has_certificatetransparencyenforcementdisabledforcas() const {
  return (_has_bits_[6] & 0x00002000u) != 0;
}
void CloudPolicySettings::set_has_certificatetransparencyenforcementdisabledforcas() {
  _has_bits_[6] |= 0x00002000u;
}
void CloudPolicySettings::clear_has_certificatetransparencyenforcementdisabledforcas() {
  _has_bits_[6] &= ~0x00002000u;
}
void CloudPolicySettings::clear_certificatetransparencyenforcementdisabledforcas() {
  if (certificatetransparencyenforcementdisabledforcas_ != NULL) certificatetransparencyenforcementdisabledforcas_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_certificatetransparencyenforcementdisabledforcas();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::certificatetransparencyenforcementdisabledforcas() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
  return certificatetransparencyenforcementdisabledforcas_ != NULL ? *certificatetransparencyenforcementdisabledforcas_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_certificatetransparencyenforcementdisabledforcas() {
  set_has_certificatetransparencyenforcementdisabledforcas();
  if (certificatetransparencyenforcementdisabledforcas_ == NULL) {
    certificatetransparencyenforcementdisabledforcas_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
  return certificatetransparencyenforcementdisabledforcas_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_certificatetransparencyenforcementdisabledforcas() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
  clear_has_certificatetransparencyenforcementdisabledforcas();
  ::enterprise_management::StringListPolicyProto* temp = certificatetransparencyenforcementdisabledforcas_;
  certificatetransparencyenforcementdisabledforcas_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_certificatetransparencyenforcementdisabledforcas(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforcas) {
  delete certificatetransparencyenforcementdisabledforcas_;
  certificatetransparencyenforcementdisabledforcas_ = certificatetransparencyenforcementdisabledforcas;
  if (certificatetransparencyenforcementdisabledforcas) {
    set_has_certificatetransparencyenforcementdisabledforcas();
  } else {
    clear_has_certificatetransparencyenforcementdisabledforcas();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
}

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForLegacyCas = 438;
bool CloudPolicySettings::has_certificatetransparencyenforcementdisabledforlegacycas() const {
  return (_has_bits_[6] & 0x00004000u) != 0;
}
void CloudPolicySettings::set_has_certificatetransparencyenforcementdisabledforlegacycas() {
  _has_bits_[6] |= 0x00004000u;
}
void CloudPolicySettings::clear_has_certificatetransparencyenforcementdisabledforlegacycas() {
  _has_bits_[6] &= ~0x00004000u;
}
void CloudPolicySettings::clear_certificatetransparencyenforcementdisabledforlegacycas() {
  if (certificatetransparencyenforcementdisabledforlegacycas_ != NULL) certificatetransparencyenforcementdisabledforlegacycas_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_certificatetransparencyenforcementdisabledforlegacycas();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::certificatetransparencyenforcementdisabledforlegacycas() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
  return certificatetransparencyenforcementdisabledforlegacycas_ != NULL ? *certificatetransparencyenforcementdisabledforlegacycas_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_certificatetransparencyenforcementdisabledforlegacycas() {
  set_has_certificatetransparencyenforcementdisabledforlegacycas();
  if (certificatetransparencyenforcementdisabledforlegacycas_ == NULL) {
    certificatetransparencyenforcementdisabledforlegacycas_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
  return certificatetransparencyenforcementdisabledforlegacycas_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_certificatetransparencyenforcementdisabledforlegacycas() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
  clear_has_certificatetransparencyenforcementdisabledforlegacycas();
  ::enterprise_management::StringListPolicyProto* temp = certificatetransparencyenforcementdisabledforlegacycas_;
  certificatetransparencyenforcementdisabledforlegacycas_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_certificatetransparencyenforcementdisabledforlegacycas(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforlegacycas) {
  delete certificatetransparencyenforcementdisabledforlegacycas_;
  certificatetransparencyenforcementdisabledforlegacycas_ = certificatetransparencyenforcementdisabledforlegacycas;
  if (certificatetransparencyenforcementdisabledforlegacycas) {
    set_has_certificatetransparencyenforcementdisabledforlegacycas();
  } else {
    clear_has_certificatetransparencyenforcementdisabledforlegacycas();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
}

// optional .enterprise_management.BooleanPolicyProto SSLErrorOverrideAllowed = 302;
bool CloudPolicySettings::has_sslerroroverrideallowed() const {
  return (_has_bits_[4] & 0x00800000u) != 0;
}
void CloudPolicySettings::set_has_sslerroroverrideallowed() {
  _has_bits_[4] |= 0x00800000u;
}
void CloudPolicySettings::clear_has_sslerroroverrideallowed() {
  _has_bits_[4] &= ~0x00800000u;
}
void CloudPolicySettings::clear_sslerroroverrideallowed() {
  if (sslerroroverrideallowed_ != NULL) sslerroroverrideallowed_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_sslerroroverrideallowed();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::sslerroroverrideallowed() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
  return sslerroroverrideallowed_ != NULL ? *sslerroroverrideallowed_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_sslerroroverrideallowed() {
  set_has_sslerroroverrideallowed();
  if (sslerroroverrideallowed_ == NULL) {
    sslerroroverrideallowed_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
  return sslerroroverrideallowed_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_sslerroroverrideallowed() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
  clear_has_sslerroroverrideallowed();
  ::enterprise_management::BooleanPolicyProto* temp = sslerroroverrideallowed_;
  sslerroroverrideallowed_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_sslerroroverrideallowed(::enterprise_management::BooleanPolicyProto* sslerroroverrideallowed) {
  delete sslerroroverrideallowed_;
  sslerroroverrideallowed_ = sslerroroverrideallowed;
  if (sslerroroverrideallowed) {
    set_has_sslerroroverrideallowed();
  } else {
    clear_has_sslerroroverrideallowed();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
}

// optional .enterprise_management.BooleanPolicyProto QuicAllowed = 303;
bool CloudPolicySettings::has_quicallowed() const {
  return (_has_bits_[4] & 0x01000000u) != 0;
}
void CloudPolicySettings::set_has_quicallowed() {
  _has_bits_[4] |= 0x01000000u;
}
void CloudPolicySettings::clear_has_quicallowed() {
  _has_bits_[4] &= ~0x01000000u;
}
void CloudPolicySettings::clear_quicallowed() {
  if (quicallowed_ != NULL) quicallowed_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_quicallowed();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::quicallowed() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.QuicAllowed)
  return quicallowed_ != NULL ? *quicallowed_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_quicallowed() {
  set_has_quicallowed();
  if (quicallowed_ == NULL) {
    quicallowed_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.QuicAllowed)
  return quicallowed_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_quicallowed() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.QuicAllowed)
  clear_has_quicallowed();
  ::enterprise_management::BooleanPolicyProto* temp = quicallowed_;
  quicallowed_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_quicallowed(::enterprise_management::BooleanPolicyProto* quicallowed) {
  delete quicallowed_;
  quicallowed_ = quicallowed;
  if (quicallowed) {
    set_has_quicallowed();
  } else {
    clear_has_quicallowed();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.QuicAllowed)
}

// optional .enterprise_management.BooleanPolicyProto HardwareAccelerationModeEnabled = 306;
bool CloudPolicySettings::has_hardwareaccelerationmodeenabled() const {
  return (_has_bits_[4] & 0x02000000u) != 0;
}
void CloudPolicySettings::set_has_hardwareaccelerationmodeenabled() {
  _has_bits_[4] |= 0x02000000u;
}
void CloudPolicySettings::clear_has_hardwareaccelerationmodeenabled() {
  _has_bits_[4] &= ~0x02000000u;
}
void CloudPolicySettings::clear_hardwareaccelerationmodeenabled() {
  if (hardwareaccelerationmodeenabled_ != NULL) hardwareaccelerationmodeenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_hardwareaccelerationmodeenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::hardwareaccelerationmodeenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.HardwareAccelerationModeEnabled)
  return hardwareaccelerationmodeenabled_ != NULL ? *hardwareaccelerationmodeenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_hardwareaccelerationmodeenabled() {
  set_has_hardwareaccelerationmodeenabled();
  if (hardwareaccelerationmodeenabled_ == NULL) {
    hardwareaccelerationmodeenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.HardwareAccelerationModeEnabled)
  return hardwareaccelerationmodeenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_hardwareaccelerationmodeenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.HardwareAccelerationModeEnabled)
  clear_has_hardwareaccelerationmodeenabled();
  ::enterprise_management::BooleanPolicyProto* temp = hardwareaccelerationmodeenabled_;
  hardwareaccelerationmodeenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_hardwareaccelerationmodeenabled(::enterprise_management::BooleanPolicyProto* hardwareaccelerationmodeenabled) {
  delete hardwareaccelerationmodeenabled_;
  hardwareaccelerationmodeenabled_ = hardwareaccelerationmodeenabled;
  if (hardwareaccelerationmodeenabled) {
    set_has_hardwareaccelerationmodeenabled();
  } else {
    clear_has_hardwareaccelerationmodeenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.HardwareAccelerationModeEnabled)
}

// optional .enterprise_management.BooleanPolicyProto SuppressUnsupportedOSWarning = 326;
bool CloudPolicySettings::has_suppressunsupportedoswarning() const {
  return (_has_bits_[4] & 0x40000000u) != 0;
}
void CloudPolicySettings::set_has_suppressunsupportedoswarning() {
  _has_bits_[4] |= 0x40000000u;
}
void CloudPolicySettings::clear_has_suppressunsupportedoswarning() {
  _has_bits_[4] &= ~0x40000000u;
}
void CloudPolicySettings::clear_suppressunsupportedoswarning() {
  if (suppressunsupportedoswarning_ != NULL) suppressunsupportedoswarning_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_suppressunsupportedoswarning();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::suppressunsupportedoswarning() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SuppressUnsupportedOSWarning)
  return suppressunsupportedoswarning_ != NULL ? *suppressunsupportedoswarning_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_suppressunsupportedoswarning() {
  set_has_suppressunsupportedoswarning();
  if (suppressunsupportedoswarning_ == NULL) {
    suppressunsupportedoswarning_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SuppressUnsupportedOSWarning)
  return suppressunsupportedoswarning_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_suppressunsupportedoswarning() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SuppressUnsupportedOSWarning)
  clear_has_suppressunsupportedoswarning();
  ::enterprise_management::BooleanPolicyProto* temp = suppressunsupportedoswarning_;
  suppressunsupportedoswarning_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_suppressunsupportedoswarning(::enterprise_management::BooleanPolicyProto* suppressunsupportedoswarning) {
  delete suppressunsupportedoswarning_;
  suppressunsupportedoswarning_ = suppressunsupportedoswarning;
  if (suppressunsupportedoswarning) {
    set_has_suppressunsupportedoswarning();
  } else {
    clear_has_suppressunsupportedoswarning();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SuppressUnsupportedOSWarning)
}

// optional .enterprise_management.BooleanPolicyProto TaskManagerEndProcessEnabled = 329;
bool CloudPolicySettings::has_taskmanagerendprocessenabled() const {
  return (_has_bits_[4] & 0x80000000u) != 0;
}
void CloudPolicySettings::set_has_taskmanagerendprocessenabled() {
  _has_bits_[4] |= 0x80000000u;
}
void CloudPolicySettings::clear_has_taskmanagerendprocessenabled() {
  _has_bits_[4] &= ~0x80000000u;
}
void CloudPolicySettings::clear_taskmanagerendprocessenabled() {
  if (taskmanagerendprocessenabled_ != NULL) taskmanagerendprocessenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_taskmanagerendprocessenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::taskmanagerendprocessenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.TaskManagerEndProcessEnabled)
  return taskmanagerendprocessenabled_ != NULL ? *taskmanagerendprocessenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_taskmanagerendprocessenabled() {
  set_has_taskmanagerendprocessenabled();
  if (taskmanagerendprocessenabled_ == NULL) {
    taskmanagerendprocessenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.TaskManagerEndProcessEnabled)
  return taskmanagerendprocessenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_taskmanagerendprocessenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.TaskManagerEndProcessEnabled)
  clear_has_taskmanagerendprocessenabled();
  ::enterprise_management::BooleanPolicyProto* temp = taskmanagerendprocessenabled_;
  taskmanagerendprocessenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_taskmanagerendprocessenabled(::enterprise_management::BooleanPolicyProto* taskmanagerendprocessenabled) {
  delete taskmanagerendprocessenabled_;
  taskmanagerendprocessenabled_ = taskmanagerendprocessenabled;
  if (taskmanagerendprocessenabled) {
    set_has_taskmanagerendprocessenabled();
  } else {
    clear_has_taskmanagerendprocessenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.TaskManagerEndProcessEnabled)
}

// optional .enterprise_management.StringPolicyProto AllowedDomainsForApps = 333;
bool CloudPolicySettings::has_alloweddomainsforapps() const {
  return (_has_bits_[5] & 0x00000001u) != 0;
}
void CloudPolicySettings::set_has_alloweddomainsforapps() {
  _has_bits_[5] |= 0x00000001u;
}
void CloudPolicySettings::clear_has_alloweddomainsforapps() {
  _has_bits_[5] &= ~0x00000001u;
}
void CloudPolicySettings::clear_alloweddomainsforapps() {
  if (alloweddomainsforapps_ != NULL) alloweddomainsforapps_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_alloweddomainsforapps();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::alloweddomainsforapps() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
  return alloweddomainsforapps_ != NULL ? *alloweddomainsforapps_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_alloweddomainsforapps() {
  set_has_alloweddomainsforapps();
  if (alloweddomainsforapps_ == NULL) {
    alloweddomainsforapps_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
  return alloweddomainsforapps_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_alloweddomainsforapps() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
  clear_has_alloweddomainsforapps();
  ::enterprise_management::StringPolicyProto* temp = alloweddomainsforapps_;
  alloweddomainsforapps_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_alloweddomainsforapps(::enterprise_management::StringPolicyProto* alloweddomainsforapps) {
  delete alloweddomainsforapps_;
  alloweddomainsforapps_ = alloweddomainsforapps;
  if (alloweddomainsforapps) {
    set_has_alloweddomainsforapps();
  } else {
    clear_has_alloweddomainsforapps();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
}

// optional .enterprise_management.BooleanPolicyProto PacHttpsUrlStrippingEnabled = 334;
bool CloudPolicySettings::has_pachttpsurlstrippingenabled() const {
  return (_has_bits_[5] & 0x00000002u) != 0;
}
void CloudPolicySettings::set_has_pachttpsurlstrippingenabled() {
  _has_bits_[5] |= 0x00000002u;
}
void CloudPolicySettings::clear_has_pachttpsurlstrippingenabled() {
  _has_bits_[5] &= ~0x00000002u;
}
void CloudPolicySettings::clear_pachttpsurlstrippingenabled() {
  if (pachttpsurlstrippingenabled_ != NULL) pachttpsurlstrippingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_pachttpsurlstrippingenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::pachttpsurlstrippingenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PacHttpsUrlStrippingEnabled)
  return pachttpsurlstrippingenabled_ != NULL ? *pachttpsurlstrippingenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_pachttpsurlstrippingenabled() {
  set_has_pachttpsurlstrippingenabled();
  if (pachttpsurlstrippingenabled_ == NULL) {
    pachttpsurlstrippingenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PacHttpsUrlStrippingEnabled)
  return pachttpsurlstrippingenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_pachttpsurlstrippingenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PacHttpsUrlStrippingEnabled)
  clear_has_pachttpsurlstrippingenabled();
  ::enterprise_management::BooleanPolicyProto* temp = pachttpsurlstrippingenabled_;
  pachttpsurlstrippingenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_pachttpsurlstrippingenabled(::enterprise_management::BooleanPolicyProto* pachttpsurlstrippingenabled) {
  delete pachttpsurlstrippingenabled_;
  pachttpsurlstrippingenabled_ = pachttpsurlstrippingenabled;
  if (pachttpsurlstrippingenabled) {
    set_has_pachttpsurlstrippingenabled();
  } else {
    clear_has_pachttpsurlstrippingenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PacHttpsUrlStrippingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto EnableMediaRouter = 335;
bool CloudPolicySettings::has_enablemediarouter() const {
  return (_has_bits_[5] & 0x00000004u) != 0;
}
void CloudPolicySettings::set_has_enablemediarouter() {
  _has_bits_[5] |= 0x00000004u;
}
void CloudPolicySettings::clear_has_enablemediarouter() {
  _has_bits_[5] &= ~0x00000004u;
}
void CloudPolicySettings::clear_enablemediarouter() {
  if (enablemediarouter_ != NULL) enablemediarouter_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_enablemediarouter();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enablemediarouter() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableMediaRouter)
  return enablemediarouter_ != NULL ? *enablemediarouter_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enablemediarouter() {
  set_has_enablemediarouter();
  if (enablemediarouter_ == NULL) {
    enablemediarouter_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableMediaRouter)
  return enablemediarouter_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enablemediarouter() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableMediaRouter)
  clear_has_enablemediarouter();
  ::enterprise_management::BooleanPolicyProto* temp = enablemediarouter_;
  enablemediarouter_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_enablemediarouter(::enterprise_management::BooleanPolicyProto* enablemediarouter) {
  delete enablemediarouter_;
  enablemediarouter_ = enablemediarouter;
  if (enablemediarouter) {
    set_has_enablemediarouter();
  } else {
    clear_has_enablemediarouter();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableMediaRouter)
}

// optional .enterprise_management.BooleanPolicyProto ShowCastIconInToolbar = 364;
bool CloudPolicySettings::has_showcasticonintoolbar() const {
  return (_has_bits_[5] & 0x00001000u) != 0;
}
void CloudPolicySettings::set_has_showcasticonintoolbar() {
  _has_bits_[5] |= 0x00001000u;
}
void CloudPolicySettings::clear_has_showcasticonintoolbar() {
  _has_bits_[5] &= ~0x00001000u;
}
void CloudPolicySettings::clear_showcasticonintoolbar() {
  if (showcasticonintoolbar_ != NULL) showcasticonintoolbar_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_showcasticonintoolbar();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::showcasticonintoolbar() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ShowCastIconInToolbar)
  return showcasticonintoolbar_ != NULL ? *showcasticonintoolbar_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_showcasticonintoolbar() {
  set_has_showcasticonintoolbar();
  if (showcasticonintoolbar_ == NULL) {
    showcasticonintoolbar_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ShowCastIconInToolbar)
  return showcasticonintoolbar_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_showcasticonintoolbar() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ShowCastIconInToolbar)
  clear_has_showcasticonintoolbar();
  ::enterprise_management::BooleanPolicyProto* temp = showcasticonintoolbar_;
  showcasticonintoolbar_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_showcasticonintoolbar(::enterprise_management::BooleanPolicyProto* showcasticonintoolbar) {
  delete showcasticonintoolbar_;
  showcasticonintoolbar_ = showcasticonintoolbar;
  if (showcasticonintoolbar) {
    set_has_showcasticonintoolbar();
  } else {
    clear_has_showcasticonintoolbar();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ShowCastIconInToolbar)
}

// optional .enterprise_management.BooleanPolicyProto MediaRouterCastAllowAllIPs = 439;
bool CloudPolicySettings::has_mediaroutercastallowallips() const {
  return (_has_bits_[6] & 0x00008000u) != 0;
}
void CloudPolicySettings::set_has_mediaroutercastallowallips() {
  _has_bits_[6] |= 0x00008000u;
}
void CloudPolicySettings::clear_has_mediaroutercastallowallips() {
  _has_bits_[6] &= ~0x00008000u;
}
void CloudPolicySettings::clear_mediaroutercastallowallips() {
  if (mediaroutercastallowallips_ != NULL) mediaroutercastallowallips_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_mediaroutercastallowallips();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::mediaroutercastallowallips() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.MediaRouterCastAllowAllIPs)
  return mediaroutercastallowallips_ != NULL ? *mediaroutercastallowallips_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_mediaroutercastallowallips() {
  set_has_mediaroutercastallowallips();
  if (mediaroutercastallowallips_ == NULL) {
    mediaroutercastallowallips_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.MediaRouterCastAllowAllIPs)
  return mediaroutercastallowallips_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_mediaroutercastallowallips() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.MediaRouterCastAllowAllIPs)
  clear_has_mediaroutercastallowallips();
  ::enterprise_management::BooleanPolicyProto* temp = mediaroutercastallowallips_;
  mediaroutercastallowallips_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_mediaroutercastallowallips(::enterprise_management::BooleanPolicyProto* mediaroutercastallowallips) {
  delete mediaroutercastallowallips_;
  mediaroutercastallowallips_ = mediaroutercastallowallips;
  if (mediaroutercastallowallips) {
    set_has_mediaroutercastallowallips();
  } else {
    clear_has_mediaroutercastallowallips();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.MediaRouterCastAllowAllIPs)
}

// optional .enterprise_management.StringPolicyProto WebRtcUdpPortRange = 341;
bool CloudPolicySettings::has_webrtcudpportrange() const {
  return (_has_bits_[5] & 0x00000010u) != 0;
}
void CloudPolicySettings::set_has_webrtcudpportrange() {
  _has_bits_[5] |= 0x00000010u;
}
void CloudPolicySettings::clear_has_webrtcudpportrange() {
  _has_bits_[5] &= ~0x00000010u;
}
void CloudPolicySettings::clear_webrtcudpportrange() {
  if (webrtcudpportrange_ != NULL) webrtcudpportrange_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_webrtcudpportrange();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::webrtcudpportrange() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
  return webrtcudpportrange_ != NULL ? *webrtcudpportrange_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_webrtcudpportrange() {
  set_has_webrtcudpportrange();
  if (webrtcudpportrange_ == NULL) {
    webrtcudpportrange_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
  return webrtcudpportrange_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_webrtcudpportrange() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
  clear_has_webrtcudpportrange();
  ::enterprise_management::StringPolicyProto* temp = webrtcudpportrange_;
  webrtcudpportrange_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_webrtcudpportrange(::enterprise_management::StringPolicyProto* webrtcudpportrange) {
  delete webrtcudpportrange_;
  webrtcudpportrange_ = webrtcudpportrange;
  if (webrtcudpportrange) {
    set_has_webrtcudpportrange();
  } else {
    clear_has_webrtcudpportrange();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
}

// optional .enterprise_management.BooleanPolicyProto ComponentUpdatesEnabled = 344;
bool CloudPolicySettings::has_componentupdatesenabled() const {
  return (_has_bits_[5] & 0x00000040u) != 0;
}
void CloudPolicySettings::set_has_componentupdatesenabled() {
  _has_bits_[5] |= 0x00000040u;
}
void CloudPolicySettings::clear_has_componentupdatesenabled() {
  _has_bits_[5] &= ~0x00000040u;
}
void CloudPolicySettings::clear_componentupdatesenabled() {
  if (componentupdatesenabled_ != NULL) componentupdatesenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_componentupdatesenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::componentupdatesenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ComponentUpdatesEnabled)
  return componentupdatesenabled_ != NULL ? *componentupdatesenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_componentupdatesenabled() {
  set_has_componentupdatesenabled();
  if (componentupdatesenabled_ == NULL) {
    componentupdatesenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ComponentUpdatesEnabled)
  return componentupdatesenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_componentupdatesenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ComponentUpdatesEnabled)
  clear_has_componentupdatesenabled();
  ::enterprise_management::BooleanPolicyProto* temp = componentupdatesenabled_;
  componentupdatesenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_componentupdatesenabled(::enterprise_management::BooleanPolicyProto* componentupdatesenabled) {
  delete componentupdatesenabled_;
  componentupdatesenabled_ = componentupdatesenabled;
  if (componentupdatesenabled) {
    set_has_componentupdatesenabled();
  } else {
    clear_has_componentupdatesenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ComponentUpdatesEnabled)
}

// optional .enterprise_management.BooleanPolicyProto BrowserNetworkTimeQueriesEnabled = 372;
bool CloudPolicySettings::has_browsernetworktimequeriesenabled() const {
  return (_has_bits_[5] & 0x00008000u) != 0;
}
void CloudPolicySettings::set_has_browsernetworktimequeriesenabled() {
  _has_bits_[5] |= 0x00008000u;
}
void CloudPolicySettings::clear_has_browsernetworktimequeriesenabled() {
  _has_bits_[5] &= ~0x00008000u;
}
void CloudPolicySettings::clear_browsernetworktimequeriesenabled() {
  if (browsernetworktimequeriesenabled_ != NULL) browsernetworktimequeriesenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_browsernetworktimequeriesenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::browsernetworktimequeriesenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserNetworkTimeQueriesEnabled)
  return browsernetworktimequeriesenabled_ != NULL ? *browsernetworktimequeriesenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_browsernetworktimequeriesenabled() {
  set_has_browsernetworktimequeriesenabled();
  if (browsernetworktimequeriesenabled_ == NULL) {
    browsernetworktimequeriesenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserNetworkTimeQueriesEnabled)
  return browsernetworktimequeriesenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_browsernetworktimequeriesenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserNetworkTimeQueriesEnabled)
  clear_has_browsernetworktimequeriesenabled();
  ::enterprise_management::BooleanPolicyProto* temp = browsernetworktimequeriesenabled_;
  browsernetworktimequeriesenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_browsernetworktimequeriesenabled(::enterprise_management::BooleanPolicyProto* browsernetworktimequeriesenabled) {
  delete browsernetworktimequeriesenabled_;
  browsernetworktimequeriesenabled_ = browsernetworktimequeriesenabled;
  if (browsernetworktimequeriesenabled) {
    set_has_browsernetworktimequeriesenabled();
  } else {
    clear_has_browsernetworktimequeriesenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserNetworkTimeQueriesEnabled)
}

// optional .enterprise_management.BooleanPolicyProto PrintPreviewUseSystemDefaultPrinter = 375;
bool CloudPolicySettings::has_printpreviewusesystemdefaultprinter() const {
  return (_has_bits_[5] & 0x00020000u) != 0;
}
void CloudPolicySettings::set_has_printpreviewusesystemdefaultprinter() {
  _has_bits_[5] |= 0x00020000u;
}
void CloudPolicySettings::clear_has_printpreviewusesystemdefaultprinter() {
  _has_bits_[5] &= ~0x00020000u;
}
void CloudPolicySettings::clear_printpreviewusesystemdefaultprinter() {
  if (printpreviewusesystemdefaultprinter_ != NULL) printpreviewusesystemdefaultprinter_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_printpreviewusesystemdefaultprinter();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::printpreviewusesystemdefaultprinter() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PrintPreviewUseSystemDefaultPrinter)
  return printpreviewusesystemdefaultprinter_ != NULL ? *printpreviewusesystemdefaultprinter_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_printpreviewusesystemdefaultprinter() {
  set_has_printpreviewusesystemdefaultprinter();
  if (printpreviewusesystemdefaultprinter_ == NULL) {
    printpreviewusesystemdefaultprinter_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PrintPreviewUseSystemDefaultPrinter)
  return printpreviewusesystemdefaultprinter_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_printpreviewusesystemdefaultprinter() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PrintPreviewUseSystemDefaultPrinter)
  clear_has_printpreviewusesystemdefaultprinter();
  ::enterprise_management::BooleanPolicyProto* temp = printpreviewusesystemdefaultprinter_;
  printpreviewusesystemdefaultprinter_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_printpreviewusesystemdefaultprinter(::enterprise_management::BooleanPolicyProto* printpreviewusesystemdefaultprinter) {
  delete printpreviewusesystemdefaultprinter_;
  printpreviewusesystemdefaultprinter_ = printpreviewusesystemdefaultprinter;
  if (printpreviewusesystemdefaultprinter) {
    set_has_printpreviewusesystemdefaultprinter();
  } else {
    clear_has_printpreviewusesystemdefaultprinter();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PrintPreviewUseSystemDefaultPrinter)
}

// optional .enterprise_management.BooleanPolicyProto CloudPolicyOverridesMachinePolicy = 383;
bool CloudPolicySettings::has_cloudpolicyoverridesmachinepolicy() const {
  return (_has_bits_[5] & 0x00040000u) != 0;
}
void CloudPolicySettings::set_has_cloudpolicyoverridesmachinepolicy() {
  _has_bits_[5] |= 0x00040000u;
}
void CloudPolicySettings::clear_has_cloudpolicyoverridesmachinepolicy() {
  _has_bits_[5] &= ~0x00040000u;
}
void CloudPolicySettings::clear_cloudpolicyoverridesmachinepolicy() {
  if (cloudpolicyoverridesmachinepolicy_ != NULL) cloudpolicyoverridesmachinepolicy_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_cloudpolicyoverridesmachinepolicy();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::cloudpolicyoverridesmachinepolicy() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudPolicyOverridesMachinePolicy)
  return cloudpolicyoverridesmachinepolicy_ != NULL ? *cloudpolicyoverridesmachinepolicy_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_cloudpolicyoverridesmachinepolicy() {
  set_has_cloudpolicyoverridesmachinepolicy();
  if (cloudpolicyoverridesmachinepolicy_ == NULL) {
    cloudpolicyoverridesmachinepolicy_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudPolicyOverridesMachinePolicy)
  return cloudpolicyoverridesmachinepolicy_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_cloudpolicyoverridesmachinepolicy() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudPolicyOverridesMachinePolicy)
  clear_has_cloudpolicyoverridesmachinepolicy();
  ::enterprise_management::BooleanPolicyProto* temp = cloudpolicyoverridesmachinepolicy_;
  cloudpolicyoverridesmachinepolicy_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_cloudpolicyoverridesmachinepolicy(::enterprise_management::BooleanPolicyProto* cloudpolicyoverridesmachinepolicy) {
  delete cloudpolicyoverridesmachinepolicy_;
  cloudpolicyoverridesmachinepolicy_ = cloudpolicyoverridesmachinepolicy;
  if (cloudpolicyoverridesmachinepolicy) {
    set_has_cloudpolicyoverridesmachinepolicy();
  } else {
    clear_has_cloudpolicyoverridesmachinepolicy();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudPolicyOverridesMachinePolicy)
}

// optional .enterprise_management.BooleanPolicyProto PromptForDownloadLocation = 397;
bool CloudPolicySettings::has_promptfordownloadlocation() const {
  return (_has_bits_[5] & 0x00400000u) != 0;
}
void CloudPolicySettings::set_has_promptfordownloadlocation() {
  _has_bits_[5] |= 0x00400000u;
}
void CloudPolicySettings::clear_has_promptfordownloadlocation() {
  _has_bits_[5] &= ~0x00400000u;
}
void CloudPolicySettings::clear_promptfordownloadlocation() {
  if (promptfordownloadlocation_ != NULL) promptfordownloadlocation_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_promptfordownloadlocation();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::promptfordownloadlocation() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PromptForDownloadLocation)
  return promptfordownloadlocation_ != NULL ? *promptfordownloadlocation_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_promptfordownloadlocation() {
  set_has_promptfordownloadlocation();
  if (promptfordownloadlocation_ == NULL) {
    promptfordownloadlocation_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PromptForDownloadLocation)
  return promptfordownloadlocation_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_promptfordownloadlocation() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PromptForDownloadLocation)
  clear_has_promptfordownloadlocation();
  ::enterprise_management::BooleanPolicyProto* temp = promptfordownloadlocation_;
  promptfordownloadlocation_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_promptfordownloadlocation(::enterprise_management::BooleanPolicyProto* promptfordownloadlocation) {
  delete promptfordownloadlocation_;
  promptfordownloadlocation_ = promptfordownloadlocation;
  if (promptfordownloadlocation) {
    set_has_promptfordownloadlocation();
  } else {
    clear_has_promptfordownloadlocation();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PromptForDownloadLocation)
}

// optional .enterprise_management.StringPolicyProto IsolateOrigins = 400;
bool CloudPolicySettings::has_isolateorigins() const {
  return (_has_bits_[5] & 0x00800000u) != 0;
}
void CloudPolicySettings::set_has_isolateorigins() {
  _has_bits_[5] |= 0x00800000u;
}
void CloudPolicySettings::clear_has_isolateorigins() {
  _has_bits_[5] &= ~0x00800000u;
}
void CloudPolicySettings::clear_isolateorigins() {
  if (isolateorigins_ != NULL) isolateorigins_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_isolateorigins();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::isolateorigins() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.IsolateOrigins)
  return isolateorigins_ != NULL ? *isolateorigins_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_isolateorigins() {
  set_has_isolateorigins();
  if (isolateorigins_ == NULL) {
    isolateorigins_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.IsolateOrigins)
  return isolateorigins_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_isolateorigins() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.IsolateOrigins)
  clear_has_isolateorigins();
  ::enterprise_management::StringPolicyProto* temp = isolateorigins_;
  isolateorigins_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_isolateorigins(::enterprise_management::StringPolicyProto* isolateorigins) {
  delete isolateorigins_;
  isolateorigins_ = isolateorigins;
  if (isolateorigins) {
    set_has_isolateorigins();
  } else {
    clear_has_isolateorigins();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.IsolateOrigins)
}

// optional .enterprise_management.BooleanPolicyProto SitePerProcess = 401;
bool CloudPolicySettings::has_siteperprocess() const {
  return (_has_bits_[5] & 0x01000000u) != 0;
}
void CloudPolicySettings::set_has_siteperprocess() {
  _has_bits_[5] |= 0x01000000u;
}
void CloudPolicySettings::clear_has_siteperprocess() {
  _has_bits_[5] &= ~0x01000000u;
}
void CloudPolicySettings::clear_siteperprocess() {
  if (siteperprocess_ != NULL) siteperprocess_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_siteperprocess();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::siteperprocess() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SitePerProcess)
  return siteperprocess_ != NULL ? *siteperprocess_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_siteperprocess() {
  set_has_siteperprocess();
  if (siteperprocess_ == NULL) {
    siteperprocess_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SitePerProcess)
  return siteperprocess_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_siteperprocess() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SitePerProcess)
  clear_has_siteperprocess();
  ::enterprise_management::BooleanPolicyProto* temp = siteperprocess_;
  siteperprocess_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_siteperprocess(::enterprise_management::BooleanPolicyProto* siteperprocess) {
  delete siteperprocess_;
  siteperprocess_ = siteperprocess;
  if (siteperprocess) {
    set_has_siteperprocess();
  } else {
    clear_has_siteperprocess();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SitePerProcess)
}

// optional .enterprise_management.BooleanPolicyProto WebDriverOverridesIncompatiblePolicies = 416;
bool CloudPolicySettings::has_webdriveroverridesincompatiblepolicies() const {
  return (_has_bits_[6] & 0x00000004u) != 0;
}
void CloudPolicySettings::set_has_webdriveroverridesincompatiblepolicies() {
  _has_bits_[6] |= 0x00000004u;
}
void CloudPolicySettings::clear_has_webdriveroverridesincompatiblepolicies() {
  _has_bits_[6] &= ~0x00000004u;
}
void CloudPolicySettings::clear_webdriveroverridesincompatiblepolicies() {
  if (webdriveroverridesincompatiblepolicies_ != NULL) webdriveroverridesincompatiblepolicies_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_webdriveroverridesincompatiblepolicies();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::webdriveroverridesincompatiblepolicies() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebDriverOverridesIncompatiblePolicies)
  return webdriveroverridesincompatiblepolicies_ != NULL ? *webdriveroverridesincompatiblepolicies_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_webdriveroverridesincompatiblepolicies() {
  set_has_webdriveroverridesincompatiblepolicies();
  if (webdriveroverridesincompatiblepolicies_ == NULL) {
    webdriveroverridesincompatiblepolicies_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebDriverOverridesIncompatiblePolicies)
  return webdriveroverridesincompatiblepolicies_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_webdriveroverridesincompatiblepolicies() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebDriverOverridesIncompatiblePolicies)
  clear_has_webdriveroverridesincompatiblepolicies();
  ::enterprise_management::BooleanPolicyProto* temp = webdriveroverridesincompatiblepolicies_;
  webdriveroverridesincompatiblepolicies_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_webdriveroverridesincompatiblepolicies(::enterprise_management::BooleanPolicyProto* webdriveroverridesincompatiblepolicies) {
  delete webdriveroverridesincompatiblepolicies_;
  webdriveroverridesincompatiblepolicies_ = webdriveroverridesincompatiblepolicies;
  if (webdriveroverridesincompatiblepolicies) {
    set_has_webdriveroverridesincompatiblepolicies();
  } else {
    clear_has_webdriveroverridesincompatiblepolicies();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebDriverOverridesIncompatiblePolicies)
}

// optional .enterprise_management.StringListPolicyProto UnsafelyTreatInsecureOriginAsSecure = 402;
bool CloudPolicySettings::has_unsafelytreatinsecureoriginassecure() const {
  return (_has_bits_[5] & 0x02000000u) != 0;
}
void CloudPolicySettings::set_has_unsafelytreatinsecureoriginassecure() {
  _has_bits_[5] |= 0x02000000u;
}
void CloudPolicySettings::clear_has_unsafelytreatinsecureoriginassecure() {
  _has_bits_[5] &= ~0x02000000u;
}
void CloudPolicySettings::clear_unsafelytreatinsecureoriginassecure() {
  if (unsafelytreatinsecureoriginassecure_ != NULL) unsafelytreatinsecureoriginassecure_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_unsafelytreatinsecureoriginassecure();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::unsafelytreatinsecureoriginassecure() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.UnsafelyTreatInsecureOriginAsSecure)
  return unsafelytreatinsecureoriginassecure_ != NULL ? *unsafelytreatinsecureoriginassecure_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_unsafelytreatinsecureoriginassecure() {
  set_has_unsafelytreatinsecureoriginassecure();
  if (unsafelytreatinsecureoriginassecure_ == NULL) {
    unsafelytreatinsecureoriginassecure_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.UnsafelyTreatInsecureOriginAsSecure)
  return unsafelytreatinsecureoriginassecure_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_unsafelytreatinsecureoriginassecure() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.UnsafelyTreatInsecureOriginAsSecure)
  clear_has_unsafelytreatinsecureoriginassecure();
  ::enterprise_management::StringListPolicyProto* temp = unsafelytreatinsecureoriginassecure_;
  unsafelytreatinsecureoriginassecure_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_unsafelytreatinsecureoriginassecure(::enterprise_management::StringListPolicyProto* unsafelytreatinsecureoriginassecure) {
  delete unsafelytreatinsecureoriginassecure_;
  unsafelytreatinsecureoriginassecure_ = unsafelytreatinsecureoriginassecure;
  if (unsafelytreatinsecureoriginassecure) {
    set_has_unsafelytreatinsecureoriginassecure();
  } else {
    clear_has_unsafelytreatinsecureoriginassecure();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.UnsafelyTreatInsecureOriginAsSecure)
}

// optional .enterprise_management.StringPolicyProto DefaultDownloadDirectory = 403;
bool CloudPolicySettings::has_defaultdownloaddirectory() const {
  return (_has_bits_[5] & 0x04000000u) != 0;
}
void CloudPolicySettings::set_has_defaultdownloaddirectory() {
  _has_bits_[5] |= 0x04000000u;
}
void CloudPolicySettings::clear_has_defaultdownloaddirectory() {
  _has_bits_[5] &= ~0x04000000u;
}
void CloudPolicySettings::clear_defaultdownloaddirectory() {
  if (defaultdownloaddirectory_ != NULL) defaultdownloaddirectory_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_defaultdownloaddirectory();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultdownloaddirectory() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultDownloadDirectory)
  return defaultdownloaddirectory_ != NULL ? *defaultdownloaddirectory_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultdownloaddirectory() {
  set_has_defaultdownloaddirectory();
  if (defaultdownloaddirectory_ == NULL) {
    defaultdownloaddirectory_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultDownloadDirectory)
  return defaultdownloaddirectory_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultdownloaddirectory() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultDownloadDirectory)
  clear_has_defaultdownloaddirectory();
  ::enterprise_management::StringPolicyProto* temp = defaultdownloaddirectory_;
  defaultdownloaddirectory_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_defaultdownloaddirectory(::enterprise_management::StringPolicyProto* defaultdownloaddirectory) {
  delete defaultdownloaddirectory_;
  defaultdownloaddirectory_ = defaultdownloaddirectory;
  if (defaultdownloaddirectory) {
    set_has_defaultdownloaddirectory();
  } else {
    clear_has_defaultdownloaddirectory();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultDownloadDirectory)
}

// optional .enterprise_management.BooleanPolicyProto AbusiveExperienceInterventionEnforce = 406;
bool CloudPolicySettings::has_abusiveexperienceinterventionenforce() const {
  return (_has_bits_[5] & 0x10000000u) != 0;
}
void CloudPolicySettings::set_has_abusiveexperienceinterventionenforce() {
  _has_bits_[5] |= 0x10000000u;
}
void CloudPolicySettings::clear_has_abusiveexperienceinterventionenforce() {
  _has_bits_[5] &= ~0x10000000u;
}
void CloudPolicySettings::clear_abusiveexperienceinterventionenforce() {
  if (abusiveexperienceinterventionenforce_ != NULL) abusiveexperienceinterventionenforce_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_abusiveexperienceinterventionenforce();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::abusiveexperienceinterventionenforce() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AbusiveExperienceInterventionEnforce)
  return abusiveexperienceinterventionenforce_ != NULL ? *abusiveexperienceinterventionenforce_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_abusiveexperienceinterventionenforce() {
  set_has_abusiveexperienceinterventionenforce();
  if (abusiveexperienceinterventionenforce_ == NULL) {
    abusiveexperienceinterventionenforce_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AbusiveExperienceInterventionEnforce)
  return abusiveexperienceinterventionenforce_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_abusiveexperienceinterventionenforce() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AbusiveExperienceInterventionEnforce)
  clear_has_abusiveexperienceinterventionenforce();
  ::enterprise_management::BooleanPolicyProto* temp = abusiveexperienceinterventionenforce_;
  abusiveexperienceinterventionenforce_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_abusiveexperienceinterventionenforce(::enterprise_management::BooleanPolicyProto* abusiveexperienceinterventionenforce) {
  delete abusiveexperienceinterventionenforce_;
  abusiveexperienceinterventionenforce_ = abusiveexperienceinterventionenforce;
  if (abusiveexperienceinterventionenforce) {
    set_has_abusiveexperienceinterventionenforce();
  } else {
    clear_has_abusiveexperienceinterventionenforce();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AbusiveExperienceInterventionEnforce)
}

// optional .enterprise_management.StringListPolicyProto SpellcheckLanguage = 407;
bool CloudPolicySettings::has_spellchecklanguage() const {
  return (_has_bits_[5] & 0x20000000u) != 0;
}
void CloudPolicySettings::set_has_spellchecklanguage() {
  _has_bits_[5] |= 0x20000000u;
}
void CloudPolicySettings::clear_has_spellchecklanguage() {
  _has_bits_[5] &= ~0x20000000u;
}
void CloudPolicySettings::clear_spellchecklanguage() {
  if (spellchecklanguage_ != NULL) spellchecklanguage_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_spellchecklanguage();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::spellchecklanguage() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SpellcheckLanguage)
  return spellchecklanguage_ != NULL ? *spellchecklanguage_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_spellchecklanguage() {
  set_has_spellchecklanguage();
  if (spellchecklanguage_ == NULL) {
    spellchecklanguage_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SpellcheckLanguage)
  return spellchecklanguage_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_spellchecklanguage() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SpellcheckLanguage)
  clear_has_spellchecklanguage();
  ::enterprise_management::StringListPolicyProto* temp = spellchecklanguage_;
  spellchecklanguage_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_spellchecklanguage(::enterprise_management::StringListPolicyProto* spellchecklanguage) {
  delete spellchecklanguage_;
  spellchecklanguage_ = spellchecklanguage;
  if (spellchecklanguage) {
    set_has_spellchecklanguage();
  } else {
    clear_has_spellchecklanguage();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SpellcheckLanguage)
}

// optional .enterprise_management.BooleanPolicyProto SpellcheckEnabled = 410;
bool CloudPolicySettings::has_spellcheckenabled() const {
  return (_has_bits_[5] & 0x40000000u) != 0;
}
void CloudPolicySettings::set_has_spellcheckenabled() {
  _has_bits_[5] |= 0x40000000u;
}
void CloudPolicySettings::clear_has_spellcheckenabled() {
  _has_bits_[5] &= ~0x40000000u;
}
void CloudPolicySettings::clear_spellcheckenabled() {
  if (spellcheckenabled_ != NULL) spellcheckenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_spellcheckenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::spellcheckenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SpellcheckEnabled)
  return spellcheckenabled_ != NULL ? *spellcheckenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_spellcheckenabled() {
  set_has_spellcheckenabled();
  if (spellcheckenabled_ == NULL) {
    spellcheckenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SpellcheckEnabled)
  return spellcheckenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_spellcheckenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SpellcheckEnabled)
  clear_has_spellcheckenabled();
  ::enterprise_management::BooleanPolicyProto* temp = spellcheckenabled_;
  spellcheckenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_spellcheckenabled(::enterprise_management::BooleanPolicyProto* spellcheckenabled) {
  delete spellcheckenabled_;
  spellcheckenabled_ = spellcheckenabled;
  if (spellcheckenabled) {
    set_has_spellcheckenabled();
  } else {
    clear_has_spellcheckenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SpellcheckEnabled)
}

// optional .enterprise_management.IntegerPolicyProto AdsSettingForIntrusiveAdsSites = 411;
bool CloudPolicySettings::has_adssettingforintrusiveadssites() const {
  return (_has_bits_[5] & 0x80000000u) != 0;
}
void CloudPolicySettings::set_has_adssettingforintrusiveadssites() {
  _has_bits_[5] |= 0x80000000u;
}
void CloudPolicySettings::clear_has_adssettingforintrusiveadssites() {
  _has_bits_[5] &= ~0x80000000u;
}
void CloudPolicySettings::clear_adssettingforintrusiveadssites() {
  if (adssettingforintrusiveadssites_ != NULL) adssettingforintrusiveadssites_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_adssettingforintrusiveadssites();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::adssettingforintrusiveadssites() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AdsSettingForIntrusiveAdsSites)
  return adssettingforintrusiveadssites_ != NULL ? *adssettingforintrusiveadssites_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_adssettingforintrusiveadssites() {
  set_has_adssettingforintrusiveadssites();
  if (adssettingforintrusiveadssites_ == NULL) {
    adssettingforintrusiveadssites_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AdsSettingForIntrusiveAdsSites)
  return adssettingforintrusiveadssites_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_adssettingforintrusiveadssites() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AdsSettingForIntrusiveAdsSites)
  clear_has_adssettingforintrusiveadssites();
  ::enterprise_management::IntegerPolicyProto* temp = adssettingforintrusiveadssites_;
  adssettingforintrusiveadssites_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_adssettingforintrusiveadssites(::enterprise_management::IntegerPolicyProto* adssettingforintrusiveadssites) {
  delete adssettingforintrusiveadssites_;
  adssettingforintrusiveadssites_ = adssettingforintrusiveadssites;
  if (adssettingforintrusiveadssites) {
    set_has_adssettingforintrusiveadssites();
  } else {
    clear_has_adssettingforintrusiveadssites();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AdsSettingForIntrusiveAdsSites)
}

// optional .enterprise_management.IntegerPolicyProto PasswordProtectionWarningTrigger = 413;
bool CloudPolicySettings::has_passwordprotectionwarningtrigger() const {
  return (_has_bits_[6] & 0x00000001u) != 0;
}
void CloudPolicySettings::set_has_passwordprotectionwarningtrigger() {
  _has_bits_[6] |= 0x00000001u;
}
void CloudPolicySettings::clear_has_passwordprotectionwarningtrigger() {
  _has_bits_[6] &= ~0x00000001u;
}
void CloudPolicySettings::clear_passwordprotectionwarningtrigger() {
  if (passwordprotectionwarningtrigger_ != NULL) passwordprotectionwarningtrigger_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_passwordprotectionwarningtrigger();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::passwordprotectionwarningtrigger() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PasswordProtectionWarningTrigger)
  return passwordprotectionwarningtrigger_ != NULL ? *passwordprotectionwarningtrigger_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_passwordprotectionwarningtrigger() {
  set_has_passwordprotectionwarningtrigger();
  if (passwordprotectionwarningtrigger_ == NULL) {
    passwordprotectionwarningtrigger_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PasswordProtectionWarningTrigger)
  return passwordprotectionwarningtrigger_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_passwordprotectionwarningtrigger() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PasswordProtectionWarningTrigger)
  clear_has_passwordprotectionwarningtrigger();
  ::enterprise_management::IntegerPolicyProto* temp = passwordprotectionwarningtrigger_;
  passwordprotectionwarningtrigger_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_passwordprotectionwarningtrigger(::enterprise_management::IntegerPolicyProto* passwordprotectionwarningtrigger) {
  delete passwordprotectionwarningtrigger_;
  passwordprotectionwarningtrigger_ = passwordprotectionwarningtrigger;
  if (passwordprotectionwarningtrigger) {
    set_has_passwordprotectionwarningtrigger();
  } else {
    clear_has_passwordprotectionwarningtrigger();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PasswordProtectionWarningTrigger)
}

// optional .enterprise_management.IntegerPolicyProto RelaunchNotification = 421;
bool CloudPolicySettings::has_relaunchnotification() const {
  return (_has_bits_[6] & 0x00000008u) != 0;
}
void CloudPolicySettings::set_has_relaunchnotification() {
  _has_bits_[6] |= 0x00000008u;
}
void CloudPolicySettings::clear_has_relaunchnotification() {
  _has_bits_[6] &= ~0x00000008u;
}
void CloudPolicySettings::clear_relaunchnotification() {
  if (relaunchnotification_ != NULL) relaunchnotification_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_relaunchnotification();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::relaunchnotification() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RelaunchNotification)
  return relaunchnotification_ != NULL ? *relaunchnotification_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_relaunchnotification() {
  set_has_relaunchnotification();
  if (relaunchnotification_ == NULL) {
    relaunchnotification_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RelaunchNotification)
  return relaunchnotification_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_relaunchnotification() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RelaunchNotification)
  clear_has_relaunchnotification();
  ::enterprise_management::IntegerPolicyProto* temp = relaunchnotification_;
  relaunchnotification_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_relaunchnotification(::enterprise_management::IntegerPolicyProto* relaunchnotification) {
  delete relaunchnotification_;
  relaunchnotification_ = relaunchnotification;
  if (relaunchnotification) {
    set_has_relaunchnotification();
  } else {
    clear_has_relaunchnotification();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RelaunchNotification)
}

// optional .enterprise_management.IntegerPolicyProto RelaunchNotificationPeriod = 422;
bool CloudPolicySettings::has_relaunchnotificationperiod() const {
  return (_has_bits_[6] & 0x00000010u) != 0;
}
void CloudPolicySettings::set_has_relaunchnotificationperiod() {
  _has_bits_[6] |= 0x00000010u;
}
void CloudPolicySettings::clear_has_relaunchnotificationperiod() {
  _has_bits_[6] &= ~0x00000010u;
}
void CloudPolicySettings::clear_relaunchnotificationperiod() {
  if (relaunchnotificationperiod_ != NULL) relaunchnotificationperiod_->::enterprise_management::IntegerPolicyProto::Clear();
  clear_has_relaunchnotificationperiod();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::relaunchnotificationperiod() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RelaunchNotificationPeriod)
  return relaunchnotificationperiod_ != NULL ? *relaunchnotificationperiod_
                         : *::enterprise_management::IntegerPolicyProto::internal_default_instance();
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_relaunchnotificationperiod() {
  set_has_relaunchnotificationperiod();
  if (relaunchnotificationperiod_ == NULL) {
    relaunchnotificationperiod_ = new ::enterprise_management::IntegerPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RelaunchNotificationPeriod)
  return relaunchnotificationperiod_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_relaunchnotificationperiod() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RelaunchNotificationPeriod)
  clear_has_relaunchnotificationperiod();
  ::enterprise_management::IntegerPolicyProto* temp = relaunchnotificationperiod_;
  relaunchnotificationperiod_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_relaunchnotificationperiod(::enterprise_management::IntegerPolicyProto* relaunchnotificationperiod) {
  delete relaunchnotificationperiod_;
  relaunchnotificationperiod_ = relaunchnotificationperiod;
  if (relaunchnotificationperiod) {
    set_has_relaunchnotificationperiod();
  } else {
    clear_has_relaunchnotificationperiod();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RelaunchNotificationPeriod)
}

// optional .enterprise_management.StringListPolicyProto SafeBrowsingWhitelistDomains = 424;
bool CloudPolicySettings::has_safebrowsingwhitelistdomains() const {
  return (_has_bits_[6] & 0x00000020u) != 0;
}
void CloudPolicySettings::set_has_safebrowsingwhitelistdomains() {
  _has_bits_[6] |= 0x00000020u;
}
void CloudPolicySettings::clear_has_safebrowsingwhitelistdomains() {
  _has_bits_[6] &= ~0x00000020u;
}
void CloudPolicySettings::clear_safebrowsingwhitelistdomains() {
  if (safebrowsingwhitelistdomains_ != NULL) safebrowsingwhitelistdomains_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_safebrowsingwhitelistdomains();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::safebrowsingwhitelistdomains() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SafeBrowsingWhitelistDomains)
  return safebrowsingwhitelistdomains_ != NULL ? *safebrowsingwhitelistdomains_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_safebrowsingwhitelistdomains() {
  set_has_safebrowsingwhitelistdomains();
  if (safebrowsingwhitelistdomains_ == NULL) {
    safebrowsingwhitelistdomains_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SafeBrowsingWhitelistDomains)
  return safebrowsingwhitelistdomains_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_safebrowsingwhitelistdomains() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SafeBrowsingWhitelistDomains)
  clear_has_safebrowsingwhitelistdomains();
  ::enterprise_management::StringListPolicyProto* temp = safebrowsingwhitelistdomains_;
  safebrowsingwhitelistdomains_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_safebrowsingwhitelistdomains(::enterprise_management::StringListPolicyProto* safebrowsingwhitelistdomains) {
  delete safebrowsingwhitelistdomains_;
  safebrowsingwhitelistdomains_ = safebrowsingwhitelistdomains;
  if (safebrowsingwhitelistdomains) {
    set_has_safebrowsingwhitelistdomains();
  } else {
    clear_has_safebrowsingwhitelistdomains();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingWhitelistDomains)
}

// optional .enterprise_management.StringListPolicyProto PasswordProtectionLoginURLs = 425;
bool CloudPolicySettings::has_passwordprotectionloginurls() const {
  return (_has_bits_[6] & 0x00000040u) != 0;
}
void CloudPolicySettings::set_has_passwordprotectionloginurls() {
  _has_bits_[6] |= 0x00000040u;
}
void CloudPolicySettings::clear_has_passwordprotectionloginurls() {
  _has_bits_[6] &= ~0x00000040u;
}
void CloudPolicySettings::clear_passwordprotectionloginurls() {
  if (passwordprotectionloginurls_ != NULL) passwordprotectionloginurls_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_passwordprotectionloginurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::passwordprotectionloginurls() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PasswordProtectionLoginURLs)
  return passwordprotectionloginurls_ != NULL ? *passwordprotectionloginurls_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_passwordprotectionloginurls() {
  set_has_passwordprotectionloginurls();
  if (passwordprotectionloginurls_ == NULL) {
    passwordprotectionloginurls_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PasswordProtectionLoginURLs)
  return passwordprotectionloginurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_passwordprotectionloginurls() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PasswordProtectionLoginURLs)
  clear_has_passwordprotectionloginurls();
  ::enterprise_management::StringListPolicyProto* temp = passwordprotectionloginurls_;
  passwordprotectionloginurls_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_passwordprotectionloginurls(::enterprise_management::StringListPolicyProto* passwordprotectionloginurls) {
  delete passwordprotectionloginurls_;
  passwordprotectionloginurls_ = passwordprotectionloginurls;
  if (passwordprotectionloginurls) {
    set_has_passwordprotectionloginurls();
  } else {
    clear_has_passwordprotectionloginurls();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PasswordProtectionLoginURLs)
}

// optional .enterprise_management.StringPolicyProto PasswordProtectionChangePasswordURL = 426;
bool CloudPolicySettings::has_passwordprotectionchangepasswordurl() const {
  return (_has_bits_[6] & 0x00000080u) != 0;
}
void CloudPolicySettings::set_has_passwordprotectionchangepasswordurl() {
  _has_bits_[6] |= 0x00000080u;
}
void CloudPolicySettings::clear_has_passwordprotectionchangepasswordurl() {
  _has_bits_[6] &= ~0x00000080u;
}
void CloudPolicySettings::clear_passwordprotectionchangepasswordurl() {
  if (passwordprotectionchangepasswordurl_ != NULL) passwordprotectionchangepasswordurl_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_passwordprotectionchangepasswordurl();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::passwordprotectionchangepasswordurl() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PasswordProtectionChangePasswordURL)
  return passwordprotectionchangepasswordurl_ != NULL ? *passwordprotectionchangepasswordurl_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_passwordprotectionchangepasswordurl() {
  set_has_passwordprotectionchangepasswordurl();
  if (passwordprotectionchangepasswordurl_ == NULL) {
    passwordprotectionchangepasswordurl_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PasswordProtectionChangePasswordURL)
  return passwordprotectionchangepasswordurl_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_passwordprotectionchangepasswordurl() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PasswordProtectionChangePasswordURL)
  clear_has_passwordprotectionchangepasswordurl();
  ::enterprise_management::StringPolicyProto* temp = passwordprotectionchangepasswordurl_;
  passwordprotectionchangepasswordurl_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_passwordprotectionchangepasswordurl(::enterprise_management::StringPolicyProto* passwordprotectionchangepasswordurl) {
  delete passwordprotectionchangepasswordurl_;
  passwordprotectionchangepasswordurl_ = passwordprotectionchangepasswordurl;
  if (passwordprotectionchangepasswordurl) {
    set_has_passwordprotectionchangepasswordurl();
  } else {
    clear_has_passwordprotectionchangepasswordurl();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PasswordProtectionChangePasswordURL)
}

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingExtendedReportingEnabled = 431;
bool CloudPolicySettings::has_safebrowsingextendedreportingenabled() const {
  return (_has_bits_[6] & 0x00000200u) != 0;
}
void CloudPolicySettings::set_has_safebrowsingextendedreportingenabled() {
  _has_bits_[6] |= 0x00000200u;
}
void CloudPolicySettings::clear_has_safebrowsingextendedreportingenabled() {
  _has_bits_[6] &= ~0x00000200u;
}
void CloudPolicySettings::clear_safebrowsingextendedreportingenabled() {
  if (safebrowsingextendedreportingenabled_ != NULL) safebrowsingextendedreportingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_safebrowsingextendedreportingenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::safebrowsingextendedreportingenabled() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingEnabled)
  return safebrowsingextendedreportingenabled_ != NULL ? *safebrowsingextendedreportingenabled_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_safebrowsingextendedreportingenabled() {
  set_has_safebrowsingextendedreportingenabled();
  if (safebrowsingextendedreportingenabled_ == NULL) {
    safebrowsingextendedreportingenabled_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingEnabled)
  return safebrowsingextendedreportingenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_safebrowsingextendedreportingenabled() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingEnabled)
  clear_has_safebrowsingextendedreportingenabled();
  ::enterprise_management::BooleanPolicyProto* temp = safebrowsingextendedreportingenabled_;
  safebrowsingextendedreportingenabled_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_safebrowsingextendedreportingenabled(::enterprise_management::BooleanPolicyProto* safebrowsingextendedreportingenabled) {
  delete safebrowsingextendedreportingenabled_;
  safebrowsingextendedreportingenabled_ = safebrowsingextendedreportingenabled;
  if (safebrowsingextendedreportingenabled) {
    set_has_safebrowsingextendedreportingenabled();
  } else {
    clear_has_safebrowsingextendedreportingenabled();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingEnabled)
}

// optional .enterprise_management.StringPolicyProto MachineLevelUserCloudPolicyEnrollmentToken = 430;
bool CloudPolicySettings::has_machinelevelusercloudpolicyenrollmenttoken() const {
  return (_has_bits_[6] & 0x00000100u) != 0;
}
void CloudPolicySettings::set_has_machinelevelusercloudpolicyenrollmenttoken() {
  _has_bits_[6] |= 0x00000100u;
}
void CloudPolicySettings::clear_has_machinelevelusercloudpolicyenrollmenttoken() {
  _has_bits_[6] &= ~0x00000100u;
}
void CloudPolicySettings::clear_machinelevelusercloudpolicyenrollmenttoken() {
  if (machinelevelusercloudpolicyenrollmenttoken_ != NULL) machinelevelusercloudpolicyenrollmenttoken_->::enterprise_management::StringPolicyProto::Clear();
  clear_has_machinelevelusercloudpolicyenrollmenttoken();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::machinelevelusercloudpolicyenrollmenttoken() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.MachineLevelUserCloudPolicyEnrollmentToken)
  return machinelevelusercloudpolicyenrollmenttoken_ != NULL ? *machinelevelusercloudpolicyenrollmenttoken_
                         : *::enterprise_management::StringPolicyProto::internal_default_instance();
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_machinelevelusercloudpolicyenrollmenttoken() {
  set_has_machinelevelusercloudpolicyenrollmenttoken();
  if (machinelevelusercloudpolicyenrollmenttoken_ == NULL) {
    machinelevelusercloudpolicyenrollmenttoken_ = new ::enterprise_management::StringPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.MachineLevelUserCloudPolicyEnrollmentToken)
  return machinelevelusercloudpolicyenrollmenttoken_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_machinelevelusercloudpolicyenrollmenttoken() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.MachineLevelUserCloudPolicyEnrollmentToken)
  clear_has_machinelevelusercloudpolicyenrollmenttoken();
  ::enterprise_management::StringPolicyProto* temp = machinelevelusercloudpolicyenrollmenttoken_;
  machinelevelusercloudpolicyenrollmenttoken_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_machinelevelusercloudpolicyenrollmenttoken(::enterprise_management::StringPolicyProto* machinelevelusercloudpolicyenrollmenttoken) {
  delete machinelevelusercloudpolicyenrollmenttoken_;
  machinelevelusercloudpolicyenrollmenttoken_ = machinelevelusercloudpolicyenrollmenttoken;
  if (machinelevelusercloudpolicyenrollmenttoken) {
    set_has_machinelevelusercloudpolicyenrollmenttoken();
  } else {
    clear_has_machinelevelusercloudpolicyenrollmenttoken();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.MachineLevelUserCloudPolicyEnrollmentToken)
}

// optional .enterprise_management.BooleanPolicyProto AutoplayAllowed = 432;
bool CloudPolicySettings::has_autoplayallowed() const {
  return (_has_bits_[6] & 0x00000400u) != 0;
}
void CloudPolicySettings::set_has_autoplayallowed() {
  _has_bits_[6] |= 0x00000400u;
}
void CloudPolicySettings::clear_has_autoplayallowed() {
  _has_bits_[6] &= ~0x00000400u;
}
void CloudPolicySettings::clear_autoplayallowed() {
  if (autoplayallowed_ != NULL) autoplayallowed_->::enterprise_management::BooleanPolicyProto::Clear();
  clear_has_autoplayallowed();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::autoplayallowed() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutoplayAllowed)
  return autoplayallowed_ != NULL ? *autoplayallowed_
                         : *::enterprise_management::BooleanPolicyProto::internal_default_instance();
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_autoplayallowed() {
  set_has_autoplayallowed();
  if (autoplayallowed_ == NULL) {
    autoplayallowed_ = new ::enterprise_management::BooleanPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutoplayAllowed)
  return autoplayallowed_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_autoplayallowed() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutoplayAllowed)
  clear_has_autoplayallowed();
  ::enterprise_management::BooleanPolicyProto* temp = autoplayallowed_;
  autoplayallowed_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_autoplayallowed(::enterprise_management::BooleanPolicyProto* autoplayallowed) {
  delete autoplayallowed_;
  autoplayallowed_ = autoplayallowed;
  if (autoplayallowed) {
    set_has_autoplayallowed();
  } else {
    clear_has_autoplayallowed();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutoplayAllowed)
}

// optional .enterprise_management.StringListPolicyProto AutoplayWhitelist = 433;
bool CloudPolicySettings::has_autoplaywhitelist() const {
  return (_has_bits_[6] & 0x00000800u) != 0;
}
void CloudPolicySettings::set_has_autoplaywhitelist() {
  _has_bits_[6] |= 0x00000800u;
}
void CloudPolicySettings::clear_has_autoplaywhitelist() {
  _has_bits_[6] &= ~0x00000800u;
}
void CloudPolicySettings::clear_autoplaywhitelist() {
  if (autoplaywhitelist_ != NULL) autoplaywhitelist_->::enterprise_management::StringListPolicyProto::Clear();
  clear_has_autoplaywhitelist();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::autoplaywhitelist() const {
  // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutoplayWhitelist)
  return autoplaywhitelist_ != NULL ? *autoplaywhitelist_
                         : *::enterprise_management::StringListPolicyProto::internal_default_instance();
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_autoplaywhitelist() {
  set_has_autoplaywhitelist();
  if (autoplaywhitelist_ == NULL) {
    autoplaywhitelist_ = new ::enterprise_management::StringListPolicyProto;
  }
  // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutoplayWhitelist)
  return autoplaywhitelist_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_autoplaywhitelist() {
  // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutoplayWhitelist)
  clear_has_autoplaywhitelist();
  ::enterprise_management::StringListPolicyProto* temp = autoplaywhitelist_;
  autoplaywhitelist_ = NULL;
  return temp;
}
void CloudPolicySettings::set_allocated_autoplaywhitelist(::enterprise_management::StringListPolicyProto* autoplaywhitelist) {
  delete autoplaywhitelist_;
  autoplaywhitelist_ = autoplaywhitelist;
  if (autoplaywhitelist) {
    set_has_autoplaywhitelist();
  } else {
    clear_has_autoplaywhitelist();
  }
  // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutoplayWhitelist)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace enterprise_management

// @@protoc_insertion_point(global_scope)
