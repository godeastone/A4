// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: permuted_entropy_cache.proto

#ifndef PROTOBUF_permuted_5fentropy_5fcache_2eproto__INCLUDED
#define PROTOBUF_permuted_5fentropy_5fcache_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
namespace variations {
class PermutedEntropyCache;
class PermutedEntropyCacheDefaultTypeInternal;
extern PermutedEntropyCacheDefaultTypeInternal _PermutedEntropyCache_default_instance_;
class PermutedEntropyCache_Entry;
class PermutedEntropyCache_EntryDefaultTypeInternal;
extern PermutedEntropyCache_EntryDefaultTypeInternal _PermutedEntropyCache_Entry_default_instance_;
}  // namespace variations

namespace variations {

namespace protobuf_permuted_5fentropy_5fcache_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_permuted_5fentropy_5fcache_2eproto

// ===================================================================

class PermutedEntropyCache_Entry : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:variations.PermutedEntropyCache.Entry) */ {
 public:
  PermutedEntropyCache_Entry();
  virtual ~PermutedEntropyCache_Entry();

  PermutedEntropyCache_Entry(const PermutedEntropyCache_Entry& from);

  inline PermutedEntropyCache_Entry& operator=(const PermutedEntropyCache_Entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PermutedEntropyCache_Entry& default_instance();

  static inline const PermutedEntropyCache_Entry* internal_default_instance() {
    return reinterpret_cast<const PermutedEntropyCache_Entry*>(
               &_PermutedEntropyCache_Entry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(PermutedEntropyCache_Entry* other);

  // implements Message ----------------------------------------------

  inline PermutedEntropyCache_Entry* New() const PROTOBUF_FINAL { return New(NULL); }

  PermutedEntropyCache_Entry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const PermutedEntropyCache_Entry& from);
  void MergeFrom(const PermutedEntropyCache_Entry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PermutedEntropyCache_Entry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 randomization_seed = 1;
  bool has_randomization_seed() const;
  void clear_randomization_seed();
  static const int kRandomizationSeedFieldNumber = 1;
  ::google::protobuf::uint32 randomization_seed() const;
  void set_randomization_seed(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:variations.PermutedEntropyCache.Entry)
 private:
  void set_has_randomization_seed();
  void clear_has_randomization_seed();
  void set_has_value();
  void clear_has_value();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 randomization_seed_;
  ::google::protobuf::uint32 value_;
  friend struct protobuf_permuted_5fentropy_5fcache_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PermutedEntropyCache : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:variations.PermutedEntropyCache) */ {
 public:
  PermutedEntropyCache();
  virtual ~PermutedEntropyCache();

  PermutedEntropyCache(const PermutedEntropyCache& from);

  inline PermutedEntropyCache& operator=(const PermutedEntropyCache& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PermutedEntropyCache& default_instance();

  static inline const PermutedEntropyCache* internal_default_instance() {
    return reinterpret_cast<const PermutedEntropyCache*>(
               &_PermutedEntropyCache_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(PermutedEntropyCache* other);

  // implements Message ----------------------------------------------

  inline PermutedEntropyCache* New() const PROTOBUF_FINAL { return New(NULL); }

  PermutedEntropyCache* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const PermutedEntropyCache& from);
  void MergeFrom(const PermutedEntropyCache& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PermutedEntropyCache* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PermutedEntropyCache_Entry Entry;

  // accessors -------------------------------------------------------

  // repeated .variations.PermutedEntropyCache.Entry entry = 1;
  int entry_size() const;
  void clear_entry();
  static const int kEntryFieldNumber = 1;
  const ::variations::PermutedEntropyCache_Entry& entry(int index) const;
  ::variations::PermutedEntropyCache_Entry* mutable_entry(int index);
  ::variations::PermutedEntropyCache_Entry* add_entry();
  ::google::protobuf::RepeatedPtrField< ::variations::PermutedEntropyCache_Entry >*
      mutable_entry();
  const ::google::protobuf::RepeatedPtrField< ::variations::PermutedEntropyCache_Entry >&
      entry() const;

  // @@protoc_insertion_point(class_scope:variations.PermutedEntropyCache)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::variations::PermutedEntropyCache_Entry > entry_;
  friend struct protobuf_permuted_5fentropy_5fcache_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PermutedEntropyCache_Entry

// required uint32 randomization_seed = 1;
inline bool PermutedEntropyCache_Entry::has_randomization_seed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PermutedEntropyCache_Entry::set_has_randomization_seed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PermutedEntropyCache_Entry::clear_has_randomization_seed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PermutedEntropyCache_Entry::clear_randomization_seed() {
  randomization_seed_ = 0u;
  clear_has_randomization_seed();
}
inline ::google::protobuf::uint32 PermutedEntropyCache_Entry::randomization_seed() const {
  // @@protoc_insertion_point(field_get:variations.PermutedEntropyCache.Entry.randomization_seed)
  return randomization_seed_;
}
inline void PermutedEntropyCache_Entry::set_randomization_seed(::google::protobuf::uint32 value) {
  set_has_randomization_seed();
  randomization_seed_ = value;
  // @@protoc_insertion_point(field_set:variations.PermutedEntropyCache.Entry.randomization_seed)
}

// required uint32 value = 2;
inline bool PermutedEntropyCache_Entry::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PermutedEntropyCache_Entry::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PermutedEntropyCache_Entry::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PermutedEntropyCache_Entry::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 PermutedEntropyCache_Entry::value() const {
  // @@protoc_insertion_point(field_get:variations.PermutedEntropyCache.Entry.value)
  return value_;
}
inline void PermutedEntropyCache_Entry::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:variations.PermutedEntropyCache.Entry.value)
}

// -------------------------------------------------------------------

// PermutedEntropyCache

// repeated .variations.PermutedEntropyCache.Entry entry = 1;
inline int PermutedEntropyCache::entry_size() const {
  return entry_.size();
}
inline void PermutedEntropyCache::clear_entry() {
  entry_.Clear();
}
inline const ::variations::PermutedEntropyCache_Entry& PermutedEntropyCache::entry(int index) const {
  // @@protoc_insertion_point(field_get:variations.PermutedEntropyCache.entry)
  return entry_.Get(index);
}
inline ::variations::PermutedEntropyCache_Entry* PermutedEntropyCache::mutable_entry(int index) {
  // @@protoc_insertion_point(field_mutable:variations.PermutedEntropyCache.entry)
  return entry_.Mutable(index);
}
inline ::variations::PermutedEntropyCache_Entry* PermutedEntropyCache::add_entry() {
  // @@protoc_insertion_point(field_add:variations.PermutedEntropyCache.entry)
  return entry_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::variations::PermutedEntropyCache_Entry >*
PermutedEntropyCache::mutable_entry() {
  // @@protoc_insertion_point(field_mutable_list:variations.PermutedEntropyCache.entry)
  return &entry_;
}
inline const ::google::protobuf::RepeatedPtrField< ::variations::PermutedEntropyCache_Entry >&
PermutedEntropyCache::entry() const {
  // @@protoc_insertion_point(field_list:variations.PermutedEntropyCache.entry)
  return entry_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace variations

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_permuted_5fentropy_5fcache_2eproto__INCLUDED
