// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: variations_seed.proto

#ifndef PROTOBUF_variations_5fseed_2eproto__INCLUDED
#define PROTOBUF_variations_5fseed_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "study.pb.h"
// @@protoc_insertion_point(includes)
namespace variations {
class VariationsSeed;
class VariationsSeedDefaultTypeInternal;
extern VariationsSeedDefaultTypeInternal _VariationsSeed_default_instance_;
}  // namespace variations

namespace variations {

namespace protobuf_variations_5fseed_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_variations_5fseed_2eproto

// ===================================================================

class VariationsSeed : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:variations.VariationsSeed) */ {
 public:
  VariationsSeed();
  virtual ~VariationsSeed();

  VariationsSeed(const VariationsSeed& from);

  inline VariationsSeed& operator=(const VariationsSeed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const VariationsSeed& default_instance();

  static inline const VariationsSeed* internal_default_instance() {
    return reinterpret_cast<const VariationsSeed*>(
               &_VariationsSeed_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(VariationsSeed* other);

  // implements Message ----------------------------------------------

  inline VariationsSeed* New() const PROTOBUF_FINAL { return New(NULL); }

  VariationsSeed* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const VariationsSeed& from);
  void MergeFrom(const VariationsSeed& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VariationsSeed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .variations.Study study = 2;
  int study_size() const;
  void clear_study();
  static const int kStudyFieldNumber = 2;
  const ::variations::Study& study(int index) const;
  ::variations::Study* mutable_study(int index);
  ::variations::Study* add_study();
  ::google::protobuf::RepeatedPtrField< ::variations::Study >*
      mutable_study();
  const ::google::protobuf::RepeatedPtrField< ::variations::Study >&
      study() const;

  // optional string serial_number = 1;
  bool has_serial_number() const;
  void clear_serial_number();
  static const int kSerialNumberFieldNumber = 1;
  const ::std::string& serial_number() const;
  void set_serial_number(const ::std::string& value);
  #if LANG_CXX11
  void set_serial_number(::std::string&& value);
  #endif
  void set_serial_number(const char* value);
  void set_serial_number(const char* value, size_t size);
  ::std::string* mutable_serial_number();
  ::std::string* release_serial_number();
  void set_allocated_serial_number(::std::string* serial_number);

  // optional string country_code = 3 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_country_code() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_country_code();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kCountryCodeFieldNumber = 3;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::std::string& country_code() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_country_code(const ::std::string& value);
  #if LANG_CXX11
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_country_code(::std::string&& value);
  #endif
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_country_code(const char* value);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_country_code(const char* value, size_t size);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* mutable_country_code();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* release_country_code();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_country_code(::std::string* country_code);

  // @@protoc_insertion_point(class_scope:variations.VariationsSeed)
 private:
  void set_has_serial_number();
  void clear_has_serial_number();
  void set_has_country_code();
  void clear_has_country_code();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::variations::Study > study_;
  ::google::protobuf::internal::ArenaStringPtr serial_number_;
  ::google::protobuf::internal::ArenaStringPtr country_code_;
  friend struct protobuf_variations_5fseed_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// VariationsSeed

// optional string serial_number = 1;
inline bool VariationsSeed::has_serial_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VariationsSeed::set_has_serial_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VariationsSeed::clear_has_serial_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VariationsSeed::clear_serial_number() {
  serial_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serial_number();
}
inline const ::std::string& VariationsSeed::serial_number() const {
  // @@protoc_insertion_point(field_get:variations.VariationsSeed.serial_number)
  return serial_number_.GetNoArena();
}
inline void VariationsSeed::set_serial_number(const ::std::string& value) {
  set_has_serial_number();
  serial_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:variations.VariationsSeed.serial_number)
}
#if LANG_CXX11
inline void VariationsSeed::set_serial_number(::std::string&& value) {
  set_has_serial_number();
  serial_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:variations.VariationsSeed.serial_number)
}
#endif
inline void VariationsSeed::set_serial_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_serial_number();
  serial_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:variations.VariationsSeed.serial_number)
}
inline void VariationsSeed::set_serial_number(const char* value, size_t size) {
  set_has_serial_number();
  serial_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:variations.VariationsSeed.serial_number)
}
inline ::std::string* VariationsSeed::mutable_serial_number() {
  set_has_serial_number();
  // @@protoc_insertion_point(field_mutable:variations.VariationsSeed.serial_number)
  return serial_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VariationsSeed::release_serial_number() {
  // @@protoc_insertion_point(field_release:variations.VariationsSeed.serial_number)
  clear_has_serial_number();
  return serial_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VariationsSeed::set_allocated_serial_number(::std::string* serial_number) {
  if (serial_number != NULL) {
    set_has_serial_number();
  } else {
    clear_has_serial_number();
  }
  serial_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serial_number);
  // @@protoc_insertion_point(field_set_allocated:variations.VariationsSeed.serial_number)
}

// repeated .variations.Study study = 2;
inline int VariationsSeed::study_size() const {
  return study_.size();
}
inline void VariationsSeed::clear_study() {
  study_.Clear();
}
inline const ::variations::Study& VariationsSeed::study(int index) const {
  // @@protoc_insertion_point(field_get:variations.VariationsSeed.study)
  return study_.Get(index);
}
inline ::variations::Study* VariationsSeed::mutable_study(int index) {
  // @@protoc_insertion_point(field_mutable:variations.VariationsSeed.study)
  return study_.Mutable(index);
}
inline ::variations::Study* VariationsSeed::add_study() {
  // @@protoc_insertion_point(field_add:variations.VariationsSeed.study)
  return study_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::variations::Study >*
VariationsSeed::mutable_study() {
  // @@protoc_insertion_point(field_mutable_list:variations.VariationsSeed.study)
  return &study_;
}
inline const ::google::protobuf::RepeatedPtrField< ::variations::Study >&
VariationsSeed::study() const {
  // @@protoc_insertion_point(field_list:variations.VariationsSeed.study)
  return study_;
}

// optional string country_code = 3 [deprecated = true];
inline bool VariationsSeed::has_country_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VariationsSeed::set_has_country_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VariationsSeed::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VariationsSeed::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country_code();
}
inline const ::std::string& VariationsSeed::country_code() const {
  // @@protoc_insertion_point(field_get:variations.VariationsSeed.country_code)
  return country_code_.GetNoArena();
}
inline void VariationsSeed::set_country_code(const ::std::string& value) {
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:variations.VariationsSeed.country_code)
}
#if LANG_CXX11
inline void VariationsSeed::set_country_code(::std::string&& value) {
  set_has_country_code();
  country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:variations.VariationsSeed.country_code)
}
#endif
inline void VariationsSeed::set_country_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:variations.VariationsSeed.country_code)
}
inline void VariationsSeed::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:variations.VariationsSeed.country_code)
}
inline ::std::string* VariationsSeed::mutable_country_code() {
  set_has_country_code();
  // @@protoc_insertion_point(field_mutable:variations.VariationsSeed.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VariationsSeed::release_country_code() {
  // @@protoc_insertion_point(field_release:variations.VariationsSeed.country_code)
  clear_has_country_code();
  return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VariationsSeed::set_allocated_country_code(::std::string* country_code) {
  if (country_code != NULL) {
    set_has_country_code();
  } else {
    clear_has_country_code();
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:variations.VariationsSeed.country_code)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace variations

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_variations_5fseed_2eproto__INCLUDED
