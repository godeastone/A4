// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_store.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "data_store.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace data_reduction_proxy {
class DataUsageBucketDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DataUsageBucket> {
} _DataUsageBucket_default_instance_;
class PerConnectionDataUsageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PerConnectionDataUsage> {
} _PerConnectionDataUsage_default_instance_;
class PerSiteDataUsageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PerSiteDataUsage> {
} _PerSiteDataUsage_default_instance_;

namespace protobuf_data_5fstore_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _DataUsageBucket_default_instance_.Shutdown();
  _PerConnectionDataUsage_default_instance_.Shutdown();
  _PerSiteDataUsage_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _DataUsageBucket_default_instance_.DefaultConstruct();
  _PerConnectionDataUsage_default_instance_.DefaultConstruct();
  _PerSiteDataUsage_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_data_5fstore_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataUsageBucket::kConnectionUsageFieldNumber;
const int DataUsageBucket::kLastUpdatedTimestampFieldNumber;
const int DataUsageBucket::kHadReadErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataUsageBucket::DataUsageBucket()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_data_5fstore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.DataUsageBucket)
}
DataUsageBucket::DataUsageBucket(const DataUsageBucket& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      connection_usage_(from.connection_usage_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&last_updated_timestamp_, &from.last_updated_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&had_read_error_) -
    reinterpret_cast<char*>(&last_updated_timestamp_)) + sizeof(had_read_error_));
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.DataUsageBucket)
}

void DataUsageBucket::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&last_updated_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&had_read_error_) -
      reinterpret_cast<char*>(&last_updated_timestamp_)) + sizeof(had_read_error_));
}

DataUsageBucket::~DataUsageBucket() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.DataUsageBucket)
  SharedDtor();
}

void DataUsageBucket::SharedDtor() {
}

void DataUsageBucket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DataUsageBucket& DataUsageBucket::default_instance() {
  protobuf_data_5fstore_2eproto::InitDefaults();
  return *internal_default_instance();
}

DataUsageBucket* DataUsageBucket::New(::google::protobuf::Arena* arena) const {
  DataUsageBucket* n = new DataUsageBucket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataUsageBucket::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.DataUsageBucket)
  connection_usage_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&last_updated_timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&had_read_error_) -
        reinterpret_cast<char*>(&last_updated_timestamp_)) + sizeof(had_read_error_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DataUsageBucket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.DataUsageBucket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .data_reduction_proxy.PerConnectionDataUsage connection_usage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_connection_usage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 last_updated_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_last_updated_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_updated_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool had_read_error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_had_read_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &had_read_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.DataUsageBucket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.DataUsageBucket)
  return false;
#undef DO_
}

void DataUsageBucket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.DataUsageBucket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .data_reduction_proxy.PerConnectionDataUsage connection_usage = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->connection_usage_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->connection_usage(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int64 last_updated_timestamp = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->last_updated_timestamp(), output);
  }

  // optional bool had_read_error = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->had_read_error(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.DataUsageBucket)
}

size_t DataUsageBucket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.DataUsageBucket)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated .data_reduction_proxy.PerConnectionDataUsage connection_usage = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->connection_usage_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->connection_usage(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 last_updated_timestamp = 2;
    if (has_last_updated_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->last_updated_timestamp());
    }

    // optional bool had_read_error = 3;
    if (has_had_read_error()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataUsageBucket::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DataUsageBucket*>(&from));
}

void DataUsageBucket::MergeFrom(const DataUsageBucket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.DataUsageBucket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  connection_usage_.MergeFrom(from.connection_usage_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      last_updated_timestamp_ = from.last_updated_timestamp_;
    }
    if (cached_has_bits & 0x00000002u) {
      had_read_error_ = from.had_read_error_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DataUsageBucket::CopyFrom(const DataUsageBucket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.DataUsageBucket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataUsageBucket::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->connection_usage())) return false;
  return true;
}

void DataUsageBucket::Swap(DataUsageBucket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataUsageBucket::InternalSwap(DataUsageBucket* other) {
  connection_usage_.InternalSwap(&other->connection_usage_);
  std::swap(last_updated_timestamp_, other->last_updated_timestamp_);
  std::swap(had_read_error_, other->had_read_error_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string DataUsageBucket::GetTypeName() const {
  return "data_reduction_proxy.DataUsageBucket";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DataUsageBucket

// repeated .data_reduction_proxy.PerConnectionDataUsage connection_usage = 1;
int DataUsageBucket::connection_usage_size() const {
  return connection_usage_.size();
}
void DataUsageBucket::clear_connection_usage() {
  connection_usage_.Clear();
}
const ::data_reduction_proxy::PerConnectionDataUsage& DataUsageBucket::connection_usage(int index) const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.DataUsageBucket.connection_usage)
  return connection_usage_.Get(index);
}
::data_reduction_proxy::PerConnectionDataUsage* DataUsageBucket::mutable_connection_usage(int index) {
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.DataUsageBucket.connection_usage)
  return connection_usage_.Mutable(index);
}
::data_reduction_proxy::PerConnectionDataUsage* DataUsageBucket::add_connection_usage() {
  // @@protoc_insertion_point(field_add:data_reduction_proxy.DataUsageBucket.connection_usage)
  return connection_usage_.Add();
}
::google::protobuf::RepeatedPtrField< ::data_reduction_proxy::PerConnectionDataUsage >*
DataUsageBucket::mutable_connection_usage() {
  // @@protoc_insertion_point(field_mutable_list:data_reduction_proxy.DataUsageBucket.connection_usage)
  return &connection_usage_;
}
const ::google::protobuf::RepeatedPtrField< ::data_reduction_proxy::PerConnectionDataUsage >&
DataUsageBucket::connection_usage() const {
  // @@protoc_insertion_point(field_list:data_reduction_proxy.DataUsageBucket.connection_usage)
  return connection_usage_;
}

// optional int64 last_updated_timestamp = 2;
bool DataUsageBucket::has_last_updated_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DataUsageBucket::set_has_last_updated_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
void DataUsageBucket::clear_has_last_updated_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
void DataUsageBucket::clear_last_updated_timestamp() {
  last_updated_timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_last_updated_timestamp();
}
::google::protobuf::int64 DataUsageBucket::last_updated_timestamp() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.DataUsageBucket.last_updated_timestamp)
  return last_updated_timestamp_;
}
void DataUsageBucket::set_last_updated_timestamp(::google::protobuf::int64 value) {
  set_has_last_updated_timestamp();
  last_updated_timestamp_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.DataUsageBucket.last_updated_timestamp)
}

// optional bool had_read_error = 3;
bool DataUsageBucket::has_had_read_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DataUsageBucket::set_has_had_read_error() {
  _has_bits_[0] |= 0x00000002u;
}
void DataUsageBucket::clear_has_had_read_error() {
  _has_bits_[0] &= ~0x00000002u;
}
void DataUsageBucket::clear_had_read_error() {
  had_read_error_ = false;
  clear_has_had_read_error();
}
bool DataUsageBucket::had_read_error() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.DataUsageBucket.had_read_error)
  return had_read_error_;
}
void DataUsageBucket::set_had_read_error(bool value) {
  set_has_had_read_error();
  had_read_error_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.DataUsageBucket.had_read_error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerConnectionDataUsage::kSiteUsageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerConnectionDataUsage::PerConnectionDataUsage()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_data_5fstore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.PerConnectionDataUsage)
}
PerConnectionDataUsage::PerConnectionDataUsage(const PerConnectionDataUsage& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      site_usage_(from.site_usage_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.PerConnectionDataUsage)
}

void PerConnectionDataUsage::SharedCtor() {
  _cached_size_ = 0;
}

PerConnectionDataUsage::~PerConnectionDataUsage() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.PerConnectionDataUsage)
  SharedDtor();
}

void PerConnectionDataUsage::SharedDtor() {
}

void PerConnectionDataUsage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PerConnectionDataUsage& PerConnectionDataUsage::default_instance() {
  protobuf_data_5fstore_2eproto::InitDefaults();
  return *internal_default_instance();
}

PerConnectionDataUsage* PerConnectionDataUsage::New(::google::protobuf::Arena* arena) const {
  PerConnectionDataUsage* n = new PerConnectionDataUsage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PerConnectionDataUsage::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.PerConnectionDataUsage)
  site_usage_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PerConnectionDataUsage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.PerConnectionDataUsage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .data_reduction_proxy.PerSiteDataUsage site_usage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_site_usage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.PerConnectionDataUsage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.PerConnectionDataUsage)
  return false;
#undef DO_
}

void PerConnectionDataUsage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.PerConnectionDataUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .data_reduction_proxy.PerSiteDataUsage site_usage = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->site_usage_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->site_usage(static_cast<int>(i)), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.PerConnectionDataUsage)
}

size_t PerConnectionDataUsage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.PerConnectionDataUsage)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated .data_reduction_proxy.PerSiteDataUsage site_usage = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->site_usage_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->site_usage(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PerConnectionDataUsage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PerConnectionDataUsage*>(&from));
}

void PerConnectionDataUsage::MergeFrom(const PerConnectionDataUsage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.PerConnectionDataUsage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  site_usage_.MergeFrom(from.site_usage_);
}

void PerConnectionDataUsage::CopyFrom(const PerConnectionDataUsage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.PerConnectionDataUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerConnectionDataUsage::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->site_usage())) return false;
  return true;
}

void PerConnectionDataUsage::Swap(PerConnectionDataUsage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerConnectionDataUsage::InternalSwap(PerConnectionDataUsage* other) {
  site_usage_.InternalSwap(&other->site_usage_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string PerConnectionDataUsage::GetTypeName() const {
  return "data_reduction_proxy.PerConnectionDataUsage";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PerConnectionDataUsage

// repeated .data_reduction_proxy.PerSiteDataUsage site_usage = 1;
int PerConnectionDataUsage::site_usage_size() const {
  return site_usage_.size();
}
void PerConnectionDataUsage::clear_site_usage() {
  site_usage_.Clear();
}
const ::data_reduction_proxy::PerSiteDataUsage& PerConnectionDataUsage::site_usage(int index) const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.PerConnectionDataUsage.site_usage)
  return site_usage_.Get(index);
}
::data_reduction_proxy::PerSiteDataUsage* PerConnectionDataUsage::mutable_site_usage(int index) {
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.PerConnectionDataUsage.site_usage)
  return site_usage_.Mutable(index);
}
::data_reduction_proxy::PerSiteDataUsage* PerConnectionDataUsage::add_site_usage() {
  // @@protoc_insertion_point(field_add:data_reduction_proxy.PerConnectionDataUsage.site_usage)
  return site_usage_.Add();
}
::google::protobuf::RepeatedPtrField< ::data_reduction_proxy::PerSiteDataUsage >*
PerConnectionDataUsage::mutable_site_usage() {
  // @@protoc_insertion_point(field_mutable_list:data_reduction_proxy.PerConnectionDataUsage.site_usage)
  return &site_usage_;
}
const ::google::protobuf::RepeatedPtrField< ::data_reduction_proxy::PerSiteDataUsage >&
PerConnectionDataUsage::site_usage() const {
  // @@protoc_insertion_point(field_list:data_reduction_proxy.PerConnectionDataUsage.site_usage)
  return site_usage_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerSiteDataUsage::kHostnameFieldNumber;
const int PerSiteDataUsage::kDataUsedFieldNumber;
const int PerSiteDataUsage::kOriginalSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerSiteDataUsage::PerSiteDataUsage()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_data_5fstore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.PerSiteDataUsage)
}
PerSiteDataUsage::PerSiteDataUsage(const PerSiteDataUsage& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hostname()) {
    hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  ::memcpy(&data_used_, &from.data_used_,
    static_cast<size_t>(reinterpret_cast<char*>(&original_size_) -
    reinterpret_cast<char*>(&data_used_)) + sizeof(original_size_));
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.PerSiteDataUsage)
}

void PerSiteDataUsage::SharedCtor() {
  _cached_size_ = 0;
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_used_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&original_size_) -
      reinterpret_cast<char*>(&data_used_)) + sizeof(original_size_));
}

PerSiteDataUsage::~PerSiteDataUsage() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.PerSiteDataUsage)
  SharedDtor();
}

void PerSiteDataUsage::SharedDtor() {
  hostname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PerSiteDataUsage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PerSiteDataUsage& PerSiteDataUsage::default_instance() {
  protobuf_data_5fstore_2eproto::InitDefaults();
  return *internal_default_instance();
}

PerSiteDataUsage* PerSiteDataUsage::New(::google::protobuf::Arena* arena) const {
  PerSiteDataUsage* n = new PerSiteDataUsage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PerSiteDataUsage::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.PerSiteDataUsage)
  if (has_hostname()) {
    GOOGLE_DCHECK(!hostname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*hostname_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&data_used_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&original_size_) -
        reinterpret_cast<char*>(&data_used_)) + sizeof(original_size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PerSiteDataUsage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.PerSiteDataUsage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string hostname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 data_used = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_data_used();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &data_used_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 original_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_original_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &original_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.PerSiteDataUsage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.PerSiteDataUsage)
  return false;
#undef DO_
}

void PerSiteDataUsage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.PerSiteDataUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string hostname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hostname(), output);
  }

  // required int64 data_used = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->data_used(), output);
  }

  // required int64 original_size = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->original_size(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.PerSiteDataUsage)
}

size_t PerSiteDataUsage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:data_reduction_proxy.PerSiteDataUsage)
  size_t total_size = 0;

  if (has_hostname()) {
    // required string hostname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hostname());
  }

  if (has_data_used()) {
    // required int64 data_used = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->data_used());
  }

  if (has_original_size()) {
    // required int64 original_size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->original_size());
  }

  return total_size;
}
size_t PerSiteDataUsage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.PerSiteDataUsage)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string hostname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hostname());

    // required int64 data_used = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->data_used());

    // required int64 original_size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->original_size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PerSiteDataUsage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PerSiteDataUsage*>(&from));
}

void PerSiteDataUsage::MergeFrom(const PerSiteDataUsage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.PerSiteDataUsage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hostname();
      hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
    }
    if (cached_has_bits & 0x00000002u) {
      data_used_ = from.data_used_;
    }
    if (cached_has_bits & 0x00000004u) {
      original_size_ = from.original_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PerSiteDataUsage::CopyFrom(const PerSiteDataUsage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.PerSiteDataUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerSiteDataUsage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void PerSiteDataUsage::Swap(PerSiteDataUsage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerSiteDataUsage::InternalSwap(PerSiteDataUsage* other) {
  hostname_.Swap(&other->hostname_);
  std::swap(data_used_, other->data_used_);
  std::swap(original_size_, other->original_size_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string PerSiteDataUsage::GetTypeName() const {
  return "data_reduction_proxy.PerSiteDataUsage";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PerSiteDataUsage

// required string hostname = 1;
bool PerSiteDataUsage::has_hostname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PerSiteDataUsage::set_has_hostname() {
  _has_bits_[0] |= 0x00000001u;
}
void PerSiteDataUsage::clear_has_hostname() {
  _has_bits_[0] &= ~0x00000001u;
}
void PerSiteDataUsage::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hostname();
}
const ::std::string& PerSiteDataUsage::hostname() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.PerSiteDataUsage.hostname)
  return hostname_.GetNoArena();
}
void PerSiteDataUsage::set_hostname(const ::std::string& value) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:data_reduction_proxy.PerSiteDataUsage.hostname)
}
#if LANG_CXX11
void PerSiteDataUsage::set_hostname(::std::string&& value) {
  set_has_hostname();
  hostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:data_reduction_proxy.PerSiteDataUsage.hostname)
}
#endif
void PerSiteDataUsage::set_hostname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:data_reduction_proxy.PerSiteDataUsage.hostname)
}
void PerSiteDataUsage::set_hostname(const char* value, size_t size) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:data_reduction_proxy.PerSiteDataUsage.hostname)
}
::std::string* PerSiteDataUsage::mutable_hostname() {
  set_has_hostname();
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.PerSiteDataUsage.hostname)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PerSiteDataUsage::release_hostname() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.PerSiteDataUsage.hostname)
  clear_has_hostname();
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PerSiteDataUsage::set_allocated_hostname(::std::string* hostname) {
  if (hostname != NULL) {
    set_has_hostname();
  } else {
    clear_has_hostname();
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.PerSiteDataUsage.hostname)
}

// required int64 data_used = 2;
bool PerSiteDataUsage::has_data_used() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PerSiteDataUsage::set_has_data_used() {
  _has_bits_[0] |= 0x00000002u;
}
void PerSiteDataUsage::clear_has_data_used() {
  _has_bits_[0] &= ~0x00000002u;
}
void PerSiteDataUsage::clear_data_used() {
  data_used_ = GOOGLE_LONGLONG(0);
  clear_has_data_used();
}
::google::protobuf::int64 PerSiteDataUsage::data_used() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.PerSiteDataUsage.data_used)
  return data_used_;
}
void PerSiteDataUsage::set_data_used(::google::protobuf::int64 value) {
  set_has_data_used();
  data_used_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.PerSiteDataUsage.data_used)
}

// required int64 original_size = 3;
bool PerSiteDataUsage::has_original_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PerSiteDataUsage::set_has_original_size() {
  _has_bits_[0] |= 0x00000004u;
}
void PerSiteDataUsage::clear_has_original_size() {
  _has_bits_[0] &= ~0x00000004u;
}
void PerSiteDataUsage::clear_original_size() {
  original_size_ = GOOGLE_LONGLONG(0);
  clear_has_original_size();
}
::google::protobuf::int64 PerSiteDataUsage::original_size() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.PerSiteDataUsage.original_size)
  return original_size_;
}
void PerSiteDataUsage::set_original_size(::google::protobuf::int64 value) {
  set_has_original_size();
  original_size_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.PerSiteDataUsage.original_size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace data_reduction_proxy

// @@protoc_insertion_point(global_scope)
