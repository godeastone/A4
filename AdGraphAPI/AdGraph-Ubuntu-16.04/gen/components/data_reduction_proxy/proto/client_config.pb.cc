// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "client_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace data_reduction_proxy {
class ClientConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ClientConfig> {
} _ClientConfig_default_instance_;
class PageloadMetricsConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PageloadMetricsConfig> {
} _PageloadMetricsConfig_default_instance_;
class TimestampDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Timestamp> {
} _Timestamp_default_instance_;
class DurationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Duration> {
} _Duration_default_instance_;
class ProxyConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProxyConfig> {
} _ProxyConfig_default_instance_;
class ProxyServerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProxyServer> {
} _ProxyServer_default_instance_;
class ConfigDeviceInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConfigDeviceInfo> {
} _ConfigDeviceInfo_default_instance_;
class CreateClientConfigRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateClientConfigRequest> {
} _CreateClientConfigRequest_default_instance_;
class VersionInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VersionInfo> {
} _VersionInfo_default_instance_;

namespace protobuf_client_5fconfig_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _ClientConfig_default_instance_.Shutdown();
  _PageloadMetricsConfig_default_instance_.Shutdown();
  _Timestamp_default_instance_.Shutdown();
  _Duration_default_instance_.Shutdown();
  _ProxyConfig_default_instance_.Shutdown();
  _ProxyServer_default_instance_.Shutdown();
  _ConfigDeviceInfo_default_instance_.Shutdown();
  _CreateClientConfigRequest_default_instance_.Shutdown();
  _VersionInfo_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ClientConfig_default_instance_.DefaultConstruct();
  _PageloadMetricsConfig_default_instance_.DefaultConstruct();
  _Timestamp_default_instance_.DefaultConstruct();
  _Duration_default_instance_.DefaultConstruct();
  _ProxyConfig_default_instance_.DefaultConstruct();
  _ProxyServer_default_instance_.DefaultConstruct();
  _ConfigDeviceInfo_default_instance_.DefaultConstruct();
  _CreateClientConfigRequest_default_instance_.DefaultConstruct();
  _VersionInfo_default_instance_.DefaultConstruct();
  _ClientConfig_default_instance_.get_mutable()->deprecated_refresh_time_ = const_cast< ::data_reduction_proxy::Timestamp*>(
      ::data_reduction_proxy::Timestamp::internal_default_instance());
  _ClientConfig_default_instance_.get_mutable()->proxy_config_ = const_cast< ::data_reduction_proxy::ProxyConfig*>(
      ::data_reduction_proxy::ProxyConfig::internal_default_instance());
  _ClientConfig_default_instance_.get_mutable()->refresh_duration_ = const_cast< ::data_reduction_proxy::Duration*>(
      ::data_reduction_proxy::Duration::internal_default_instance());
  _ClientConfig_default_instance_.get_mutable()->pageload_metrics_config_ = const_cast< ::data_reduction_proxy::PageloadMetricsConfig*>(
      ::data_reduction_proxy::PageloadMetricsConfig::internal_default_instance());
  _CreateClientConfigRequest_default_instance_.get_mutable()->version_info_ = const_cast< ::data_reduction_proxy::VersionInfo*>(
      ::data_reduction_proxy::VersionInfo::internal_default_instance());
  _CreateClientConfigRequest_default_instance_.get_mutable()->device_info_ = const_cast< ::data_reduction_proxy::ConfigDeviceInfo*>(
      ::data_reduction_proxy::ConfigDeviceInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_client_5fconfig_2eproto

bool ProxyServer_ProxyScheme_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ProxyServer_ProxyScheme ProxyServer::UNSPECIFIED;
const ProxyServer_ProxyScheme ProxyServer::HTTP;
const ProxyServer_ProxyScheme ProxyServer::HTTPS;
const ProxyServer_ProxyScheme ProxyServer::DEPRECATED_QUIC;
const ProxyServer_ProxyScheme ProxyServer::ProxyScheme_MIN;
const ProxyServer_ProxyScheme ProxyServer::ProxyScheme_MAX;
const int ProxyServer::ProxyScheme_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool ProxyServer_ProxyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ProxyServer_ProxyType ProxyServer::UNSPECIFIED_TYPE;
const ProxyServer_ProxyType ProxyServer::CORE;
const ProxyServer_ProxyType ProxyServer::ProxyType_MIN;
const ProxyServer_ProxyType ProxyServer::ProxyType_MAX;
const int ProxyServer::ProxyType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool CreateClientConfigRequest_DogfoodGroup_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CreateClientConfigRequest_DogfoodGroup CreateClientConfigRequest::UNSPECIFIED;
const CreateClientConfigRequest_DogfoodGroup CreateClientConfigRequest::NONDOGFOOD;
const CreateClientConfigRequest_DogfoodGroup CreateClientConfigRequest::DOGFOOD;
const CreateClientConfigRequest_DogfoodGroup CreateClientConfigRequest::DogfoodGroup_MIN;
const CreateClientConfigRequest_DogfoodGroup CreateClientConfigRequest::DogfoodGroup_MAX;
const int CreateClientConfigRequest::DogfoodGroup_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientConfig::kSessionKeyFieldNumber;
const int ClientConfig::kDEPRECATEDRefreshTimeFieldNumber;
const int ClientConfig::kProxyConfigFieldNumber;
const int ClientConfig::kRefreshDurationFieldNumber;
const int ClientConfig::kPageloadMetricsConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientConfig::ClientConfig()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.ClientConfig)
}
ClientConfig::ClientConfig(const ClientConfig& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_session_key()) {
    session_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_key_);
  }
  if (from.has_deprecated_refresh_time()) {
    deprecated_refresh_time_ = new ::data_reduction_proxy::Timestamp(*from.deprecated_refresh_time_);
  } else {
    deprecated_refresh_time_ = NULL;
  }
  if (from.has_proxy_config()) {
    proxy_config_ = new ::data_reduction_proxy::ProxyConfig(*from.proxy_config_);
  } else {
    proxy_config_ = NULL;
  }
  if (from.has_refresh_duration()) {
    refresh_duration_ = new ::data_reduction_proxy::Duration(*from.refresh_duration_);
  } else {
    refresh_duration_ = NULL;
  }
  if (from.has_pageload_metrics_config()) {
    pageload_metrics_config_ = new ::data_reduction_proxy::PageloadMetricsConfig(*from.pageload_metrics_config_);
  } else {
    pageload_metrics_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.ClientConfig)
}

void ClientConfig::SharedCtor() {
  _cached_size_ = 0;
  session_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&deprecated_refresh_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pageload_metrics_config_) -
      reinterpret_cast<char*>(&deprecated_refresh_time_)) + sizeof(pageload_metrics_config_));
}

ClientConfig::~ClientConfig() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.ClientConfig)
  SharedDtor();
}

void ClientConfig::SharedDtor() {
  session_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete deprecated_refresh_time_;
  }
  if (this != internal_default_instance()) {
    delete proxy_config_;
  }
  if (this != internal_default_instance()) {
    delete refresh_duration_;
  }
  if (this != internal_default_instance()) {
    delete pageload_metrics_config_;
  }
}

void ClientConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ClientConfig& ClientConfig::default_instance() {
  protobuf_client_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientConfig* ClientConfig::New(::google::protobuf::Arena* arena) const {
  ClientConfig* n = new ClientConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.ClientConfig)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_session_key()) {
      GOOGLE_DCHECK(!session_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*session_key_.UnsafeRawStringPointer())->clear();
    }
    if (has_deprecated_refresh_time()) {
      GOOGLE_DCHECK(deprecated_refresh_time_ != NULL);
      deprecated_refresh_time_->::data_reduction_proxy::Timestamp::Clear();
    }
    if (has_proxy_config()) {
      GOOGLE_DCHECK(proxy_config_ != NULL);
      proxy_config_->::data_reduction_proxy::ProxyConfig::Clear();
    }
    if (has_refresh_duration()) {
      GOOGLE_DCHECK(refresh_duration_ != NULL);
      refresh_duration_->::data_reduction_proxy::Duration::Clear();
    }
    if (has_pageload_metrics_config()) {
      GOOGLE_DCHECK(pageload_metrics_config_ != NULL);
      pageload_metrics_config_->::data_reduction_proxy::PageloadMetricsConfig::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClientConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.ClientConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string session_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .data_reduction_proxy.Timestamp DEPRECATED_refresh_time = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deprecated_refresh_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .data_reduction_proxy.ProxyConfig proxy_config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_proxy_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .data_reduction_proxy.Duration refresh_duration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_refresh_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .data_reduction_proxy.PageloadMetricsConfig pageload_metrics_config = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pageload_metrics_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.ClientConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.ClientConfig)
  return false;
#undef DO_
}

void ClientConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.ClientConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string session_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->session_key(), output);
  }

  // optional .data_reduction_proxy.Timestamp DEPRECATED_refresh_time = 2 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->deprecated_refresh_time_, output);
  }

  // optional .data_reduction_proxy.ProxyConfig proxy_config = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, *this->proxy_config_, output);
  }

  // optional .data_reduction_proxy.Duration refresh_duration = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, *this->refresh_duration_, output);
  }

  // optional .data_reduction_proxy.PageloadMetricsConfig pageload_metrics_config = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, *this->pageload_metrics_config_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.ClientConfig)
}

size_t ClientConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.ClientConfig)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 31u) {
    // optional string session_key = 1;
    if (has_session_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->session_key());
    }

    // optional .data_reduction_proxy.Timestamp DEPRECATED_refresh_time = 2 [deprecated = true];
    if (has_deprecated_refresh_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->deprecated_refresh_time_);
    }

    // optional .data_reduction_proxy.ProxyConfig proxy_config = 3;
    if (has_proxy_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->proxy_config_);
    }

    // optional .data_reduction_proxy.Duration refresh_duration = 4;
    if (has_refresh_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->refresh_duration_);
    }

    // optional .data_reduction_proxy.PageloadMetricsConfig pageload_metrics_config = 5;
    if (has_pageload_metrics_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pageload_metrics_config_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientConfig::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ClientConfig*>(&from));
}

void ClientConfig::MergeFrom(const ClientConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.ClientConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_session_key();
      session_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_deprecated_refresh_time()->::data_reduction_proxy::Timestamp::MergeFrom(from.deprecated_refresh_time());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_proxy_config()->::data_reduction_proxy::ProxyConfig::MergeFrom(from.proxy_config());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_refresh_duration()->::data_reduction_proxy::Duration::MergeFrom(from.refresh_duration());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_pageload_metrics_config()->::data_reduction_proxy::PageloadMetricsConfig::MergeFrom(from.pageload_metrics_config());
    }
  }
}

void ClientConfig::CopyFrom(const ClientConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.ClientConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientConfig::IsInitialized() const {
  return true;
}

void ClientConfig::Swap(ClientConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientConfig::InternalSwap(ClientConfig* other) {
  session_key_.Swap(&other->session_key_);
  std::swap(deprecated_refresh_time_, other->deprecated_refresh_time_);
  std::swap(proxy_config_, other->proxy_config_);
  std::swap(refresh_duration_, other->refresh_duration_);
  std::swap(pageload_metrics_config_, other->pageload_metrics_config_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ClientConfig::GetTypeName() const {
  return "data_reduction_proxy.ClientConfig";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientConfig

// optional string session_key = 1;
bool ClientConfig::has_session_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ClientConfig::set_has_session_key() {
  _has_bits_[0] |= 0x00000001u;
}
void ClientConfig::clear_has_session_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void ClientConfig::clear_session_key() {
  session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_session_key();
}
const ::std::string& ClientConfig::session_key() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ClientConfig.session_key)
  return session_key_.GetNoArena();
}
void ClientConfig::set_session_key(const ::std::string& value) {
  set_has_session_key();
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:data_reduction_proxy.ClientConfig.session_key)
}
#if LANG_CXX11
void ClientConfig::set_session_key(::std::string&& value) {
  set_has_session_key();
  session_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:data_reduction_proxy.ClientConfig.session_key)
}
#endif
void ClientConfig::set_session_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_session_key();
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:data_reduction_proxy.ClientConfig.session_key)
}
void ClientConfig::set_session_key(const char* value, size_t size) {
  set_has_session_key();
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:data_reduction_proxy.ClientConfig.session_key)
}
::std::string* ClientConfig::mutable_session_key() {
  set_has_session_key();
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.ClientConfig.session_key)
  return session_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientConfig::release_session_key() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.ClientConfig.session_key)
  clear_has_session_key();
  return session_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientConfig::set_allocated_session_key(::std::string* session_key) {
  if (session_key != NULL) {
    set_has_session_key();
  } else {
    clear_has_session_key();
  }
  session_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_key);
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.ClientConfig.session_key)
}

// optional .data_reduction_proxy.Timestamp DEPRECATED_refresh_time = 2 [deprecated = true];
bool ClientConfig::has_deprecated_refresh_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ClientConfig::set_has_deprecated_refresh_time() {
  _has_bits_[0] |= 0x00000002u;
}
void ClientConfig::clear_has_deprecated_refresh_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void ClientConfig::clear_deprecated_refresh_time() {
  if (deprecated_refresh_time_ != NULL) deprecated_refresh_time_->::data_reduction_proxy::Timestamp::Clear();
  clear_has_deprecated_refresh_time();
}
const ::data_reduction_proxy::Timestamp& ClientConfig::deprecated_refresh_time() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ClientConfig.DEPRECATED_refresh_time)
  return deprecated_refresh_time_ != NULL ? *deprecated_refresh_time_
                         : *::data_reduction_proxy::Timestamp::internal_default_instance();
}
::data_reduction_proxy::Timestamp* ClientConfig::mutable_deprecated_refresh_time() {
  set_has_deprecated_refresh_time();
  if (deprecated_refresh_time_ == NULL) {
    deprecated_refresh_time_ = new ::data_reduction_proxy::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.ClientConfig.DEPRECATED_refresh_time)
  return deprecated_refresh_time_;
}
::data_reduction_proxy::Timestamp* ClientConfig::release_deprecated_refresh_time() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.ClientConfig.DEPRECATED_refresh_time)
  clear_has_deprecated_refresh_time();
  ::data_reduction_proxy::Timestamp* temp = deprecated_refresh_time_;
  deprecated_refresh_time_ = NULL;
  return temp;
}
void ClientConfig::set_allocated_deprecated_refresh_time(::data_reduction_proxy::Timestamp* deprecated_refresh_time) {
  delete deprecated_refresh_time_;
  deprecated_refresh_time_ = deprecated_refresh_time;
  if (deprecated_refresh_time) {
    set_has_deprecated_refresh_time();
  } else {
    clear_has_deprecated_refresh_time();
  }
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.ClientConfig.DEPRECATED_refresh_time)
}

// optional .data_reduction_proxy.ProxyConfig proxy_config = 3;
bool ClientConfig::has_proxy_config() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ClientConfig::set_has_proxy_config() {
  _has_bits_[0] |= 0x00000004u;
}
void ClientConfig::clear_has_proxy_config() {
  _has_bits_[0] &= ~0x00000004u;
}
void ClientConfig::clear_proxy_config() {
  if (proxy_config_ != NULL) proxy_config_->::data_reduction_proxy::ProxyConfig::Clear();
  clear_has_proxy_config();
}
const ::data_reduction_proxy::ProxyConfig& ClientConfig::proxy_config() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ClientConfig.proxy_config)
  return proxy_config_ != NULL ? *proxy_config_
                         : *::data_reduction_proxy::ProxyConfig::internal_default_instance();
}
::data_reduction_proxy::ProxyConfig* ClientConfig::mutable_proxy_config() {
  set_has_proxy_config();
  if (proxy_config_ == NULL) {
    proxy_config_ = new ::data_reduction_proxy::ProxyConfig;
  }
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.ClientConfig.proxy_config)
  return proxy_config_;
}
::data_reduction_proxy::ProxyConfig* ClientConfig::release_proxy_config() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.ClientConfig.proxy_config)
  clear_has_proxy_config();
  ::data_reduction_proxy::ProxyConfig* temp = proxy_config_;
  proxy_config_ = NULL;
  return temp;
}
void ClientConfig::set_allocated_proxy_config(::data_reduction_proxy::ProxyConfig* proxy_config) {
  delete proxy_config_;
  proxy_config_ = proxy_config;
  if (proxy_config) {
    set_has_proxy_config();
  } else {
    clear_has_proxy_config();
  }
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.ClientConfig.proxy_config)
}

// optional .data_reduction_proxy.Duration refresh_duration = 4;
bool ClientConfig::has_refresh_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ClientConfig::set_has_refresh_duration() {
  _has_bits_[0] |= 0x00000008u;
}
void ClientConfig::clear_has_refresh_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
void ClientConfig::clear_refresh_duration() {
  if (refresh_duration_ != NULL) refresh_duration_->::data_reduction_proxy::Duration::Clear();
  clear_has_refresh_duration();
}
const ::data_reduction_proxy::Duration& ClientConfig::refresh_duration() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ClientConfig.refresh_duration)
  return refresh_duration_ != NULL ? *refresh_duration_
                         : *::data_reduction_proxy::Duration::internal_default_instance();
}
::data_reduction_proxy::Duration* ClientConfig::mutable_refresh_duration() {
  set_has_refresh_duration();
  if (refresh_duration_ == NULL) {
    refresh_duration_ = new ::data_reduction_proxy::Duration;
  }
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.ClientConfig.refresh_duration)
  return refresh_duration_;
}
::data_reduction_proxy::Duration* ClientConfig::release_refresh_duration() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.ClientConfig.refresh_duration)
  clear_has_refresh_duration();
  ::data_reduction_proxy::Duration* temp = refresh_duration_;
  refresh_duration_ = NULL;
  return temp;
}
void ClientConfig::set_allocated_refresh_duration(::data_reduction_proxy::Duration* refresh_duration) {
  delete refresh_duration_;
  refresh_duration_ = refresh_duration;
  if (refresh_duration) {
    set_has_refresh_duration();
  } else {
    clear_has_refresh_duration();
  }
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.ClientConfig.refresh_duration)
}

// optional .data_reduction_proxy.PageloadMetricsConfig pageload_metrics_config = 5;
bool ClientConfig::has_pageload_metrics_config() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ClientConfig::set_has_pageload_metrics_config() {
  _has_bits_[0] |= 0x00000010u;
}
void ClientConfig::clear_has_pageload_metrics_config() {
  _has_bits_[0] &= ~0x00000010u;
}
void ClientConfig::clear_pageload_metrics_config() {
  if (pageload_metrics_config_ != NULL) pageload_metrics_config_->::data_reduction_proxy::PageloadMetricsConfig::Clear();
  clear_has_pageload_metrics_config();
}
const ::data_reduction_proxy::PageloadMetricsConfig& ClientConfig::pageload_metrics_config() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ClientConfig.pageload_metrics_config)
  return pageload_metrics_config_ != NULL ? *pageload_metrics_config_
                         : *::data_reduction_proxy::PageloadMetricsConfig::internal_default_instance();
}
::data_reduction_proxy::PageloadMetricsConfig* ClientConfig::mutable_pageload_metrics_config() {
  set_has_pageload_metrics_config();
  if (pageload_metrics_config_ == NULL) {
    pageload_metrics_config_ = new ::data_reduction_proxy::PageloadMetricsConfig;
  }
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.ClientConfig.pageload_metrics_config)
  return pageload_metrics_config_;
}
::data_reduction_proxy::PageloadMetricsConfig* ClientConfig::release_pageload_metrics_config() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.ClientConfig.pageload_metrics_config)
  clear_has_pageload_metrics_config();
  ::data_reduction_proxy::PageloadMetricsConfig* temp = pageload_metrics_config_;
  pageload_metrics_config_ = NULL;
  return temp;
}
void ClientConfig::set_allocated_pageload_metrics_config(::data_reduction_proxy::PageloadMetricsConfig* pageload_metrics_config) {
  delete pageload_metrics_config_;
  pageload_metrics_config_ = pageload_metrics_config;
  if (pageload_metrics_config) {
    set_has_pageload_metrics_config();
  } else {
    clear_has_pageload_metrics_config();
  }
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.ClientConfig.pageload_metrics_config)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PageloadMetricsConfig::kReportingFractionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PageloadMetricsConfig::PageloadMetricsConfig()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.PageloadMetricsConfig)
}
PageloadMetricsConfig::PageloadMetricsConfig(const PageloadMetricsConfig& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reporting_fraction_ = from.reporting_fraction_;
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.PageloadMetricsConfig)
}

void PageloadMetricsConfig::SharedCtor() {
  _cached_size_ = 0;
  reporting_fraction_ = 0;
}

PageloadMetricsConfig::~PageloadMetricsConfig() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.PageloadMetricsConfig)
  SharedDtor();
}

void PageloadMetricsConfig::SharedDtor() {
}

void PageloadMetricsConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PageloadMetricsConfig& PageloadMetricsConfig::default_instance() {
  protobuf_client_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

PageloadMetricsConfig* PageloadMetricsConfig::New(::google::protobuf::Arena* arena) const {
  PageloadMetricsConfig* n = new PageloadMetricsConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PageloadMetricsConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.PageloadMetricsConfig)
  reporting_fraction_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PageloadMetricsConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.PageloadMetricsConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float reporting_fraction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u)) {
          set_has_reporting_fraction();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &reporting_fraction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.PageloadMetricsConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.PageloadMetricsConfig)
  return false;
#undef DO_
}

void PageloadMetricsConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.PageloadMetricsConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float reporting_fraction = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->reporting_fraction(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.PageloadMetricsConfig)
}

size_t PageloadMetricsConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.PageloadMetricsConfig)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // optional float reporting_fraction = 1;
  if (has_reporting_fraction()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PageloadMetricsConfig::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PageloadMetricsConfig*>(&from));
}

void PageloadMetricsConfig::MergeFrom(const PageloadMetricsConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.PageloadMetricsConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_reporting_fraction()) {
    set_reporting_fraction(from.reporting_fraction());
  }
}

void PageloadMetricsConfig::CopyFrom(const PageloadMetricsConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.PageloadMetricsConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PageloadMetricsConfig::IsInitialized() const {
  return true;
}

void PageloadMetricsConfig::Swap(PageloadMetricsConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PageloadMetricsConfig::InternalSwap(PageloadMetricsConfig* other) {
  std::swap(reporting_fraction_, other->reporting_fraction_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string PageloadMetricsConfig::GetTypeName() const {
  return "data_reduction_proxy.PageloadMetricsConfig";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PageloadMetricsConfig

// optional float reporting_fraction = 1;
bool PageloadMetricsConfig::has_reporting_fraction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PageloadMetricsConfig::set_has_reporting_fraction() {
  _has_bits_[0] |= 0x00000001u;
}
void PageloadMetricsConfig::clear_has_reporting_fraction() {
  _has_bits_[0] &= ~0x00000001u;
}
void PageloadMetricsConfig::clear_reporting_fraction() {
  reporting_fraction_ = 0;
  clear_has_reporting_fraction();
}
float PageloadMetricsConfig::reporting_fraction() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.PageloadMetricsConfig.reporting_fraction)
  return reporting_fraction_;
}
void PageloadMetricsConfig::set_reporting_fraction(float value) {
  set_has_reporting_fraction();
  reporting_fraction_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.PageloadMetricsConfig.reporting_fraction)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Timestamp::kSecondsFieldNumber;
const int Timestamp::kNanosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Timestamp::Timestamp()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.Timestamp)
}
Timestamp::Timestamp(const Timestamp& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seconds_, &from.seconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&nanos_) -
    reinterpret_cast<char*>(&seconds_)) + sizeof(nanos_));
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.Timestamp)
}

void Timestamp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nanos_) -
      reinterpret_cast<char*>(&seconds_)) + sizeof(nanos_));
}

Timestamp::~Timestamp() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.Timestamp)
  SharedDtor();
}

void Timestamp::SharedDtor() {
}

void Timestamp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Timestamp& Timestamp::default_instance() {
  protobuf_client_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

Timestamp* Timestamp::New(::google::protobuf::Arena* arena) const {
  Timestamp* n = new Timestamp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Timestamp::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.Timestamp)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&seconds_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&nanos_) -
        reinterpret_cast<char*>(&seconds_)) + sizeof(nanos_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Timestamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.Timestamp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 seconds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 nanos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_nanos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nanos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.Timestamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.Timestamp)
  return false;
#undef DO_
}

void Timestamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 seconds = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->seconds(), output);
  }

  // optional int32 nanos = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nanos(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.Timestamp)
}

size_t Timestamp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.Timestamp)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 seconds = 1;
    if (has_seconds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->seconds());
    }

    // optional int32 nanos = 2;
    if (has_nanos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nanos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Timestamp::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Timestamp*>(&from));
}

void Timestamp::MergeFrom(const Timestamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.Timestamp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      seconds_ = from.seconds_;
    }
    if (cached_has_bits & 0x00000002u) {
      nanos_ = from.nanos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Timestamp::CopyFrom(const Timestamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.Timestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Timestamp::IsInitialized() const {
  return true;
}

void Timestamp::Swap(Timestamp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Timestamp::InternalSwap(Timestamp* other) {
  std::swap(seconds_, other->seconds_);
  std::swap(nanos_, other->nanos_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Timestamp::GetTypeName() const {
  return "data_reduction_proxy.Timestamp";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Timestamp

// optional int64 seconds = 1;
bool Timestamp::has_seconds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Timestamp::set_has_seconds() {
  _has_bits_[0] |= 0x00000001u;
}
void Timestamp::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000001u;
}
void Timestamp::clear_seconds() {
  seconds_ = GOOGLE_LONGLONG(0);
  clear_has_seconds();
}
::google::protobuf::int64 Timestamp::seconds() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.Timestamp.seconds)
  return seconds_;
}
void Timestamp::set_seconds(::google::protobuf::int64 value) {
  set_has_seconds();
  seconds_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.Timestamp.seconds)
}

// optional int32 nanos = 2;
bool Timestamp::has_nanos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Timestamp::set_has_nanos() {
  _has_bits_[0] |= 0x00000002u;
}
void Timestamp::clear_has_nanos() {
  _has_bits_[0] &= ~0x00000002u;
}
void Timestamp::clear_nanos() {
  nanos_ = 0;
  clear_has_nanos();
}
::google::protobuf::int32 Timestamp::nanos() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.Timestamp.nanos)
  return nanos_;
}
void Timestamp::set_nanos(::google::protobuf::int32 value) {
  set_has_nanos();
  nanos_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.Timestamp.nanos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Duration::kSecondsFieldNumber;
const int Duration::kNanosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Duration::Duration()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.Duration)
}
Duration::Duration(const Duration& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seconds_, &from.seconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&nanos_) -
    reinterpret_cast<char*>(&seconds_)) + sizeof(nanos_));
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.Duration)
}

void Duration::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nanos_) -
      reinterpret_cast<char*>(&seconds_)) + sizeof(nanos_));
}

Duration::~Duration() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.Duration)
  SharedDtor();
}

void Duration::SharedDtor() {
}

void Duration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Duration& Duration::default_instance() {
  protobuf_client_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

Duration* Duration::New(::google::protobuf::Arena* arena) const {
  Duration* n = new Duration;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Duration::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.Duration)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&seconds_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&nanos_) -
        reinterpret_cast<char*>(&seconds_)) + sizeof(nanos_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Duration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.Duration)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 seconds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 nanos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_nanos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nanos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.Duration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.Duration)
  return false;
#undef DO_
}

void Duration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.Duration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 seconds = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->seconds(), output);
  }

  // optional int32 nanos = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nanos(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.Duration)
}

size_t Duration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.Duration)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 seconds = 1;
    if (has_seconds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->seconds());
    }

    // optional int32 nanos = 2;
    if (has_nanos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nanos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Duration::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Duration*>(&from));
}

void Duration::MergeFrom(const Duration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.Duration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      seconds_ = from.seconds_;
    }
    if (cached_has_bits & 0x00000002u) {
      nanos_ = from.nanos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Duration::CopyFrom(const Duration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.Duration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Duration::IsInitialized() const {
  return true;
}

void Duration::Swap(Duration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Duration::InternalSwap(Duration* other) {
  std::swap(seconds_, other->seconds_);
  std::swap(nanos_, other->nanos_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Duration::GetTypeName() const {
  return "data_reduction_proxy.Duration";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Duration

// optional int64 seconds = 1;
bool Duration::has_seconds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Duration::set_has_seconds() {
  _has_bits_[0] |= 0x00000001u;
}
void Duration::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000001u;
}
void Duration::clear_seconds() {
  seconds_ = GOOGLE_LONGLONG(0);
  clear_has_seconds();
}
::google::protobuf::int64 Duration::seconds() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.Duration.seconds)
  return seconds_;
}
void Duration::set_seconds(::google::protobuf::int64 value) {
  set_has_seconds();
  seconds_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.Duration.seconds)
}

// optional int32 nanos = 2;
bool Duration::has_nanos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Duration::set_has_nanos() {
  _has_bits_[0] |= 0x00000002u;
}
void Duration::clear_has_nanos() {
  _has_bits_[0] &= ~0x00000002u;
}
void Duration::clear_nanos() {
  nanos_ = 0;
  clear_has_nanos();
}
::google::protobuf::int32 Duration::nanos() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.Duration.nanos)
  return nanos_;
}
void Duration::set_nanos(::google::protobuf::int32 value) {
  set_has_nanos();
  nanos_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.Duration.nanos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyConfig::kHttpProxyServersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProxyConfig::ProxyConfig()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.ProxyConfig)
}
ProxyConfig::ProxyConfig(const ProxyConfig& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      http_proxy_servers_(from.http_proxy_servers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.ProxyConfig)
}

void ProxyConfig::SharedCtor() {
  _cached_size_ = 0;
}

ProxyConfig::~ProxyConfig() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.ProxyConfig)
  SharedDtor();
}

void ProxyConfig::SharedDtor() {
}

void ProxyConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ProxyConfig& ProxyConfig::default_instance() {
  protobuf_client_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProxyConfig* ProxyConfig::New(::google::protobuf::Arena* arena) const {
  ProxyConfig* n = new ProxyConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProxyConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.ProxyConfig)
  http_proxy_servers_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProxyConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.ProxyConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .data_reduction_proxy.ProxyServer http_proxy_servers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_http_proxy_servers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.ProxyConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.ProxyConfig)
  return false;
#undef DO_
}

void ProxyConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.ProxyConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .data_reduction_proxy.ProxyServer http_proxy_servers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->http_proxy_servers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->http_proxy_servers(static_cast<int>(i)), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.ProxyConfig)
}

size_t ProxyConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.ProxyConfig)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated .data_reduction_proxy.ProxyServer http_proxy_servers = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->http_proxy_servers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->http_proxy_servers(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProxyConfig::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ProxyConfig*>(&from));
}

void ProxyConfig::MergeFrom(const ProxyConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.ProxyConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  http_proxy_servers_.MergeFrom(from.http_proxy_servers_);
}

void ProxyConfig::CopyFrom(const ProxyConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.ProxyConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyConfig::IsInitialized() const {
  return true;
}

void ProxyConfig::Swap(ProxyConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProxyConfig::InternalSwap(ProxyConfig* other) {
  http_proxy_servers_.InternalSwap(&other->http_proxy_servers_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ProxyConfig::GetTypeName() const {
  return "data_reduction_proxy.ProxyConfig";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProxyConfig

// repeated .data_reduction_proxy.ProxyServer http_proxy_servers = 1;
int ProxyConfig::http_proxy_servers_size() const {
  return http_proxy_servers_.size();
}
void ProxyConfig::clear_http_proxy_servers() {
  http_proxy_servers_.Clear();
}
const ::data_reduction_proxy::ProxyServer& ProxyConfig::http_proxy_servers(int index) const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ProxyConfig.http_proxy_servers)
  return http_proxy_servers_.Get(index);
}
::data_reduction_proxy::ProxyServer* ProxyConfig::mutable_http_proxy_servers(int index) {
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.ProxyConfig.http_proxy_servers)
  return http_proxy_servers_.Mutable(index);
}
::data_reduction_proxy::ProxyServer* ProxyConfig::add_http_proxy_servers() {
  // @@protoc_insertion_point(field_add:data_reduction_proxy.ProxyConfig.http_proxy_servers)
  return http_proxy_servers_.Add();
}
::google::protobuf::RepeatedPtrField< ::data_reduction_proxy::ProxyServer >*
ProxyConfig::mutable_http_proxy_servers() {
  // @@protoc_insertion_point(field_mutable_list:data_reduction_proxy.ProxyConfig.http_proxy_servers)
  return &http_proxy_servers_;
}
const ::google::protobuf::RepeatedPtrField< ::data_reduction_proxy::ProxyServer >&
ProxyConfig::http_proxy_servers() const {
  // @@protoc_insertion_point(field_list:data_reduction_proxy.ProxyConfig.http_proxy_servers)
  return http_proxy_servers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyServer::kSchemeFieldNumber;
const int ProxyServer::kHostFieldNumber;
const int ProxyServer::kPortFieldNumber;
const int ProxyServer::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProxyServer::ProxyServer()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.ProxyServer)
}
ProxyServer::ProxyServer(const ProxyServer& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host()) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  ::memcpy(&scheme_, &from.scheme_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&scheme_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.ProxyServer)
}

void ProxyServer::SharedCtor() {
  _cached_size_ = 0;
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scheme_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&scheme_)) + sizeof(type_));
}

ProxyServer::~ProxyServer() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.ProxyServer)
  SharedDtor();
}

void ProxyServer::SharedDtor() {
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProxyServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ProxyServer& ProxyServer::default_instance() {
  protobuf_client_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProxyServer* ProxyServer::New(::google::protobuf::Arena* arena) const {
  ProxyServer* n = new ProxyServer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProxyServer::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.ProxyServer)
  if (has_host()) {
    GOOGLE_DCHECK(!host_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*host_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&scheme_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&scheme_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProxyServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.ProxyServer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .data_reduction_proxy.ProxyServer.ProxyScheme scheme = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::data_reduction_proxy::ProxyServer_ProxyScheme_IsValid(value)) {
            set_scheme(static_cast< ::data_reduction_proxy::ProxyServer_ProxyScheme >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string host = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .data_reduction_proxy.ProxyServer.ProxyType type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::data_reduction_proxy::ProxyServer_ProxyType_IsValid(value)) {
            set_type(static_cast< ::data_reduction_proxy::ProxyServer_ProxyType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(32u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.ProxyServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.ProxyServer)
  return false;
#undef DO_
}

void ProxyServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.ProxyServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .data_reduction_proxy.ProxyServer.ProxyScheme scheme = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->scheme(), output);
  }

  // optional string host = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host(), output);
  }

  // optional int32 port = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->port(), output);
  }

  // optional .data_reduction_proxy.ProxyServer.ProxyType type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.ProxyServer)
}

size_t ProxyServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.ProxyServer)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 15u) {
    // optional string host = 2;
    if (has_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host());
    }

    // optional .data_reduction_proxy.ProxyServer.ProxyScheme scheme = 1;
    if (has_scheme()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->scheme());
    }

    // optional int32 port = 3;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->port());
    }

    // optional .data_reduction_proxy.ProxyServer.ProxyType type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProxyServer::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ProxyServer*>(&from));
}

void ProxyServer::MergeFrom(const ProxyServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.ProxyServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_host();
      host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
    }
    if (cached_has_bits & 0x00000002u) {
      scheme_ = from.scheme_;
    }
    if (cached_has_bits & 0x00000004u) {
      port_ = from.port_;
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProxyServer::CopyFrom(const ProxyServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.ProxyServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyServer::IsInitialized() const {
  return true;
}

void ProxyServer::Swap(ProxyServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProxyServer::InternalSwap(ProxyServer* other) {
  host_.Swap(&other->host_);
  std::swap(scheme_, other->scheme_);
  std::swap(port_, other->port_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ProxyServer::GetTypeName() const {
  return "data_reduction_proxy.ProxyServer";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProxyServer

// optional .data_reduction_proxy.ProxyServer.ProxyScheme scheme = 1;
bool ProxyServer::has_scheme() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProxyServer::set_has_scheme() {
  _has_bits_[0] |= 0x00000002u;
}
void ProxyServer::clear_has_scheme() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProxyServer::clear_scheme() {
  scheme_ = 0;
  clear_has_scheme();
}
::data_reduction_proxy::ProxyServer_ProxyScheme ProxyServer::scheme() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ProxyServer.scheme)
  return static_cast< ::data_reduction_proxy::ProxyServer_ProxyScheme >(scheme_);
}
void ProxyServer::set_scheme(::data_reduction_proxy::ProxyServer_ProxyScheme value) {
  assert(::data_reduction_proxy::ProxyServer_ProxyScheme_IsValid(value));
  set_has_scheme();
  scheme_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.ProxyServer.scheme)
}

// optional string host = 2;
bool ProxyServer::has_host() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProxyServer::set_has_host() {
  _has_bits_[0] |= 0x00000001u;
}
void ProxyServer::clear_has_host() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProxyServer::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
const ::std::string& ProxyServer::host() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ProxyServer.host)
  return host_.GetNoArena();
}
void ProxyServer::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:data_reduction_proxy.ProxyServer.host)
}
#if LANG_CXX11
void ProxyServer::set_host(::std::string&& value) {
  set_has_host();
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:data_reduction_proxy.ProxyServer.host)
}
#endif
void ProxyServer::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:data_reduction_proxy.ProxyServer.host)
}
void ProxyServer::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:data_reduction_proxy.ProxyServer.host)
}
::std::string* ProxyServer::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.ProxyServer.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProxyServer::release_host() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.ProxyServer.host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProxyServer::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.ProxyServer.host)
}

// optional int32 port = 3;
bool ProxyServer::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ProxyServer::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
void ProxyServer::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
void ProxyServer::clear_port() {
  port_ = 0;
  clear_has_port();
}
::google::protobuf::int32 ProxyServer::port() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ProxyServer.port)
  return port_;
}
void ProxyServer::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.ProxyServer.port)
}

// optional .data_reduction_proxy.ProxyServer.ProxyType type = 4;
bool ProxyServer::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ProxyServer::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
void ProxyServer::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void ProxyServer::clear_type() {
  type_ = 0;
  clear_has_type();
}
::data_reduction_proxy::ProxyServer_ProxyType ProxyServer::type() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ProxyServer.type)
  return static_cast< ::data_reduction_proxy::ProxyServer_ProxyType >(type_);
}
void ProxyServer::set_type(::data_reduction_proxy::ProxyServer_ProxyType value) {
  assert(::data_reduction_proxy::ProxyServer_ProxyType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.ProxyServer.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigDeviceInfo::kTotalDeviceMemoryKbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigDeviceInfo::ConfigDeviceInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.ConfigDeviceInfo)
}
ConfigDeviceInfo::ConfigDeviceInfo(const ConfigDeviceInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  total_device_memory_kb_ = from.total_device_memory_kb_;
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.ConfigDeviceInfo)
}

void ConfigDeviceInfo::SharedCtor() {
  _cached_size_ = 0;
  total_device_memory_kb_ = GOOGLE_LONGLONG(0);
}

ConfigDeviceInfo::~ConfigDeviceInfo() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.ConfigDeviceInfo)
  SharedDtor();
}

void ConfigDeviceInfo::SharedDtor() {
}

void ConfigDeviceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ConfigDeviceInfo& ConfigDeviceInfo::default_instance() {
  protobuf_client_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfigDeviceInfo* ConfigDeviceInfo::New(::google::protobuf::Arena* arena) const {
  ConfigDeviceInfo* n = new ConfigDeviceInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigDeviceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.ConfigDeviceInfo)
  total_device_memory_kb_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigDeviceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.ConfigDeviceInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 total_device_memory_kb = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_total_device_memory_kb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_device_memory_kb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.ConfigDeviceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.ConfigDeviceInfo)
  return false;
#undef DO_
}

void ConfigDeviceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.ConfigDeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 total_device_memory_kb = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->total_device_memory_kb(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.ConfigDeviceInfo)
}

size_t ConfigDeviceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.ConfigDeviceInfo)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // optional int64 total_device_memory_kb = 1;
  if (has_total_device_memory_kb()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total_device_memory_kb());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigDeviceInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ConfigDeviceInfo*>(&from));
}

void ConfigDeviceInfo::MergeFrom(const ConfigDeviceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.ConfigDeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_total_device_memory_kb()) {
    set_total_device_memory_kb(from.total_device_memory_kb());
  }
}

void ConfigDeviceInfo::CopyFrom(const ConfigDeviceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.ConfigDeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigDeviceInfo::IsInitialized() const {
  return true;
}

void ConfigDeviceInfo::Swap(ConfigDeviceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigDeviceInfo::InternalSwap(ConfigDeviceInfo* other) {
  std::swap(total_device_memory_kb_, other->total_device_memory_kb_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ConfigDeviceInfo::GetTypeName() const {
  return "data_reduction_proxy.ConfigDeviceInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigDeviceInfo

// optional int64 total_device_memory_kb = 1;
bool ConfigDeviceInfo::has_total_device_memory_kb() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ConfigDeviceInfo::set_has_total_device_memory_kb() {
  _has_bits_[0] |= 0x00000001u;
}
void ConfigDeviceInfo::clear_has_total_device_memory_kb() {
  _has_bits_[0] &= ~0x00000001u;
}
void ConfigDeviceInfo::clear_total_device_memory_kb() {
  total_device_memory_kb_ = GOOGLE_LONGLONG(0);
  clear_has_total_device_memory_kb();
}
::google::protobuf::int64 ConfigDeviceInfo::total_device_memory_kb() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ConfigDeviceInfo.total_device_memory_kb)
  return total_device_memory_kb_;
}
void ConfigDeviceInfo::set_total_device_memory_kb(::google::protobuf::int64 value) {
  set_has_total_device_memory_kb();
  total_device_memory_kb_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.ConfigDeviceInfo.total_device_memory_kb)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateClientConfigRequest::kSessionKeyFieldNumber;
const int CreateClientConfigRequest::kVersionInfoFieldNumber;
const int CreateClientConfigRequest::kTelephonyNetworkOperatorFieldNumber;
const int CreateClientConfigRequest::kDogfoodGroupFieldNumber;
const int CreateClientConfigRequest::kDeviceInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateClientConfigRequest::CreateClientConfigRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.CreateClientConfigRequest)
}
CreateClientConfigRequest::CreateClientConfigRequest(const CreateClientConfigRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_session_key()) {
    session_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_key_);
  }
  telephony_network_operator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_telephony_network_operator()) {
    telephony_network_operator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.telephony_network_operator_);
  }
  if (from.has_version_info()) {
    version_info_ = new ::data_reduction_proxy::VersionInfo(*from.version_info_);
  } else {
    version_info_ = NULL;
  }
  if (from.has_device_info()) {
    device_info_ = new ::data_reduction_proxy::ConfigDeviceInfo(*from.device_info_);
  } else {
    device_info_ = NULL;
  }
  dogfood_group_ = from.dogfood_group_;
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.CreateClientConfigRequest)
}

void CreateClientConfigRequest::SharedCtor() {
  _cached_size_ = 0;
  session_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  telephony_network_operator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dogfood_group_) -
      reinterpret_cast<char*>(&version_info_)) + sizeof(dogfood_group_));
}

CreateClientConfigRequest::~CreateClientConfigRequest() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.CreateClientConfigRequest)
  SharedDtor();
}

void CreateClientConfigRequest::SharedDtor() {
  session_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  telephony_network_operator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete version_info_;
  }
  if (this != internal_default_instance()) {
    delete device_info_;
  }
}

void CreateClientConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CreateClientConfigRequest& CreateClientConfigRequest::default_instance() {
  protobuf_client_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateClientConfigRequest* CreateClientConfigRequest::New(::google::protobuf::Arena* arena) const {
  CreateClientConfigRequest* n = new CreateClientConfigRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateClientConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.CreateClientConfigRequest)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_session_key()) {
      GOOGLE_DCHECK(!session_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*session_key_.UnsafeRawStringPointer())->clear();
    }
    if (has_telephony_network_operator()) {
      GOOGLE_DCHECK(!telephony_network_operator_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*telephony_network_operator_.UnsafeRawStringPointer())->clear();
    }
    if (has_version_info()) {
      GOOGLE_DCHECK(version_info_ != NULL);
      version_info_->::data_reduction_proxy::VersionInfo::Clear();
    }
    if (has_device_info()) {
      GOOGLE_DCHECK(device_info_ != NULL);
      device_info_->::data_reduction_proxy::ConfigDeviceInfo::Clear();
    }
  }
  dogfood_group_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateClientConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.CreateClientConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string session_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .data_reduction_proxy.VersionInfo version_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_version_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string telephony_network_operator = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_telephony_network_operator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .data_reduction_proxy.CreateClientConfigRequest.DogfoodGroup dogfood_group = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::data_reduction_proxy::CreateClientConfigRequest_DogfoodGroup_IsValid(value)) {
            set_dogfood_group(static_cast< ::data_reduction_proxy::CreateClientConfigRequest_DogfoodGroup >(value));
          } else {
            unknown_fields_stream.WriteVarint32(32u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .data_reduction_proxy.ConfigDeviceInfo device_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_device_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.CreateClientConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.CreateClientConfigRequest)
  return false;
#undef DO_
}

void CreateClientConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.CreateClientConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string session_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->session_key(), output);
  }

  // optional .data_reduction_proxy.VersionInfo version_info = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->version_info_, output);
  }

  // optional string telephony_network_operator = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->telephony_network_operator(), output);
  }

  // optional .data_reduction_proxy.CreateClientConfigRequest.DogfoodGroup dogfood_group = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->dogfood_group(), output);
  }

  // optional .data_reduction_proxy.ConfigDeviceInfo device_info = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, *this->device_info_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.CreateClientConfigRequest)
}

size_t CreateClientConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.CreateClientConfigRequest)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 31u) {
    // optional string session_key = 1;
    if (has_session_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->session_key());
    }

    // optional string telephony_network_operator = 3;
    if (has_telephony_network_operator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->telephony_network_operator());
    }

    // optional .data_reduction_proxy.VersionInfo version_info = 2;
    if (has_version_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->version_info_);
    }

    // optional .data_reduction_proxy.ConfigDeviceInfo device_info = 5;
    if (has_device_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->device_info_);
    }

    // optional .data_reduction_proxy.CreateClientConfigRequest.DogfoodGroup dogfood_group = 4;
    if (has_dogfood_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->dogfood_group());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateClientConfigRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CreateClientConfigRequest*>(&from));
}

void CreateClientConfigRequest::MergeFrom(const CreateClientConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.CreateClientConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_session_key();
      session_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_telephony_network_operator();
      telephony_network_operator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.telephony_network_operator_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_version_info()->::data_reduction_proxy::VersionInfo::MergeFrom(from.version_info());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_device_info()->::data_reduction_proxy::ConfigDeviceInfo::MergeFrom(from.device_info());
    }
    if (cached_has_bits & 0x00000010u) {
      dogfood_group_ = from.dogfood_group_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateClientConfigRequest::CopyFrom(const CreateClientConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.CreateClientConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateClientConfigRequest::IsInitialized() const {
  return true;
}

void CreateClientConfigRequest::Swap(CreateClientConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateClientConfigRequest::InternalSwap(CreateClientConfigRequest* other) {
  session_key_.Swap(&other->session_key_);
  telephony_network_operator_.Swap(&other->telephony_network_operator_);
  std::swap(version_info_, other->version_info_);
  std::swap(device_info_, other->device_info_);
  std::swap(dogfood_group_, other->dogfood_group_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CreateClientConfigRequest::GetTypeName() const {
  return "data_reduction_proxy.CreateClientConfigRequest";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateClientConfigRequest

// optional string session_key = 1;
bool CreateClientConfigRequest::has_session_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateClientConfigRequest::set_has_session_key() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateClientConfigRequest::clear_has_session_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateClientConfigRequest::clear_session_key() {
  session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_session_key();
}
const ::std::string& CreateClientConfigRequest::session_key() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.CreateClientConfigRequest.session_key)
  return session_key_.GetNoArena();
}
void CreateClientConfigRequest::set_session_key(const ::std::string& value) {
  set_has_session_key();
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:data_reduction_proxy.CreateClientConfigRequest.session_key)
}
#if LANG_CXX11
void CreateClientConfigRequest::set_session_key(::std::string&& value) {
  set_has_session_key();
  session_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:data_reduction_proxy.CreateClientConfigRequest.session_key)
}
#endif
void CreateClientConfigRequest::set_session_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_session_key();
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:data_reduction_proxy.CreateClientConfigRequest.session_key)
}
void CreateClientConfigRequest::set_session_key(const char* value, size_t size) {
  set_has_session_key();
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:data_reduction_proxy.CreateClientConfigRequest.session_key)
}
::std::string* CreateClientConfigRequest::mutable_session_key() {
  set_has_session_key();
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.CreateClientConfigRequest.session_key)
  return session_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateClientConfigRequest::release_session_key() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.CreateClientConfigRequest.session_key)
  clear_has_session_key();
  return session_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateClientConfigRequest::set_allocated_session_key(::std::string* session_key) {
  if (session_key != NULL) {
    set_has_session_key();
  } else {
    clear_has_session_key();
  }
  session_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_key);
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.CreateClientConfigRequest.session_key)
}

// optional .data_reduction_proxy.VersionInfo version_info = 2;
bool CreateClientConfigRequest::has_version_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CreateClientConfigRequest::set_has_version_info() {
  _has_bits_[0] |= 0x00000004u;
}
void CreateClientConfigRequest::clear_has_version_info() {
  _has_bits_[0] &= ~0x00000004u;
}
void CreateClientConfigRequest::clear_version_info() {
  if (version_info_ != NULL) version_info_->::data_reduction_proxy::VersionInfo::Clear();
  clear_has_version_info();
}
const ::data_reduction_proxy::VersionInfo& CreateClientConfigRequest::version_info() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.CreateClientConfigRequest.version_info)
  return version_info_ != NULL ? *version_info_
                         : *::data_reduction_proxy::VersionInfo::internal_default_instance();
}
::data_reduction_proxy::VersionInfo* CreateClientConfigRequest::mutable_version_info() {
  set_has_version_info();
  if (version_info_ == NULL) {
    version_info_ = new ::data_reduction_proxy::VersionInfo;
  }
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.CreateClientConfigRequest.version_info)
  return version_info_;
}
::data_reduction_proxy::VersionInfo* CreateClientConfigRequest::release_version_info() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.CreateClientConfigRequest.version_info)
  clear_has_version_info();
  ::data_reduction_proxy::VersionInfo* temp = version_info_;
  version_info_ = NULL;
  return temp;
}
void CreateClientConfigRequest::set_allocated_version_info(::data_reduction_proxy::VersionInfo* version_info) {
  delete version_info_;
  version_info_ = version_info;
  if (version_info) {
    set_has_version_info();
  } else {
    clear_has_version_info();
  }
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.CreateClientConfigRequest.version_info)
}

// optional string telephony_network_operator = 3;
bool CreateClientConfigRequest::has_telephony_network_operator() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CreateClientConfigRequest::set_has_telephony_network_operator() {
  _has_bits_[0] |= 0x00000002u;
}
void CreateClientConfigRequest::clear_has_telephony_network_operator() {
  _has_bits_[0] &= ~0x00000002u;
}
void CreateClientConfigRequest::clear_telephony_network_operator() {
  telephony_network_operator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_telephony_network_operator();
}
const ::std::string& CreateClientConfigRequest::telephony_network_operator() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.CreateClientConfigRequest.telephony_network_operator)
  return telephony_network_operator_.GetNoArena();
}
void CreateClientConfigRequest::set_telephony_network_operator(const ::std::string& value) {
  set_has_telephony_network_operator();
  telephony_network_operator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:data_reduction_proxy.CreateClientConfigRequest.telephony_network_operator)
}
#if LANG_CXX11
void CreateClientConfigRequest::set_telephony_network_operator(::std::string&& value) {
  set_has_telephony_network_operator();
  telephony_network_operator_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:data_reduction_proxy.CreateClientConfigRequest.telephony_network_operator)
}
#endif
void CreateClientConfigRequest::set_telephony_network_operator(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_telephony_network_operator();
  telephony_network_operator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:data_reduction_proxy.CreateClientConfigRequest.telephony_network_operator)
}
void CreateClientConfigRequest::set_telephony_network_operator(const char* value, size_t size) {
  set_has_telephony_network_operator();
  telephony_network_operator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:data_reduction_proxy.CreateClientConfigRequest.telephony_network_operator)
}
::std::string* CreateClientConfigRequest::mutable_telephony_network_operator() {
  set_has_telephony_network_operator();
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.CreateClientConfigRequest.telephony_network_operator)
  return telephony_network_operator_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateClientConfigRequest::release_telephony_network_operator() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.CreateClientConfigRequest.telephony_network_operator)
  clear_has_telephony_network_operator();
  return telephony_network_operator_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateClientConfigRequest::set_allocated_telephony_network_operator(::std::string* telephony_network_operator) {
  if (telephony_network_operator != NULL) {
    set_has_telephony_network_operator();
  } else {
    clear_has_telephony_network_operator();
  }
  telephony_network_operator_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), telephony_network_operator);
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.CreateClientConfigRequest.telephony_network_operator)
}

// optional .data_reduction_proxy.CreateClientConfigRequest.DogfoodGroup dogfood_group = 4;
bool CreateClientConfigRequest::has_dogfood_group() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CreateClientConfigRequest::set_has_dogfood_group() {
  _has_bits_[0] |= 0x00000010u;
}
void CreateClientConfigRequest::clear_has_dogfood_group() {
  _has_bits_[0] &= ~0x00000010u;
}
void CreateClientConfigRequest::clear_dogfood_group() {
  dogfood_group_ = 0;
  clear_has_dogfood_group();
}
::data_reduction_proxy::CreateClientConfigRequest_DogfoodGroup CreateClientConfigRequest::dogfood_group() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.CreateClientConfigRequest.dogfood_group)
  return static_cast< ::data_reduction_proxy::CreateClientConfigRequest_DogfoodGroup >(dogfood_group_);
}
void CreateClientConfigRequest::set_dogfood_group(::data_reduction_proxy::CreateClientConfigRequest_DogfoodGroup value) {
  assert(::data_reduction_proxy::CreateClientConfigRequest_DogfoodGroup_IsValid(value));
  set_has_dogfood_group();
  dogfood_group_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.CreateClientConfigRequest.dogfood_group)
}

// optional .data_reduction_proxy.ConfigDeviceInfo device_info = 5;
bool CreateClientConfigRequest::has_device_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CreateClientConfigRequest::set_has_device_info() {
  _has_bits_[0] |= 0x00000008u;
}
void CreateClientConfigRequest::clear_has_device_info() {
  _has_bits_[0] &= ~0x00000008u;
}
void CreateClientConfigRequest::clear_device_info() {
  if (device_info_ != NULL) device_info_->::data_reduction_proxy::ConfigDeviceInfo::Clear();
  clear_has_device_info();
}
const ::data_reduction_proxy::ConfigDeviceInfo& CreateClientConfigRequest::device_info() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.CreateClientConfigRequest.device_info)
  return device_info_ != NULL ? *device_info_
                         : *::data_reduction_proxy::ConfigDeviceInfo::internal_default_instance();
}
::data_reduction_proxy::ConfigDeviceInfo* CreateClientConfigRequest::mutable_device_info() {
  set_has_device_info();
  if (device_info_ == NULL) {
    device_info_ = new ::data_reduction_proxy::ConfigDeviceInfo;
  }
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.CreateClientConfigRequest.device_info)
  return device_info_;
}
::data_reduction_proxy::ConfigDeviceInfo* CreateClientConfigRequest::release_device_info() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.CreateClientConfigRequest.device_info)
  clear_has_device_info();
  ::data_reduction_proxy::ConfigDeviceInfo* temp = device_info_;
  device_info_ = NULL;
  return temp;
}
void CreateClientConfigRequest::set_allocated_device_info(::data_reduction_proxy::ConfigDeviceInfo* device_info) {
  delete device_info_;
  device_info_ = device_info;
  if (device_info) {
    set_has_device_info();
  } else {
    clear_has_device_info();
  }
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.CreateClientConfigRequest.device_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VersionInfo::kClientFieldNumber;
const int VersionInfo::kBuildFieldNumber;
const int VersionInfo::kPatchFieldNumber;
const int VersionInfo::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VersionInfo::VersionInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.VersionInfo)
}
VersionInfo::VersionInfo(const VersionInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_client()) {
    client_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_);
  }
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel()) {
    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
  ::memcpy(&build_, &from.build_,
    static_cast<size_t>(reinterpret_cast<char*>(&patch_) -
    reinterpret_cast<char*>(&build_)) + sizeof(patch_));
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.VersionInfo)
}

void VersionInfo::SharedCtor() {
  _cached_size_ = 0;
  client_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&build_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&patch_) -
      reinterpret_cast<char*>(&build_)) + sizeof(patch_));
}

VersionInfo::~VersionInfo() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.VersionInfo)
  SharedDtor();
}

void VersionInfo::SharedDtor() {
  client_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VersionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const VersionInfo& VersionInfo::default_instance() {
  protobuf_client_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

VersionInfo* VersionInfo::New(::google::protobuf::Arena* arena) const {
  VersionInfo* n = new VersionInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VersionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.VersionInfo)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_client()) {
      GOOGLE_DCHECK(!client_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*client_.UnsafeRawStringPointer())->clear();
    }
    if (has_channel()) {
      GOOGLE_DCHECK(!channel_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*channel_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&build_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&patch_) -
        reinterpret_cast<char*>(&build_)) + sizeof(patch_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VersionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.VersionInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string client = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 build = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_build();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &build_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 patch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_patch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &patch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string channel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.VersionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.VersionInfo)
  return false;
#undef DO_
}

void VersionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.VersionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string client = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->client(), output);
  }

  // optional int32 build = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->build(), output);
  }

  // optional int32 patch = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->patch(), output);
  }

  // optional string channel = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->channel(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.VersionInfo)
}

size_t VersionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.VersionInfo)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 15u) {
    // optional string client = 1;
    if (has_client()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->client());
    }

    // optional string channel = 4;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel());
    }

    // optional int32 build = 2;
    if (has_build()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->build());
    }

    // optional int32 patch = 3;
    if (has_patch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->patch());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VersionInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VersionInfo*>(&from));
}

void VersionInfo::MergeFrom(const VersionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.VersionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_client();
      client_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_channel();
      channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
    }
    if (cached_has_bits & 0x00000004u) {
      build_ = from.build_;
    }
    if (cached_has_bits & 0x00000008u) {
      patch_ = from.patch_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VersionInfo::CopyFrom(const VersionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.VersionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionInfo::IsInitialized() const {
  return true;
}

void VersionInfo::Swap(VersionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VersionInfo::InternalSwap(VersionInfo* other) {
  client_.Swap(&other->client_);
  channel_.Swap(&other->channel_);
  std::swap(build_, other->build_);
  std::swap(patch_, other->patch_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string VersionInfo::GetTypeName() const {
  return "data_reduction_proxy.VersionInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VersionInfo

// optional string client = 1;
bool VersionInfo::has_client() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VersionInfo::set_has_client() {
  _has_bits_[0] |= 0x00000001u;
}
void VersionInfo::clear_has_client() {
  _has_bits_[0] &= ~0x00000001u;
}
void VersionInfo::clear_client() {
  client_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_client();
}
const ::std::string& VersionInfo::client() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.VersionInfo.client)
  return client_.GetNoArena();
}
void VersionInfo::set_client(const ::std::string& value) {
  set_has_client();
  client_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:data_reduction_proxy.VersionInfo.client)
}
#if LANG_CXX11
void VersionInfo::set_client(::std::string&& value) {
  set_has_client();
  client_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:data_reduction_proxy.VersionInfo.client)
}
#endif
void VersionInfo::set_client(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_client();
  client_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:data_reduction_proxy.VersionInfo.client)
}
void VersionInfo::set_client(const char* value, size_t size) {
  set_has_client();
  client_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:data_reduction_proxy.VersionInfo.client)
}
::std::string* VersionInfo::mutable_client() {
  set_has_client();
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.VersionInfo.client)
  return client_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VersionInfo::release_client() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.VersionInfo.client)
  clear_has_client();
  return client_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VersionInfo::set_allocated_client(::std::string* client) {
  if (client != NULL) {
    set_has_client();
  } else {
    clear_has_client();
  }
  client_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client);
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.VersionInfo.client)
}

// optional int32 build = 2;
bool VersionInfo::has_build() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void VersionInfo::set_has_build() {
  _has_bits_[0] |= 0x00000004u;
}
void VersionInfo::clear_has_build() {
  _has_bits_[0] &= ~0x00000004u;
}
void VersionInfo::clear_build() {
  build_ = 0;
  clear_has_build();
}
::google::protobuf::int32 VersionInfo::build() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.VersionInfo.build)
  return build_;
}
void VersionInfo::set_build(::google::protobuf::int32 value) {
  set_has_build();
  build_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.VersionInfo.build)
}

// optional int32 patch = 3;
bool VersionInfo::has_patch() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void VersionInfo::set_has_patch() {
  _has_bits_[0] |= 0x00000008u;
}
void VersionInfo::clear_has_patch() {
  _has_bits_[0] &= ~0x00000008u;
}
void VersionInfo::clear_patch() {
  patch_ = 0;
  clear_has_patch();
}
::google::protobuf::int32 VersionInfo::patch() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.VersionInfo.patch)
  return patch_;
}
void VersionInfo::set_patch(::google::protobuf::int32 value) {
  set_has_patch();
  patch_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.VersionInfo.patch)
}

// optional string channel = 4;
bool VersionInfo::has_channel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VersionInfo::set_has_channel() {
  _has_bits_[0] |= 0x00000002u;
}
void VersionInfo::clear_has_channel() {
  _has_bits_[0] &= ~0x00000002u;
}
void VersionInfo::clear_channel() {
  channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel();
}
const ::std::string& VersionInfo::channel() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.VersionInfo.channel)
  return channel_.GetNoArena();
}
void VersionInfo::set_channel(const ::std::string& value) {
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:data_reduction_proxy.VersionInfo.channel)
}
#if LANG_CXX11
void VersionInfo::set_channel(::std::string&& value) {
  set_has_channel();
  channel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:data_reduction_proxy.VersionInfo.channel)
}
#endif
void VersionInfo::set_channel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:data_reduction_proxy.VersionInfo.channel)
}
void VersionInfo::set_channel(const char* value, size_t size) {
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:data_reduction_proxy.VersionInfo.channel)
}
::std::string* VersionInfo::mutable_channel() {
  set_has_channel();
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.VersionInfo.channel)
  return channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VersionInfo::release_channel() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.VersionInfo.channel)
  clear_has_channel();
  return channel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VersionInfo::set_allocated_channel(::std::string* channel) {
  if (channel != NULL) {
    set_has_channel();
  } else {
    clear_has_channel();
  }
  channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel);
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.VersionInfo.channel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace data_reduction_proxy

// @@protoc_insertion_point(global_scope)
