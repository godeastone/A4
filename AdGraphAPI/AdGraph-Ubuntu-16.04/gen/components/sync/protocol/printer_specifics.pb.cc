// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: printer_specifics.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "printer_specifics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {
class PrinterPPDReferenceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PrinterPPDReference> {
} _PrinterPPDReference_default_instance_;
class PrinterSpecificsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PrinterSpecifics> {
} _PrinterSpecifics_default_instance_;

namespace protobuf_printer_5fspecifics_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _PrinterPPDReference_default_instance_.Shutdown();
  _PrinterSpecifics_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _PrinterPPDReference_default_instance_.DefaultConstruct();
  _PrinterSpecifics_default_instance_.DefaultConstruct();
  _PrinterSpecifics_default_instance_.get_mutable()->ppd_reference_ = const_cast< ::sync_pb::PrinterPPDReference*>(
      ::sync_pb::PrinterPPDReference::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_printer_5fspecifics_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrinterPPDReference::kUserSuppliedPpdUrlFieldNumber;
const int PrinterPPDReference::kEffectiveManufacturerFieldNumber;
const int PrinterPPDReference::kEffectiveModelFieldNumber;
const int PrinterPPDReference::kEffectiveMakeAndModelFieldNumber;
const int PrinterPPDReference::kAutoconfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrinterPPDReference::PrinterPPDReference()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_printer_5fspecifics_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.PrinterPPDReference)
}
PrinterPPDReference::PrinterPPDReference(const PrinterPPDReference& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_supplied_ppd_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_supplied_ppd_url()) {
    user_supplied_ppd_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_supplied_ppd_url_);
  }
  effective_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_effective_manufacturer()) {
    effective_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.effective_manufacturer_);
  }
  effective_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_effective_model()) {
    effective_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.effective_model_);
  }
  effective_make_and_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_effective_make_and_model()) {
    effective_make_and_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.effective_make_and_model_);
  }
  autoconf_ = from.autoconf_;
  // @@protoc_insertion_point(copy_constructor:sync_pb.PrinterPPDReference)
}

void PrinterPPDReference::SharedCtor() {
  _cached_size_ = 0;
  user_supplied_ppd_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  effective_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  effective_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  effective_make_and_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  autoconf_ = false;
}

PrinterPPDReference::~PrinterPPDReference() {
  // @@protoc_insertion_point(destructor:sync_pb.PrinterPPDReference)
  SharedDtor();
}

void PrinterPPDReference::SharedDtor() {
  user_supplied_ppd_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  effective_manufacturer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  effective_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  effective_make_and_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PrinterPPDReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PrinterPPDReference& PrinterPPDReference::default_instance() {
  protobuf_printer_5fspecifics_2eproto::InitDefaults();
  return *internal_default_instance();
}

PrinterPPDReference* PrinterPPDReference::New(::google::protobuf::Arena* arena) const {
  PrinterPPDReference* n = new PrinterPPDReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrinterPPDReference::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.PrinterPPDReference)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_user_supplied_ppd_url()) {
      GOOGLE_DCHECK(!user_supplied_ppd_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*user_supplied_ppd_url_.UnsafeRawStringPointer())->clear();
    }
    if (has_effective_manufacturer()) {
      GOOGLE_DCHECK(!effective_manufacturer_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*effective_manufacturer_.UnsafeRawStringPointer())->clear();
    }
    if (has_effective_model()) {
      GOOGLE_DCHECK(!effective_model_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*effective_model_.UnsafeRawStringPointer())->clear();
    }
    if (has_effective_make_and_model()) {
      GOOGLE_DCHECK(!effective_make_and_model_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*effective_make_and_model_.UnsafeRawStringPointer())->clear();
    }
  }
  autoconf_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PrinterPPDReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.PrinterPPDReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_supplied_ppd_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_supplied_ppd_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string effective_manufacturer = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_effective_manufacturer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string effective_model = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_effective_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string effective_make_and_model = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_effective_make_and_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool autoconf = 5 [default = false];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_autoconf();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &autoconf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.PrinterPPDReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.PrinterPPDReference)
  return false;
#undef DO_
}

void PrinterPPDReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.PrinterPPDReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string user_supplied_ppd_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_supplied_ppd_url(), output);
  }

  // optional string effective_manufacturer = 2 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->effective_manufacturer(), output);
  }

  // optional string effective_model = 3 [deprecated = true];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->effective_model(), output);
  }

  // optional string effective_make_and_model = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->effective_make_and_model(), output);
  }

  // optional bool autoconf = 5 [default = false];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->autoconf(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.PrinterPPDReference)
}

size_t PrinterPPDReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.PrinterPPDReference)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 31u) {
    // optional string user_supplied_ppd_url = 1;
    if (has_user_supplied_ppd_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_supplied_ppd_url());
    }

    // optional string effective_manufacturer = 2 [deprecated = true];
    if (has_effective_manufacturer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->effective_manufacturer());
    }

    // optional string effective_model = 3 [deprecated = true];
    if (has_effective_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->effective_model());
    }

    // optional string effective_make_and_model = 4;
    if (has_effective_make_and_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->effective_make_and_model());
    }

    // optional bool autoconf = 5 [default = false];
    if (has_autoconf()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrinterPPDReference::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PrinterPPDReference*>(&from));
}

void PrinterPPDReference::MergeFrom(const PrinterPPDReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.PrinterPPDReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_user_supplied_ppd_url();
      user_supplied_ppd_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_supplied_ppd_url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_effective_manufacturer();
      effective_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.effective_manufacturer_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_effective_model();
      effective_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.effective_model_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_effective_make_and_model();
      effective_make_and_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.effective_make_and_model_);
    }
    if (cached_has_bits & 0x00000010u) {
      autoconf_ = from.autoconf_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PrinterPPDReference::CopyFrom(const PrinterPPDReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.PrinterPPDReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrinterPPDReference::IsInitialized() const {
  return true;
}

void PrinterPPDReference::Swap(PrinterPPDReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrinterPPDReference::InternalSwap(PrinterPPDReference* other) {
  user_supplied_ppd_url_.Swap(&other->user_supplied_ppd_url_);
  effective_manufacturer_.Swap(&other->effective_manufacturer_);
  effective_model_.Swap(&other->effective_model_);
  effective_make_and_model_.Swap(&other->effective_make_and_model_);
  std::swap(autoconf_, other->autoconf_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string PrinterPPDReference::GetTypeName() const {
  return "sync_pb.PrinterPPDReference";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PrinterPPDReference

// optional string user_supplied_ppd_url = 1;
bool PrinterPPDReference::has_user_supplied_ppd_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PrinterPPDReference::set_has_user_supplied_ppd_url() {
  _has_bits_[0] |= 0x00000001u;
}
void PrinterPPDReference::clear_has_user_supplied_ppd_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void PrinterPPDReference::clear_user_supplied_ppd_url() {
  user_supplied_ppd_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_supplied_ppd_url();
}
const ::std::string& PrinterPPDReference::user_supplied_ppd_url() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
  return user_supplied_ppd_url_.GetNoArena();
}
void PrinterPPDReference::set_user_supplied_ppd_url(const ::std::string& value) {
  set_has_user_supplied_ppd_url();
  user_supplied_ppd_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
}
#if LANG_CXX11
void PrinterPPDReference::set_user_supplied_ppd_url(::std::string&& value) {
  set_has_user_supplied_ppd_url();
  user_supplied_ppd_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
}
#endif
void PrinterPPDReference::set_user_supplied_ppd_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_supplied_ppd_url();
  user_supplied_ppd_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
}
void PrinterPPDReference::set_user_supplied_ppd_url(const char* value, size_t size) {
  set_has_user_supplied_ppd_url();
  user_supplied_ppd_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
}
::std::string* PrinterPPDReference::mutable_user_supplied_ppd_url() {
  set_has_user_supplied_ppd_url();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
  return user_supplied_ppd_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterPPDReference::release_user_supplied_ppd_url() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
  clear_has_user_supplied_ppd_url();
  return user_supplied_ppd_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterPPDReference::set_allocated_user_supplied_ppd_url(::std::string* user_supplied_ppd_url) {
  if (user_supplied_ppd_url != NULL) {
    set_has_user_supplied_ppd_url();
  } else {
    clear_has_user_supplied_ppd_url();
  }
  user_supplied_ppd_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_supplied_ppd_url);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
}

// optional string effective_manufacturer = 2 [deprecated = true];
bool PrinterPPDReference::has_effective_manufacturer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PrinterPPDReference::set_has_effective_manufacturer() {
  _has_bits_[0] |= 0x00000002u;
}
void PrinterPPDReference::clear_has_effective_manufacturer() {
  _has_bits_[0] &= ~0x00000002u;
}
void PrinterPPDReference::clear_effective_manufacturer() {
  effective_manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_effective_manufacturer();
}
const ::std::string& PrinterPPDReference::effective_manufacturer() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterPPDReference.effective_manufacturer)
  return effective_manufacturer_.GetNoArena();
}
void PrinterPPDReference::set_effective_manufacturer(const ::std::string& value) {
  set_has_effective_manufacturer();
  effective_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterPPDReference.effective_manufacturer)
}
#if LANG_CXX11
void PrinterPPDReference::set_effective_manufacturer(::std::string&& value) {
  set_has_effective_manufacturer();
  effective_manufacturer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterPPDReference.effective_manufacturer)
}
#endif
void PrinterPPDReference::set_effective_manufacturer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_effective_manufacturer();
  effective_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterPPDReference.effective_manufacturer)
}
void PrinterPPDReference::set_effective_manufacturer(const char* value, size_t size) {
  set_has_effective_manufacturer();
  effective_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterPPDReference.effective_manufacturer)
}
::std::string* PrinterPPDReference::mutable_effective_manufacturer() {
  set_has_effective_manufacturer();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterPPDReference.effective_manufacturer)
  return effective_manufacturer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterPPDReference::release_effective_manufacturer() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterPPDReference.effective_manufacturer)
  clear_has_effective_manufacturer();
  return effective_manufacturer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterPPDReference::set_allocated_effective_manufacturer(::std::string* effective_manufacturer) {
  if (effective_manufacturer != NULL) {
    set_has_effective_manufacturer();
  } else {
    clear_has_effective_manufacturer();
  }
  effective_manufacturer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), effective_manufacturer);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterPPDReference.effective_manufacturer)
}

// optional string effective_model = 3 [deprecated = true];
bool PrinterPPDReference::has_effective_model() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PrinterPPDReference::set_has_effective_model() {
  _has_bits_[0] |= 0x00000004u;
}
void PrinterPPDReference::clear_has_effective_model() {
  _has_bits_[0] &= ~0x00000004u;
}
void PrinterPPDReference::clear_effective_model() {
  effective_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_effective_model();
}
const ::std::string& PrinterPPDReference::effective_model() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterPPDReference.effective_model)
  return effective_model_.GetNoArena();
}
void PrinterPPDReference::set_effective_model(const ::std::string& value) {
  set_has_effective_model();
  effective_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterPPDReference.effective_model)
}
#if LANG_CXX11
void PrinterPPDReference::set_effective_model(::std::string&& value) {
  set_has_effective_model();
  effective_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterPPDReference.effective_model)
}
#endif
void PrinterPPDReference::set_effective_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_effective_model();
  effective_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterPPDReference.effective_model)
}
void PrinterPPDReference::set_effective_model(const char* value, size_t size) {
  set_has_effective_model();
  effective_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterPPDReference.effective_model)
}
::std::string* PrinterPPDReference::mutable_effective_model() {
  set_has_effective_model();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterPPDReference.effective_model)
  return effective_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterPPDReference::release_effective_model() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterPPDReference.effective_model)
  clear_has_effective_model();
  return effective_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterPPDReference::set_allocated_effective_model(::std::string* effective_model) {
  if (effective_model != NULL) {
    set_has_effective_model();
  } else {
    clear_has_effective_model();
  }
  effective_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), effective_model);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterPPDReference.effective_model)
}

// optional string effective_make_and_model = 4;
bool PrinterPPDReference::has_effective_make_and_model() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PrinterPPDReference::set_has_effective_make_and_model() {
  _has_bits_[0] |= 0x00000008u;
}
void PrinterPPDReference::clear_has_effective_make_and_model() {
  _has_bits_[0] &= ~0x00000008u;
}
void PrinterPPDReference::clear_effective_make_and_model() {
  effective_make_and_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_effective_make_and_model();
}
const ::std::string& PrinterPPDReference::effective_make_and_model() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterPPDReference.effective_make_and_model)
  return effective_make_and_model_.GetNoArena();
}
void PrinterPPDReference::set_effective_make_and_model(const ::std::string& value) {
  set_has_effective_make_and_model();
  effective_make_and_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterPPDReference.effective_make_and_model)
}
#if LANG_CXX11
void PrinterPPDReference::set_effective_make_and_model(::std::string&& value) {
  set_has_effective_make_and_model();
  effective_make_and_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterPPDReference.effective_make_and_model)
}
#endif
void PrinterPPDReference::set_effective_make_and_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_effective_make_and_model();
  effective_make_and_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterPPDReference.effective_make_and_model)
}
void PrinterPPDReference::set_effective_make_and_model(const char* value, size_t size) {
  set_has_effective_make_and_model();
  effective_make_and_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterPPDReference.effective_make_and_model)
}
::std::string* PrinterPPDReference::mutable_effective_make_and_model() {
  set_has_effective_make_and_model();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterPPDReference.effective_make_and_model)
  return effective_make_and_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterPPDReference::release_effective_make_and_model() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterPPDReference.effective_make_and_model)
  clear_has_effective_make_and_model();
  return effective_make_and_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterPPDReference::set_allocated_effective_make_and_model(::std::string* effective_make_and_model) {
  if (effective_make_and_model != NULL) {
    set_has_effective_make_and_model();
  } else {
    clear_has_effective_make_and_model();
  }
  effective_make_and_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), effective_make_and_model);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterPPDReference.effective_make_and_model)
}

// optional bool autoconf = 5 [default = false];
bool PrinterPPDReference::has_autoconf() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PrinterPPDReference::set_has_autoconf() {
  _has_bits_[0] |= 0x00000010u;
}
void PrinterPPDReference::clear_has_autoconf() {
  _has_bits_[0] &= ~0x00000010u;
}
void PrinterPPDReference::clear_autoconf() {
  autoconf_ = false;
  clear_has_autoconf();
}
bool PrinterPPDReference::autoconf() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterPPDReference.autoconf)
  return autoconf_;
}
void PrinterPPDReference::set_autoconf(bool value) {
  set_has_autoconf();
  autoconf_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.PrinterPPDReference.autoconf)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrinterSpecifics::kIdFieldNumber;
const int PrinterSpecifics::kDisplayNameFieldNumber;
const int PrinterSpecifics::kDescriptionFieldNumber;
const int PrinterSpecifics::kManufacturerFieldNumber;
const int PrinterSpecifics::kModelFieldNumber;
const int PrinterSpecifics::kUriFieldNumber;
const int PrinterSpecifics::kUuidFieldNumber;
const int PrinterSpecifics::kPpdFieldNumber;
const int PrinterSpecifics::kPpdReferenceFieldNumber;
const int PrinterSpecifics::kUpdatedTimestampFieldNumber;
const int PrinterSpecifics::kMakeAndModelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrinterSpecifics::PrinterSpecifics()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_printer_5fspecifics_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.PrinterSpecifics)
}
PrinterSpecifics::PrinterSpecifics(const PrinterSpecifics& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_display_name()) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_manufacturer()) {
    manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacturer_);
  }
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_model()) {
    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uri()) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uuid()) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  ppd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ppd()) {
    ppd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppd_);
  }
  make_and_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_make_and_model()) {
    make_and_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.make_and_model_);
  }
  if (from.has_ppd_reference()) {
    ppd_reference_ = new ::sync_pb::PrinterPPDReference(*from.ppd_reference_);
  } else {
    ppd_reference_ = NULL;
  }
  updated_timestamp_ = from.updated_timestamp_;
  // @@protoc_insertion_point(copy_constructor:sync_pb.PrinterSpecifics)
}

void PrinterSpecifics::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ppd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  make_and_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ppd_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updated_timestamp_) -
      reinterpret_cast<char*>(&ppd_reference_)) + sizeof(updated_timestamp_));
}

PrinterSpecifics::~PrinterSpecifics() {
  // @@protoc_insertion_point(destructor:sync_pb.PrinterSpecifics)
  SharedDtor();
}

void PrinterSpecifics::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufacturer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ppd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  make_and_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete ppd_reference_;
  }
}

void PrinterSpecifics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PrinterSpecifics& PrinterSpecifics::default_instance() {
  protobuf_printer_5fspecifics_2eproto::InitDefaults();
  return *internal_default_instance();
}

PrinterSpecifics* PrinterSpecifics::New(::google::protobuf::Arena* arena) const {
  PrinterSpecifics* n = new PrinterSpecifics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrinterSpecifics::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.PrinterSpecifics)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_id()) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (has_display_name()) {
      GOOGLE_DCHECK(!display_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*display_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_description()) {
      GOOGLE_DCHECK(!description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*description_.UnsafeRawStringPointer())->clear();
    }
    if (has_manufacturer()) {
      GOOGLE_DCHECK(!manufacturer_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*manufacturer_.UnsafeRawStringPointer())->clear();
    }
    if (has_model()) {
      GOOGLE_DCHECK(!model_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*model_.UnsafeRawStringPointer())->clear();
    }
    if (has_uri()) {
      GOOGLE_DCHECK(!uri_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*uri_.UnsafeRawStringPointer())->clear();
    }
    if (has_uuid()) {
      GOOGLE_DCHECK(!uuid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*uuid_.UnsafeRawStringPointer())->clear();
    }
    if (has_ppd()) {
      GOOGLE_DCHECK(!ppd_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ppd_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 768u) {
    if (has_make_and_model()) {
      GOOGLE_DCHECK(!make_and_model_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*make_and_model_.UnsafeRawStringPointer())->clear();
    }
    if (has_ppd_reference()) {
      GOOGLE_DCHECK(ppd_reference_ != NULL);
      ppd_reference_->::sync_pb::PrinterPPDReference::Clear();
    }
  }
  updated_timestamp_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PrinterSpecifics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.PrinterSpecifics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string display_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string manufacturer = 4 [deprecated = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_manufacturer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string model = 5 [deprecated = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string uri = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string uuid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes ppd = 8 [deprecated = true];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ppd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sync_pb.PrinterPPDReference ppd_reference = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ppd_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 updated_timestamp = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_updated_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &updated_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string make_and_model = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_make_and_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.PrinterSpecifics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.PrinterSpecifics)
  return false;
#undef DO_
}

void PrinterSpecifics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.PrinterSpecifics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string display_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->display_name(), output);
  }

  // optional string description = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // optional string manufacturer = 4 [deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->manufacturer(), output);
  }

  // optional string model = 5 [deprecated = true];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->model(), output);
  }

  // optional string uri = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->uri(), output);
  }

  // optional string uuid = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->uuid(), output);
  }

  // optional bytes ppd = 8 [deprecated = true];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->ppd(), output);
  }

  // optional .sync_pb.PrinterPPDReference ppd_reference = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      9, *this->ppd_reference_, output);
  }

  // optional int64 updated_timestamp = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->updated_timestamp(), output);
  }

  // optional string make_and_model = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->make_and_model(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.PrinterSpecifics)
}

size_t PrinterSpecifics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.PrinterSpecifics)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string display_name = 2;
    if (has_display_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->display_name());
    }

    // optional string description = 3;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional string manufacturer = 4 [deprecated = true];
    if (has_manufacturer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->manufacturer());
    }

    // optional string model = 5 [deprecated = true];
    if (has_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->model());
    }

    // optional string uri = 6;
    if (has_uri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uri());
    }

    // optional string uuid = 7;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uuid());
    }

    // optional bytes ppd = 8 [deprecated = true];
    if (has_ppd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ppd());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional string make_and_model = 11;
    if (has_make_and_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->make_and_model());
    }

    // optional .sync_pb.PrinterPPDReference ppd_reference = 9;
    if (has_ppd_reference()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->ppd_reference_);
    }

    // optional int64 updated_timestamp = 10;
    if (has_updated_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->updated_timestamp());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrinterSpecifics::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PrinterSpecifics*>(&from));
}

void PrinterSpecifics::MergeFrom(const PrinterSpecifics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.PrinterSpecifics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_display_name();
      display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_manufacturer();
      manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacturer_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_model();
      model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_uri();
      uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_uuid();
      uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_ppd();
      ppd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppd_);
    }
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_make_and_model();
      make_and_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.make_and_model_);
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_ppd_reference()->::sync_pb::PrinterPPDReference::MergeFrom(from.ppd_reference());
    }
    if (cached_has_bits & 0x00000400u) {
      updated_timestamp_ = from.updated_timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PrinterSpecifics::CopyFrom(const PrinterSpecifics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.PrinterSpecifics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrinterSpecifics::IsInitialized() const {
  return true;
}

void PrinterSpecifics::Swap(PrinterSpecifics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrinterSpecifics::InternalSwap(PrinterSpecifics* other) {
  id_.Swap(&other->id_);
  display_name_.Swap(&other->display_name_);
  description_.Swap(&other->description_);
  manufacturer_.Swap(&other->manufacturer_);
  model_.Swap(&other->model_);
  uri_.Swap(&other->uri_);
  uuid_.Swap(&other->uuid_);
  ppd_.Swap(&other->ppd_);
  make_and_model_.Swap(&other->make_and_model_);
  std::swap(ppd_reference_, other->ppd_reference_);
  std::swap(updated_timestamp_, other->updated_timestamp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string PrinterSpecifics::GetTypeName() const {
  return "sync_pb.PrinterSpecifics";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PrinterSpecifics

// optional string id = 1;
bool PrinterSpecifics::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PrinterSpecifics::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void PrinterSpecifics::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void PrinterSpecifics::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& PrinterSpecifics::id() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.id)
  return id_.GetNoArena();
}
void PrinterSpecifics::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.id)
}
#if LANG_CXX11
void PrinterSpecifics::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterSpecifics.id)
}
#endif
void PrinterSpecifics::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.id)
}
void PrinterSpecifics::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.id)
}
::std::string* PrinterSpecifics::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterSpecifics::release_id() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.id)
}

// optional string display_name = 2;
bool PrinterSpecifics::has_display_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PrinterSpecifics::set_has_display_name() {
  _has_bits_[0] |= 0x00000002u;
}
void PrinterSpecifics::clear_has_display_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void PrinterSpecifics::clear_display_name() {
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_display_name();
}
const ::std::string& PrinterSpecifics::display_name() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.display_name)
  return display_name_.GetNoArena();
}
void PrinterSpecifics::set_display_name(const ::std::string& value) {
  set_has_display_name();
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.display_name)
}
#if LANG_CXX11
void PrinterSpecifics::set_display_name(::std::string&& value) {
  set_has_display_name();
  display_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterSpecifics.display_name)
}
#endif
void PrinterSpecifics::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_display_name();
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.display_name)
}
void PrinterSpecifics::set_display_name(const char* value, size_t size) {
  set_has_display_name();
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.display_name)
}
::std::string* PrinterSpecifics::mutable_display_name() {
  set_has_display_name();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.display_name)
  return display_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterSpecifics::release_display_name() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.display_name)
  clear_has_display_name();
  return display_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    set_has_display_name();
  } else {
    clear_has_display_name();
  }
  display_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.display_name)
}

// optional string description = 3;
bool PrinterSpecifics::has_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PrinterSpecifics::set_has_description() {
  _has_bits_[0] |= 0x00000004u;
}
void PrinterSpecifics::clear_has_description() {
  _has_bits_[0] &= ~0x00000004u;
}
void PrinterSpecifics::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
const ::std::string& PrinterSpecifics::description() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.description)
  return description_.GetNoArena();
}
void PrinterSpecifics::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.description)
}
#if LANG_CXX11
void PrinterSpecifics::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterSpecifics.description)
}
#endif
void PrinterSpecifics::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.description)
}
void PrinterSpecifics::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.description)
}
::std::string* PrinterSpecifics::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterSpecifics::release_description() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.description)
}

// optional string manufacturer = 4 [deprecated = true];
bool PrinterSpecifics::has_manufacturer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PrinterSpecifics::set_has_manufacturer() {
  _has_bits_[0] |= 0x00000008u;
}
void PrinterSpecifics::clear_has_manufacturer() {
  _has_bits_[0] &= ~0x00000008u;
}
void PrinterSpecifics::clear_manufacturer() {
  manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_manufacturer();
}
const ::std::string& PrinterSpecifics::manufacturer() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.manufacturer)
  return manufacturer_.GetNoArena();
}
void PrinterSpecifics::set_manufacturer(const ::std::string& value) {
  set_has_manufacturer();
  manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.manufacturer)
}
#if LANG_CXX11
void PrinterSpecifics::set_manufacturer(::std::string&& value) {
  set_has_manufacturer();
  manufacturer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterSpecifics.manufacturer)
}
#endif
void PrinterSpecifics::set_manufacturer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_manufacturer();
  manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.manufacturer)
}
void PrinterSpecifics::set_manufacturer(const char* value, size_t size) {
  set_has_manufacturer();
  manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.manufacturer)
}
::std::string* PrinterSpecifics::mutable_manufacturer() {
  set_has_manufacturer();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.manufacturer)
  return manufacturer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterSpecifics::release_manufacturer() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.manufacturer)
  clear_has_manufacturer();
  return manufacturer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_allocated_manufacturer(::std::string* manufacturer) {
  if (manufacturer != NULL) {
    set_has_manufacturer();
  } else {
    clear_has_manufacturer();
  }
  manufacturer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), manufacturer);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.manufacturer)
}

// optional string model = 5 [deprecated = true];
bool PrinterSpecifics::has_model() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PrinterSpecifics::set_has_model() {
  _has_bits_[0] |= 0x00000010u;
}
void PrinterSpecifics::clear_has_model() {
  _has_bits_[0] &= ~0x00000010u;
}
void PrinterSpecifics::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model();
}
const ::std::string& PrinterSpecifics::model() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.model)
  return model_.GetNoArena();
}
void PrinterSpecifics::set_model(const ::std::string& value) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.model)
}
#if LANG_CXX11
void PrinterSpecifics::set_model(::std::string&& value) {
  set_has_model();
  model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterSpecifics.model)
}
#endif
void PrinterSpecifics::set_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.model)
}
void PrinterSpecifics::set_model(const char* value, size_t size) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.model)
}
::std::string* PrinterSpecifics::mutable_model() {
  set_has_model();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterSpecifics::release_model() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.model)
  clear_has_model();
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    set_has_model();
  } else {
    clear_has_model();
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.model)
}

// optional string uri = 6;
bool PrinterSpecifics::has_uri() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PrinterSpecifics::set_has_uri() {
  _has_bits_[0] |= 0x00000020u;
}
void PrinterSpecifics::clear_has_uri() {
  _has_bits_[0] &= ~0x00000020u;
}
void PrinterSpecifics::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uri();
}
const ::std::string& PrinterSpecifics::uri() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.uri)
  return uri_.GetNoArena();
}
void PrinterSpecifics::set_uri(const ::std::string& value) {
  set_has_uri();
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.uri)
}
#if LANG_CXX11
void PrinterSpecifics::set_uri(::std::string&& value) {
  set_has_uri();
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterSpecifics.uri)
}
#endif
void PrinterSpecifics::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uri();
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.uri)
}
void PrinterSpecifics::set_uri(const char* value, size_t size) {
  set_has_uri();
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.uri)
}
::std::string* PrinterSpecifics::mutable_uri() {
  set_has_uri();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterSpecifics::release_uri() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.uri)
  clear_has_uri();
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    set_has_uri();
  } else {
    clear_has_uri();
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.uri)
}

// optional string uuid = 7;
bool PrinterSpecifics::has_uuid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PrinterSpecifics::set_has_uuid() {
  _has_bits_[0] |= 0x00000040u;
}
void PrinterSpecifics::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000040u;
}
void PrinterSpecifics::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uuid();
}
const ::std::string& PrinterSpecifics::uuid() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.uuid)
  return uuid_.GetNoArena();
}
void PrinterSpecifics::set_uuid(const ::std::string& value) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.uuid)
}
#if LANG_CXX11
void PrinterSpecifics::set_uuid(::std::string&& value) {
  set_has_uuid();
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterSpecifics.uuid)
}
#endif
void PrinterSpecifics::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.uuid)
}
void PrinterSpecifics::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.uuid)
}
::std::string* PrinterSpecifics::mutable_uuid() {
  set_has_uuid();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterSpecifics::release_uuid() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.uuid)
  clear_has_uuid();
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    set_has_uuid();
  } else {
    clear_has_uuid();
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.uuid)
}

// optional bytes ppd = 8 [deprecated = true];
bool PrinterSpecifics::has_ppd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PrinterSpecifics::set_has_ppd() {
  _has_bits_[0] |= 0x00000080u;
}
void PrinterSpecifics::clear_has_ppd() {
  _has_bits_[0] &= ~0x00000080u;
}
void PrinterSpecifics::clear_ppd() {
  ppd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ppd();
}
const ::std::string& PrinterSpecifics::ppd() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.ppd)
  return ppd_.GetNoArena();
}
void PrinterSpecifics::set_ppd(const ::std::string& value) {
  set_has_ppd();
  ppd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.ppd)
}
#if LANG_CXX11
void PrinterSpecifics::set_ppd(::std::string&& value) {
  set_has_ppd();
  ppd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterSpecifics.ppd)
}
#endif
void PrinterSpecifics::set_ppd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ppd();
  ppd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.ppd)
}
void PrinterSpecifics::set_ppd(const void* value, size_t size) {
  set_has_ppd();
  ppd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.ppd)
}
::std::string* PrinterSpecifics::mutable_ppd() {
  set_has_ppd();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.ppd)
  return ppd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterSpecifics::release_ppd() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.ppd)
  clear_has_ppd();
  return ppd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_allocated_ppd(::std::string* ppd) {
  if (ppd != NULL) {
    set_has_ppd();
  } else {
    clear_has_ppd();
  }
  ppd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ppd);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.ppd)
}

// optional .sync_pb.PrinterPPDReference ppd_reference = 9;
bool PrinterSpecifics::has_ppd_reference() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void PrinterSpecifics::set_has_ppd_reference() {
  _has_bits_[0] |= 0x00000200u;
}
void PrinterSpecifics::clear_has_ppd_reference() {
  _has_bits_[0] &= ~0x00000200u;
}
void PrinterSpecifics::clear_ppd_reference() {
  if (ppd_reference_ != NULL) ppd_reference_->::sync_pb::PrinterPPDReference::Clear();
  clear_has_ppd_reference();
}
const ::sync_pb::PrinterPPDReference& PrinterSpecifics::ppd_reference() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.ppd_reference)
  return ppd_reference_ != NULL ? *ppd_reference_
                         : *::sync_pb::PrinterPPDReference::internal_default_instance();
}
::sync_pb::PrinterPPDReference* PrinterSpecifics::mutable_ppd_reference() {
  set_has_ppd_reference();
  if (ppd_reference_ == NULL) {
    ppd_reference_ = new ::sync_pb::PrinterPPDReference;
  }
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.ppd_reference)
  return ppd_reference_;
}
::sync_pb::PrinterPPDReference* PrinterSpecifics::release_ppd_reference() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.ppd_reference)
  clear_has_ppd_reference();
  ::sync_pb::PrinterPPDReference* temp = ppd_reference_;
  ppd_reference_ = NULL;
  return temp;
}
void PrinterSpecifics::set_allocated_ppd_reference(::sync_pb::PrinterPPDReference* ppd_reference) {
  delete ppd_reference_;
  ppd_reference_ = ppd_reference;
  if (ppd_reference) {
    set_has_ppd_reference();
  } else {
    clear_has_ppd_reference();
  }
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.ppd_reference)
}

// optional int64 updated_timestamp = 10;
bool PrinterSpecifics::has_updated_timestamp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void PrinterSpecifics::set_has_updated_timestamp() {
  _has_bits_[0] |= 0x00000400u;
}
void PrinterSpecifics::clear_has_updated_timestamp() {
  _has_bits_[0] &= ~0x00000400u;
}
void PrinterSpecifics::clear_updated_timestamp() {
  updated_timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_updated_timestamp();
}
::google::protobuf::int64 PrinterSpecifics::updated_timestamp() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.updated_timestamp)
  return updated_timestamp_;
}
void PrinterSpecifics::set_updated_timestamp(::google::protobuf::int64 value) {
  set_has_updated_timestamp();
  updated_timestamp_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.updated_timestamp)
}

// optional string make_and_model = 11;
bool PrinterSpecifics::has_make_and_model() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void PrinterSpecifics::set_has_make_and_model() {
  _has_bits_[0] |= 0x00000100u;
}
void PrinterSpecifics::clear_has_make_and_model() {
  _has_bits_[0] &= ~0x00000100u;
}
void PrinterSpecifics::clear_make_and_model() {
  make_and_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_make_and_model();
}
const ::std::string& PrinterSpecifics::make_and_model() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.make_and_model)
  return make_and_model_.GetNoArena();
}
void PrinterSpecifics::set_make_and_model(const ::std::string& value) {
  set_has_make_and_model();
  make_and_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.make_and_model)
}
#if LANG_CXX11
void PrinterSpecifics::set_make_and_model(::std::string&& value) {
  set_has_make_and_model();
  make_and_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterSpecifics.make_and_model)
}
#endif
void PrinterSpecifics::set_make_and_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_make_and_model();
  make_and_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.make_and_model)
}
void PrinterSpecifics::set_make_and_model(const char* value, size_t size) {
  set_has_make_and_model();
  make_and_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.make_and_model)
}
::std::string* PrinterSpecifics::mutable_make_and_model() {
  set_has_make_and_model();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.make_and_model)
  return make_and_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterSpecifics::release_make_and_model() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.make_and_model)
  clear_has_make_and_model();
  return make_and_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_allocated_make_and_model(::std::string* make_and_model) {
  if (make_and_model != NULL) {
    set_has_make_and_model();
  } else {
    clear_has_make_and_model();
  }
  make_and_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), make_and_model);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.make_and_model)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)
