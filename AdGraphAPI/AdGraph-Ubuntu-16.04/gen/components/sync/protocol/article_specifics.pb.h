// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: article_specifics.proto

#ifndef PROTOBUF_article_5fspecifics_2eproto__INCLUDED
#define PROTOBUF_article_5fspecifics_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
namespace sync_pb {
class ArticlePage;
class ArticlePageDefaultTypeInternal;
extern ArticlePageDefaultTypeInternal _ArticlePage_default_instance_;
class ArticleSpecifics;
class ArticleSpecificsDefaultTypeInternal;
extern ArticleSpecificsDefaultTypeInternal _ArticleSpecifics_default_instance_;
class DeprecatedArticleAttachments;
class DeprecatedArticleAttachmentsDefaultTypeInternal;
extern DeprecatedArticleAttachmentsDefaultTypeInternal _DeprecatedArticleAttachments_default_instance_;
}  // namespace sync_pb

namespace sync_pb {

namespace protobuf_article_5fspecifics_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_article_5fspecifics_2eproto

// ===================================================================

class ArticleSpecifics : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.ArticleSpecifics) */ {
 public:
  ArticleSpecifics();
  virtual ~ArticleSpecifics();

  ArticleSpecifics(const ArticleSpecifics& from);

  inline ArticleSpecifics& operator=(const ArticleSpecifics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ArticleSpecifics& default_instance();

  static inline const ArticleSpecifics* internal_default_instance() {
    return reinterpret_cast<const ArticleSpecifics*>(
               &_ArticleSpecifics_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(ArticleSpecifics* other);

  // implements Message ----------------------------------------------

  inline ArticleSpecifics* New() const PROTOBUF_FINAL { return New(NULL); }

  ArticleSpecifics* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ArticleSpecifics& from);
  void MergeFrom(const ArticleSpecifics& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ArticleSpecifics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sync_pb.ArticlePage pages = 3;
  int pages_size() const;
  void clear_pages();
  static const int kPagesFieldNumber = 3;
  const ::sync_pb::ArticlePage& pages(int index) const;
  ::sync_pb::ArticlePage* mutable_pages(int index);
  ::sync_pb::ArticlePage* add_pages();
  ::google::protobuf::RepeatedPtrField< ::sync_pb::ArticlePage >*
      mutable_pages();
  const ::google::protobuf::RepeatedPtrField< ::sync_pb::ArticlePage >&
      pages() const;

  // optional string entry_id = 1;
  bool has_entry_id() const;
  void clear_entry_id();
  static const int kEntryIdFieldNumber = 1;
  const ::std::string& entry_id() const;
  void set_entry_id(const ::std::string& value);
  #if LANG_CXX11
  void set_entry_id(::std::string&& value);
  #endif
  void set_entry_id(const char* value);
  void set_entry_id(const char* value, size_t size);
  ::std::string* mutable_entry_id();
  ::std::string* release_entry_id();
  void set_allocated_entry_id(::std::string* entry_id);

  // optional string title = 2;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional .sync_pb.DeprecatedArticleAttachments attachments = 4 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_attachments() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_attachments();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kAttachmentsFieldNumber = 4;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::sync_pb::DeprecatedArticleAttachments& attachments() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::sync_pb::DeprecatedArticleAttachments* mutable_attachments();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::sync_pb::DeprecatedArticleAttachments* release_attachments();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_attachments(::sync_pb::DeprecatedArticleAttachments* attachments);

  // @@protoc_insertion_point(class_scope:sync_pb.ArticleSpecifics)
 private:
  void set_has_entry_id();
  void clear_has_entry_id();
  void set_has_title();
  void clear_has_title();
  void set_has_attachments();
  void clear_has_attachments();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sync_pb::ArticlePage > pages_;
  ::google::protobuf::internal::ArenaStringPtr entry_id_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::sync_pb::DeprecatedArticleAttachments* attachments_;
  friend struct protobuf_article_5fspecifics_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ArticlePage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.ArticlePage) */ {
 public:
  ArticlePage();
  virtual ~ArticlePage();

  ArticlePage(const ArticlePage& from);

  inline ArticlePage& operator=(const ArticlePage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ArticlePage& default_instance();

  static inline const ArticlePage* internal_default_instance() {
    return reinterpret_cast<const ArticlePage*>(
               &_ArticlePage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(ArticlePage* other);

  // implements Message ----------------------------------------------

  inline ArticlePage* New() const PROTOBUF_FINAL { return New(NULL); }

  ArticlePage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ArticlePage& from);
  void MergeFrom(const ArticlePage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ArticlePage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:sync_pb.ArticlePage)
 private:
  void set_has_url();
  void clear_has_url();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  friend struct protobuf_article_5fspecifics_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeprecatedArticleAttachments : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.DeprecatedArticleAttachments) */ {
 public:
  DeprecatedArticleAttachments();
  virtual ~DeprecatedArticleAttachments();

  DeprecatedArticleAttachments(const DeprecatedArticleAttachments& from);

  inline DeprecatedArticleAttachments& operator=(const DeprecatedArticleAttachments& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DeprecatedArticleAttachments& default_instance();

  static inline const DeprecatedArticleAttachments* internal_default_instance() {
    return reinterpret_cast<const DeprecatedArticleAttachments*>(
               &_DeprecatedArticleAttachments_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(DeprecatedArticleAttachments* other);

  // implements Message ----------------------------------------------

  inline DeprecatedArticleAttachments* New() const PROTOBUF_FINAL { return New(NULL); }

  DeprecatedArticleAttachments* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DeprecatedArticleAttachments& from);
  void MergeFrom(const DeprecatedArticleAttachments& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeprecatedArticleAttachments* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:sync_pb.DeprecatedArticleAttachments)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_article_5fspecifics_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ArticleSpecifics

// optional string entry_id = 1;
inline bool ArticleSpecifics::has_entry_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArticleSpecifics::set_has_entry_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArticleSpecifics::clear_has_entry_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArticleSpecifics::clear_entry_id() {
  entry_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entry_id();
}
inline const ::std::string& ArticleSpecifics::entry_id() const {
  // @@protoc_insertion_point(field_get:sync_pb.ArticleSpecifics.entry_id)
  return entry_id_.GetNoArena();
}
inline void ArticleSpecifics::set_entry_id(const ::std::string& value) {
  set_has_entry_id();
  entry_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.ArticleSpecifics.entry_id)
}
#if LANG_CXX11
inline void ArticleSpecifics::set_entry_id(::std::string&& value) {
  set_has_entry_id();
  entry_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.ArticleSpecifics.entry_id)
}
#endif
inline void ArticleSpecifics::set_entry_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_entry_id();
  entry_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.ArticleSpecifics.entry_id)
}
inline void ArticleSpecifics::set_entry_id(const char* value, size_t size) {
  set_has_entry_id();
  entry_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.ArticleSpecifics.entry_id)
}
inline ::std::string* ArticleSpecifics::mutable_entry_id() {
  set_has_entry_id();
  // @@protoc_insertion_point(field_mutable:sync_pb.ArticleSpecifics.entry_id)
  return entry_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ArticleSpecifics::release_entry_id() {
  // @@protoc_insertion_point(field_release:sync_pb.ArticleSpecifics.entry_id)
  clear_has_entry_id();
  return entry_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArticleSpecifics::set_allocated_entry_id(::std::string* entry_id) {
  if (entry_id != NULL) {
    set_has_entry_id();
  } else {
    clear_has_entry_id();
  }
  entry_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entry_id);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.ArticleSpecifics.entry_id)
}

// optional string title = 2;
inline bool ArticleSpecifics::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArticleSpecifics::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArticleSpecifics::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArticleSpecifics::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& ArticleSpecifics::title() const {
  // @@protoc_insertion_point(field_get:sync_pb.ArticleSpecifics.title)
  return title_.GetNoArena();
}
inline void ArticleSpecifics::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.ArticleSpecifics.title)
}
#if LANG_CXX11
inline void ArticleSpecifics::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.ArticleSpecifics.title)
}
#endif
inline void ArticleSpecifics::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.ArticleSpecifics.title)
}
inline void ArticleSpecifics::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.ArticleSpecifics.title)
}
inline ::std::string* ArticleSpecifics::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:sync_pb.ArticleSpecifics.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ArticleSpecifics::release_title() {
  // @@protoc_insertion_point(field_release:sync_pb.ArticleSpecifics.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArticleSpecifics::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.ArticleSpecifics.title)
}

// repeated .sync_pb.ArticlePage pages = 3;
inline int ArticleSpecifics::pages_size() const {
  return pages_.size();
}
inline void ArticleSpecifics::clear_pages() {
  pages_.Clear();
}
inline const ::sync_pb::ArticlePage& ArticleSpecifics::pages(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.ArticleSpecifics.pages)
  return pages_.Get(index);
}
inline ::sync_pb::ArticlePage* ArticleSpecifics::mutable_pages(int index) {
  // @@protoc_insertion_point(field_mutable:sync_pb.ArticleSpecifics.pages)
  return pages_.Mutable(index);
}
inline ::sync_pb::ArticlePage* ArticleSpecifics::add_pages() {
  // @@protoc_insertion_point(field_add:sync_pb.ArticleSpecifics.pages)
  return pages_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::sync_pb::ArticlePage >*
ArticleSpecifics::mutable_pages() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.ArticleSpecifics.pages)
  return &pages_;
}
inline const ::google::protobuf::RepeatedPtrField< ::sync_pb::ArticlePage >&
ArticleSpecifics::pages() const {
  // @@protoc_insertion_point(field_list:sync_pb.ArticleSpecifics.pages)
  return pages_;
}

// optional .sync_pb.DeprecatedArticleAttachments attachments = 4 [deprecated = true];
inline bool ArticleSpecifics::has_attachments() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArticleSpecifics::set_has_attachments() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArticleSpecifics::clear_has_attachments() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArticleSpecifics::clear_attachments() {
  if (attachments_ != NULL) attachments_->::sync_pb::DeprecatedArticleAttachments::Clear();
  clear_has_attachments();
}
inline const ::sync_pb::DeprecatedArticleAttachments& ArticleSpecifics::attachments() const {
  // @@protoc_insertion_point(field_get:sync_pb.ArticleSpecifics.attachments)
  return attachments_ != NULL ? *attachments_
                         : *::sync_pb::DeprecatedArticleAttachments::internal_default_instance();
}
inline ::sync_pb::DeprecatedArticleAttachments* ArticleSpecifics::mutable_attachments() {
  set_has_attachments();
  if (attachments_ == NULL) {
    attachments_ = new ::sync_pb::DeprecatedArticleAttachments;
  }
  // @@protoc_insertion_point(field_mutable:sync_pb.ArticleSpecifics.attachments)
  return attachments_;
}
inline ::sync_pb::DeprecatedArticleAttachments* ArticleSpecifics::release_attachments() {
  // @@protoc_insertion_point(field_release:sync_pb.ArticleSpecifics.attachments)
  clear_has_attachments();
  ::sync_pb::DeprecatedArticleAttachments* temp = attachments_;
  attachments_ = NULL;
  return temp;
}
inline void ArticleSpecifics::set_allocated_attachments(::sync_pb::DeprecatedArticleAttachments* attachments) {
  delete attachments_;
  attachments_ = attachments;
  if (attachments) {
    set_has_attachments();
  } else {
    clear_has_attachments();
  }
  // @@protoc_insertion_point(field_set_allocated:sync_pb.ArticleSpecifics.attachments)
}

// -------------------------------------------------------------------

// ArticlePage

// optional string url = 1;
inline bool ArticlePage::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArticlePage::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArticlePage::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArticlePage::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& ArticlePage::url() const {
  // @@protoc_insertion_point(field_get:sync_pb.ArticlePage.url)
  return url_.GetNoArena();
}
inline void ArticlePage::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.ArticlePage.url)
}
#if LANG_CXX11
inline void ArticlePage::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.ArticlePage.url)
}
#endif
inline void ArticlePage::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.ArticlePage.url)
}
inline void ArticlePage::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.ArticlePage.url)
}
inline ::std::string* ArticlePage::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:sync_pb.ArticlePage.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ArticlePage::release_url() {
  // @@protoc_insertion_point(field_release:sync_pb.ArticlePage.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArticlePage::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.ArticlePage.url)
}

// -------------------------------------------------------------------

// DeprecatedArticleAttachments

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_article_5fspecifics_2eproto__INCLUDED
