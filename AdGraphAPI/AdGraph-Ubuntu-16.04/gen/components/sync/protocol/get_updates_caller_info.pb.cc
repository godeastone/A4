// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: get_updates_caller_info.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "get_updates_caller_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {
class GetUpdatesCallerInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetUpdatesCallerInfo> {
} _GetUpdatesCallerInfo_default_instance_;

namespace protobuf_get_5fupdates_5fcaller_5finfo_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _GetUpdatesCallerInfo_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _GetUpdatesCallerInfo_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_get_5fupdates_5fcaller_5finfo_2eproto

bool GetUpdatesCallerInfo_GetUpdatesSource_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetUpdatesCallerInfo_GetUpdatesSource GetUpdatesCallerInfo::UNKNOWN;
const GetUpdatesCallerInfo_GetUpdatesSource GetUpdatesCallerInfo::FIRST_UPDATE;
const GetUpdatesCallerInfo_GetUpdatesSource GetUpdatesCallerInfo::LOCAL;
const GetUpdatesCallerInfo_GetUpdatesSource GetUpdatesCallerInfo::NOTIFICATION;
const GetUpdatesCallerInfo_GetUpdatesSource GetUpdatesCallerInfo::PERIODIC;
const GetUpdatesCallerInfo_GetUpdatesSource GetUpdatesCallerInfo::SYNC_CYCLE_CONTINUATION;
const GetUpdatesCallerInfo_GetUpdatesSource GetUpdatesCallerInfo::NEWLY_SUPPORTED_DATATYPE;
const GetUpdatesCallerInfo_GetUpdatesSource GetUpdatesCallerInfo::MIGRATION;
const GetUpdatesCallerInfo_GetUpdatesSource GetUpdatesCallerInfo::NEW_CLIENT;
const GetUpdatesCallerInfo_GetUpdatesSource GetUpdatesCallerInfo::RECONFIGURATION;
const GetUpdatesCallerInfo_GetUpdatesSource GetUpdatesCallerInfo::DATATYPE_REFRESH;
const GetUpdatesCallerInfo_GetUpdatesSource GetUpdatesCallerInfo::RETRY;
const GetUpdatesCallerInfo_GetUpdatesSource GetUpdatesCallerInfo::PROGRAMMATIC;
const GetUpdatesCallerInfo_GetUpdatesSource GetUpdatesCallerInfo::GetUpdatesSource_MIN;
const GetUpdatesCallerInfo_GetUpdatesSource GetUpdatesCallerInfo::GetUpdatesSource_MAX;
const int GetUpdatesCallerInfo::GetUpdatesSource_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUpdatesCallerInfo::kSourceFieldNumber;
const int GetUpdatesCallerInfo::kNotificationsEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUpdatesCallerInfo::GetUpdatesCallerInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_get_5fupdates_5fcaller_5finfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.GetUpdatesCallerInfo)
}
GetUpdatesCallerInfo::GetUpdatesCallerInfo(const GetUpdatesCallerInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&source_, &from.source_,
    static_cast<size_t>(reinterpret_cast<char*>(&notifications_enabled_) -
    reinterpret_cast<char*>(&source_)) + sizeof(notifications_enabled_));
  // @@protoc_insertion_point(copy_constructor:sync_pb.GetUpdatesCallerInfo)
}

void GetUpdatesCallerInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifications_enabled_) -
      reinterpret_cast<char*>(&source_)) + sizeof(notifications_enabled_));
}

GetUpdatesCallerInfo::~GetUpdatesCallerInfo() {
  // @@protoc_insertion_point(destructor:sync_pb.GetUpdatesCallerInfo)
  SharedDtor();
}

void GetUpdatesCallerInfo::SharedDtor() {
}

void GetUpdatesCallerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GetUpdatesCallerInfo& GetUpdatesCallerInfo::default_instance() {
  protobuf_get_5fupdates_5fcaller_5finfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetUpdatesCallerInfo* GetUpdatesCallerInfo::New(::google::protobuf::Arena* arena) const {
  GetUpdatesCallerInfo* n = new GetUpdatesCallerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetUpdatesCallerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.GetUpdatesCallerInfo)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&source_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&notifications_enabled_) -
        reinterpret_cast<char*>(&source_)) + sizeof(notifications_enabled_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetUpdatesCallerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.GetUpdatesCallerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sync_pb.GetUpdatesCallerInfo.GetUpdatesSource source = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sync_pb::GetUpdatesCallerInfo_GetUpdatesSource_IsValid(value)) {
            set_source(static_cast< ::sync_pb::GetUpdatesCallerInfo_GetUpdatesSource >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool notifications_enabled = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_notifications_enabled();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &notifications_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.GetUpdatesCallerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.GetUpdatesCallerInfo)
  return false;
#undef DO_
}

void GetUpdatesCallerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.GetUpdatesCallerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sync_pb.GetUpdatesCallerInfo.GetUpdatesSource source = 1 [deprecated = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->source(), output);
  }

  // optional bool notifications_enabled = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->notifications_enabled(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.GetUpdatesCallerInfo)
}

size_t GetUpdatesCallerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.GetUpdatesCallerInfo)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // required .sync_pb.GetUpdatesCallerInfo.GetUpdatesSource source = 1 [deprecated = true];
  if (has_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->source());
  }
  // optional bool notifications_enabled = 2;
  if (has_notifications_enabled()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetUpdatesCallerInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GetUpdatesCallerInfo*>(&from));
}

void GetUpdatesCallerInfo::MergeFrom(const GetUpdatesCallerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.GetUpdatesCallerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      source_ = from.source_;
    }
    if (cached_has_bits & 0x00000002u) {
      notifications_enabled_ = from.notifications_enabled_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetUpdatesCallerInfo::CopyFrom(const GetUpdatesCallerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.GetUpdatesCallerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUpdatesCallerInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void GetUpdatesCallerInfo::Swap(GetUpdatesCallerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUpdatesCallerInfo::InternalSwap(GetUpdatesCallerInfo* other) {
  std::swap(source_, other->source_);
  std::swap(notifications_enabled_, other->notifications_enabled_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string GetUpdatesCallerInfo::GetTypeName() const {
  return "sync_pb.GetUpdatesCallerInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetUpdatesCallerInfo

// required .sync_pb.GetUpdatesCallerInfo.GetUpdatesSource source = 1 [deprecated = true];
bool GetUpdatesCallerInfo::has_source() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetUpdatesCallerInfo::set_has_source() {
  _has_bits_[0] |= 0x00000001u;
}
void GetUpdatesCallerInfo::clear_has_source() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetUpdatesCallerInfo::clear_source() {
  source_ = 0;
  clear_has_source();
}
::sync_pb::GetUpdatesCallerInfo_GetUpdatesSource GetUpdatesCallerInfo::source() const {
  // @@protoc_insertion_point(field_get:sync_pb.GetUpdatesCallerInfo.source)
  return static_cast< ::sync_pb::GetUpdatesCallerInfo_GetUpdatesSource >(source_);
}
void GetUpdatesCallerInfo::set_source(::sync_pb::GetUpdatesCallerInfo_GetUpdatesSource value) {
  assert(::sync_pb::GetUpdatesCallerInfo_GetUpdatesSource_IsValid(value));
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.GetUpdatesCallerInfo.source)
}

// optional bool notifications_enabled = 2;
bool GetUpdatesCallerInfo::has_notifications_enabled() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetUpdatesCallerInfo::set_has_notifications_enabled() {
  _has_bits_[0] |= 0x00000002u;
}
void GetUpdatesCallerInfo::clear_has_notifications_enabled() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetUpdatesCallerInfo::clear_notifications_enabled() {
  notifications_enabled_ = false;
  clear_has_notifications_enabled();
}
bool GetUpdatesCallerInfo::notifications_enabled() const {
  // @@protoc_insertion_point(field_get:sync_pb.GetUpdatesCallerInfo.notifications_enabled)
  return notifications_enabled_;
}
void GetUpdatesCallerInfo::set_notifications_enabled(bool value) {
  set_has_notifications_enabled();
  notifications_enabled_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.GetUpdatesCallerInfo.notifications_enabled)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)
