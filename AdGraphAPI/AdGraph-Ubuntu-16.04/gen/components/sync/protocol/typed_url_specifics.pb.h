// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: typed_url_specifics.proto

#ifndef PROTOBUF_typed_5furl_5fspecifics_2eproto__INCLUDED
#define PROTOBUF_typed_5furl_5fspecifics_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
namespace sync_pb {
class TypedUrlSpecifics;
class TypedUrlSpecificsDefaultTypeInternal;
extern TypedUrlSpecificsDefaultTypeInternal _TypedUrlSpecifics_default_instance_;
}  // namespace sync_pb

namespace sync_pb {

namespace protobuf_typed_5furl_5fspecifics_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_typed_5furl_5fspecifics_2eproto

// ===================================================================

class TypedUrlSpecifics : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.TypedUrlSpecifics) */ {
 public:
  TypedUrlSpecifics();
  virtual ~TypedUrlSpecifics();

  TypedUrlSpecifics(const TypedUrlSpecifics& from);

  inline TypedUrlSpecifics& operator=(const TypedUrlSpecifics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const TypedUrlSpecifics& default_instance();

  static inline const TypedUrlSpecifics* internal_default_instance() {
    return reinterpret_cast<const TypedUrlSpecifics*>(
               &_TypedUrlSpecifics_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(TypedUrlSpecifics* other);

  // implements Message ----------------------------------------------

  inline TypedUrlSpecifics* New() const PROTOBUF_FINAL { return New(NULL); }

  TypedUrlSpecifics* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const TypedUrlSpecifics& from);
  void MergeFrom(const TypedUrlSpecifics& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TypedUrlSpecifics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 visits = 7 [packed = true];
  int visits_size() const;
  void clear_visits();
  static const int kVisitsFieldNumber = 7;
  ::google::protobuf::int64 visits(int index) const;
  void set_visits(int index, ::google::protobuf::int64 value);
  void add_visits(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      visits() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_visits();

  // repeated int32 visit_transitions = 8 [packed = true];
  int visit_transitions_size() const;
  void clear_visit_transitions();
  static const int kVisitTransitionsFieldNumber = 8;
  ::google::protobuf::int32 visit_transitions(int index) const;
  void set_visit_transitions(int index, ::google::protobuf::int32 value);
  void add_visit_transitions(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      visit_transitions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_visit_transitions();

  // optional string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string title = 2;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional bool hidden = 4;
  bool has_hidden() const;
  void clear_hidden();
  static const int kHiddenFieldNumber = 4;
  bool hidden() const;
  void set_hidden(bool value);

  // @@protoc_insertion_point(class_scope:sync_pb.TypedUrlSpecifics)
 private:
  void set_has_url();
  void clear_has_url();
  void set_has_title();
  void clear_has_title();
  void set_has_hidden();
  void clear_has_hidden();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > visits_;
  mutable int _visits_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > visit_transitions_;
  mutable int _visit_transitions_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  bool hidden_;
  friend struct protobuf_typed_5furl_5fspecifics_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TypedUrlSpecifics

// optional string url = 1;
inline bool TypedUrlSpecifics::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TypedUrlSpecifics::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TypedUrlSpecifics::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TypedUrlSpecifics::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& TypedUrlSpecifics::url() const {
  // @@protoc_insertion_point(field_get:sync_pb.TypedUrlSpecifics.url)
  return url_.GetNoArena();
}
inline void TypedUrlSpecifics::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.TypedUrlSpecifics.url)
}
#if LANG_CXX11
inline void TypedUrlSpecifics::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.TypedUrlSpecifics.url)
}
#endif
inline void TypedUrlSpecifics::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.TypedUrlSpecifics.url)
}
inline void TypedUrlSpecifics::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.TypedUrlSpecifics.url)
}
inline ::std::string* TypedUrlSpecifics::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:sync_pb.TypedUrlSpecifics.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TypedUrlSpecifics::release_url() {
  // @@protoc_insertion_point(field_release:sync_pb.TypedUrlSpecifics.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TypedUrlSpecifics::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.TypedUrlSpecifics.url)
}

// optional string title = 2;
inline bool TypedUrlSpecifics::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TypedUrlSpecifics::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TypedUrlSpecifics::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TypedUrlSpecifics::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& TypedUrlSpecifics::title() const {
  // @@protoc_insertion_point(field_get:sync_pb.TypedUrlSpecifics.title)
  return title_.GetNoArena();
}
inline void TypedUrlSpecifics::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.TypedUrlSpecifics.title)
}
#if LANG_CXX11
inline void TypedUrlSpecifics::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.TypedUrlSpecifics.title)
}
#endif
inline void TypedUrlSpecifics::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.TypedUrlSpecifics.title)
}
inline void TypedUrlSpecifics::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.TypedUrlSpecifics.title)
}
inline ::std::string* TypedUrlSpecifics::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:sync_pb.TypedUrlSpecifics.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TypedUrlSpecifics::release_title() {
  // @@protoc_insertion_point(field_release:sync_pb.TypedUrlSpecifics.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TypedUrlSpecifics::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.TypedUrlSpecifics.title)
}

// optional bool hidden = 4;
inline bool TypedUrlSpecifics::has_hidden() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TypedUrlSpecifics::set_has_hidden() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TypedUrlSpecifics::clear_has_hidden() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TypedUrlSpecifics::clear_hidden() {
  hidden_ = false;
  clear_has_hidden();
}
inline bool TypedUrlSpecifics::hidden() const {
  // @@protoc_insertion_point(field_get:sync_pb.TypedUrlSpecifics.hidden)
  return hidden_;
}
inline void TypedUrlSpecifics::set_hidden(bool value) {
  set_has_hidden();
  hidden_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.TypedUrlSpecifics.hidden)
}

// repeated int64 visits = 7 [packed = true];
inline int TypedUrlSpecifics::visits_size() const {
  return visits_.size();
}
inline void TypedUrlSpecifics::clear_visits() {
  visits_.Clear();
}
inline ::google::protobuf::int64 TypedUrlSpecifics::visits(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.TypedUrlSpecifics.visits)
  return visits_.Get(index);
}
inline void TypedUrlSpecifics::set_visits(int index, ::google::protobuf::int64 value) {
  visits_.Set(index, value);
  // @@protoc_insertion_point(field_set:sync_pb.TypedUrlSpecifics.visits)
}
inline void TypedUrlSpecifics::add_visits(::google::protobuf::int64 value) {
  visits_.Add(value);
  // @@protoc_insertion_point(field_add:sync_pb.TypedUrlSpecifics.visits)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TypedUrlSpecifics::visits() const {
  // @@protoc_insertion_point(field_list:sync_pb.TypedUrlSpecifics.visits)
  return visits_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TypedUrlSpecifics::mutable_visits() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.TypedUrlSpecifics.visits)
  return &visits_;
}

// repeated int32 visit_transitions = 8 [packed = true];
inline int TypedUrlSpecifics::visit_transitions_size() const {
  return visit_transitions_.size();
}
inline void TypedUrlSpecifics::clear_visit_transitions() {
  visit_transitions_.Clear();
}
inline ::google::protobuf::int32 TypedUrlSpecifics::visit_transitions(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.TypedUrlSpecifics.visit_transitions)
  return visit_transitions_.Get(index);
}
inline void TypedUrlSpecifics::set_visit_transitions(int index, ::google::protobuf::int32 value) {
  visit_transitions_.Set(index, value);
  // @@protoc_insertion_point(field_set:sync_pb.TypedUrlSpecifics.visit_transitions)
}
inline void TypedUrlSpecifics::add_visit_transitions(::google::protobuf::int32 value) {
  visit_transitions_.Add(value);
  // @@protoc_insertion_point(field_add:sync_pb.TypedUrlSpecifics.visit_transitions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TypedUrlSpecifics::visit_transitions() const {
  // @@protoc_insertion_point(field_list:sync_pb.TypedUrlSpecifics.visit_transitions)
  return visit_transitions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TypedUrlSpecifics::mutable_visit_transitions() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.TypedUrlSpecifics.visit_transitions)
  return &visit_transitions_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_typed_5furl_5fspecifics_2eproto__INCLUDED
