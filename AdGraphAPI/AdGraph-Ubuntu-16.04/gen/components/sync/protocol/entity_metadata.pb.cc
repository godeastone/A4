// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: entity_metadata.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "entity_metadata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {
class EntityMetadataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EntityMetadata> {
} _EntityMetadata_default_instance_;

namespace protobuf_entity_5fmetadata_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _EntityMetadata_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _EntityMetadata_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_entity_5fmetadata_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityMetadata::kClientTagHashFieldNumber;
const int EntityMetadata::kServerIdFieldNumber;
const int EntityMetadata::kIsDeletedFieldNumber;
const int EntityMetadata::kSequenceNumberFieldNumber;
const int EntityMetadata::kAckedSequenceNumberFieldNumber;
const int EntityMetadata::kServerVersionFieldNumber;
const int EntityMetadata::kCreationTimeFieldNumber;
const int EntityMetadata::kModificationTimeFieldNumber;
const int EntityMetadata::kSpecificsHashFieldNumber;
const int EntityMetadata::kBaseSpecificsHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityMetadata::EntityMetadata()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_entity_5fmetadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.EntityMetadata)
}
EntityMetadata::EntityMetadata(const EntityMetadata& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_tag_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_client_tag_hash()) {
    client_tag_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_tag_hash_);
  }
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_server_id()) {
    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  specifics_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_specifics_hash()) {
    specifics_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.specifics_hash_);
  }
  base_specifics_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_base_specifics_hash()) {
    base_specifics_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_specifics_hash_);
  }
  ::memcpy(&sequence_number_, &from.sequence_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&server_version_) -
    reinterpret_cast<char*>(&sequence_number_)) + sizeof(server_version_));
  // @@protoc_insertion_point(copy_constructor:sync_pb.EntityMetadata)
}

void EntityMetadata::SharedCtor() {
  _cached_size_ = 0;
  client_tag_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  specifics_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_specifics_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sequence_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_deleted_) -
      reinterpret_cast<char*>(&sequence_number_)) + sizeof(is_deleted_));
  server_version_ = GOOGLE_LONGLONG(-1);
}

EntityMetadata::~EntityMetadata() {
  // @@protoc_insertion_point(destructor:sync_pb.EntityMetadata)
  SharedDtor();
}

void EntityMetadata::SharedDtor() {
  client_tag_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  specifics_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_specifics_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EntityMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EntityMetadata& EntityMetadata::default_instance() {
  protobuf_entity_5fmetadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityMetadata* EntityMetadata::New(::google::protobuf::Arena* arena) const {
  EntityMetadata* n = new EntityMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.EntityMetadata)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_client_tag_hash()) {
      GOOGLE_DCHECK(!client_tag_hash_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*client_tag_hash_.UnsafeRawStringPointer())->clear();
    }
    if (has_server_id()) {
      GOOGLE_DCHECK(!server_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*server_id_.UnsafeRawStringPointer())->clear();
    }
    if (has_specifics_hash()) {
      GOOGLE_DCHECK(!specifics_hash_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*specifics_hash_.UnsafeRawStringPointer())->clear();
    }
    if (has_base_specifics_hash()) {
      GOOGLE_DCHECK(!base_specifics_hash_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*base_specifics_hash_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 240u) {
    ::memset(&sequence_number_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&modification_time_) -
        reinterpret_cast<char*>(&sequence_number_)) + sizeof(modification_time_));
  }
  if (_has_bits_[8 / 32] & 768u) {
    is_deleted_ = false;
    server_version_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EntityMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.EntityMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string client_tag_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_tag_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string server_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_deleted = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_is_deleted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_deleted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 sequence_number = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_sequence_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sequence_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 acked_sequence_number = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_acked_sequence_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &acked_sequence_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 server_version = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_server_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &server_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 creation_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_creation_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &creation_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 modification_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_modification_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &modification_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string specifics_hash = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_specifics_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string base_specifics_hash = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_base_specifics_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.EntityMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.EntityMetadata)
  return false;
#undef DO_
}

void EntityMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.EntityMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string client_tag_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->client_tag_hash(), output);
  }

  // optional string server_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server_id(), output);
  }

  // optional bool is_deleted = 3;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_deleted(), output);
  }

  // optional int64 sequence_number = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->sequence_number(), output);
  }

  // optional int64 acked_sequence_number = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->acked_sequence_number(), output);
  }

  // optional int64 server_version = 6 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->server_version(), output);
  }

  // optional int64 creation_time = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->creation_time(), output);
  }

  // optional int64 modification_time = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->modification_time(), output);
  }

  // optional string specifics_hash = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->specifics_hash(), output);
  }

  // optional string base_specifics_hash = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->base_specifics_hash(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.EntityMetadata)
}

size_t EntityMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.EntityMetadata)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional string client_tag_hash = 1;
    if (has_client_tag_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->client_tag_hash());
    }

    // optional string server_id = 2;
    if (has_server_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_id());
    }

    // optional string specifics_hash = 9;
    if (has_specifics_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->specifics_hash());
    }

    // optional string base_specifics_hash = 10;
    if (has_base_specifics_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->base_specifics_hash());
    }

    // optional int64 sequence_number = 4;
    if (has_sequence_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->sequence_number());
    }

    // optional int64 acked_sequence_number = 5;
    if (has_acked_sequence_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->acked_sequence_number());
    }

    // optional int64 creation_time = 7;
    if (has_creation_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->creation_time());
    }

    // optional int64 modification_time = 8;
    if (has_modification_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->modification_time());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional bool is_deleted = 3;
    if (has_is_deleted()) {
      total_size += 1 + 1;
    }

    // optional int64 server_version = 6 [default = -1];
    if (has_server_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->server_version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityMetadata::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EntityMetadata*>(&from));
}

void EntityMetadata::MergeFrom(const EntityMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.EntityMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_client_tag_hash();
      client_tag_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_tag_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_server_id();
      server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_specifics_hash();
      specifics_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.specifics_hash_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_base_specifics_hash();
      base_specifics_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_specifics_hash_);
    }
    if (cached_has_bits & 0x00000010u) {
      sequence_number_ = from.sequence_number_;
    }
    if (cached_has_bits & 0x00000020u) {
      acked_sequence_number_ = from.acked_sequence_number_;
    }
    if (cached_has_bits & 0x00000040u) {
      creation_time_ = from.creation_time_;
    }
    if (cached_has_bits & 0x00000080u) {
      modification_time_ = from.modification_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      is_deleted_ = from.is_deleted_;
    }
    if (cached_has_bits & 0x00000200u) {
      server_version_ = from.server_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EntityMetadata::CopyFrom(const EntityMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.EntityMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityMetadata::IsInitialized() const {
  return true;
}

void EntityMetadata::Swap(EntityMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityMetadata::InternalSwap(EntityMetadata* other) {
  client_tag_hash_.Swap(&other->client_tag_hash_);
  server_id_.Swap(&other->server_id_);
  specifics_hash_.Swap(&other->specifics_hash_);
  base_specifics_hash_.Swap(&other->base_specifics_hash_);
  std::swap(sequence_number_, other->sequence_number_);
  std::swap(acked_sequence_number_, other->acked_sequence_number_);
  std::swap(creation_time_, other->creation_time_);
  std::swap(modification_time_, other->modification_time_);
  std::swap(is_deleted_, other->is_deleted_);
  std::swap(server_version_, other->server_version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string EntityMetadata::GetTypeName() const {
  return "sync_pb.EntityMetadata";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityMetadata

// optional string client_tag_hash = 1;
bool EntityMetadata::has_client_tag_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EntityMetadata::set_has_client_tag_hash() {
  _has_bits_[0] |= 0x00000001u;
}
void EntityMetadata::clear_has_client_tag_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
void EntityMetadata::clear_client_tag_hash() {
  client_tag_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_client_tag_hash();
}
const ::std::string& EntityMetadata::client_tag_hash() const {
  // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.client_tag_hash)
  return client_tag_hash_.GetNoArena();
}
void EntityMetadata::set_client_tag_hash(const ::std::string& value) {
  set_has_client_tag_hash();
  client_tag_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.client_tag_hash)
}
#if LANG_CXX11
void EntityMetadata::set_client_tag_hash(::std::string&& value) {
  set_has_client_tag_hash();
  client_tag_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.EntityMetadata.client_tag_hash)
}
#endif
void EntityMetadata::set_client_tag_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_client_tag_hash();
  client_tag_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.EntityMetadata.client_tag_hash)
}
void EntityMetadata::set_client_tag_hash(const char* value, size_t size) {
  set_has_client_tag_hash();
  client_tag_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.EntityMetadata.client_tag_hash)
}
::std::string* EntityMetadata::mutable_client_tag_hash() {
  set_has_client_tag_hash();
  // @@protoc_insertion_point(field_mutable:sync_pb.EntityMetadata.client_tag_hash)
  return client_tag_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntityMetadata::release_client_tag_hash() {
  // @@protoc_insertion_point(field_release:sync_pb.EntityMetadata.client_tag_hash)
  clear_has_client_tag_hash();
  return client_tag_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityMetadata::set_allocated_client_tag_hash(::std::string* client_tag_hash) {
  if (client_tag_hash != NULL) {
    set_has_client_tag_hash();
  } else {
    clear_has_client_tag_hash();
  }
  client_tag_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_tag_hash);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.EntityMetadata.client_tag_hash)
}

// optional string server_id = 2;
bool EntityMetadata::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EntityMetadata::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
void EntityMetadata::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void EntityMetadata::clear_server_id() {
  server_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_server_id();
}
const ::std::string& EntityMetadata::server_id() const {
  // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.server_id)
  return server_id_.GetNoArena();
}
void EntityMetadata::set_server_id(const ::std::string& value) {
  set_has_server_id();
  server_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.server_id)
}
#if LANG_CXX11
void EntityMetadata::set_server_id(::std::string&& value) {
  set_has_server_id();
  server_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.EntityMetadata.server_id)
}
#endif
void EntityMetadata::set_server_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_server_id();
  server_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.EntityMetadata.server_id)
}
void EntityMetadata::set_server_id(const char* value, size_t size) {
  set_has_server_id();
  server_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.EntityMetadata.server_id)
}
::std::string* EntityMetadata::mutable_server_id() {
  set_has_server_id();
  // @@protoc_insertion_point(field_mutable:sync_pb.EntityMetadata.server_id)
  return server_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntityMetadata::release_server_id() {
  // @@protoc_insertion_point(field_release:sync_pb.EntityMetadata.server_id)
  clear_has_server_id();
  return server_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityMetadata::set_allocated_server_id(::std::string* server_id) {
  if (server_id != NULL) {
    set_has_server_id();
  } else {
    clear_has_server_id();
  }
  server_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_id);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.EntityMetadata.server_id)
}

// optional bool is_deleted = 3;
bool EntityMetadata::has_is_deleted() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void EntityMetadata::set_has_is_deleted() {
  _has_bits_[0] |= 0x00000100u;
}
void EntityMetadata::clear_has_is_deleted() {
  _has_bits_[0] &= ~0x00000100u;
}
void EntityMetadata::clear_is_deleted() {
  is_deleted_ = false;
  clear_has_is_deleted();
}
bool EntityMetadata::is_deleted() const {
  // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.is_deleted)
  return is_deleted_;
}
void EntityMetadata::set_is_deleted(bool value) {
  set_has_is_deleted();
  is_deleted_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.is_deleted)
}

// optional int64 sequence_number = 4;
bool EntityMetadata::has_sequence_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void EntityMetadata::set_has_sequence_number() {
  _has_bits_[0] |= 0x00000010u;
}
void EntityMetadata::clear_has_sequence_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void EntityMetadata::clear_sequence_number() {
  sequence_number_ = GOOGLE_LONGLONG(0);
  clear_has_sequence_number();
}
::google::protobuf::int64 EntityMetadata::sequence_number() const {
  // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.sequence_number)
  return sequence_number_;
}
void EntityMetadata::set_sequence_number(::google::protobuf::int64 value) {
  set_has_sequence_number();
  sequence_number_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.sequence_number)
}

// optional int64 acked_sequence_number = 5;
bool EntityMetadata::has_acked_sequence_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void EntityMetadata::set_has_acked_sequence_number() {
  _has_bits_[0] |= 0x00000020u;
}
void EntityMetadata::clear_has_acked_sequence_number() {
  _has_bits_[0] &= ~0x00000020u;
}
void EntityMetadata::clear_acked_sequence_number() {
  acked_sequence_number_ = GOOGLE_LONGLONG(0);
  clear_has_acked_sequence_number();
}
::google::protobuf::int64 EntityMetadata::acked_sequence_number() const {
  // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.acked_sequence_number)
  return acked_sequence_number_;
}
void EntityMetadata::set_acked_sequence_number(::google::protobuf::int64 value) {
  set_has_acked_sequence_number();
  acked_sequence_number_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.acked_sequence_number)
}

// optional int64 server_version = 6 [default = -1];
bool EntityMetadata::has_server_version() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void EntityMetadata::set_has_server_version() {
  _has_bits_[0] |= 0x00000200u;
}
void EntityMetadata::clear_has_server_version() {
  _has_bits_[0] &= ~0x00000200u;
}
void EntityMetadata::clear_server_version() {
  server_version_ = GOOGLE_LONGLONG(-1);
  clear_has_server_version();
}
::google::protobuf::int64 EntityMetadata::server_version() const {
  // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.server_version)
  return server_version_;
}
void EntityMetadata::set_server_version(::google::protobuf::int64 value) {
  set_has_server_version();
  server_version_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.server_version)
}

// optional int64 creation_time = 7;
bool EntityMetadata::has_creation_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void EntityMetadata::set_has_creation_time() {
  _has_bits_[0] |= 0x00000040u;
}
void EntityMetadata::clear_has_creation_time() {
  _has_bits_[0] &= ~0x00000040u;
}
void EntityMetadata::clear_creation_time() {
  creation_time_ = GOOGLE_LONGLONG(0);
  clear_has_creation_time();
}
::google::protobuf::int64 EntityMetadata::creation_time() const {
  // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.creation_time)
  return creation_time_;
}
void EntityMetadata::set_creation_time(::google::protobuf::int64 value) {
  set_has_creation_time();
  creation_time_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.creation_time)
}

// optional int64 modification_time = 8;
bool EntityMetadata::has_modification_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void EntityMetadata::set_has_modification_time() {
  _has_bits_[0] |= 0x00000080u;
}
void EntityMetadata::clear_has_modification_time() {
  _has_bits_[0] &= ~0x00000080u;
}
void EntityMetadata::clear_modification_time() {
  modification_time_ = GOOGLE_LONGLONG(0);
  clear_has_modification_time();
}
::google::protobuf::int64 EntityMetadata::modification_time() const {
  // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.modification_time)
  return modification_time_;
}
void EntityMetadata::set_modification_time(::google::protobuf::int64 value) {
  set_has_modification_time();
  modification_time_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.modification_time)
}

// optional string specifics_hash = 9;
bool EntityMetadata::has_specifics_hash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void EntityMetadata::set_has_specifics_hash() {
  _has_bits_[0] |= 0x00000004u;
}
void EntityMetadata::clear_has_specifics_hash() {
  _has_bits_[0] &= ~0x00000004u;
}
void EntityMetadata::clear_specifics_hash() {
  specifics_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_specifics_hash();
}
const ::std::string& EntityMetadata::specifics_hash() const {
  // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.specifics_hash)
  return specifics_hash_.GetNoArena();
}
void EntityMetadata::set_specifics_hash(const ::std::string& value) {
  set_has_specifics_hash();
  specifics_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.specifics_hash)
}
#if LANG_CXX11
void EntityMetadata::set_specifics_hash(::std::string&& value) {
  set_has_specifics_hash();
  specifics_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.EntityMetadata.specifics_hash)
}
#endif
void EntityMetadata::set_specifics_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_specifics_hash();
  specifics_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.EntityMetadata.specifics_hash)
}
void EntityMetadata::set_specifics_hash(const char* value, size_t size) {
  set_has_specifics_hash();
  specifics_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.EntityMetadata.specifics_hash)
}
::std::string* EntityMetadata::mutable_specifics_hash() {
  set_has_specifics_hash();
  // @@protoc_insertion_point(field_mutable:sync_pb.EntityMetadata.specifics_hash)
  return specifics_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntityMetadata::release_specifics_hash() {
  // @@protoc_insertion_point(field_release:sync_pb.EntityMetadata.specifics_hash)
  clear_has_specifics_hash();
  return specifics_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityMetadata::set_allocated_specifics_hash(::std::string* specifics_hash) {
  if (specifics_hash != NULL) {
    set_has_specifics_hash();
  } else {
    clear_has_specifics_hash();
  }
  specifics_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), specifics_hash);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.EntityMetadata.specifics_hash)
}

// optional string base_specifics_hash = 10;
bool EntityMetadata::has_base_specifics_hash() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void EntityMetadata::set_has_base_specifics_hash() {
  _has_bits_[0] |= 0x00000008u;
}
void EntityMetadata::clear_has_base_specifics_hash() {
  _has_bits_[0] &= ~0x00000008u;
}
void EntityMetadata::clear_base_specifics_hash() {
  base_specifics_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_base_specifics_hash();
}
const ::std::string& EntityMetadata::base_specifics_hash() const {
  // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.base_specifics_hash)
  return base_specifics_hash_.GetNoArena();
}
void EntityMetadata::set_base_specifics_hash(const ::std::string& value) {
  set_has_base_specifics_hash();
  base_specifics_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.base_specifics_hash)
}
#if LANG_CXX11
void EntityMetadata::set_base_specifics_hash(::std::string&& value) {
  set_has_base_specifics_hash();
  base_specifics_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.EntityMetadata.base_specifics_hash)
}
#endif
void EntityMetadata::set_base_specifics_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_base_specifics_hash();
  base_specifics_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.EntityMetadata.base_specifics_hash)
}
void EntityMetadata::set_base_specifics_hash(const char* value, size_t size) {
  set_has_base_specifics_hash();
  base_specifics_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.EntityMetadata.base_specifics_hash)
}
::std::string* EntityMetadata::mutable_base_specifics_hash() {
  set_has_base_specifics_hash();
  // @@protoc_insertion_point(field_mutable:sync_pb.EntityMetadata.base_specifics_hash)
  return base_specifics_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntityMetadata::release_base_specifics_hash() {
  // @@protoc_insertion_point(field_release:sync_pb.EntityMetadata.base_specifics_hash)
  clear_has_base_specifics_hash();
  return base_specifics_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityMetadata::set_allocated_base_specifics_hash(::std::string* base_specifics_hash) {
  if (base_specifics_hash != NULL) {
    set_has_base_specifics_hash();
  } else {
    clear_has_base_specifics_hash();
  }
  base_specifics_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), base_specifics_hash);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.EntityMetadata.base_specifics_hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)
