// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: printer_specifics.proto

#ifndef PROTOBUF_printer_5fspecifics_2eproto__INCLUDED
#define PROTOBUF_printer_5fspecifics_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
namespace sync_pb {
class PrinterPPDReference;
class PrinterPPDReferenceDefaultTypeInternal;
extern PrinterPPDReferenceDefaultTypeInternal _PrinterPPDReference_default_instance_;
class PrinterSpecifics;
class PrinterSpecificsDefaultTypeInternal;
extern PrinterSpecificsDefaultTypeInternal _PrinterSpecifics_default_instance_;
}  // namespace sync_pb

namespace sync_pb {

namespace protobuf_printer_5fspecifics_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_printer_5fspecifics_2eproto

// ===================================================================

class PrinterPPDReference : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.PrinterPPDReference) */ {
 public:
  PrinterPPDReference();
  virtual ~PrinterPPDReference();

  PrinterPPDReference(const PrinterPPDReference& from);

  inline PrinterPPDReference& operator=(const PrinterPPDReference& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PrinterPPDReference& default_instance();

  static inline const PrinterPPDReference* internal_default_instance() {
    return reinterpret_cast<const PrinterPPDReference*>(
               &_PrinterPPDReference_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(PrinterPPDReference* other);

  // implements Message ----------------------------------------------

  inline PrinterPPDReference* New() const PROTOBUF_FINAL { return New(NULL); }

  PrinterPPDReference* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const PrinterPPDReference& from);
  void MergeFrom(const PrinterPPDReference& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PrinterPPDReference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_supplied_ppd_url = 1;
  bool has_user_supplied_ppd_url() const;
  void clear_user_supplied_ppd_url();
  static const int kUserSuppliedPpdUrlFieldNumber = 1;
  const ::std::string& user_supplied_ppd_url() const;
  void set_user_supplied_ppd_url(const ::std::string& value);
  #if LANG_CXX11
  void set_user_supplied_ppd_url(::std::string&& value);
  #endif
  void set_user_supplied_ppd_url(const char* value);
  void set_user_supplied_ppd_url(const char* value, size_t size);
  ::std::string* mutable_user_supplied_ppd_url();
  ::std::string* release_user_supplied_ppd_url();
  void set_allocated_user_supplied_ppd_url(::std::string* user_supplied_ppd_url);

  // optional string effective_manufacturer = 2 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_effective_manufacturer() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_effective_manufacturer();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kEffectiveManufacturerFieldNumber = 2;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::std::string& effective_manufacturer() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_effective_manufacturer(const ::std::string& value);
  #if LANG_CXX11
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_effective_manufacturer(::std::string&& value);
  #endif
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_effective_manufacturer(const char* value);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_effective_manufacturer(const char* value, size_t size);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* mutable_effective_manufacturer();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* release_effective_manufacturer();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_effective_manufacturer(::std::string* effective_manufacturer);

  // optional string effective_model = 3 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_effective_model() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_effective_model();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kEffectiveModelFieldNumber = 3;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::std::string& effective_model() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_effective_model(const ::std::string& value);
  #if LANG_CXX11
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_effective_model(::std::string&& value);
  #endif
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_effective_model(const char* value);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_effective_model(const char* value, size_t size);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* mutable_effective_model();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* release_effective_model();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_effective_model(::std::string* effective_model);

  // optional string effective_make_and_model = 4;
  bool has_effective_make_and_model() const;
  void clear_effective_make_and_model();
  static const int kEffectiveMakeAndModelFieldNumber = 4;
  const ::std::string& effective_make_and_model() const;
  void set_effective_make_and_model(const ::std::string& value);
  #if LANG_CXX11
  void set_effective_make_and_model(::std::string&& value);
  #endif
  void set_effective_make_and_model(const char* value);
  void set_effective_make_and_model(const char* value, size_t size);
  ::std::string* mutable_effective_make_and_model();
  ::std::string* release_effective_make_and_model();
  void set_allocated_effective_make_and_model(::std::string* effective_make_and_model);

  // optional bool autoconf = 5 [default = false];
  bool has_autoconf() const;
  void clear_autoconf();
  static const int kAutoconfFieldNumber = 5;
  bool autoconf() const;
  void set_autoconf(bool value);

  // @@protoc_insertion_point(class_scope:sync_pb.PrinterPPDReference)
 private:
  void set_has_user_supplied_ppd_url();
  void clear_has_user_supplied_ppd_url();
  void set_has_effective_manufacturer();
  void clear_has_effective_manufacturer();
  void set_has_effective_model();
  void clear_has_effective_model();
  void set_has_effective_make_and_model();
  void clear_has_effective_make_and_model();
  void set_has_autoconf();
  void clear_has_autoconf();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_supplied_ppd_url_;
  ::google::protobuf::internal::ArenaStringPtr effective_manufacturer_;
  ::google::protobuf::internal::ArenaStringPtr effective_model_;
  ::google::protobuf::internal::ArenaStringPtr effective_make_and_model_;
  bool autoconf_;
  friend struct protobuf_printer_5fspecifics_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PrinterSpecifics : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.PrinterSpecifics) */ {
 public:
  PrinterSpecifics();
  virtual ~PrinterSpecifics();

  PrinterSpecifics(const PrinterSpecifics& from);

  inline PrinterSpecifics& operator=(const PrinterSpecifics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PrinterSpecifics& default_instance();

  static inline const PrinterSpecifics* internal_default_instance() {
    return reinterpret_cast<const PrinterSpecifics*>(
               &_PrinterSpecifics_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(PrinterSpecifics* other);

  // implements Message ----------------------------------------------

  inline PrinterSpecifics* New() const PROTOBUF_FINAL { return New(NULL); }

  PrinterSpecifics* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const PrinterSpecifics& from);
  void MergeFrom(const PrinterSpecifics& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PrinterSpecifics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string display_name = 2;
  bool has_display_name() const;
  void clear_display_name();
  static const int kDisplayNameFieldNumber = 2;
  const ::std::string& display_name() const;
  void set_display_name(const ::std::string& value);
  #if LANG_CXX11
  void set_display_name(::std::string&& value);
  #endif
  void set_display_name(const char* value);
  void set_display_name(const char* value, size_t size);
  ::std::string* mutable_display_name();
  ::std::string* release_display_name();
  void set_allocated_display_name(::std::string* display_name);

  // optional string description = 3;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional string manufacturer = 4 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_manufacturer() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_manufacturer();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kManufacturerFieldNumber = 4;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::std::string& manufacturer() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_manufacturer(const ::std::string& value);
  #if LANG_CXX11
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_manufacturer(::std::string&& value);
  #endif
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_manufacturer(const char* value);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_manufacturer(const char* value, size_t size);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* mutable_manufacturer();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* release_manufacturer();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_manufacturer(::std::string* manufacturer);

  // optional string model = 5 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_model() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_model();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kModelFieldNumber = 5;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::std::string& model() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_model(const ::std::string& value);
  #if LANG_CXX11
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_model(::std::string&& value);
  #endif
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_model(const char* value);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_model(const char* value, size_t size);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* mutable_model();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* release_model();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_model(::std::string* model);

  // optional string uri = 6;
  bool has_uri() const;
  void clear_uri();
  static const int kUriFieldNumber = 6;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // optional string uuid = 7;
  bool has_uuid() const;
  void clear_uuid();
  static const int kUuidFieldNumber = 7;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // optional bytes ppd = 8 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_ppd() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_ppd();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kPpdFieldNumber = 8;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::std::string& ppd() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_ppd(const ::std::string& value);
  #if LANG_CXX11
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_ppd(::std::string&& value);
  #endif
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_ppd(const char* value);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_ppd(const void* value, size_t size);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* mutable_ppd();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* release_ppd();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_ppd(::std::string* ppd);

  // optional string make_and_model = 11;
  bool has_make_and_model() const;
  void clear_make_and_model();
  static const int kMakeAndModelFieldNumber = 11;
  const ::std::string& make_and_model() const;
  void set_make_and_model(const ::std::string& value);
  #if LANG_CXX11
  void set_make_and_model(::std::string&& value);
  #endif
  void set_make_and_model(const char* value);
  void set_make_and_model(const char* value, size_t size);
  ::std::string* mutable_make_and_model();
  ::std::string* release_make_and_model();
  void set_allocated_make_and_model(::std::string* make_and_model);

  // optional .sync_pb.PrinterPPDReference ppd_reference = 9;
  bool has_ppd_reference() const;
  void clear_ppd_reference();
  static const int kPpdReferenceFieldNumber = 9;
  const ::sync_pb::PrinterPPDReference& ppd_reference() const;
  ::sync_pb::PrinterPPDReference* mutable_ppd_reference();
  ::sync_pb::PrinterPPDReference* release_ppd_reference();
  void set_allocated_ppd_reference(::sync_pb::PrinterPPDReference* ppd_reference);

  // optional int64 updated_timestamp = 10;
  bool has_updated_timestamp() const;
  void clear_updated_timestamp();
  static const int kUpdatedTimestampFieldNumber = 10;
  ::google::protobuf::int64 updated_timestamp() const;
  void set_updated_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:sync_pb.PrinterSpecifics)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_display_name();
  void clear_has_display_name();
  void set_has_description();
  void clear_has_description();
  void set_has_manufacturer();
  void clear_has_manufacturer();
  void set_has_model();
  void clear_has_model();
  void set_has_uri();
  void clear_has_uri();
  void set_has_uuid();
  void clear_has_uuid();
  void set_has_ppd();
  void clear_has_ppd();
  void set_has_ppd_reference();
  void clear_has_ppd_reference();
  void set_has_updated_timestamp();
  void clear_has_updated_timestamp();
  void set_has_make_and_model();
  void clear_has_make_and_model();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr display_name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr manufacturer_;
  ::google::protobuf::internal::ArenaStringPtr model_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr ppd_;
  ::google::protobuf::internal::ArenaStringPtr make_and_model_;
  ::sync_pb::PrinterPPDReference* ppd_reference_;
  ::google::protobuf::int64 updated_timestamp_;
  friend struct protobuf_printer_5fspecifics_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PrinterPPDReference

// optional string user_supplied_ppd_url = 1;
inline bool PrinterPPDReference::has_user_supplied_ppd_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PrinterPPDReference::set_has_user_supplied_ppd_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PrinterPPDReference::clear_has_user_supplied_ppd_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PrinterPPDReference::clear_user_supplied_ppd_url() {
  user_supplied_ppd_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_supplied_ppd_url();
}
inline const ::std::string& PrinterPPDReference::user_supplied_ppd_url() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
  return user_supplied_ppd_url_.GetNoArena();
}
inline void PrinterPPDReference::set_user_supplied_ppd_url(const ::std::string& value) {
  set_has_user_supplied_ppd_url();
  user_supplied_ppd_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
}
#if LANG_CXX11
inline void PrinterPPDReference::set_user_supplied_ppd_url(::std::string&& value) {
  set_has_user_supplied_ppd_url();
  user_supplied_ppd_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
}
#endif
inline void PrinterPPDReference::set_user_supplied_ppd_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_supplied_ppd_url();
  user_supplied_ppd_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
}
inline void PrinterPPDReference::set_user_supplied_ppd_url(const char* value, size_t size) {
  set_has_user_supplied_ppd_url();
  user_supplied_ppd_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
}
inline ::std::string* PrinterPPDReference::mutable_user_supplied_ppd_url() {
  set_has_user_supplied_ppd_url();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
  return user_supplied_ppd_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrinterPPDReference::release_user_supplied_ppd_url() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
  clear_has_user_supplied_ppd_url();
  return user_supplied_ppd_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrinterPPDReference::set_allocated_user_supplied_ppd_url(::std::string* user_supplied_ppd_url) {
  if (user_supplied_ppd_url != NULL) {
    set_has_user_supplied_ppd_url();
  } else {
    clear_has_user_supplied_ppd_url();
  }
  user_supplied_ppd_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_supplied_ppd_url);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
}

// optional string effective_manufacturer = 2 [deprecated = true];
inline bool PrinterPPDReference::has_effective_manufacturer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PrinterPPDReference::set_has_effective_manufacturer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PrinterPPDReference::clear_has_effective_manufacturer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PrinterPPDReference::clear_effective_manufacturer() {
  effective_manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_effective_manufacturer();
}
inline const ::std::string& PrinterPPDReference::effective_manufacturer() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterPPDReference.effective_manufacturer)
  return effective_manufacturer_.GetNoArena();
}
inline void PrinterPPDReference::set_effective_manufacturer(const ::std::string& value) {
  set_has_effective_manufacturer();
  effective_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterPPDReference.effective_manufacturer)
}
#if LANG_CXX11
inline void PrinterPPDReference::set_effective_manufacturer(::std::string&& value) {
  set_has_effective_manufacturer();
  effective_manufacturer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterPPDReference.effective_manufacturer)
}
#endif
inline void PrinterPPDReference::set_effective_manufacturer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_effective_manufacturer();
  effective_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterPPDReference.effective_manufacturer)
}
inline void PrinterPPDReference::set_effective_manufacturer(const char* value, size_t size) {
  set_has_effective_manufacturer();
  effective_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterPPDReference.effective_manufacturer)
}
inline ::std::string* PrinterPPDReference::mutable_effective_manufacturer() {
  set_has_effective_manufacturer();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterPPDReference.effective_manufacturer)
  return effective_manufacturer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrinterPPDReference::release_effective_manufacturer() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterPPDReference.effective_manufacturer)
  clear_has_effective_manufacturer();
  return effective_manufacturer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrinterPPDReference::set_allocated_effective_manufacturer(::std::string* effective_manufacturer) {
  if (effective_manufacturer != NULL) {
    set_has_effective_manufacturer();
  } else {
    clear_has_effective_manufacturer();
  }
  effective_manufacturer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), effective_manufacturer);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterPPDReference.effective_manufacturer)
}

// optional string effective_model = 3 [deprecated = true];
inline bool PrinterPPDReference::has_effective_model() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PrinterPPDReference::set_has_effective_model() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PrinterPPDReference::clear_has_effective_model() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PrinterPPDReference::clear_effective_model() {
  effective_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_effective_model();
}
inline const ::std::string& PrinterPPDReference::effective_model() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterPPDReference.effective_model)
  return effective_model_.GetNoArena();
}
inline void PrinterPPDReference::set_effective_model(const ::std::string& value) {
  set_has_effective_model();
  effective_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterPPDReference.effective_model)
}
#if LANG_CXX11
inline void PrinterPPDReference::set_effective_model(::std::string&& value) {
  set_has_effective_model();
  effective_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterPPDReference.effective_model)
}
#endif
inline void PrinterPPDReference::set_effective_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_effective_model();
  effective_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterPPDReference.effective_model)
}
inline void PrinterPPDReference::set_effective_model(const char* value, size_t size) {
  set_has_effective_model();
  effective_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterPPDReference.effective_model)
}
inline ::std::string* PrinterPPDReference::mutable_effective_model() {
  set_has_effective_model();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterPPDReference.effective_model)
  return effective_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrinterPPDReference::release_effective_model() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterPPDReference.effective_model)
  clear_has_effective_model();
  return effective_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrinterPPDReference::set_allocated_effective_model(::std::string* effective_model) {
  if (effective_model != NULL) {
    set_has_effective_model();
  } else {
    clear_has_effective_model();
  }
  effective_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), effective_model);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterPPDReference.effective_model)
}

// optional string effective_make_and_model = 4;
inline bool PrinterPPDReference::has_effective_make_and_model() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PrinterPPDReference::set_has_effective_make_and_model() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PrinterPPDReference::clear_has_effective_make_and_model() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PrinterPPDReference::clear_effective_make_and_model() {
  effective_make_and_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_effective_make_and_model();
}
inline const ::std::string& PrinterPPDReference::effective_make_and_model() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterPPDReference.effective_make_and_model)
  return effective_make_and_model_.GetNoArena();
}
inline void PrinterPPDReference::set_effective_make_and_model(const ::std::string& value) {
  set_has_effective_make_and_model();
  effective_make_and_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterPPDReference.effective_make_and_model)
}
#if LANG_CXX11
inline void PrinterPPDReference::set_effective_make_and_model(::std::string&& value) {
  set_has_effective_make_and_model();
  effective_make_and_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterPPDReference.effective_make_and_model)
}
#endif
inline void PrinterPPDReference::set_effective_make_and_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_effective_make_and_model();
  effective_make_and_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterPPDReference.effective_make_and_model)
}
inline void PrinterPPDReference::set_effective_make_and_model(const char* value, size_t size) {
  set_has_effective_make_and_model();
  effective_make_and_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterPPDReference.effective_make_and_model)
}
inline ::std::string* PrinterPPDReference::mutable_effective_make_and_model() {
  set_has_effective_make_and_model();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterPPDReference.effective_make_and_model)
  return effective_make_and_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrinterPPDReference::release_effective_make_and_model() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterPPDReference.effective_make_and_model)
  clear_has_effective_make_and_model();
  return effective_make_and_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrinterPPDReference::set_allocated_effective_make_and_model(::std::string* effective_make_and_model) {
  if (effective_make_and_model != NULL) {
    set_has_effective_make_and_model();
  } else {
    clear_has_effective_make_and_model();
  }
  effective_make_and_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), effective_make_and_model);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterPPDReference.effective_make_and_model)
}

// optional bool autoconf = 5 [default = false];
inline bool PrinterPPDReference::has_autoconf() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PrinterPPDReference::set_has_autoconf() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PrinterPPDReference::clear_has_autoconf() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PrinterPPDReference::clear_autoconf() {
  autoconf_ = false;
  clear_has_autoconf();
}
inline bool PrinterPPDReference::autoconf() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterPPDReference.autoconf)
  return autoconf_;
}
inline void PrinterPPDReference::set_autoconf(bool value) {
  set_has_autoconf();
  autoconf_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.PrinterPPDReference.autoconf)
}

// -------------------------------------------------------------------

// PrinterSpecifics

// optional string id = 1;
inline bool PrinterSpecifics::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PrinterSpecifics::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PrinterSpecifics::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PrinterSpecifics::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& PrinterSpecifics::id() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.id)
  return id_.GetNoArena();
}
inline void PrinterSpecifics::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.id)
}
#if LANG_CXX11
inline void PrinterSpecifics::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterSpecifics.id)
}
#endif
inline void PrinterSpecifics::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.id)
}
inline void PrinterSpecifics::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.id)
}
inline ::std::string* PrinterSpecifics::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrinterSpecifics::release_id() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrinterSpecifics::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.id)
}

// optional string display_name = 2;
inline bool PrinterSpecifics::has_display_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PrinterSpecifics::set_has_display_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PrinterSpecifics::clear_has_display_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PrinterSpecifics::clear_display_name() {
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_display_name();
}
inline const ::std::string& PrinterSpecifics::display_name() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.display_name)
  return display_name_.GetNoArena();
}
inline void PrinterSpecifics::set_display_name(const ::std::string& value) {
  set_has_display_name();
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.display_name)
}
#if LANG_CXX11
inline void PrinterSpecifics::set_display_name(::std::string&& value) {
  set_has_display_name();
  display_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterSpecifics.display_name)
}
#endif
inline void PrinterSpecifics::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_display_name();
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.display_name)
}
inline void PrinterSpecifics::set_display_name(const char* value, size_t size) {
  set_has_display_name();
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.display_name)
}
inline ::std::string* PrinterSpecifics::mutable_display_name() {
  set_has_display_name();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.display_name)
  return display_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrinterSpecifics::release_display_name() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.display_name)
  clear_has_display_name();
  return display_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrinterSpecifics::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    set_has_display_name();
  } else {
    clear_has_display_name();
  }
  display_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.display_name)
}

// optional string description = 3;
inline bool PrinterSpecifics::has_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PrinterSpecifics::set_has_description() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PrinterSpecifics::clear_has_description() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PrinterSpecifics::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& PrinterSpecifics::description() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.description)
  return description_.GetNoArena();
}
inline void PrinterSpecifics::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.description)
}
#if LANG_CXX11
inline void PrinterSpecifics::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterSpecifics.description)
}
#endif
inline void PrinterSpecifics::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.description)
}
inline void PrinterSpecifics::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.description)
}
inline ::std::string* PrinterSpecifics::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrinterSpecifics::release_description() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrinterSpecifics::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.description)
}

// optional string manufacturer = 4 [deprecated = true];
inline bool PrinterSpecifics::has_manufacturer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PrinterSpecifics::set_has_manufacturer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PrinterSpecifics::clear_has_manufacturer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PrinterSpecifics::clear_manufacturer() {
  manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_manufacturer();
}
inline const ::std::string& PrinterSpecifics::manufacturer() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.manufacturer)
  return manufacturer_.GetNoArena();
}
inline void PrinterSpecifics::set_manufacturer(const ::std::string& value) {
  set_has_manufacturer();
  manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.manufacturer)
}
#if LANG_CXX11
inline void PrinterSpecifics::set_manufacturer(::std::string&& value) {
  set_has_manufacturer();
  manufacturer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterSpecifics.manufacturer)
}
#endif
inline void PrinterSpecifics::set_manufacturer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_manufacturer();
  manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.manufacturer)
}
inline void PrinterSpecifics::set_manufacturer(const char* value, size_t size) {
  set_has_manufacturer();
  manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.manufacturer)
}
inline ::std::string* PrinterSpecifics::mutable_manufacturer() {
  set_has_manufacturer();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.manufacturer)
  return manufacturer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrinterSpecifics::release_manufacturer() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.manufacturer)
  clear_has_manufacturer();
  return manufacturer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrinterSpecifics::set_allocated_manufacturer(::std::string* manufacturer) {
  if (manufacturer != NULL) {
    set_has_manufacturer();
  } else {
    clear_has_manufacturer();
  }
  manufacturer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), manufacturer);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.manufacturer)
}

// optional string model = 5 [deprecated = true];
inline bool PrinterSpecifics::has_model() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PrinterSpecifics::set_has_model() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PrinterSpecifics::clear_has_model() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PrinterSpecifics::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model();
}
inline const ::std::string& PrinterSpecifics::model() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.model)
  return model_.GetNoArena();
}
inline void PrinterSpecifics::set_model(const ::std::string& value) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.model)
}
#if LANG_CXX11
inline void PrinterSpecifics::set_model(::std::string&& value) {
  set_has_model();
  model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterSpecifics.model)
}
#endif
inline void PrinterSpecifics::set_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.model)
}
inline void PrinterSpecifics::set_model(const char* value, size_t size) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.model)
}
inline ::std::string* PrinterSpecifics::mutable_model() {
  set_has_model();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrinterSpecifics::release_model() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.model)
  clear_has_model();
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrinterSpecifics::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    set_has_model();
  } else {
    clear_has_model();
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.model)
}

// optional string uri = 6;
inline bool PrinterSpecifics::has_uri() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PrinterSpecifics::set_has_uri() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PrinterSpecifics::clear_has_uri() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PrinterSpecifics::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uri();
}
inline const ::std::string& PrinterSpecifics::uri() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.uri)
  return uri_.GetNoArena();
}
inline void PrinterSpecifics::set_uri(const ::std::string& value) {
  set_has_uri();
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.uri)
}
#if LANG_CXX11
inline void PrinterSpecifics::set_uri(::std::string&& value) {
  set_has_uri();
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterSpecifics.uri)
}
#endif
inline void PrinterSpecifics::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uri();
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.uri)
}
inline void PrinterSpecifics::set_uri(const char* value, size_t size) {
  set_has_uri();
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.uri)
}
inline ::std::string* PrinterSpecifics::mutable_uri() {
  set_has_uri();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrinterSpecifics::release_uri() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.uri)
  clear_has_uri();
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrinterSpecifics::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    set_has_uri();
  } else {
    clear_has_uri();
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.uri)
}

// optional string uuid = 7;
inline bool PrinterSpecifics::has_uuid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PrinterSpecifics::set_has_uuid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PrinterSpecifics::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PrinterSpecifics::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uuid();
}
inline const ::std::string& PrinterSpecifics::uuid() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.uuid)
  return uuid_.GetNoArena();
}
inline void PrinterSpecifics::set_uuid(const ::std::string& value) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.uuid)
}
#if LANG_CXX11
inline void PrinterSpecifics::set_uuid(::std::string&& value) {
  set_has_uuid();
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterSpecifics.uuid)
}
#endif
inline void PrinterSpecifics::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.uuid)
}
inline void PrinterSpecifics::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.uuid)
}
inline ::std::string* PrinterSpecifics::mutable_uuid() {
  set_has_uuid();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrinterSpecifics::release_uuid() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.uuid)
  clear_has_uuid();
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrinterSpecifics::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    set_has_uuid();
  } else {
    clear_has_uuid();
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.uuid)
}

// optional bytes ppd = 8 [deprecated = true];
inline bool PrinterSpecifics::has_ppd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PrinterSpecifics::set_has_ppd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PrinterSpecifics::clear_has_ppd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PrinterSpecifics::clear_ppd() {
  ppd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ppd();
}
inline const ::std::string& PrinterSpecifics::ppd() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.ppd)
  return ppd_.GetNoArena();
}
inline void PrinterSpecifics::set_ppd(const ::std::string& value) {
  set_has_ppd();
  ppd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.ppd)
}
#if LANG_CXX11
inline void PrinterSpecifics::set_ppd(::std::string&& value) {
  set_has_ppd();
  ppd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterSpecifics.ppd)
}
#endif
inline void PrinterSpecifics::set_ppd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ppd();
  ppd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.ppd)
}
inline void PrinterSpecifics::set_ppd(const void* value, size_t size) {
  set_has_ppd();
  ppd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.ppd)
}
inline ::std::string* PrinterSpecifics::mutable_ppd() {
  set_has_ppd();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.ppd)
  return ppd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrinterSpecifics::release_ppd() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.ppd)
  clear_has_ppd();
  return ppd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrinterSpecifics::set_allocated_ppd(::std::string* ppd) {
  if (ppd != NULL) {
    set_has_ppd();
  } else {
    clear_has_ppd();
  }
  ppd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ppd);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.ppd)
}

// optional .sync_pb.PrinterPPDReference ppd_reference = 9;
inline bool PrinterSpecifics::has_ppd_reference() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PrinterSpecifics::set_has_ppd_reference() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PrinterSpecifics::clear_has_ppd_reference() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PrinterSpecifics::clear_ppd_reference() {
  if (ppd_reference_ != NULL) ppd_reference_->::sync_pb::PrinterPPDReference::Clear();
  clear_has_ppd_reference();
}
inline const ::sync_pb::PrinterPPDReference& PrinterSpecifics::ppd_reference() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.ppd_reference)
  return ppd_reference_ != NULL ? *ppd_reference_
                         : *::sync_pb::PrinterPPDReference::internal_default_instance();
}
inline ::sync_pb::PrinterPPDReference* PrinterSpecifics::mutable_ppd_reference() {
  set_has_ppd_reference();
  if (ppd_reference_ == NULL) {
    ppd_reference_ = new ::sync_pb::PrinterPPDReference;
  }
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.ppd_reference)
  return ppd_reference_;
}
inline ::sync_pb::PrinterPPDReference* PrinterSpecifics::release_ppd_reference() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.ppd_reference)
  clear_has_ppd_reference();
  ::sync_pb::PrinterPPDReference* temp = ppd_reference_;
  ppd_reference_ = NULL;
  return temp;
}
inline void PrinterSpecifics::set_allocated_ppd_reference(::sync_pb::PrinterPPDReference* ppd_reference) {
  delete ppd_reference_;
  ppd_reference_ = ppd_reference;
  if (ppd_reference) {
    set_has_ppd_reference();
  } else {
    clear_has_ppd_reference();
  }
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.ppd_reference)
}

// optional int64 updated_timestamp = 10;
inline bool PrinterSpecifics::has_updated_timestamp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PrinterSpecifics::set_has_updated_timestamp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PrinterSpecifics::clear_has_updated_timestamp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PrinterSpecifics::clear_updated_timestamp() {
  updated_timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_updated_timestamp();
}
inline ::google::protobuf::int64 PrinterSpecifics::updated_timestamp() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.updated_timestamp)
  return updated_timestamp_;
}
inline void PrinterSpecifics::set_updated_timestamp(::google::protobuf::int64 value) {
  set_has_updated_timestamp();
  updated_timestamp_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.updated_timestamp)
}

// optional string make_and_model = 11;
inline bool PrinterSpecifics::has_make_and_model() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PrinterSpecifics::set_has_make_and_model() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PrinterSpecifics::clear_has_make_and_model() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PrinterSpecifics::clear_make_and_model() {
  make_and_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_make_and_model();
}
inline const ::std::string& PrinterSpecifics::make_and_model() const {
  // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.make_and_model)
  return make_and_model_.GetNoArena();
}
inline void PrinterSpecifics::set_make_and_model(const ::std::string& value) {
  set_has_make_and_model();
  make_and_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.make_and_model)
}
#if LANG_CXX11
inline void PrinterSpecifics::set_make_and_model(::std::string&& value) {
  set_has_make_and_model();
  make_and_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.PrinterSpecifics.make_and_model)
}
#endif
inline void PrinterSpecifics::set_make_and_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_make_and_model();
  make_and_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.make_and_model)
}
inline void PrinterSpecifics::set_make_and_model(const char* value, size_t size) {
  set_has_make_and_model();
  make_and_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.make_and_model)
}
inline ::std::string* PrinterSpecifics::mutable_make_and_model() {
  set_has_make_and_model();
  // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.make_and_model)
  return make_and_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrinterSpecifics::release_make_and_model() {
  // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.make_and_model)
  clear_has_make_and_model();
  return make_and_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrinterSpecifics::set_allocated_make_and_model(::std::string* make_and_model) {
  if (make_and_model != NULL) {
    set_has_make_and_model();
  } else {
    clear_has_make_and_model();
  }
  make_and_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), make_and_model);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.make_and_model)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_printer_5fspecifics_2eproto__INCLUDED
