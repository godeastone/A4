// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: loopback_server.proto

#ifndef PROTOBUF_loopback_5fserver_2eproto__INCLUDED
#define PROTOBUF_loopback_5fserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
#include "sync.pb.h"
// @@protoc_insertion_point(includes)
namespace sync_pb {
class LoopbackServerEntity;
class LoopbackServerEntityDefaultTypeInternal;
extern LoopbackServerEntityDefaultTypeInternal _LoopbackServerEntity_default_instance_;
class LoopbackServerProto;
class LoopbackServerProtoDefaultTypeInternal;
extern LoopbackServerProtoDefaultTypeInternal _LoopbackServerProto_default_instance_;
}  // namespace sync_pb

namespace sync_pb {

namespace protobuf_loopback_5fserver_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_loopback_5fserver_2eproto

enum LoopbackServerEntity_Type {
  LoopbackServerEntity_Type_UNKNOWN = 0,
  LoopbackServerEntity_Type_BOOKMARK = 1,
  LoopbackServerEntity_Type_PERMANENT = 2,
  LoopbackServerEntity_Type_TOMBSTONE = 3,
  LoopbackServerEntity_Type_UNIQUE = 4
};
bool LoopbackServerEntity_Type_IsValid(int value);
const LoopbackServerEntity_Type LoopbackServerEntity_Type_Type_MIN = LoopbackServerEntity_Type_UNKNOWN;
const LoopbackServerEntity_Type LoopbackServerEntity_Type_Type_MAX = LoopbackServerEntity_Type_UNIQUE;
const int LoopbackServerEntity_Type_Type_ARRAYSIZE = LoopbackServerEntity_Type_Type_MAX + 1;

// ===================================================================

class LoopbackServerEntity : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.LoopbackServerEntity) */ {
 public:
  LoopbackServerEntity();
  virtual ~LoopbackServerEntity();

  LoopbackServerEntity(const LoopbackServerEntity& from);

  inline LoopbackServerEntity& operator=(const LoopbackServerEntity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const LoopbackServerEntity& default_instance();

  static inline const LoopbackServerEntity* internal_default_instance() {
    return reinterpret_cast<const LoopbackServerEntity*>(
               &_LoopbackServerEntity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(LoopbackServerEntity* other);

  // implements Message ----------------------------------------------

  inline LoopbackServerEntity* New() const PROTOBUF_FINAL { return New(NULL); }

  LoopbackServerEntity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const LoopbackServerEntity& from);
  void MergeFrom(const LoopbackServerEntity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoopbackServerEntity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LoopbackServerEntity_Type Type;
  static const Type UNKNOWN =
    LoopbackServerEntity_Type_UNKNOWN;
  static const Type BOOKMARK =
    LoopbackServerEntity_Type_BOOKMARK;
  static const Type PERMANENT =
    LoopbackServerEntity_Type_PERMANENT;
  static const Type TOMBSTONE =
    LoopbackServerEntity_Type_TOMBSTONE;
  static const Type UNIQUE =
    LoopbackServerEntity_Type_UNIQUE;
  static inline bool Type_IsValid(int value) {
    return LoopbackServerEntity_Type_IsValid(value);
  }
  static const Type Type_MIN =
    LoopbackServerEntity_Type_Type_MIN;
  static const Type Type_MAX =
    LoopbackServerEntity_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    LoopbackServerEntity_Type_Type_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional .sync_pb.SyncEntity entity = 2;
  bool has_entity() const;
  void clear_entity();
  static const int kEntityFieldNumber = 2;
  const ::sync_pb::SyncEntity& entity() const;
  ::sync_pb::SyncEntity* mutable_entity();
  ::sync_pb::SyncEntity* release_entity();
  void set_allocated_entity(::sync_pb::SyncEntity* entity);

  // optional int64 model_type = 3;
  bool has_model_type() const;
  void clear_model_type();
  static const int kModelTypeFieldNumber = 3;
  ::google::protobuf::int64 model_type() const;
  void set_model_type(::google::protobuf::int64 value);

  // optional .sync_pb.LoopbackServerEntity.Type type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::sync_pb::LoopbackServerEntity_Type type() const;
  void set_type(::sync_pb::LoopbackServerEntity_Type value);

  // @@protoc_insertion_point(class_scope:sync_pb.LoopbackServerEntity)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_entity();
  void clear_has_entity();
  void set_has_model_type();
  void clear_has_model_type();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::sync_pb::SyncEntity* entity_;
  ::google::protobuf::int64 model_type_;
  int type_;
  friend struct protobuf_loopback_5fserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoopbackServerProto : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.LoopbackServerProto) */ {
 public:
  LoopbackServerProto();
  virtual ~LoopbackServerProto();

  LoopbackServerProto(const LoopbackServerProto& from);

  inline LoopbackServerProto& operator=(const LoopbackServerProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const LoopbackServerProto& default_instance();

  static inline const LoopbackServerProto* internal_default_instance() {
    return reinterpret_cast<const LoopbackServerProto*>(
               &_LoopbackServerProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(LoopbackServerProto* other);

  // implements Message ----------------------------------------------

  inline LoopbackServerProto* New() const PROTOBUF_FINAL { return New(NULL); }

  LoopbackServerProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const LoopbackServerProto& from);
  void MergeFrom(const LoopbackServerProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoopbackServerProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sync_pb.LoopbackServerEntity entities = 3;
  int entities_size() const;
  void clear_entities();
  static const int kEntitiesFieldNumber = 3;
  const ::sync_pb::LoopbackServerEntity& entities(int index) const;
  ::sync_pb::LoopbackServerEntity* mutable_entities(int index);
  ::sync_pb::LoopbackServerEntity* add_entities();
  ::google::protobuf::RepeatedPtrField< ::sync_pb::LoopbackServerEntity >*
      mutable_entities();
  const ::google::protobuf::RepeatedPtrField< ::sync_pb::LoopbackServerEntity >&
      entities() const;

  // repeated string keystore_keys = 4;
  int keystore_keys_size() const;
  void clear_keystore_keys();
  static const int kKeystoreKeysFieldNumber = 4;
  const ::std::string& keystore_keys(int index) const;
  ::std::string* mutable_keystore_keys(int index);
  void set_keystore_keys(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_keystore_keys(int index, ::std::string&& value);
  #endif
  void set_keystore_keys(int index, const char* value);
  void set_keystore_keys(int index, const char* value, size_t size);
  ::std::string* add_keystore_keys();
  void add_keystore_keys(const ::std::string& value);
  #if LANG_CXX11
  void add_keystore_keys(::std::string&& value);
  #endif
  void add_keystore_keys(const char* value);
  void add_keystore_keys(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& keystore_keys() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_keystore_keys();

  // optional int64 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::int64 version() const;
  void set_version(::google::protobuf::int64 value);

  // optional int64 store_birthday = 2;
  bool has_store_birthday() const;
  void clear_store_birthday();
  static const int kStoreBirthdayFieldNumber = 2;
  ::google::protobuf::int64 store_birthday() const;
  void set_store_birthday(::google::protobuf::int64 value);

  // optional int64 last_version_assigned = 5;
  bool has_last_version_assigned() const;
  void clear_last_version_assigned();
  static const int kLastVersionAssignedFieldNumber = 5;
  ::google::protobuf::int64 last_version_assigned() const;
  void set_last_version_assigned(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:sync_pb.LoopbackServerProto)
 private:
  void set_has_version();
  void clear_has_version();
  void set_has_store_birthday();
  void clear_has_store_birthday();
  void set_has_last_version_assigned();
  void clear_has_last_version_assigned();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sync_pb::LoopbackServerEntity > entities_;
  ::google::protobuf::RepeatedPtrField< ::std::string> keystore_keys_;
  ::google::protobuf::int64 version_;
  ::google::protobuf::int64 store_birthday_;
  ::google::protobuf::int64 last_version_assigned_;
  friend struct protobuf_loopback_5fserver_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LoopbackServerEntity

// optional .sync_pb.LoopbackServerEntity.Type type = 1;
inline bool LoopbackServerEntity::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoopbackServerEntity::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoopbackServerEntity::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoopbackServerEntity::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::sync_pb::LoopbackServerEntity_Type LoopbackServerEntity::type() const {
  // @@protoc_insertion_point(field_get:sync_pb.LoopbackServerEntity.type)
  return static_cast< ::sync_pb::LoopbackServerEntity_Type >(type_);
}
inline void LoopbackServerEntity::set_type(::sync_pb::LoopbackServerEntity_Type value) {
  assert(::sync_pb::LoopbackServerEntity_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.LoopbackServerEntity.type)
}

// optional .sync_pb.SyncEntity entity = 2;
inline bool LoopbackServerEntity::has_entity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoopbackServerEntity::set_has_entity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoopbackServerEntity::clear_has_entity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoopbackServerEntity::clear_entity() {
  if (entity_ != NULL) entity_->::sync_pb::SyncEntity::Clear();
  clear_has_entity();
}
inline const ::sync_pb::SyncEntity& LoopbackServerEntity::entity() const {
  // @@protoc_insertion_point(field_get:sync_pb.LoopbackServerEntity.entity)
  return entity_ != NULL ? *entity_
                         : *::sync_pb::SyncEntity::internal_default_instance();
}
inline ::sync_pb::SyncEntity* LoopbackServerEntity::mutable_entity() {
  set_has_entity();
  if (entity_ == NULL) {
    entity_ = new ::sync_pb::SyncEntity;
  }
  // @@protoc_insertion_point(field_mutable:sync_pb.LoopbackServerEntity.entity)
  return entity_;
}
inline ::sync_pb::SyncEntity* LoopbackServerEntity::release_entity() {
  // @@protoc_insertion_point(field_release:sync_pb.LoopbackServerEntity.entity)
  clear_has_entity();
  ::sync_pb::SyncEntity* temp = entity_;
  entity_ = NULL;
  return temp;
}
inline void LoopbackServerEntity::set_allocated_entity(::sync_pb::SyncEntity* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    set_has_entity();
  } else {
    clear_has_entity();
  }
  // @@protoc_insertion_point(field_set_allocated:sync_pb.LoopbackServerEntity.entity)
}

// optional int64 model_type = 3;
inline bool LoopbackServerEntity::has_model_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoopbackServerEntity::set_has_model_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoopbackServerEntity::clear_has_model_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoopbackServerEntity::clear_model_type() {
  model_type_ = GOOGLE_LONGLONG(0);
  clear_has_model_type();
}
inline ::google::protobuf::int64 LoopbackServerEntity::model_type() const {
  // @@protoc_insertion_point(field_get:sync_pb.LoopbackServerEntity.model_type)
  return model_type_;
}
inline void LoopbackServerEntity::set_model_type(::google::protobuf::int64 value) {
  set_has_model_type();
  model_type_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.LoopbackServerEntity.model_type)
}

// -------------------------------------------------------------------

// LoopbackServerProto

// optional int64 version = 1;
inline bool LoopbackServerProto::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoopbackServerProto::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoopbackServerProto::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoopbackServerProto::clear_version() {
  version_ = GOOGLE_LONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::int64 LoopbackServerProto::version() const {
  // @@protoc_insertion_point(field_get:sync_pb.LoopbackServerProto.version)
  return version_;
}
inline void LoopbackServerProto::set_version(::google::protobuf::int64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.LoopbackServerProto.version)
}

// optional int64 store_birthday = 2;
inline bool LoopbackServerProto::has_store_birthday() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoopbackServerProto::set_has_store_birthday() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoopbackServerProto::clear_has_store_birthday() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoopbackServerProto::clear_store_birthday() {
  store_birthday_ = GOOGLE_LONGLONG(0);
  clear_has_store_birthday();
}
inline ::google::protobuf::int64 LoopbackServerProto::store_birthday() const {
  // @@protoc_insertion_point(field_get:sync_pb.LoopbackServerProto.store_birthday)
  return store_birthday_;
}
inline void LoopbackServerProto::set_store_birthday(::google::protobuf::int64 value) {
  set_has_store_birthday();
  store_birthday_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.LoopbackServerProto.store_birthday)
}

// repeated .sync_pb.LoopbackServerEntity entities = 3;
inline int LoopbackServerProto::entities_size() const {
  return entities_.size();
}
inline void LoopbackServerProto::clear_entities() {
  entities_.Clear();
}
inline const ::sync_pb::LoopbackServerEntity& LoopbackServerProto::entities(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.LoopbackServerProto.entities)
  return entities_.Get(index);
}
inline ::sync_pb::LoopbackServerEntity* LoopbackServerProto::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:sync_pb.LoopbackServerProto.entities)
  return entities_.Mutable(index);
}
inline ::sync_pb::LoopbackServerEntity* LoopbackServerProto::add_entities() {
  // @@protoc_insertion_point(field_add:sync_pb.LoopbackServerProto.entities)
  return entities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::sync_pb::LoopbackServerEntity >*
LoopbackServerProto::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.LoopbackServerProto.entities)
  return &entities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::sync_pb::LoopbackServerEntity >&
LoopbackServerProto::entities() const {
  // @@protoc_insertion_point(field_list:sync_pb.LoopbackServerProto.entities)
  return entities_;
}

// repeated string keystore_keys = 4;
inline int LoopbackServerProto::keystore_keys_size() const {
  return keystore_keys_.size();
}
inline void LoopbackServerProto::clear_keystore_keys() {
  keystore_keys_.Clear();
}
inline const ::std::string& LoopbackServerProto::keystore_keys(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.LoopbackServerProto.keystore_keys)
  return keystore_keys_.Get(index);
}
inline ::std::string* LoopbackServerProto::mutable_keystore_keys(int index) {
  // @@protoc_insertion_point(field_mutable:sync_pb.LoopbackServerProto.keystore_keys)
  return keystore_keys_.Mutable(index);
}
inline void LoopbackServerProto::set_keystore_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:sync_pb.LoopbackServerProto.keystore_keys)
  keystore_keys_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void LoopbackServerProto::set_keystore_keys(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:sync_pb.LoopbackServerProto.keystore_keys)
  keystore_keys_.Mutable(index)->assign(std::move(value));
}
#endif
inline void LoopbackServerProto::set_keystore_keys(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  keystore_keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:sync_pb.LoopbackServerProto.keystore_keys)
}
inline void LoopbackServerProto::set_keystore_keys(int index, const char* value, size_t size) {
  keystore_keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:sync_pb.LoopbackServerProto.keystore_keys)
}
inline ::std::string* LoopbackServerProto::add_keystore_keys() {
  // @@protoc_insertion_point(field_add_mutable:sync_pb.LoopbackServerProto.keystore_keys)
  return keystore_keys_.Add();
}
inline void LoopbackServerProto::add_keystore_keys(const ::std::string& value) {
  keystore_keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:sync_pb.LoopbackServerProto.keystore_keys)
}
#if LANG_CXX11
inline void LoopbackServerProto::add_keystore_keys(::std::string&& value) {
  keystore_keys_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:sync_pb.LoopbackServerProto.keystore_keys)
}
#endif
inline void LoopbackServerProto::add_keystore_keys(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  keystore_keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:sync_pb.LoopbackServerProto.keystore_keys)
}
inline void LoopbackServerProto::add_keystore_keys(const char* value, size_t size) {
  keystore_keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:sync_pb.LoopbackServerProto.keystore_keys)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
LoopbackServerProto::keystore_keys() const {
  // @@protoc_insertion_point(field_list:sync_pb.LoopbackServerProto.keystore_keys)
  return keystore_keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
LoopbackServerProto::mutable_keystore_keys() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.LoopbackServerProto.keystore_keys)
  return &keystore_keys_;
}

// optional int64 last_version_assigned = 5;
inline bool LoopbackServerProto::has_last_version_assigned() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoopbackServerProto::set_has_last_version_assigned() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoopbackServerProto::clear_has_last_version_assigned() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoopbackServerProto::clear_last_version_assigned() {
  last_version_assigned_ = GOOGLE_LONGLONG(0);
  clear_has_last_version_assigned();
}
inline ::google::protobuf::int64 LoopbackServerProto::last_version_assigned() const {
  // @@protoc_insertion_point(field_get:sync_pb.LoopbackServerProto.last_version_assigned)
  return last_version_assigned_;
}
inline void LoopbackServerProto::set_last_version_assigned(::google::protobuf::int64 value) {
  set_has_last_version_assigned();
  last_version_assigned_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.LoopbackServerProto.last_version_assigned)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace sync_pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::sync_pb::LoopbackServerEntity_Type> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_loopback_5fserver_2eproto__INCLUDED
