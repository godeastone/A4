// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bookmark_specifics.proto

#ifndef PROTOBUF_bookmark_5fspecifics_2eproto__INCLUDED
#define PROTOBUF_bookmark_5fspecifics_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
namespace sync_pb {
class BookmarkSpecifics;
class BookmarkSpecificsDefaultTypeInternal;
extern BookmarkSpecificsDefaultTypeInternal _BookmarkSpecifics_default_instance_;
class MetaInfo;
class MetaInfoDefaultTypeInternal;
extern MetaInfoDefaultTypeInternal _MetaInfo_default_instance_;
}  // namespace sync_pb

namespace sync_pb {

namespace protobuf_bookmark_5fspecifics_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_bookmark_5fspecifics_2eproto

// ===================================================================

class MetaInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.MetaInfo) */ {
 public:
  MetaInfo();
  virtual ~MetaInfo();

  MetaInfo(const MetaInfo& from);

  inline MetaInfo& operator=(const MetaInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MetaInfo& default_instance();

  static inline const MetaInfo* internal_default_instance() {
    return reinterpret_cast<const MetaInfo*>(
               &_MetaInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(MetaInfo* other);

  // implements Message ----------------------------------------------

  inline MetaInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MetaInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const MetaInfo& from);
  void MergeFrom(const MetaInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetaInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:sync_pb.MetaInfo)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct protobuf_bookmark_5fspecifics_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BookmarkSpecifics : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.BookmarkSpecifics) */ {
 public:
  BookmarkSpecifics();
  virtual ~BookmarkSpecifics();

  BookmarkSpecifics(const BookmarkSpecifics& from);

  inline BookmarkSpecifics& operator=(const BookmarkSpecifics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const BookmarkSpecifics& default_instance();

  static inline const BookmarkSpecifics* internal_default_instance() {
    return reinterpret_cast<const BookmarkSpecifics*>(
               &_BookmarkSpecifics_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(BookmarkSpecifics* other);

  // implements Message ----------------------------------------------

  inline BookmarkSpecifics* New() const PROTOBUF_FINAL { return New(NULL); }

  BookmarkSpecifics* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const BookmarkSpecifics& from);
  void MergeFrom(const BookmarkSpecifics& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BookmarkSpecifics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sync_pb.MetaInfo meta_info = 6;
  int meta_info_size() const;
  void clear_meta_info();
  static const int kMetaInfoFieldNumber = 6;
  const ::sync_pb::MetaInfo& meta_info(int index) const;
  ::sync_pb::MetaInfo* mutable_meta_info(int index);
  ::sync_pb::MetaInfo* add_meta_info();
  ::google::protobuf::RepeatedPtrField< ::sync_pb::MetaInfo >*
      mutable_meta_info();
  const ::google::protobuf::RepeatedPtrField< ::sync_pb::MetaInfo >&
      meta_info() const;

  // optional string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional bytes favicon = 2;
  bool has_favicon() const;
  void clear_favicon();
  static const int kFaviconFieldNumber = 2;
  const ::std::string& favicon() const;
  void set_favicon(const ::std::string& value);
  #if LANG_CXX11
  void set_favicon(::std::string&& value);
  #endif
  void set_favicon(const char* value);
  void set_favicon(const void* value, size_t size);
  ::std::string* mutable_favicon();
  ::std::string* release_favicon();
  void set_allocated_favicon(::std::string* favicon);

  // optional string title = 3;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 3;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string icon_url = 5;
  bool has_icon_url() const;
  void clear_icon_url();
  static const int kIconUrlFieldNumber = 5;
  const ::std::string& icon_url() const;
  void set_icon_url(const ::std::string& value);
  #if LANG_CXX11
  void set_icon_url(::std::string&& value);
  #endif
  void set_icon_url(const char* value);
  void set_icon_url(const char* value, size_t size);
  ::std::string* mutable_icon_url();
  ::std::string* release_icon_url();
  void set_allocated_icon_url(::std::string* icon_url);

  // optional int64 creation_time_us = 4;
  bool has_creation_time_us() const;
  void clear_creation_time_us();
  static const int kCreationTimeUsFieldNumber = 4;
  ::google::protobuf::int64 creation_time_us() const;
  void set_creation_time_us(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:sync_pb.BookmarkSpecifics)
 private:
  void set_has_url();
  void clear_has_url();
  void set_has_favicon();
  void clear_has_favicon();
  void set_has_title();
  void clear_has_title();
  void set_has_creation_time_us();
  void clear_has_creation_time_us();
  void set_has_icon_url();
  void clear_has_icon_url();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sync_pb::MetaInfo > meta_info_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr favicon_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr icon_url_;
  ::google::protobuf::int64 creation_time_us_;
  friend struct protobuf_bookmark_5fspecifics_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MetaInfo

// optional string key = 1;
inline bool MetaInfo::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetaInfo::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetaInfo::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetaInfo::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& MetaInfo::key() const {
  // @@protoc_insertion_point(field_get:sync_pb.MetaInfo.key)
  return key_.GetNoArena();
}
inline void MetaInfo::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.MetaInfo.key)
}
#if LANG_CXX11
inline void MetaInfo::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.MetaInfo.key)
}
#endif
inline void MetaInfo::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.MetaInfo.key)
}
inline void MetaInfo::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.MetaInfo.key)
}
inline ::std::string* MetaInfo::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:sync_pb.MetaInfo.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetaInfo::release_key() {
  // @@protoc_insertion_point(field_release:sync_pb.MetaInfo.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetaInfo::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.MetaInfo.key)
}

// optional string value = 2;
inline bool MetaInfo::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MetaInfo::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MetaInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MetaInfo::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& MetaInfo::value() const {
  // @@protoc_insertion_point(field_get:sync_pb.MetaInfo.value)
  return value_.GetNoArena();
}
inline void MetaInfo::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.MetaInfo.value)
}
#if LANG_CXX11
inline void MetaInfo::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.MetaInfo.value)
}
#endif
inline void MetaInfo::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.MetaInfo.value)
}
inline void MetaInfo::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.MetaInfo.value)
}
inline ::std::string* MetaInfo::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:sync_pb.MetaInfo.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetaInfo::release_value() {
  // @@protoc_insertion_point(field_release:sync_pb.MetaInfo.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetaInfo::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.MetaInfo.value)
}

// -------------------------------------------------------------------

// BookmarkSpecifics

// optional string url = 1;
inline bool BookmarkSpecifics::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BookmarkSpecifics::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BookmarkSpecifics::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BookmarkSpecifics::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& BookmarkSpecifics::url() const {
  // @@protoc_insertion_point(field_get:sync_pb.BookmarkSpecifics.url)
  return url_.GetNoArena();
}
inline void BookmarkSpecifics::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.BookmarkSpecifics.url)
}
#if LANG_CXX11
inline void BookmarkSpecifics::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.BookmarkSpecifics.url)
}
#endif
inline void BookmarkSpecifics::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.BookmarkSpecifics.url)
}
inline void BookmarkSpecifics::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.BookmarkSpecifics.url)
}
inline ::std::string* BookmarkSpecifics::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:sync_pb.BookmarkSpecifics.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BookmarkSpecifics::release_url() {
  // @@protoc_insertion_point(field_release:sync_pb.BookmarkSpecifics.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BookmarkSpecifics::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.BookmarkSpecifics.url)
}

// optional bytes favicon = 2;
inline bool BookmarkSpecifics::has_favicon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BookmarkSpecifics::set_has_favicon() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BookmarkSpecifics::clear_has_favicon() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BookmarkSpecifics::clear_favicon() {
  favicon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_favicon();
}
inline const ::std::string& BookmarkSpecifics::favicon() const {
  // @@protoc_insertion_point(field_get:sync_pb.BookmarkSpecifics.favicon)
  return favicon_.GetNoArena();
}
inline void BookmarkSpecifics::set_favicon(const ::std::string& value) {
  set_has_favicon();
  favicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.BookmarkSpecifics.favicon)
}
#if LANG_CXX11
inline void BookmarkSpecifics::set_favicon(::std::string&& value) {
  set_has_favicon();
  favicon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.BookmarkSpecifics.favicon)
}
#endif
inline void BookmarkSpecifics::set_favicon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_favicon();
  favicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.BookmarkSpecifics.favicon)
}
inline void BookmarkSpecifics::set_favicon(const void* value, size_t size) {
  set_has_favicon();
  favicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.BookmarkSpecifics.favicon)
}
inline ::std::string* BookmarkSpecifics::mutable_favicon() {
  set_has_favicon();
  // @@protoc_insertion_point(field_mutable:sync_pb.BookmarkSpecifics.favicon)
  return favicon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BookmarkSpecifics::release_favicon() {
  // @@protoc_insertion_point(field_release:sync_pb.BookmarkSpecifics.favicon)
  clear_has_favicon();
  return favicon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BookmarkSpecifics::set_allocated_favicon(::std::string* favicon) {
  if (favicon != NULL) {
    set_has_favicon();
  } else {
    clear_has_favicon();
  }
  favicon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), favicon);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.BookmarkSpecifics.favicon)
}

// optional string title = 3;
inline bool BookmarkSpecifics::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BookmarkSpecifics::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BookmarkSpecifics::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BookmarkSpecifics::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& BookmarkSpecifics::title() const {
  // @@protoc_insertion_point(field_get:sync_pb.BookmarkSpecifics.title)
  return title_.GetNoArena();
}
inline void BookmarkSpecifics::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.BookmarkSpecifics.title)
}
#if LANG_CXX11
inline void BookmarkSpecifics::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.BookmarkSpecifics.title)
}
#endif
inline void BookmarkSpecifics::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.BookmarkSpecifics.title)
}
inline void BookmarkSpecifics::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.BookmarkSpecifics.title)
}
inline ::std::string* BookmarkSpecifics::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:sync_pb.BookmarkSpecifics.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BookmarkSpecifics::release_title() {
  // @@protoc_insertion_point(field_release:sync_pb.BookmarkSpecifics.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BookmarkSpecifics::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.BookmarkSpecifics.title)
}

// optional int64 creation_time_us = 4;
inline bool BookmarkSpecifics::has_creation_time_us() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BookmarkSpecifics::set_has_creation_time_us() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BookmarkSpecifics::clear_has_creation_time_us() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BookmarkSpecifics::clear_creation_time_us() {
  creation_time_us_ = GOOGLE_LONGLONG(0);
  clear_has_creation_time_us();
}
inline ::google::protobuf::int64 BookmarkSpecifics::creation_time_us() const {
  // @@protoc_insertion_point(field_get:sync_pb.BookmarkSpecifics.creation_time_us)
  return creation_time_us_;
}
inline void BookmarkSpecifics::set_creation_time_us(::google::protobuf::int64 value) {
  set_has_creation_time_us();
  creation_time_us_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.BookmarkSpecifics.creation_time_us)
}

// optional string icon_url = 5;
inline bool BookmarkSpecifics::has_icon_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BookmarkSpecifics::set_has_icon_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BookmarkSpecifics::clear_has_icon_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BookmarkSpecifics::clear_icon_url() {
  icon_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_icon_url();
}
inline const ::std::string& BookmarkSpecifics::icon_url() const {
  // @@protoc_insertion_point(field_get:sync_pb.BookmarkSpecifics.icon_url)
  return icon_url_.GetNoArena();
}
inline void BookmarkSpecifics::set_icon_url(const ::std::string& value) {
  set_has_icon_url();
  icon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.BookmarkSpecifics.icon_url)
}
#if LANG_CXX11
inline void BookmarkSpecifics::set_icon_url(::std::string&& value) {
  set_has_icon_url();
  icon_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.BookmarkSpecifics.icon_url)
}
#endif
inline void BookmarkSpecifics::set_icon_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_icon_url();
  icon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.BookmarkSpecifics.icon_url)
}
inline void BookmarkSpecifics::set_icon_url(const char* value, size_t size) {
  set_has_icon_url();
  icon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.BookmarkSpecifics.icon_url)
}
inline ::std::string* BookmarkSpecifics::mutable_icon_url() {
  set_has_icon_url();
  // @@protoc_insertion_point(field_mutable:sync_pb.BookmarkSpecifics.icon_url)
  return icon_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BookmarkSpecifics::release_icon_url() {
  // @@protoc_insertion_point(field_release:sync_pb.BookmarkSpecifics.icon_url)
  clear_has_icon_url();
  return icon_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BookmarkSpecifics::set_allocated_icon_url(::std::string* icon_url) {
  if (icon_url != NULL) {
    set_has_icon_url();
  } else {
    clear_has_icon_url();
  }
  icon_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon_url);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.BookmarkSpecifics.icon_url)
}

// repeated .sync_pb.MetaInfo meta_info = 6;
inline int BookmarkSpecifics::meta_info_size() const {
  return meta_info_.size();
}
inline void BookmarkSpecifics::clear_meta_info() {
  meta_info_.Clear();
}
inline const ::sync_pb::MetaInfo& BookmarkSpecifics::meta_info(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.BookmarkSpecifics.meta_info)
  return meta_info_.Get(index);
}
inline ::sync_pb::MetaInfo* BookmarkSpecifics::mutable_meta_info(int index) {
  // @@protoc_insertion_point(field_mutable:sync_pb.BookmarkSpecifics.meta_info)
  return meta_info_.Mutable(index);
}
inline ::sync_pb::MetaInfo* BookmarkSpecifics::add_meta_info() {
  // @@protoc_insertion_point(field_add:sync_pb.BookmarkSpecifics.meta_info)
  return meta_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::sync_pb::MetaInfo >*
BookmarkSpecifics::mutable_meta_info() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.BookmarkSpecifics.meta_info)
  return &meta_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::sync_pb::MetaInfo >&
BookmarkSpecifics::meta_info() const {
  // @@protoc_insertion_point(field_list:sync_pb.BookmarkSpecifics.meta_info)
  return meta_info_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bookmark_5fspecifics_2eproto__INCLUDED
