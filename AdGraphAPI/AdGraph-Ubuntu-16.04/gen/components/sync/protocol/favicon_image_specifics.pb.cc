// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: favicon_image_specifics.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "favicon_image_specifics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {
class FaviconDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FaviconData> {
} _FaviconData_default_instance_;
class FaviconImageSpecificsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FaviconImageSpecifics> {
} _FaviconImageSpecifics_default_instance_;

namespace protobuf_favicon_5fimage_5fspecifics_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _FaviconData_default_instance_.Shutdown();
  _FaviconImageSpecifics_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _FaviconData_default_instance_.DefaultConstruct();
  _FaviconImageSpecifics_default_instance_.DefaultConstruct();
  _FaviconImageSpecifics_default_instance_.get_mutable()->favicon_web_ = const_cast< ::sync_pb::FaviconData*>(
      ::sync_pb::FaviconData::internal_default_instance());
  _FaviconImageSpecifics_default_instance_.get_mutable()->favicon_web_32_ = const_cast< ::sync_pb::FaviconData*>(
      ::sync_pb::FaviconData::internal_default_instance());
  _FaviconImageSpecifics_default_instance_.get_mutable()->favicon_touch_64_ = const_cast< ::sync_pb::FaviconData*>(
      ::sync_pb::FaviconData::internal_default_instance());
  _FaviconImageSpecifics_default_instance_.get_mutable()->favicon_touch_precomposed_64_ = const_cast< ::sync_pb::FaviconData*>(
      ::sync_pb::FaviconData::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_favicon_5fimage_5fspecifics_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaviconData::kFaviconFieldNumber;
const int FaviconData::kWidthFieldNumber;
const int FaviconData::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaviconData::FaviconData()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_favicon_5fimage_5fspecifics_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.FaviconData)
}
FaviconData::FaviconData(const FaviconData& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  favicon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_favicon()) {
    favicon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.favicon_);
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&width_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:sync_pb.FaviconData)
}

void FaviconData::SharedCtor() {
  _cached_size_ = 0;
  favicon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
}

FaviconData::~FaviconData() {
  // @@protoc_insertion_point(destructor:sync_pb.FaviconData)
  SharedDtor();
}

void FaviconData::SharedDtor() {
  favicon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FaviconData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const FaviconData& FaviconData::default_instance() {
  protobuf_favicon_5fimage_5fspecifics_2eproto::InitDefaults();
  return *internal_default_instance();
}

FaviconData* FaviconData::New(::google::protobuf::Arena* arena) const {
  FaviconData* n = new FaviconData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FaviconData::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.FaviconData)
  if (has_favicon()) {
    GOOGLE_DCHECK(!favicon_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*favicon_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&width_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&height_) -
        reinterpret_cast<char*>(&width_)) + sizeof(height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FaviconData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.FaviconData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes favicon = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_favicon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.FaviconData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.FaviconData)
  return false;
#undef DO_
}

void FaviconData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.FaviconData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes favicon = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->favicon(), output);
  }

  // optional int32 width = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->width(), output);
  }

  // optional int32 height = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->height(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.FaviconData)
}

size_t FaviconData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.FaviconData)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes favicon = 1;
    if (has_favicon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->favicon());
    }

    // optional int32 width = 2;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->width());
    }

    // optional int32 height = 3;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FaviconData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const FaviconData*>(&from));
}

void FaviconData::MergeFrom(const FaviconData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.FaviconData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_favicon();
      favicon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.favicon_);
    }
    if (cached_has_bits & 0x00000002u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000004u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FaviconData::CopyFrom(const FaviconData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.FaviconData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaviconData::IsInitialized() const {
  return true;
}

void FaviconData::Swap(FaviconData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FaviconData::InternalSwap(FaviconData* other) {
  favicon_.Swap(&other->favicon_);
  std::swap(width_, other->width_);
  std::swap(height_, other->height_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string FaviconData::GetTypeName() const {
  return "sync_pb.FaviconData";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FaviconData

// optional bytes favicon = 1;
bool FaviconData::has_favicon() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FaviconData::set_has_favicon() {
  _has_bits_[0] |= 0x00000001u;
}
void FaviconData::clear_has_favicon() {
  _has_bits_[0] &= ~0x00000001u;
}
void FaviconData::clear_favicon() {
  favicon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_favicon();
}
const ::std::string& FaviconData::favicon() const {
  // @@protoc_insertion_point(field_get:sync_pb.FaviconData.favicon)
  return favicon_.GetNoArena();
}
void FaviconData::set_favicon(const ::std::string& value) {
  set_has_favicon();
  favicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.FaviconData.favicon)
}
#if LANG_CXX11
void FaviconData::set_favicon(::std::string&& value) {
  set_has_favicon();
  favicon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.FaviconData.favicon)
}
#endif
void FaviconData::set_favicon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_favicon();
  favicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.FaviconData.favicon)
}
void FaviconData::set_favicon(const void* value, size_t size) {
  set_has_favicon();
  favicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.FaviconData.favicon)
}
::std::string* FaviconData::mutable_favicon() {
  set_has_favicon();
  // @@protoc_insertion_point(field_mutable:sync_pb.FaviconData.favicon)
  return favicon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FaviconData::release_favicon() {
  // @@protoc_insertion_point(field_release:sync_pb.FaviconData.favicon)
  clear_has_favicon();
  return favicon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FaviconData::set_allocated_favicon(::std::string* favicon) {
  if (favicon != NULL) {
    set_has_favicon();
  } else {
    clear_has_favicon();
  }
  favicon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), favicon);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.FaviconData.favicon)
}

// optional int32 width = 2;
bool FaviconData::has_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FaviconData::set_has_width() {
  _has_bits_[0] |= 0x00000002u;
}
void FaviconData::clear_has_width() {
  _has_bits_[0] &= ~0x00000002u;
}
void FaviconData::clear_width() {
  width_ = 0;
  clear_has_width();
}
::google::protobuf::int32 FaviconData::width() const {
  // @@protoc_insertion_point(field_get:sync_pb.FaviconData.width)
  return width_;
}
void FaviconData::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.FaviconData.width)
}

// optional int32 height = 3;
bool FaviconData::has_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FaviconData::set_has_height() {
  _has_bits_[0] |= 0x00000004u;
}
void FaviconData::clear_has_height() {
  _has_bits_[0] &= ~0x00000004u;
}
void FaviconData::clear_height() {
  height_ = 0;
  clear_has_height();
}
::google::protobuf::int32 FaviconData::height() const {
  // @@protoc_insertion_point(field_get:sync_pb.FaviconData.height)
  return height_;
}
void FaviconData::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.FaviconData.height)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaviconImageSpecifics::kFaviconUrlFieldNumber;
const int FaviconImageSpecifics::kFaviconWebFieldNumber;
const int FaviconImageSpecifics::kFaviconWeb32FieldNumber;
const int FaviconImageSpecifics::kFaviconTouch64FieldNumber;
const int FaviconImageSpecifics::kFaviconTouchPrecomposed64FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaviconImageSpecifics::FaviconImageSpecifics()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_favicon_5fimage_5fspecifics_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.FaviconImageSpecifics)
}
FaviconImageSpecifics::FaviconImageSpecifics(const FaviconImageSpecifics& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  favicon_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_favicon_url()) {
    favicon_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.favicon_url_);
  }
  if (from.has_favicon_web()) {
    favicon_web_ = new ::sync_pb::FaviconData(*from.favicon_web_);
  } else {
    favicon_web_ = NULL;
  }
  if (from.has_favicon_web_32()) {
    favicon_web_32_ = new ::sync_pb::FaviconData(*from.favicon_web_32_);
  } else {
    favicon_web_32_ = NULL;
  }
  if (from.has_favicon_touch_64()) {
    favicon_touch_64_ = new ::sync_pb::FaviconData(*from.favicon_touch_64_);
  } else {
    favicon_touch_64_ = NULL;
  }
  if (from.has_favicon_touch_precomposed_64()) {
    favicon_touch_precomposed_64_ = new ::sync_pb::FaviconData(*from.favicon_touch_precomposed_64_);
  } else {
    favicon_touch_precomposed_64_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sync_pb.FaviconImageSpecifics)
}

void FaviconImageSpecifics::SharedCtor() {
  _cached_size_ = 0;
  favicon_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&favicon_web_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&favicon_touch_precomposed_64_) -
      reinterpret_cast<char*>(&favicon_web_)) + sizeof(favicon_touch_precomposed_64_));
}

FaviconImageSpecifics::~FaviconImageSpecifics() {
  // @@protoc_insertion_point(destructor:sync_pb.FaviconImageSpecifics)
  SharedDtor();
}

void FaviconImageSpecifics::SharedDtor() {
  favicon_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete favicon_web_;
  }
  if (this != internal_default_instance()) {
    delete favicon_web_32_;
  }
  if (this != internal_default_instance()) {
    delete favicon_touch_64_;
  }
  if (this != internal_default_instance()) {
    delete favicon_touch_precomposed_64_;
  }
}

void FaviconImageSpecifics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const FaviconImageSpecifics& FaviconImageSpecifics::default_instance() {
  protobuf_favicon_5fimage_5fspecifics_2eproto::InitDefaults();
  return *internal_default_instance();
}

FaviconImageSpecifics* FaviconImageSpecifics::New(::google::protobuf::Arena* arena) const {
  FaviconImageSpecifics* n = new FaviconImageSpecifics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FaviconImageSpecifics::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.FaviconImageSpecifics)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_favicon_url()) {
      GOOGLE_DCHECK(!favicon_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*favicon_url_.UnsafeRawStringPointer())->clear();
    }
    if (has_favicon_web()) {
      GOOGLE_DCHECK(favicon_web_ != NULL);
      favicon_web_->::sync_pb::FaviconData::Clear();
    }
    if (has_favicon_web_32()) {
      GOOGLE_DCHECK(favicon_web_32_ != NULL);
      favicon_web_32_->::sync_pb::FaviconData::Clear();
    }
    if (has_favicon_touch_64()) {
      GOOGLE_DCHECK(favicon_touch_64_ != NULL);
      favicon_touch_64_->::sync_pb::FaviconData::Clear();
    }
    if (has_favicon_touch_precomposed_64()) {
      GOOGLE_DCHECK(favicon_touch_precomposed_64_ != NULL);
      favicon_touch_precomposed_64_->::sync_pb::FaviconData::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FaviconImageSpecifics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.FaviconImageSpecifics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string favicon_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_favicon_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sync_pb.FaviconData favicon_web = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_favicon_web()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sync_pb.FaviconData favicon_web_32 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_favicon_web_32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sync_pb.FaviconData favicon_touch_64 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_favicon_touch_64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_favicon_touch_precomposed_64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.FaviconImageSpecifics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.FaviconImageSpecifics)
  return false;
#undef DO_
}

void FaviconImageSpecifics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.FaviconImageSpecifics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string favicon_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->favicon_url(), output);
  }

  // optional .sync_pb.FaviconData favicon_web = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->favicon_web_, output);
  }

  // optional .sync_pb.FaviconData favicon_web_32 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, *this->favicon_web_32_, output);
  }

  // optional .sync_pb.FaviconData favicon_touch_64 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, *this->favicon_touch_64_, output);
  }

  // optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, *this->favicon_touch_precomposed_64_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.FaviconImageSpecifics)
}

size_t FaviconImageSpecifics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.FaviconImageSpecifics)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 31u) {
    // optional string favicon_url = 1;
    if (has_favicon_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->favicon_url());
    }

    // optional .sync_pb.FaviconData favicon_web = 2;
    if (has_favicon_web()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->favicon_web_);
    }

    // optional .sync_pb.FaviconData favicon_web_32 = 3;
    if (has_favicon_web_32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->favicon_web_32_);
    }

    // optional .sync_pb.FaviconData favicon_touch_64 = 4;
    if (has_favicon_touch_64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->favicon_touch_64_);
    }

    // optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;
    if (has_favicon_touch_precomposed_64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->favicon_touch_precomposed_64_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FaviconImageSpecifics::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const FaviconImageSpecifics*>(&from));
}

void FaviconImageSpecifics::MergeFrom(const FaviconImageSpecifics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.FaviconImageSpecifics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_favicon_url();
      favicon_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.favicon_url_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_favicon_web()->::sync_pb::FaviconData::MergeFrom(from.favicon_web());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_favicon_web_32()->::sync_pb::FaviconData::MergeFrom(from.favicon_web_32());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_favicon_touch_64()->::sync_pb::FaviconData::MergeFrom(from.favicon_touch_64());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_favicon_touch_precomposed_64()->::sync_pb::FaviconData::MergeFrom(from.favicon_touch_precomposed_64());
    }
  }
}

void FaviconImageSpecifics::CopyFrom(const FaviconImageSpecifics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.FaviconImageSpecifics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaviconImageSpecifics::IsInitialized() const {
  return true;
}

void FaviconImageSpecifics::Swap(FaviconImageSpecifics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FaviconImageSpecifics::InternalSwap(FaviconImageSpecifics* other) {
  favicon_url_.Swap(&other->favicon_url_);
  std::swap(favicon_web_, other->favicon_web_);
  std::swap(favicon_web_32_, other->favicon_web_32_);
  std::swap(favicon_touch_64_, other->favicon_touch_64_);
  std::swap(favicon_touch_precomposed_64_, other->favicon_touch_precomposed_64_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string FaviconImageSpecifics::GetTypeName() const {
  return "sync_pb.FaviconImageSpecifics";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FaviconImageSpecifics

// optional string favicon_url = 1;
bool FaviconImageSpecifics::has_favicon_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FaviconImageSpecifics::set_has_favicon_url() {
  _has_bits_[0] |= 0x00000001u;
}
void FaviconImageSpecifics::clear_has_favicon_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void FaviconImageSpecifics::clear_favicon_url() {
  favicon_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_favicon_url();
}
const ::std::string& FaviconImageSpecifics::favicon_url() const {
  // @@protoc_insertion_point(field_get:sync_pb.FaviconImageSpecifics.favicon_url)
  return favicon_url_.GetNoArena();
}
void FaviconImageSpecifics::set_favicon_url(const ::std::string& value) {
  set_has_favicon_url();
  favicon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.FaviconImageSpecifics.favicon_url)
}
#if LANG_CXX11
void FaviconImageSpecifics::set_favicon_url(::std::string&& value) {
  set_has_favicon_url();
  favicon_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.FaviconImageSpecifics.favicon_url)
}
#endif
void FaviconImageSpecifics::set_favicon_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_favicon_url();
  favicon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.FaviconImageSpecifics.favicon_url)
}
void FaviconImageSpecifics::set_favicon_url(const char* value, size_t size) {
  set_has_favicon_url();
  favicon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.FaviconImageSpecifics.favicon_url)
}
::std::string* FaviconImageSpecifics::mutable_favicon_url() {
  set_has_favicon_url();
  // @@protoc_insertion_point(field_mutable:sync_pb.FaviconImageSpecifics.favicon_url)
  return favicon_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FaviconImageSpecifics::release_favicon_url() {
  // @@protoc_insertion_point(field_release:sync_pb.FaviconImageSpecifics.favicon_url)
  clear_has_favicon_url();
  return favicon_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FaviconImageSpecifics::set_allocated_favicon_url(::std::string* favicon_url) {
  if (favicon_url != NULL) {
    set_has_favicon_url();
  } else {
    clear_has_favicon_url();
  }
  favicon_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), favicon_url);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.FaviconImageSpecifics.favicon_url)
}

// optional .sync_pb.FaviconData favicon_web = 2;
bool FaviconImageSpecifics::has_favicon_web() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FaviconImageSpecifics::set_has_favicon_web() {
  _has_bits_[0] |= 0x00000002u;
}
void FaviconImageSpecifics::clear_has_favicon_web() {
  _has_bits_[0] &= ~0x00000002u;
}
void FaviconImageSpecifics::clear_favicon_web() {
  if (favicon_web_ != NULL) favicon_web_->::sync_pb::FaviconData::Clear();
  clear_has_favicon_web();
}
const ::sync_pb::FaviconData& FaviconImageSpecifics::favicon_web() const {
  // @@protoc_insertion_point(field_get:sync_pb.FaviconImageSpecifics.favicon_web)
  return favicon_web_ != NULL ? *favicon_web_
                         : *::sync_pb::FaviconData::internal_default_instance();
}
::sync_pb::FaviconData* FaviconImageSpecifics::mutable_favicon_web() {
  set_has_favicon_web();
  if (favicon_web_ == NULL) {
    favicon_web_ = new ::sync_pb::FaviconData;
  }
  // @@protoc_insertion_point(field_mutable:sync_pb.FaviconImageSpecifics.favicon_web)
  return favicon_web_;
}
::sync_pb::FaviconData* FaviconImageSpecifics::release_favicon_web() {
  // @@protoc_insertion_point(field_release:sync_pb.FaviconImageSpecifics.favicon_web)
  clear_has_favicon_web();
  ::sync_pb::FaviconData* temp = favicon_web_;
  favicon_web_ = NULL;
  return temp;
}
void FaviconImageSpecifics::set_allocated_favicon_web(::sync_pb::FaviconData* favicon_web) {
  delete favicon_web_;
  favicon_web_ = favicon_web;
  if (favicon_web) {
    set_has_favicon_web();
  } else {
    clear_has_favicon_web();
  }
  // @@protoc_insertion_point(field_set_allocated:sync_pb.FaviconImageSpecifics.favicon_web)
}

// optional .sync_pb.FaviconData favicon_web_32 = 3;
bool FaviconImageSpecifics::has_favicon_web_32() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FaviconImageSpecifics::set_has_favicon_web_32() {
  _has_bits_[0] |= 0x00000004u;
}
void FaviconImageSpecifics::clear_has_favicon_web_32() {
  _has_bits_[0] &= ~0x00000004u;
}
void FaviconImageSpecifics::clear_favicon_web_32() {
  if (favicon_web_32_ != NULL) favicon_web_32_->::sync_pb::FaviconData::Clear();
  clear_has_favicon_web_32();
}
const ::sync_pb::FaviconData& FaviconImageSpecifics::favicon_web_32() const {
  // @@protoc_insertion_point(field_get:sync_pb.FaviconImageSpecifics.favicon_web_32)
  return favicon_web_32_ != NULL ? *favicon_web_32_
                         : *::sync_pb::FaviconData::internal_default_instance();
}
::sync_pb::FaviconData* FaviconImageSpecifics::mutable_favicon_web_32() {
  set_has_favicon_web_32();
  if (favicon_web_32_ == NULL) {
    favicon_web_32_ = new ::sync_pb::FaviconData;
  }
  // @@protoc_insertion_point(field_mutable:sync_pb.FaviconImageSpecifics.favicon_web_32)
  return favicon_web_32_;
}
::sync_pb::FaviconData* FaviconImageSpecifics::release_favicon_web_32() {
  // @@protoc_insertion_point(field_release:sync_pb.FaviconImageSpecifics.favicon_web_32)
  clear_has_favicon_web_32();
  ::sync_pb::FaviconData* temp = favicon_web_32_;
  favicon_web_32_ = NULL;
  return temp;
}
void FaviconImageSpecifics::set_allocated_favicon_web_32(::sync_pb::FaviconData* favicon_web_32) {
  delete favicon_web_32_;
  favicon_web_32_ = favicon_web_32;
  if (favicon_web_32) {
    set_has_favicon_web_32();
  } else {
    clear_has_favicon_web_32();
  }
  // @@protoc_insertion_point(field_set_allocated:sync_pb.FaviconImageSpecifics.favicon_web_32)
}

// optional .sync_pb.FaviconData favicon_touch_64 = 4;
bool FaviconImageSpecifics::has_favicon_touch_64() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FaviconImageSpecifics::set_has_favicon_touch_64() {
  _has_bits_[0] |= 0x00000008u;
}
void FaviconImageSpecifics::clear_has_favicon_touch_64() {
  _has_bits_[0] &= ~0x00000008u;
}
void FaviconImageSpecifics::clear_favicon_touch_64() {
  if (favicon_touch_64_ != NULL) favicon_touch_64_->::sync_pb::FaviconData::Clear();
  clear_has_favicon_touch_64();
}
const ::sync_pb::FaviconData& FaviconImageSpecifics::favicon_touch_64() const {
  // @@protoc_insertion_point(field_get:sync_pb.FaviconImageSpecifics.favicon_touch_64)
  return favicon_touch_64_ != NULL ? *favicon_touch_64_
                         : *::sync_pb::FaviconData::internal_default_instance();
}
::sync_pb::FaviconData* FaviconImageSpecifics::mutable_favicon_touch_64() {
  set_has_favicon_touch_64();
  if (favicon_touch_64_ == NULL) {
    favicon_touch_64_ = new ::sync_pb::FaviconData;
  }
  // @@protoc_insertion_point(field_mutable:sync_pb.FaviconImageSpecifics.favicon_touch_64)
  return favicon_touch_64_;
}
::sync_pb::FaviconData* FaviconImageSpecifics::release_favicon_touch_64() {
  // @@protoc_insertion_point(field_release:sync_pb.FaviconImageSpecifics.favicon_touch_64)
  clear_has_favicon_touch_64();
  ::sync_pb::FaviconData* temp = favicon_touch_64_;
  favicon_touch_64_ = NULL;
  return temp;
}
void FaviconImageSpecifics::set_allocated_favicon_touch_64(::sync_pb::FaviconData* favicon_touch_64) {
  delete favicon_touch_64_;
  favicon_touch_64_ = favicon_touch_64;
  if (favicon_touch_64) {
    set_has_favicon_touch_64();
  } else {
    clear_has_favicon_touch_64();
  }
  // @@protoc_insertion_point(field_set_allocated:sync_pb.FaviconImageSpecifics.favicon_touch_64)
}

// optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;
bool FaviconImageSpecifics::has_favicon_touch_precomposed_64() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void FaviconImageSpecifics::set_has_favicon_touch_precomposed_64() {
  _has_bits_[0] |= 0x00000010u;
}
void FaviconImageSpecifics::clear_has_favicon_touch_precomposed_64() {
  _has_bits_[0] &= ~0x00000010u;
}
void FaviconImageSpecifics::clear_favicon_touch_precomposed_64() {
  if (favicon_touch_precomposed_64_ != NULL) favicon_touch_precomposed_64_->::sync_pb::FaviconData::Clear();
  clear_has_favicon_touch_precomposed_64();
}
const ::sync_pb::FaviconData& FaviconImageSpecifics::favicon_touch_precomposed_64() const {
  // @@protoc_insertion_point(field_get:sync_pb.FaviconImageSpecifics.favicon_touch_precomposed_64)
  return favicon_touch_precomposed_64_ != NULL ? *favicon_touch_precomposed_64_
                         : *::sync_pb::FaviconData::internal_default_instance();
}
::sync_pb::FaviconData* FaviconImageSpecifics::mutable_favicon_touch_precomposed_64() {
  set_has_favicon_touch_precomposed_64();
  if (favicon_touch_precomposed_64_ == NULL) {
    favicon_touch_precomposed_64_ = new ::sync_pb::FaviconData;
  }
  // @@protoc_insertion_point(field_mutable:sync_pb.FaviconImageSpecifics.favicon_touch_precomposed_64)
  return favicon_touch_precomposed_64_;
}
::sync_pb::FaviconData* FaviconImageSpecifics::release_favicon_touch_precomposed_64() {
  // @@protoc_insertion_point(field_release:sync_pb.FaviconImageSpecifics.favicon_touch_precomposed_64)
  clear_has_favicon_touch_precomposed_64();
  ::sync_pb::FaviconData* temp = favicon_touch_precomposed_64_;
  favicon_touch_precomposed_64_ = NULL;
  return temp;
}
void FaviconImageSpecifics::set_allocated_favicon_touch_precomposed_64(::sync_pb::FaviconData* favicon_touch_precomposed_64) {
  delete favicon_touch_precomposed_64_;
  favicon_touch_precomposed_64_ = favicon_touch_precomposed_64;
  if (favicon_touch_precomposed_64) {
    set_has_favicon_touch_precomposed_64();
  } else {
    clear_has_favicon_touch_precomposed_64();
  }
  // @@protoc_insertion_point(field_set_allocated:sync_pb.FaviconImageSpecifics.favicon_touch_precomposed_64)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)
