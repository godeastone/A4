// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: loopback_server.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "loopback_server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {
class LoopbackServerEntityDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoopbackServerEntity> {
} _LoopbackServerEntity_default_instance_;
class LoopbackServerProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoopbackServerProto> {
} _LoopbackServerProto_default_instance_;

namespace protobuf_loopback_5fserver_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _LoopbackServerEntity_default_instance_.Shutdown();
  _LoopbackServerProto_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::sync_pb::protobuf_sync_2eproto::InitDefaults();
  _LoopbackServerEntity_default_instance_.DefaultConstruct();
  _LoopbackServerProto_default_instance_.DefaultConstruct();
  _LoopbackServerEntity_default_instance_.get_mutable()->entity_ = const_cast< ::sync_pb::SyncEntity*>(
      ::sync_pb::SyncEntity::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::sync_pb::protobuf_sync_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_loopback_5fserver_2eproto

bool LoopbackServerEntity_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LoopbackServerEntity_Type LoopbackServerEntity::UNKNOWN;
const LoopbackServerEntity_Type LoopbackServerEntity::BOOKMARK;
const LoopbackServerEntity_Type LoopbackServerEntity::PERMANENT;
const LoopbackServerEntity_Type LoopbackServerEntity::TOMBSTONE;
const LoopbackServerEntity_Type LoopbackServerEntity::UNIQUE;
const LoopbackServerEntity_Type LoopbackServerEntity::Type_MIN;
const LoopbackServerEntity_Type LoopbackServerEntity::Type_MAX;
const int LoopbackServerEntity::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoopbackServerEntity::kTypeFieldNumber;
const int LoopbackServerEntity::kEntityFieldNumber;
const int LoopbackServerEntity::kModelTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoopbackServerEntity::LoopbackServerEntity()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_loopback_5fserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.LoopbackServerEntity)
}
LoopbackServerEntity::LoopbackServerEntity(const LoopbackServerEntity& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_entity()) {
    entity_ = new ::sync_pb::SyncEntity(*from.entity_);
  } else {
    entity_ = NULL;
  }
  ::memcpy(&model_type_, &from.model_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&model_type_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:sync_pb.LoopbackServerEntity)
}

void LoopbackServerEntity::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&entity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&entity_)) + sizeof(type_));
}

LoopbackServerEntity::~LoopbackServerEntity() {
  // @@protoc_insertion_point(destructor:sync_pb.LoopbackServerEntity)
  SharedDtor();
}

void LoopbackServerEntity::SharedDtor() {
  if (this != internal_default_instance()) {
    delete entity_;
  }
}

void LoopbackServerEntity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const LoopbackServerEntity& LoopbackServerEntity::default_instance() {
  protobuf_loopback_5fserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoopbackServerEntity* LoopbackServerEntity::New(::google::protobuf::Arena* arena) const {
  LoopbackServerEntity* n = new LoopbackServerEntity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoopbackServerEntity::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.LoopbackServerEntity)
  if (has_entity()) {
    GOOGLE_DCHECK(entity_ != NULL);
    entity_->::sync_pb::SyncEntity::Clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&model_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&model_type_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoopbackServerEntity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.LoopbackServerEntity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sync_pb.LoopbackServerEntity.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sync_pb::LoopbackServerEntity_Type_IsValid(value)) {
            set_type(static_cast< ::sync_pb::LoopbackServerEntity_Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sync_pb.SyncEntity entity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 model_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_model_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &model_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.LoopbackServerEntity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.LoopbackServerEntity)
  return false;
#undef DO_
}

void LoopbackServerEntity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.LoopbackServerEntity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sync_pb.LoopbackServerEntity.Type type = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .sync_pb.SyncEntity entity = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->entity_, output);
  }

  // optional int64 model_type = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->model_type(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.LoopbackServerEntity)
}

size_t LoopbackServerEntity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.LoopbackServerEntity)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 7u) {
    // optional .sync_pb.SyncEntity entity = 2;
    if (has_entity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->entity_);
    }

    // optional int64 model_type = 3;
    if (has_model_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->model_type());
    }

    // optional .sync_pb.LoopbackServerEntity.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoopbackServerEntity::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const LoopbackServerEntity*>(&from));
}

void LoopbackServerEntity::MergeFrom(const LoopbackServerEntity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.LoopbackServerEntity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_entity()->::sync_pb::SyncEntity::MergeFrom(from.entity());
    }
    if (cached_has_bits & 0x00000002u) {
      model_type_ = from.model_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LoopbackServerEntity::CopyFrom(const LoopbackServerEntity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.LoopbackServerEntity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoopbackServerEntity::IsInitialized() const {
  if (has_entity()) {
    if (!this->entity_->IsInitialized()) return false;
  }
  return true;
}

void LoopbackServerEntity::Swap(LoopbackServerEntity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoopbackServerEntity::InternalSwap(LoopbackServerEntity* other) {
  std::swap(entity_, other->entity_);
  std::swap(model_type_, other->model_type_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string LoopbackServerEntity::GetTypeName() const {
  return "sync_pb.LoopbackServerEntity";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoopbackServerEntity

// optional .sync_pb.LoopbackServerEntity.Type type = 1;
bool LoopbackServerEntity::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LoopbackServerEntity::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void LoopbackServerEntity::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void LoopbackServerEntity::clear_type() {
  type_ = 0;
  clear_has_type();
}
::sync_pb::LoopbackServerEntity_Type LoopbackServerEntity::type() const {
  // @@protoc_insertion_point(field_get:sync_pb.LoopbackServerEntity.type)
  return static_cast< ::sync_pb::LoopbackServerEntity_Type >(type_);
}
void LoopbackServerEntity::set_type(::sync_pb::LoopbackServerEntity_Type value) {
  assert(::sync_pb::LoopbackServerEntity_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.LoopbackServerEntity.type)
}

// optional .sync_pb.SyncEntity entity = 2;
bool LoopbackServerEntity::has_entity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LoopbackServerEntity::set_has_entity() {
  _has_bits_[0] |= 0x00000001u;
}
void LoopbackServerEntity::clear_has_entity() {
  _has_bits_[0] &= ~0x00000001u;
}
void LoopbackServerEntity::clear_entity() {
  if (entity_ != NULL) entity_->::sync_pb::SyncEntity::Clear();
  clear_has_entity();
}
const ::sync_pb::SyncEntity& LoopbackServerEntity::entity() const {
  // @@protoc_insertion_point(field_get:sync_pb.LoopbackServerEntity.entity)
  return entity_ != NULL ? *entity_
                         : *::sync_pb::SyncEntity::internal_default_instance();
}
::sync_pb::SyncEntity* LoopbackServerEntity::mutable_entity() {
  set_has_entity();
  if (entity_ == NULL) {
    entity_ = new ::sync_pb::SyncEntity;
  }
  // @@protoc_insertion_point(field_mutable:sync_pb.LoopbackServerEntity.entity)
  return entity_;
}
::sync_pb::SyncEntity* LoopbackServerEntity::release_entity() {
  // @@protoc_insertion_point(field_release:sync_pb.LoopbackServerEntity.entity)
  clear_has_entity();
  ::sync_pb::SyncEntity* temp = entity_;
  entity_ = NULL;
  return temp;
}
void LoopbackServerEntity::set_allocated_entity(::sync_pb::SyncEntity* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    set_has_entity();
  } else {
    clear_has_entity();
  }
  // @@protoc_insertion_point(field_set_allocated:sync_pb.LoopbackServerEntity.entity)
}

// optional int64 model_type = 3;
bool LoopbackServerEntity::has_model_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LoopbackServerEntity::set_has_model_type() {
  _has_bits_[0] |= 0x00000002u;
}
void LoopbackServerEntity::clear_has_model_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void LoopbackServerEntity::clear_model_type() {
  model_type_ = GOOGLE_LONGLONG(0);
  clear_has_model_type();
}
::google::protobuf::int64 LoopbackServerEntity::model_type() const {
  // @@protoc_insertion_point(field_get:sync_pb.LoopbackServerEntity.model_type)
  return model_type_;
}
void LoopbackServerEntity::set_model_type(::google::protobuf::int64 value) {
  set_has_model_type();
  model_type_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.LoopbackServerEntity.model_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoopbackServerProto::kVersionFieldNumber;
const int LoopbackServerProto::kStoreBirthdayFieldNumber;
const int LoopbackServerProto::kEntitiesFieldNumber;
const int LoopbackServerProto::kKeystoreKeysFieldNumber;
const int LoopbackServerProto::kLastVersionAssignedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoopbackServerProto::LoopbackServerProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_loopback_5fserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.LoopbackServerProto)
}
LoopbackServerProto::LoopbackServerProto(const LoopbackServerProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      entities_(from.entities_),
      keystore_keys_(from.keystore_keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_version_assigned_) -
    reinterpret_cast<char*>(&version_)) + sizeof(last_version_assigned_));
  // @@protoc_insertion_point(copy_constructor:sync_pb.LoopbackServerProto)
}

void LoopbackServerProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_version_assigned_) -
      reinterpret_cast<char*>(&version_)) + sizeof(last_version_assigned_));
}

LoopbackServerProto::~LoopbackServerProto() {
  // @@protoc_insertion_point(destructor:sync_pb.LoopbackServerProto)
  SharedDtor();
}

void LoopbackServerProto::SharedDtor() {
}

void LoopbackServerProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const LoopbackServerProto& LoopbackServerProto::default_instance() {
  protobuf_loopback_5fserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoopbackServerProto* LoopbackServerProto::New(::google::protobuf::Arena* arena) const {
  LoopbackServerProto* n = new LoopbackServerProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoopbackServerProto::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.LoopbackServerProto)
  entities_.Clear();
  keystore_keys_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&last_version_assigned_) -
        reinterpret_cast<char*>(&version_)) + sizeof(last_version_assigned_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoopbackServerProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.LoopbackServerProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 store_birthday = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_store_birthday();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &store_birthday_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sync_pb.LoopbackServerEntity entities = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_entities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string keystore_keys = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_keystore_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 last_version_assigned = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_last_version_assigned();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_version_assigned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.LoopbackServerProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.LoopbackServerProto)
  return false;
#undef DO_
}

void LoopbackServerProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.LoopbackServerProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->version(), output);
  }

  // optional int64 store_birthday = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->store_birthday(), output);
  }

  // repeated .sync_pb.LoopbackServerEntity entities = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entities_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->entities(static_cast<int>(i)), output);
  }

  // repeated string keystore_keys = 4;
  for (int i = 0, n = this->keystore_keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->keystore_keys(i), output);
  }

  // optional int64 last_version_assigned = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->last_version_assigned(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.LoopbackServerProto)
}

size_t LoopbackServerProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.LoopbackServerProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated .sync_pb.LoopbackServerEntity entities = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->entities_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entities(static_cast<int>(i)));
    }
  }

  // repeated string keystore_keys = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keystore_keys_size());
  for (int i = 0, n = this->keystore_keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->keystore_keys(i));
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional int64 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->version());
    }

    // optional int64 store_birthday = 2;
    if (has_store_birthday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->store_birthday());
    }

    // optional int64 last_version_assigned = 5;
    if (has_last_version_assigned()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->last_version_assigned());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoopbackServerProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const LoopbackServerProto*>(&from));
}

void LoopbackServerProto::MergeFrom(const LoopbackServerProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.LoopbackServerProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entities_.MergeFrom(from.entities_);
  keystore_keys_.MergeFrom(from.keystore_keys_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000002u) {
      store_birthday_ = from.store_birthday_;
    }
    if (cached_has_bits & 0x00000004u) {
      last_version_assigned_ = from.last_version_assigned_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LoopbackServerProto::CopyFrom(const LoopbackServerProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.LoopbackServerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoopbackServerProto::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->entities())) return false;
  return true;
}

void LoopbackServerProto::Swap(LoopbackServerProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoopbackServerProto::InternalSwap(LoopbackServerProto* other) {
  entities_.InternalSwap(&other->entities_);
  keystore_keys_.InternalSwap(&other->keystore_keys_);
  std::swap(version_, other->version_);
  std::swap(store_birthday_, other->store_birthday_);
  std::swap(last_version_assigned_, other->last_version_assigned_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string LoopbackServerProto::GetTypeName() const {
  return "sync_pb.LoopbackServerProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoopbackServerProto

// optional int64 version = 1;
bool LoopbackServerProto::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LoopbackServerProto::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
void LoopbackServerProto::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void LoopbackServerProto::clear_version() {
  version_ = GOOGLE_LONGLONG(0);
  clear_has_version();
}
::google::protobuf::int64 LoopbackServerProto::version() const {
  // @@protoc_insertion_point(field_get:sync_pb.LoopbackServerProto.version)
  return version_;
}
void LoopbackServerProto::set_version(::google::protobuf::int64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.LoopbackServerProto.version)
}

// optional int64 store_birthday = 2;
bool LoopbackServerProto::has_store_birthday() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LoopbackServerProto::set_has_store_birthday() {
  _has_bits_[0] |= 0x00000002u;
}
void LoopbackServerProto::clear_has_store_birthday() {
  _has_bits_[0] &= ~0x00000002u;
}
void LoopbackServerProto::clear_store_birthday() {
  store_birthday_ = GOOGLE_LONGLONG(0);
  clear_has_store_birthday();
}
::google::protobuf::int64 LoopbackServerProto::store_birthday() const {
  // @@protoc_insertion_point(field_get:sync_pb.LoopbackServerProto.store_birthday)
  return store_birthday_;
}
void LoopbackServerProto::set_store_birthday(::google::protobuf::int64 value) {
  set_has_store_birthday();
  store_birthday_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.LoopbackServerProto.store_birthday)
}

// repeated .sync_pb.LoopbackServerEntity entities = 3;
int LoopbackServerProto::entities_size() const {
  return entities_.size();
}
void LoopbackServerProto::clear_entities() {
  entities_.Clear();
}
const ::sync_pb::LoopbackServerEntity& LoopbackServerProto::entities(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.LoopbackServerProto.entities)
  return entities_.Get(index);
}
::sync_pb::LoopbackServerEntity* LoopbackServerProto::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:sync_pb.LoopbackServerProto.entities)
  return entities_.Mutable(index);
}
::sync_pb::LoopbackServerEntity* LoopbackServerProto::add_entities() {
  // @@protoc_insertion_point(field_add:sync_pb.LoopbackServerProto.entities)
  return entities_.Add();
}
::google::protobuf::RepeatedPtrField< ::sync_pb::LoopbackServerEntity >*
LoopbackServerProto::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.LoopbackServerProto.entities)
  return &entities_;
}
const ::google::protobuf::RepeatedPtrField< ::sync_pb::LoopbackServerEntity >&
LoopbackServerProto::entities() const {
  // @@protoc_insertion_point(field_list:sync_pb.LoopbackServerProto.entities)
  return entities_;
}

// repeated string keystore_keys = 4;
int LoopbackServerProto::keystore_keys_size() const {
  return keystore_keys_.size();
}
void LoopbackServerProto::clear_keystore_keys() {
  keystore_keys_.Clear();
}
const ::std::string& LoopbackServerProto::keystore_keys(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.LoopbackServerProto.keystore_keys)
  return keystore_keys_.Get(index);
}
::std::string* LoopbackServerProto::mutable_keystore_keys(int index) {
  // @@protoc_insertion_point(field_mutable:sync_pb.LoopbackServerProto.keystore_keys)
  return keystore_keys_.Mutable(index);
}
void LoopbackServerProto::set_keystore_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:sync_pb.LoopbackServerProto.keystore_keys)
  keystore_keys_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void LoopbackServerProto::set_keystore_keys(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:sync_pb.LoopbackServerProto.keystore_keys)
  keystore_keys_.Mutable(index)->assign(std::move(value));
}
#endif
void LoopbackServerProto::set_keystore_keys(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  keystore_keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:sync_pb.LoopbackServerProto.keystore_keys)
}
void LoopbackServerProto::set_keystore_keys(int index, const char* value, size_t size) {
  keystore_keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:sync_pb.LoopbackServerProto.keystore_keys)
}
::std::string* LoopbackServerProto::add_keystore_keys() {
  // @@protoc_insertion_point(field_add_mutable:sync_pb.LoopbackServerProto.keystore_keys)
  return keystore_keys_.Add();
}
void LoopbackServerProto::add_keystore_keys(const ::std::string& value) {
  keystore_keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:sync_pb.LoopbackServerProto.keystore_keys)
}
#if LANG_CXX11
void LoopbackServerProto::add_keystore_keys(::std::string&& value) {
  keystore_keys_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:sync_pb.LoopbackServerProto.keystore_keys)
}
#endif
void LoopbackServerProto::add_keystore_keys(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  keystore_keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:sync_pb.LoopbackServerProto.keystore_keys)
}
void LoopbackServerProto::add_keystore_keys(const char* value, size_t size) {
  keystore_keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:sync_pb.LoopbackServerProto.keystore_keys)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
LoopbackServerProto::keystore_keys() const {
  // @@protoc_insertion_point(field_list:sync_pb.LoopbackServerProto.keystore_keys)
  return keystore_keys_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
LoopbackServerProto::mutable_keystore_keys() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.LoopbackServerProto.keystore_keys)
  return &keystore_keys_;
}

// optional int64 last_version_assigned = 5;
bool LoopbackServerProto::has_last_version_assigned() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LoopbackServerProto::set_has_last_version_assigned() {
  _has_bits_[0] |= 0x00000004u;
}
void LoopbackServerProto::clear_has_last_version_assigned() {
  _has_bits_[0] &= ~0x00000004u;
}
void LoopbackServerProto::clear_last_version_assigned() {
  last_version_assigned_ = GOOGLE_LONGLONG(0);
  clear_has_last_version_assigned();
}
::google::protobuf::int64 LoopbackServerProto::last_version_assigned() const {
  // @@protoc_insertion_point(field_get:sync_pb.LoopbackServerProto.last_version_assigned)
  return last_version_assigned_;
}
void LoopbackServerProto::set_last_version_assigned(::google::protobuf::int64 value) {
  set_has_last_version_assigned();
  last_version_assigned_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.LoopbackServerProto.last_version_assigned)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)
