// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: autofill_specifics.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "autofill_specifics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {
class AutofillProfileSpecificsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AutofillProfileSpecifics> {
} _AutofillProfileSpecifics_default_instance_;
class AutofillSpecificsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AutofillSpecifics> {
} _AutofillSpecifics_default_instance_;
class WalletMaskedCreditCardDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<WalletMaskedCreditCard> {
} _WalletMaskedCreditCard_default_instance_;
class WalletPostalAddressDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<WalletPostalAddress> {
} _WalletPostalAddress_default_instance_;
class AutofillWalletSpecificsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AutofillWalletSpecifics> {
} _AutofillWalletSpecifics_default_instance_;
class WalletMetadataSpecificsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<WalletMetadataSpecifics> {
} _WalletMetadataSpecifics_default_instance_;

namespace protobuf_autofill_5fspecifics_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _AutofillProfileSpecifics_default_instance_.Shutdown();
  _AutofillSpecifics_default_instance_.Shutdown();
  _WalletMaskedCreditCard_default_instance_.Shutdown();
  _WalletPostalAddress_default_instance_.Shutdown();
  _AutofillWalletSpecifics_default_instance_.Shutdown();
  _WalletMetadataSpecifics_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _AutofillProfileSpecifics_default_instance_.DefaultConstruct();
  _AutofillSpecifics_default_instance_.DefaultConstruct();
  _WalletMaskedCreditCard_default_instance_.DefaultConstruct();
  _WalletPostalAddress_default_instance_.DefaultConstruct();
  _AutofillWalletSpecifics_default_instance_.DefaultConstruct();
  _WalletMetadataSpecifics_default_instance_.DefaultConstruct();
  _AutofillSpecifics_default_instance_.get_mutable()->profile_ = const_cast< ::sync_pb::AutofillProfileSpecifics*>(
      ::sync_pb::AutofillProfileSpecifics::internal_default_instance());
  _AutofillWalletSpecifics_default_instance_.get_mutable()->masked_card_ = const_cast< ::sync_pb::WalletMaskedCreditCard*>(
      ::sync_pb::WalletMaskedCreditCard::internal_default_instance());
  _AutofillWalletSpecifics_default_instance_.get_mutable()->address_ = const_cast< ::sync_pb::WalletPostalAddress*>(
      ::sync_pb::WalletPostalAddress::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_autofill_5fspecifics_2eproto

bool WalletMaskedCreditCard_WalletCardStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WalletMaskedCreditCard_WalletCardStatus WalletMaskedCreditCard::VALID;
const WalletMaskedCreditCard_WalletCardStatus WalletMaskedCreditCard::EXPIRED;
const WalletMaskedCreditCard_WalletCardStatus WalletMaskedCreditCard::WalletCardStatus_MIN;
const WalletMaskedCreditCard_WalletCardStatus WalletMaskedCreditCard::WalletCardStatus_MAX;
const int WalletMaskedCreditCard::WalletCardStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool WalletMaskedCreditCard_WalletCardType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::UNKNOWN;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::AMEX;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::DISCOVER;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::JCB;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::MAESTRO;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::MASTER_CARD;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::SOLO;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::SWITCH;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::VISA;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::UNIONPAY;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::WalletCardType_MIN;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::WalletCardType_MAX;
const int WalletMaskedCreditCard::WalletCardType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool WalletMaskedCreditCard_WalletCardClass_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WalletMaskedCreditCard_WalletCardClass WalletMaskedCreditCard::UNKNOWN_CARD_CLASS;
const WalletMaskedCreditCard_WalletCardClass WalletMaskedCreditCard::CREDIT;
const WalletMaskedCreditCard_WalletCardClass WalletMaskedCreditCard::DEBIT;
const WalletMaskedCreditCard_WalletCardClass WalletMaskedCreditCard::PREPAID;
const WalletMaskedCreditCard_WalletCardClass WalletMaskedCreditCard::WalletCardClass_MIN;
const WalletMaskedCreditCard_WalletCardClass WalletMaskedCreditCard::WalletCardClass_MAX;
const int WalletMaskedCreditCard::WalletCardClass_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool AutofillWalletSpecifics_WalletInfoType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AutofillWalletSpecifics_WalletInfoType AutofillWalletSpecifics::UNKNOWN;
const AutofillWalletSpecifics_WalletInfoType AutofillWalletSpecifics::MASKED_CREDIT_CARD;
const AutofillWalletSpecifics_WalletInfoType AutofillWalletSpecifics::POSTAL_ADDRESS;
const AutofillWalletSpecifics_WalletInfoType AutofillWalletSpecifics::WalletInfoType_MIN;
const AutofillWalletSpecifics_WalletInfoType AutofillWalletSpecifics::WalletInfoType_MAX;
const int AutofillWalletSpecifics::WalletInfoType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool WalletMetadataSpecifics_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WalletMetadataSpecifics_Type WalletMetadataSpecifics::UNKNOWN;
const WalletMetadataSpecifics_Type WalletMetadataSpecifics::CARD;
const WalletMetadataSpecifics_Type WalletMetadataSpecifics::ADDRESS;
const WalletMetadataSpecifics_Type WalletMetadataSpecifics::Type_MIN;
const WalletMetadataSpecifics_Type WalletMetadataSpecifics::Type_MAX;
const int WalletMetadataSpecifics::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutofillProfileSpecifics::kGuidFieldNumber;
const int AutofillProfileSpecifics::kOriginFieldNumber;
const int AutofillProfileSpecifics::kUseCountFieldNumber;
const int AutofillProfileSpecifics::kUseDateFieldNumber;
const int AutofillProfileSpecifics::kNameFirstFieldNumber;
const int AutofillProfileSpecifics::kNameMiddleFieldNumber;
const int AutofillProfileSpecifics::kNameLastFieldNumber;
const int AutofillProfileSpecifics::kNameFullFieldNumber;
const int AutofillProfileSpecifics::kEmailAddressFieldNumber;
const int AutofillProfileSpecifics::kCompanyNameFieldNumber;
const int AutofillProfileSpecifics::kAddressHomeLine1FieldNumber;
const int AutofillProfileSpecifics::kAddressHomeLine2FieldNumber;
const int AutofillProfileSpecifics::kAddressHomeCityFieldNumber;
const int AutofillProfileSpecifics::kAddressHomeStateFieldNumber;
const int AutofillProfileSpecifics::kAddressHomeZipFieldNumber;
const int AutofillProfileSpecifics::kAddressHomeCountryFieldNumber;
const int AutofillProfileSpecifics::kAddressHomeStreetAddressFieldNumber;
const int AutofillProfileSpecifics::kAddressHomeSortingCodeFieldNumber;
const int AutofillProfileSpecifics::kAddressHomeDependentLocalityFieldNumber;
const int AutofillProfileSpecifics::kAddressHomeLanguageCodeFieldNumber;
const int AutofillProfileSpecifics::kPhoneHomeWholeNumberFieldNumber;
const int AutofillProfileSpecifics::kValidityStateBitfieldFieldNumber;
const int AutofillProfileSpecifics::kLabelFieldNumber;
const int AutofillProfileSpecifics::kPhoneFaxWholeNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutofillProfileSpecifics::AutofillProfileSpecifics()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_autofill_5fspecifics_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.AutofillProfileSpecifics)
}
AutofillProfileSpecifics::AutofillProfileSpecifics(const AutofillProfileSpecifics& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      name_first_(from.name_first_),
      name_middle_(from.name_middle_),
      name_last_(from.name_last_),
      email_address_(from.email_address_),
      phone_home_whole_number_(from.phone_home_whole_number_),
      name_full_(from.name_full_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  company_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_company_name()) {
    company_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.company_name_);
  }
  address_home_line1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address_home_line1()) {
    address_home_line1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_line1_);
  }
  address_home_line2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address_home_line2()) {
    address_home_line2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_line2_);
  }
  address_home_city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address_home_city()) {
    address_home_city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_city_);
  }
  address_home_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address_home_state()) {
    address_home_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_state_);
  }
  address_home_zip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address_home_zip()) {
    address_home_zip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_zip_);
  }
  address_home_country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address_home_country()) {
    address_home_country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_country_);
  }
  phone_fax_whole_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phone_fax_whole_number()) {
    phone_fax_whole_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_fax_whole_number_);
  }
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid()) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  origin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_origin()) {
    origin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_);
  }
  address_home_street_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address_home_street_address()) {
    address_home_street_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_street_address_);
  }
  address_home_sorting_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address_home_sorting_code()) {
    address_home_sorting_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_sorting_code_);
  }
  address_home_dependent_locality_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address_home_dependent_locality()) {
    address_home_dependent_locality_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_dependent_locality_);
  }
  address_home_language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address_home_language_code()) {
    address_home_language_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_language_code_);
  }
  ::memcpy(&use_count_, &from.use_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&validity_state_bitfield_) -
    reinterpret_cast<char*>(&use_count_)) + sizeof(validity_state_bitfield_));
  // @@protoc_insertion_point(copy_constructor:sync_pb.AutofillProfileSpecifics)
}

void AutofillProfileSpecifics::SharedCtor() {
  _cached_size_ = 0;
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  company_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_line1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_line2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_zip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_fax_whole_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  origin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_street_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_sorting_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_dependent_locality_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&use_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&validity_state_bitfield_) -
      reinterpret_cast<char*>(&use_count_)) + sizeof(validity_state_bitfield_));
}

AutofillProfileSpecifics::~AutofillProfileSpecifics() {
  // @@protoc_insertion_point(destructor:sync_pb.AutofillProfileSpecifics)
  SharedDtor();
}

void AutofillProfileSpecifics::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  company_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_line1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_line2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_zip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_fax_whole_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  origin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_street_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_sorting_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_dependent_locality_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_home_language_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AutofillProfileSpecifics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AutofillProfileSpecifics& AutofillProfileSpecifics::default_instance() {
  protobuf_autofill_5fspecifics_2eproto::InitDefaults();
  return *internal_default_instance();
}

AutofillProfileSpecifics* AutofillProfileSpecifics::New(::google::protobuf::Arena* arena) const {
  AutofillProfileSpecifics* n = new AutofillProfileSpecifics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AutofillProfileSpecifics::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.AutofillProfileSpecifics)
  name_first_.Clear();
  name_middle_.Clear();
  name_last_.Clear();
  email_address_.Clear();
  phone_home_whole_number_.Clear();
  name_full_.Clear();
  if (_has_bits_[0 / 32] & 255u) {
    if (has_label()) {
      GOOGLE_DCHECK(!label_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*label_.UnsafeRawStringPointer())->clear();
    }
    if (has_company_name()) {
      GOOGLE_DCHECK(!company_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*company_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_address_home_line1()) {
      GOOGLE_DCHECK(!address_home_line1_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*address_home_line1_.UnsafeRawStringPointer())->clear();
    }
    if (has_address_home_line2()) {
      GOOGLE_DCHECK(!address_home_line2_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*address_home_line2_.UnsafeRawStringPointer())->clear();
    }
    if (has_address_home_city()) {
      GOOGLE_DCHECK(!address_home_city_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*address_home_city_.UnsafeRawStringPointer())->clear();
    }
    if (has_address_home_state()) {
      GOOGLE_DCHECK(!address_home_state_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*address_home_state_.UnsafeRawStringPointer())->clear();
    }
    if (has_address_home_zip()) {
      GOOGLE_DCHECK(!address_home_zip_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*address_home_zip_.UnsafeRawStringPointer())->clear();
    }
    if (has_address_home_country()) {
      GOOGLE_DCHECK(!address_home_country_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*address_home_country_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 32512u) {
    if (has_phone_fax_whole_number()) {
      GOOGLE_DCHECK(!phone_fax_whole_number_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*phone_fax_whole_number_.UnsafeRawStringPointer())->clear();
    }
    if (has_guid()) {
      GOOGLE_DCHECK(!guid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*guid_.UnsafeRawStringPointer())->clear();
    }
    if (has_origin()) {
      GOOGLE_DCHECK(!origin_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*origin_.UnsafeRawStringPointer())->clear();
    }
    if (has_address_home_street_address()) {
      GOOGLE_DCHECK(!address_home_street_address_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*address_home_street_address_.UnsafeRawStringPointer())->clear();
    }
    if (has_address_home_sorting_code()) {
      GOOGLE_DCHECK(!address_home_sorting_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*address_home_sorting_code_.UnsafeRawStringPointer())->clear();
    }
    if (has_address_home_dependent_locality()) {
      GOOGLE_DCHECK(!address_home_dependent_locality_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*address_home_dependent_locality_.UnsafeRawStringPointer())->clear();
    }
    if (has_address_home_language_code()) {
      GOOGLE_DCHECK(!address_home_language_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*address_home_language_code_.UnsafeRawStringPointer())->clear();
    }
  }
  use_count_ = GOOGLE_LONGLONG(0);
  if (_has_bits_[16 / 32] & 196608u) {
    ::memset(&use_date_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&validity_state_bitfield_) -
        reinterpret_cast<char*>(&use_date_)) + sizeof(validity_state_bitfield_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AutofillProfileSpecifics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.AutofillProfileSpecifics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string label = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string name_first = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_name_first()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string name_middle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_name_middle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string name_last = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_name_last()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string email_address = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_email_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string company_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_company_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string address_home_line1 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address_home_line1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string address_home_line2 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address_home_line2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string address_home_city = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address_home_city()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string address_home_state = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address_home_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string address_home_zip = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address_home_zip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string address_home_country = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address_home_country()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string phone_home_whole_number = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_phone_home_whole_number()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phone_fax_whole_number = 14 [deprecated = true];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_fax_whole_number()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string guid = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string origin = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_origin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string address_home_street_address = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address_home_street_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string address_home_sorting_code = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address_home_sorting_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string address_home_dependent_locality = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address_home_dependent_locality()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string address_home_language_code = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address_home_language_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string name_full = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_name_full()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 use_count = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u)) {
          set_has_use_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &use_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 use_date = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u)) {
          set_has_use_date();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &use_date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 validity_state_bitfield = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u)) {
          set_has_validity_state_bitfield();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &validity_state_bitfield_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.AutofillProfileSpecifics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.AutofillProfileSpecifics)
  return false;
#undef DO_
}

void AutofillProfileSpecifics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.AutofillProfileSpecifics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string label = 1 [deprecated = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->label(), output);
  }

  // repeated string name_first = 2;
  for (int i = 0, n = this->name_first_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name_first(i), output);
  }

  // repeated string name_middle = 3;
  for (int i = 0, n = this->name_middle_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->name_middle(i), output);
  }

  // repeated string name_last = 4;
  for (int i = 0, n = this->name_last_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->name_last(i), output);
  }

  // repeated string email_address = 5;
  for (int i = 0, n = this->email_address_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->email_address(i), output);
  }

  // optional string company_name = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->company_name(), output);
  }

  // optional string address_home_line1 = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->address_home_line1(), output);
  }

  // optional string address_home_line2 = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->address_home_line2(), output);
  }

  // optional string address_home_city = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->address_home_city(), output);
  }

  // optional string address_home_state = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->address_home_state(), output);
  }

  // optional string address_home_zip = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->address_home_zip(), output);
  }

  // optional string address_home_country = 12;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->address_home_country(), output);
  }

  // repeated string phone_home_whole_number = 13;
  for (int i = 0, n = this->phone_home_whole_number_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->phone_home_whole_number(i), output);
  }

  // optional string phone_fax_whole_number = 14 [deprecated = true];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->phone_fax_whole_number(), output);
  }

  // optional string guid = 15;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->guid(), output);
  }

  // optional string origin = 16;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->origin(), output);
  }

  // optional string address_home_street_address = 17;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->address_home_street_address(), output);
  }

  // optional string address_home_sorting_code = 18;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->address_home_sorting_code(), output);
  }

  // optional string address_home_dependent_locality = 19;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->address_home_dependent_locality(), output);
  }

  // optional string address_home_language_code = 20;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->address_home_language_code(), output);
  }

  // repeated string name_full = 21;
  for (int i = 0, n = this->name_full_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->name_full(i), output);
  }

  // optional int64 use_count = 22;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->use_count(), output);
  }

  // optional int64 use_date = 23;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(23, this->use_date(), output);
  }

  // optional int64 validity_state_bitfield = 24;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(24, this->validity_state_bitfield(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.AutofillProfileSpecifics)
}

size_t AutofillProfileSpecifics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.AutofillProfileSpecifics)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated string name_first = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->name_first_size());
  for (int i = 0, n = this->name_first_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->name_first(i));
  }

  // repeated string name_middle = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->name_middle_size());
  for (int i = 0, n = this->name_middle_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->name_middle(i));
  }

  // repeated string name_last = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->name_last_size());
  for (int i = 0, n = this->name_last_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->name_last(i));
  }

  // repeated string email_address = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->email_address_size());
  for (int i = 0, n = this->email_address_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->email_address(i));
  }

  // repeated string phone_home_whole_number = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->phone_home_whole_number_size());
  for (int i = 0, n = this->phone_home_whole_number_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->phone_home_whole_number(i));
  }

  // repeated string name_full = 21;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->name_full_size());
  for (int i = 0, n = this->name_full_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->name_full(i));
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string label = 1 [deprecated = true];
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional string company_name = 6;
    if (has_company_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->company_name());
    }

    // optional string address_home_line1 = 7;
    if (has_address_home_line1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address_home_line1());
    }

    // optional string address_home_line2 = 8;
    if (has_address_home_line2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address_home_line2());
    }

    // optional string address_home_city = 9;
    if (has_address_home_city()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address_home_city());
    }

    // optional string address_home_state = 10;
    if (has_address_home_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address_home_state());
    }

    // optional string address_home_zip = 11;
    if (has_address_home_zip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address_home_zip());
    }

    // optional string address_home_country = 12;
    if (has_address_home_country()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address_home_country());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional string phone_fax_whole_number = 14 [deprecated = true];
    if (has_phone_fax_whole_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone_fax_whole_number());
    }

    // optional string guid = 15;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // optional string origin = 16;
    if (has_origin()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->origin());
    }

    // optional string address_home_street_address = 17;
    if (has_address_home_street_address()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address_home_street_address());
    }

    // optional string address_home_sorting_code = 18;
    if (has_address_home_sorting_code()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address_home_sorting_code());
    }

    // optional string address_home_dependent_locality = 19;
    if (has_address_home_dependent_locality()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address_home_dependent_locality());
    }

    // optional string address_home_language_code = 20;
    if (has_address_home_language_code()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address_home_language_code());
    }

    // optional int64 use_count = 22;
    if (has_use_count()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->use_count());
    }

  }
  if (_has_bits_[16 / 32] & 196608u) {
    // optional int64 use_date = 23;
    if (has_use_date()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->use_date());
    }

    // optional int64 validity_state_bitfield = 24;
    if (has_validity_state_bitfield()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->validity_state_bitfield());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AutofillProfileSpecifics::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AutofillProfileSpecifics*>(&from));
}

void AutofillProfileSpecifics::MergeFrom(const AutofillProfileSpecifics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.AutofillProfileSpecifics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  name_first_.MergeFrom(from.name_first_);
  name_middle_.MergeFrom(from.name_middle_);
  name_last_.MergeFrom(from.name_last_);
  email_address_.MergeFrom(from.email_address_);
  phone_home_whole_number_.MergeFrom(from.phone_home_whole_number_);
  name_full_.MergeFrom(from.name_full_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_label();
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_company_name();
      company_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.company_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_address_home_line1();
      address_home_line1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_line1_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_address_home_line2();
      address_home_line2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_line2_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_address_home_city();
      address_home_city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_city_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_address_home_state();
      address_home_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_state_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_address_home_zip();
      address_home_zip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_zip_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_address_home_country();
      address_home_country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_country_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_phone_fax_whole_number();
      phone_fax_whole_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_fax_whole_number_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_guid();
      guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_origin();
      origin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_address_home_street_address();
      address_home_street_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_street_address_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has_address_home_sorting_code();
      address_home_sorting_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_sorting_code_);
    }
    if (cached_has_bits & 0x00002000u) {
      set_has_address_home_dependent_locality();
      address_home_dependent_locality_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_dependent_locality_);
    }
    if (cached_has_bits & 0x00004000u) {
      set_has_address_home_language_code();
      address_home_language_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_language_code_);
    }
    if (cached_has_bits & 0x00008000u) {
      use_count_ = from.use_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 196608u) {
    if (cached_has_bits & 0x00010000u) {
      use_date_ = from.use_date_;
    }
    if (cached_has_bits & 0x00020000u) {
      validity_state_bitfield_ = from.validity_state_bitfield_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AutofillProfileSpecifics::CopyFrom(const AutofillProfileSpecifics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.AutofillProfileSpecifics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutofillProfileSpecifics::IsInitialized() const {
  return true;
}

void AutofillProfileSpecifics::Swap(AutofillProfileSpecifics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutofillProfileSpecifics::InternalSwap(AutofillProfileSpecifics* other) {
  name_first_.InternalSwap(&other->name_first_);
  name_middle_.InternalSwap(&other->name_middle_);
  name_last_.InternalSwap(&other->name_last_);
  email_address_.InternalSwap(&other->email_address_);
  phone_home_whole_number_.InternalSwap(&other->phone_home_whole_number_);
  name_full_.InternalSwap(&other->name_full_);
  label_.Swap(&other->label_);
  company_name_.Swap(&other->company_name_);
  address_home_line1_.Swap(&other->address_home_line1_);
  address_home_line2_.Swap(&other->address_home_line2_);
  address_home_city_.Swap(&other->address_home_city_);
  address_home_state_.Swap(&other->address_home_state_);
  address_home_zip_.Swap(&other->address_home_zip_);
  address_home_country_.Swap(&other->address_home_country_);
  phone_fax_whole_number_.Swap(&other->phone_fax_whole_number_);
  guid_.Swap(&other->guid_);
  origin_.Swap(&other->origin_);
  address_home_street_address_.Swap(&other->address_home_street_address_);
  address_home_sorting_code_.Swap(&other->address_home_sorting_code_);
  address_home_dependent_locality_.Swap(&other->address_home_dependent_locality_);
  address_home_language_code_.Swap(&other->address_home_language_code_);
  std::swap(use_count_, other->use_count_);
  std::swap(use_date_, other->use_date_);
  std::swap(validity_state_bitfield_, other->validity_state_bitfield_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string AutofillProfileSpecifics::GetTypeName() const {
  return "sync_pb.AutofillProfileSpecifics";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AutofillProfileSpecifics

// optional string guid = 15;
bool AutofillProfileSpecifics::has_guid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void AutofillProfileSpecifics::set_has_guid() {
  _has_bits_[0] |= 0x00000200u;
}
void AutofillProfileSpecifics::clear_has_guid() {
  _has_bits_[0] &= ~0x00000200u;
}
void AutofillProfileSpecifics::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
const ::std::string& AutofillProfileSpecifics::guid() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.guid)
  return guid_.GetNoArena();
}
void AutofillProfileSpecifics::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.guid)
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AutofillProfileSpecifics.guid)
}
#endif
void AutofillProfileSpecifics::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.guid)
}
void AutofillProfileSpecifics::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.guid)
}
::std::string* AutofillProfileSpecifics::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_guid() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.guid)
}

// optional string origin = 16;
bool AutofillProfileSpecifics::has_origin() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void AutofillProfileSpecifics::set_has_origin() {
  _has_bits_[0] |= 0x00000400u;
}
void AutofillProfileSpecifics::clear_has_origin() {
  _has_bits_[0] &= ~0x00000400u;
}
void AutofillProfileSpecifics::clear_origin() {
  origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_origin();
}
const ::std::string& AutofillProfileSpecifics::origin() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.origin)
  return origin_.GetNoArena();
}
void AutofillProfileSpecifics::set_origin(const ::std::string& value) {
  set_has_origin();
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.origin)
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_origin(::std::string&& value) {
  set_has_origin();
  origin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AutofillProfileSpecifics.origin)
}
#endif
void AutofillProfileSpecifics::set_origin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_origin();
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.origin)
}
void AutofillProfileSpecifics::set_origin(const char* value, size_t size) {
  set_has_origin();
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.origin)
}
::std::string* AutofillProfileSpecifics::mutable_origin() {
  set_has_origin();
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.origin)
  return origin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_origin() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.origin)
  clear_has_origin();
  return origin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_origin(::std::string* origin) {
  if (origin != NULL) {
    set_has_origin();
  } else {
    clear_has_origin();
  }
  origin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), origin);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.origin)
}

// optional int64 use_count = 22;
bool AutofillProfileSpecifics::has_use_count() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void AutofillProfileSpecifics::set_has_use_count() {
  _has_bits_[0] |= 0x00008000u;
}
void AutofillProfileSpecifics::clear_has_use_count() {
  _has_bits_[0] &= ~0x00008000u;
}
void AutofillProfileSpecifics::clear_use_count() {
  use_count_ = GOOGLE_LONGLONG(0);
  clear_has_use_count();
}
::google::protobuf::int64 AutofillProfileSpecifics::use_count() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.use_count)
  return use_count_;
}
void AutofillProfileSpecifics::set_use_count(::google::protobuf::int64 value) {
  set_has_use_count();
  use_count_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.use_count)
}

// optional int64 use_date = 23;
bool AutofillProfileSpecifics::has_use_date() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void AutofillProfileSpecifics::set_has_use_date() {
  _has_bits_[0] |= 0x00010000u;
}
void AutofillProfileSpecifics::clear_has_use_date() {
  _has_bits_[0] &= ~0x00010000u;
}
void AutofillProfileSpecifics::clear_use_date() {
  use_date_ = GOOGLE_LONGLONG(0);
  clear_has_use_date();
}
::google::protobuf::int64 AutofillProfileSpecifics::use_date() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.use_date)
  return use_date_;
}
void AutofillProfileSpecifics::set_use_date(::google::protobuf::int64 value) {
  set_has_use_date();
  use_date_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.use_date)
}

// repeated string name_first = 2;
int AutofillProfileSpecifics::name_first_size() const {
  return name_first_.size();
}
void AutofillProfileSpecifics::clear_name_first() {
  name_first_.Clear();
}
const ::std::string& AutofillProfileSpecifics::name_first(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.name_first)
  return name_first_.Get(index);
}
::std::string* AutofillProfileSpecifics::mutable_name_first(int index) {
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.name_first)
  return name_first_.Mutable(index);
}
void AutofillProfileSpecifics::set_name_first(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.name_first)
  name_first_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_name_first(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.name_first)
  name_first_.Mutable(index)->assign(std::move(value));
}
#endif
void AutofillProfileSpecifics::set_name_first(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  name_first_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.name_first)
}
void AutofillProfileSpecifics::set_name_first(int index, const char* value, size_t size) {
  name_first_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.name_first)
}
::std::string* AutofillProfileSpecifics::add_name_first() {
  // @@protoc_insertion_point(field_add_mutable:sync_pb.AutofillProfileSpecifics.name_first)
  return name_first_.Add();
}
void AutofillProfileSpecifics::add_name_first(const ::std::string& value) {
  name_first_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.name_first)
}
#if LANG_CXX11
void AutofillProfileSpecifics::add_name_first(::std::string&& value) {
  name_first_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.name_first)
}
#endif
void AutofillProfileSpecifics::add_name_first(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  name_first_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:sync_pb.AutofillProfileSpecifics.name_first)
}
void AutofillProfileSpecifics::add_name_first(const char* value, size_t size) {
  name_first_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:sync_pb.AutofillProfileSpecifics.name_first)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AutofillProfileSpecifics::name_first() const {
  // @@protoc_insertion_point(field_list:sync_pb.AutofillProfileSpecifics.name_first)
  return name_first_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AutofillProfileSpecifics::mutable_name_first() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillProfileSpecifics.name_first)
  return &name_first_;
}

// repeated string name_middle = 3;
int AutofillProfileSpecifics::name_middle_size() const {
  return name_middle_.size();
}
void AutofillProfileSpecifics::clear_name_middle() {
  name_middle_.Clear();
}
const ::std::string& AutofillProfileSpecifics::name_middle(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.name_middle)
  return name_middle_.Get(index);
}
::std::string* AutofillProfileSpecifics::mutable_name_middle(int index) {
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.name_middle)
  return name_middle_.Mutable(index);
}
void AutofillProfileSpecifics::set_name_middle(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.name_middle)
  name_middle_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_name_middle(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.name_middle)
  name_middle_.Mutable(index)->assign(std::move(value));
}
#endif
void AutofillProfileSpecifics::set_name_middle(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  name_middle_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.name_middle)
}
void AutofillProfileSpecifics::set_name_middle(int index, const char* value, size_t size) {
  name_middle_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.name_middle)
}
::std::string* AutofillProfileSpecifics::add_name_middle() {
  // @@protoc_insertion_point(field_add_mutable:sync_pb.AutofillProfileSpecifics.name_middle)
  return name_middle_.Add();
}
void AutofillProfileSpecifics::add_name_middle(const ::std::string& value) {
  name_middle_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.name_middle)
}
#if LANG_CXX11
void AutofillProfileSpecifics::add_name_middle(::std::string&& value) {
  name_middle_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.name_middle)
}
#endif
void AutofillProfileSpecifics::add_name_middle(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  name_middle_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:sync_pb.AutofillProfileSpecifics.name_middle)
}
void AutofillProfileSpecifics::add_name_middle(const char* value, size_t size) {
  name_middle_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:sync_pb.AutofillProfileSpecifics.name_middle)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AutofillProfileSpecifics::name_middle() const {
  // @@protoc_insertion_point(field_list:sync_pb.AutofillProfileSpecifics.name_middle)
  return name_middle_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AutofillProfileSpecifics::mutable_name_middle() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillProfileSpecifics.name_middle)
  return &name_middle_;
}

// repeated string name_last = 4;
int AutofillProfileSpecifics::name_last_size() const {
  return name_last_.size();
}
void AutofillProfileSpecifics::clear_name_last() {
  name_last_.Clear();
}
const ::std::string& AutofillProfileSpecifics::name_last(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.name_last)
  return name_last_.Get(index);
}
::std::string* AutofillProfileSpecifics::mutable_name_last(int index) {
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.name_last)
  return name_last_.Mutable(index);
}
void AutofillProfileSpecifics::set_name_last(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.name_last)
  name_last_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_name_last(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.name_last)
  name_last_.Mutable(index)->assign(std::move(value));
}
#endif
void AutofillProfileSpecifics::set_name_last(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  name_last_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.name_last)
}
void AutofillProfileSpecifics::set_name_last(int index, const char* value, size_t size) {
  name_last_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.name_last)
}
::std::string* AutofillProfileSpecifics::add_name_last() {
  // @@protoc_insertion_point(field_add_mutable:sync_pb.AutofillProfileSpecifics.name_last)
  return name_last_.Add();
}
void AutofillProfileSpecifics::add_name_last(const ::std::string& value) {
  name_last_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.name_last)
}
#if LANG_CXX11
void AutofillProfileSpecifics::add_name_last(::std::string&& value) {
  name_last_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.name_last)
}
#endif
void AutofillProfileSpecifics::add_name_last(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  name_last_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:sync_pb.AutofillProfileSpecifics.name_last)
}
void AutofillProfileSpecifics::add_name_last(const char* value, size_t size) {
  name_last_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:sync_pb.AutofillProfileSpecifics.name_last)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AutofillProfileSpecifics::name_last() const {
  // @@protoc_insertion_point(field_list:sync_pb.AutofillProfileSpecifics.name_last)
  return name_last_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AutofillProfileSpecifics::mutable_name_last() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillProfileSpecifics.name_last)
  return &name_last_;
}

// repeated string name_full = 21;
int AutofillProfileSpecifics::name_full_size() const {
  return name_full_.size();
}
void AutofillProfileSpecifics::clear_name_full() {
  name_full_.Clear();
}
const ::std::string& AutofillProfileSpecifics::name_full(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.name_full)
  return name_full_.Get(index);
}
::std::string* AutofillProfileSpecifics::mutable_name_full(int index) {
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.name_full)
  return name_full_.Mutable(index);
}
void AutofillProfileSpecifics::set_name_full(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.name_full)
  name_full_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_name_full(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.name_full)
  name_full_.Mutable(index)->assign(std::move(value));
}
#endif
void AutofillProfileSpecifics::set_name_full(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  name_full_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.name_full)
}
void AutofillProfileSpecifics::set_name_full(int index, const char* value, size_t size) {
  name_full_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.name_full)
}
::std::string* AutofillProfileSpecifics::add_name_full() {
  // @@protoc_insertion_point(field_add_mutable:sync_pb.AutofillProfileSpecifics.name_full)
  return name_full_.Add();
}
void AutofillProfileSpecifics::add_name_full(const ::std::string& value) {
  name_full_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.name_full)
}
#if LANG_CXX11
void AutofillProfileSpecifics::add_name_full(::std::string&& value) {
  name_full_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.name_full)
}
#endif
void AutofillProfileSpecifics::add_name_full(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  name_full_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:sync_pb.AutofillProfileSpecifics.name_full)
}
void AutofillProfileSpecifics::add_name_full(const char* value, size_t size) {
  name_full_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:sync_pb.AutofillProfileSpecifics.name_full)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AutofillProfileSpecifics::name_full() const {
  // @@protoc_insertion_point(field_list:sync_pb.AutofillProfileSpecifics.name_full)
  return name_full_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AutofillProfileSpecifics::mutable_name_full() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillProfileSpecifics.name_full)
  return &name_full_;
}

// repeated string email_address = 5;
int AutofillProfileSpecifics::email_address_size() const {
  return email_address_.size();
}
void AutofillProfileSpecifics::clear_email_address() {
  email_address_.Clear();
}
const ::std::string& AutofillProfileSpecifics::email_address(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.email_address)
  return email_address_.Get(index);
}
::std::string* AutofillProfileSpecifics::mutable_email_address(int index) {
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.email_address)
  return email_address_.Mutable(index);
}
void AutofillProfileSpecifics::set_email_address(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.email_address)
  email_address_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_email_address(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.email_address)
  email_address_.Mutable(index)->assign(std::move(value));
}
#endif
void AutofillProfileSpecifics::set_email_address(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  email_address_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.email_address)
}
void AutofillProfileSpecifics::set_email_address(int index, const char* value, size_t size) {
  email_address_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.email_address)
}
::std::string* AutofillProfileSpecifics::add_email_address() {
  // @@protoc_insertion_point(field_add_mutable:sync_pb.AutofillProfileSpecifics.email_address)
  return email_address_.Add();
}
void AutofillProfileSpecifics::add_email_address(const ::std::string& value) {
  email_address_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.email_address)
}
#if LANG_CXX11
void AutofillProfileSpecifics::add_email_address(::std::string&& value) {
  email_address_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.email_address)
}
#endif
void AutofillProfileSpecifics::add_email_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  email_address_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:sync_pb.AutofillProfileSpecifics.email_address)
}
void AutofillProfileSpecifics::add_email_address(const char* value, size_t size) {
  email_address_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:sync_pb.AutofillProfileSpecifics.email_address)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AutofillProfileSpecifics::email_address() const {
  // @@protoc_insertion_point(field_list:sync_pb.AutofillProfileSpecifics.email_address)
  return email_address_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AutofillProfileSpecifics::mutable_email_address() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillProfileSpecifics.email_address)
  return &email_address_;
}

// optional string company_name = 6;
bool AutofillProfileSpecifics::has_company_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AutofillProfileSpecifics::set_has_company_name() {
  _has_bits_[0] |= 0x00000002u;
}
void AutofillProfileSpecifics::clear_has_company_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void AutofillProfileSpecifics::clear_company_name() {
  company_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_company_name();
}
const ::std::string& AutofillProfileSpecifics::company_name() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.company_name)
  return company_name_.GetNoArena();
}
void AutofillProfileSpecifics::set_company_name(const ::std::string& value) {
  set_has_company_name();
  company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.company_name)
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_company_name(::std::string&& value) {
  set_has_company_name();
  company_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AutofillProfileSpecifics.company_name)
}
#endif
void AutofillProfileSpecifics::set_company_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_company_name();
  company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.company_name)
}
void AutofillProfileSpecifics::set_company_name(const char* value, size_t size) {
  set_has_company_name();
  company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.company_name)
}
::std::string* AutofillProfileSpecifics::mutable_company_name() {
  set_has_company_name();
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.company_name)
  return company_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_company_name() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.company_name)
  clear_has_company_name();
  return company_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_company_name(::std::string* company_name) {
  if (company_name != NULL) {
    set_has_company_name();
  } else {
    clear_has_company_name();
  }
  company_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), company_name);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.company_name)
}

// optional string address_home_line1 = 7;
bool AutofillProfileSpecifics::has_address_home_line1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_line1() {
  _has_bits_[0] |= 0x00000004u;
}
void AutofillProfileSpecifics::clear_has_address_home_line1() {
  _has_bits_[0] &= ~0x00000004u;
}
void AutofillProfileSpecifics::clear_address_home_line1() {
  address_home_line1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address_home_line1();
}
const ::std::string& AutofillProfileSpecifics::address_home_line1() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_line1)
  return address_home_line1_.GetNoArena();
}
void AutofillProfileSpecifics::set_address_home_line1(const ::std::string& value) {
  set_has_address_home_line1();
  address_home_line1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_line1)
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_address_home_line1(::std::string&& value) {
  set_has_address_home_line1();
  address_home_line1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AutofillProfileSpecifics.address_home_line1)
}
#endif
void AutofillProfileSpecifics::set_address_home_line1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address_home_line1();
  address_home_line1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_line1)
}
void AutofillProfileSpecifics::set_address_home_line1(const char* value, size_t size) {
  set_has_address_home_line1();
  address_home_line1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_line1)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_line1() {
  set_has_address_home_line1();
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_line1)
  return address_home_line1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_line1() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_line1)
  clear_has_address_home_line1();
  return address_home_line1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_line1(::std::string* address_home_line1) {
  if (address_home_line1 != NULL) {
    set_has_address_home_line1();
  } else {
    clear_has_address_home_line1();
  }
  address_home_line1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_line1);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_line1)
}

// optional string address_home_line2 = 8;
bool AutofillProfileSpecifics::has_address_home_line2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_line2() {
  _has_bits_[0] |= 0x00000008u;
}
void AutofillProfileSpecifics::clear_has_address_home_line2() {
  _has_bits_[0] &= ~0x00000008u;
}
void AutofillProfileSpecifics::clear_address_home_line2() {
  address_home_line2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address_home_line2();
}
const ::std::string& AutofillProfileSpecifics::address_home_line2() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_line2)
  return address_home_line2_.GetNoArena();
}
void AutofillProfileSpecifics::set_address_home_line2(const ::std::string& value) {
  set_has_address_home_line2();
  address_home_line2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_line2)
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_address_home_line2(::std::string&& value) {
  set_has_address_home_line2();
  address_home_line2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AutofillProfileSpecifics.address_home_line2)
}
#endif
void AutofillProfileSpecifics::set_address_home_line2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address_home_line2();
  address_home_line2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_line2)
}
void AutofillProfileSpecifics::set_address_home_line2(const char* value, size_t size) {
  set_has_address_home_line2();
  address_home_line2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_line2)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_line2() {
  set_has_address_home_line2();
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_line2)
  return address_home_line2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_line2() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_line2)
  clear_has_address_home_line2();
  return address_home_line2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_line2(::std::string* address_home_line2) {
  if (address_home_line2 != NULL) {
    set_has_address_home_line2();
  } else {
    clear_has_address_home_line2();
  }
  address_home_line2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_line2);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_line2)
}

// optional string address_home_city = 9;
bool AutofillProfileSpecifics::has_address_home_city() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_city() {
  _has_bits_[0] |= 0x00000010u;
}
void AutofillProfileSpecifics::clear_has_address_home_city() {
  _has_bits_[0] &= ~0x00000010u;
}
void AutofillProfileSpecifics::clear_address_home_city() {
  address_home_city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address_home_city();
}
const ::std::string& AutofillProfileSpecifics::address_home_city() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_city)
  return address_home_city_.GetNoArena();
}
void AutofillProfileSpecifics::set_address_home_city(const ::std::string& value) {
  set_has_address_home_city();
  address_home_city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_city)
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_address_home_city(::std::string&& value) {
  set_has_address_home_city();
  address_home_city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AutofillProfileSpecifics.address_home_city)
}
#endif
void AutofillProfileSpecifics::set_address_home_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address_home_city();
  address_home_city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_city)
}
void AutofillProfileSpecifics::set_address_home_city(const char* value, size_t size) {
  set_has_address_home_city();
  address_home_city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_city)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_city() {
  set_has_address_home_city();
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_city)
  return address_home_city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_city() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_city)
  clear_has_address_home_city();
  return address_home_city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_city(::std::string* address_home_city) {
  if (address_home_city != NULL) {
    set_has_address_home_city();
  } else {
    clear_has_address_home_city();
  }
  address_home_city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_city);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_city)
}

// optional string address_home_state = 10;
bool AutofillProfileSpecifics::has_address_home_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_state() {
  _has_bits_[0] |= 0x00000020u;
}
void AutofillProfileSpecifics::clear_has_address_home_state() {
  _has_bits_[0] &= ~0x00000020u;
}
void AutofillProfileSpecifics::clear_address_home_state() {
  address_home_state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address_home_state();
}
const ::std::string& AutofillProfileSpecifics::address_home_state() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_state)
  return address_home_state_.GetNoArena();
}
void AutofillProfileSpecifics::set_address_home_state(const ::std::string& value) {
  set_has_address_home_state();
  address_home_state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_state)
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_address_home_state(::std::string&& value) {
  set_has_address_home_state();
  address_home_state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AutofillProfileSpecifics.address_home_state)
}
#endif
void AutofillProfileSpecifics::set_address_home_state(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address_home_state();
  address_home_state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_state)
}
void AutofillProfileSpecifics::set_address_home_state(const char* value, size_t size) {
  set_has_address_home_state();
  address_home_state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_state)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_state() {
  set_has_address_home_state();
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_state)
  return address_home_state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_state() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_state)
  clear_has_address_home_state();
  return address_home_state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_state(::std::string* address_home_state) {
  if (address_home_state != NULL) {
    set_has_address_home_state();
  } else {
    clear_has_address_home_state();
  }
  address_home_state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_state);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_state)
}

// optional string address_home_zip = 11;
bool AutofillProfileSpecifics::has_address_home_zip() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_zip() {
  _has_bits_[0] |= 0x00000040u;
}
void AutofillProfileSpecifics::clear_has_address_home_zip() {
  _has_bits_[0] &= ~0x00000040u;
}
void AutofillProfileSpecifics::clear_address_home_zip() {
  address_home_zip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address_home_zip();
}
const ::std::string& AutofillProfileSpecifics::address_home_zip() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_zip)
  return address_home_zip_.GetNoArena();
}
void AutofillProfileSpecifics::set_address_home_zip(const ::std::string& value) {
  set_has_address_home_zip();
  address_home_zip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_zip)
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_address_home_zip(::std::string&& value) {
  set_has_address_home_zip();
  address_home_zip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AutofillProfileSpecifics.address_home_zip)
}
#endif
void AutofillProfileSpecifics::set_address_home_zip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address_home_zip();
  address_home_zip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_zip)
}
void AutofillProfileSpecifics::set_address_home_zip(const char* value, size_t size) {
  set_has_address_home_zip();
  address_home_zip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_zip)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_zip() {
  set_has_address_home_zip();
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_zip)
  return address_home_zip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_zip() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_zip)
  clear_has_address_home_zip();
  return address_home_zip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_zip(::std::string* address_home_zip) {
  if (address_home_zip != NULL) {
    set_has_address_home_zip();
  } else {
    clear_has_address_home_zip();
  }
  address_home_zip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_zip);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_zip)
}

// optional string address_home_country = 12;
bool AutofillProfileSpecifics::has_address_home_country() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_country() {
  _has_bits_[0] |= 0x00000080u;
}
void AutofillProfileSpecifics::clear_has_address_home_country() {
  _has_bits_[0] &= ~0x00000080u;
}
void AutofillProfileSpecifics::clear_address_home_country() {
  address_home_country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address_home_country();
}
const ::std::string& AutofillProfileSpecifics::address_home_country() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_country)
  return address_home_country_.GetNoArena();
}
void AutofillProfileSpecifics::set_address_home_country(const ::std::string& value) {
  set_has_address_home_country();
  address_home_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_country)
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_address_home_country(::std::string&& value) {
  set_has_address_home_country();
  address_home_country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AutofillProfileSpecifics.address_home_country)
}
#endif
void AutofillProfileSpecifics::set_address_home_country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address_home_country();
  address_home_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_country)
}
void AutofillProfileSpecifics::set_address_home_country(const char* value, size_t size) {
  set_has_address_home_country();
  address_home_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_country)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_country() {
  set_has_address_home_country();
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_country)
  return address_home_country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_country() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_country)
  clear_has_address_home_country();
  return address_home_country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_country(::std::string* address_home_country) {
  if (address_home_country != NULL) {
    set_has_address_home_country();
  } else {
    clear_has_address_home_country();
  }
  address_home_country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_country);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_country)
}

// optional string address_home_street_address = 17;
bool AutofillProfileSpecifics::has_address_home_street_address() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_street_address() {
  _has_bits_[0] |= 0x00000800u;
}
void AutofillProfileSpecifics::clear_has_address_home_street_address() {
  _has_bits_[0] &= ~0x00000800u;
}
void AutofillProfileSpecifics::clear_address_home_street_address() {
  address_home_street_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address_home_street_address();
}
const ::std::string& AutofillProfileSpecifics::address_home_street_address() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_street_address)
  return address_home_street_address_.GetNoArena();
}
void AutofillProfileSpecifics::set_address_home_street_address(const ::std::string& value) {
  set_has_address_home_street_address();
  address_home_street_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_street_address)
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_address_home_street_address(::std::string&& value) {
  set_has_address_home_street_address();
  address_home_street_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AutofillProfileSpecifics.address_home_street_address)
}
#endif
void AutofillProfileSpecifics::set_address_home_street_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address_home_street_address();
  address_home_street_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_street_address)
}
void AutofillProfileSpecifics::set_address_home_street_address(const char* value, size_t size) {
  set_has_address_home_street_address();
  address_home_street_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_street_address)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_street_address() {
  set_has_address_home_street_address();
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_street_address)
  return address_home_street_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_street_address() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_street_address)
  clear_has_address_home_street_address();
  return address_home_street_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_street_address(::std::string* address_home_street_address) {
  if (address_home_street_address != NULL) {
    set_has_address_home_street_address();
  } else {
    clear_has_address_home_street_address();
  }
  address_home_street_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_street_address);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_street_address)
}

// optional string address_home_sorting_code = 18;
bool AutofillProfileSpecifics::has_address_home_sorting_code() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_sorting_code() {
  _has_bits_[0] |= 0x00001000u;
}
void AutofillProfileSpecifics::clear_has_address_home_sorting_code() {
  _has_bits_[0] &= ~0x00001000u;
}
void AutofillProfileSpecifics::clear_address_home_sorting_code() {
  address_home_sorting_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address_home_sorting_code();
}
const ::std::string& AutofillProfileSpecifics::address_home_sorting_code() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
  return address_home_sorting_code_.GetNoArena();
}
void AutofillProfileSpecifics::set_address_home_sorting_code(const ::std::string& value) {
  set_has_address_home_sorting_code();
  address_home_sorting_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_address_home_sorting_code(::std::string&& value) {
  set_has_address_home_sorting_code();
  address_home_sorting_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
}
#endif
void AutofillProfileSpecifics::set_address_home_sorting_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address_home_sorting_code();
  address_home_sorting_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
}
void AutofillProfileSpecifics::set_address_home_sorting_code(const char* value, size_t size) {
  set_has_address_home_sorting_code();
  address_home_sorting_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_sorting_code() {
  set_has_address_home_sorting_code();
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
  return address_home_sorting_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_sorting_code() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
  clear_has_address_home_sorting_code();
  return address_home_sorting_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_sorting_code(::std::string* address_home_sorting_code) {
  if (address_home_sorting_code != NULL) {
    set_has_address_home_sorting_code();
  } else {
    clear_has_address_home_sorting_code();
  }
  address_home_sorting_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_sorting_code);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
}

// optional string address_home_dependent_locality = 19;
bool AutofillProfileSpecifics::has_address_home_dependent_locality() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_dependent_locality() {
  _has_bits_[0] |= 0x00002000u;
}
void AutofillProfileSpecifics::clear_has_address_home_dependent_locality() {
  _has_bits_[0] &= ~0x00002000u;
}
void AutofillProfileSpecifics::clear_address_home_dependent_locality() {
  address_home_dependent_locality_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address_home_dependent_locality();
}
const ::std::string& AutofillProfileSpecifics::address_home_dependent_locality() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
  return address_home_dependent_locality_.GetNoArena();
}
void AutofillProfileSpecifics::set_address_home_dependent_locality(const ::std::string& value) {
  set_has_address_home_dependent_locality();
  address_home_dependent_locality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_address_home_dependent_locality(::std::string&& value) {
  set_has_address_home_dependent_locality();
  address_home_dependent_locality_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
}
#endif
void AutofillProfileSpecifics::set_address_home_dependent_locality(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address_home_dependent_locality();
  address_home_dependent_locality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
}
void AutofillProfileSpecifics::set_address_home_dependent_locality(const char* value, size_t size) {
  set_has_address_home_dependent_locality();
  address_home_dependent_locality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_dependent_locality() {
  set_has_address_home_dependent_locality();
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
  return address_home_dependent_locality_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_dependent_locality() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
  clear_has_address_home_dependent_locality();
  return address_home_dependent_locality_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_dependent_locality(::std::string* address_home_dependent_locality) {
  if (address_home_dependent_locality != NULL) {
    set_has_address_home_dependent_locality();
  } else {
    clear_has_address_home_dependent_locality();
  }
  address_home_dependent_locality_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_dependent_locality);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
}

// optional string address_home_language_code = 20;
bool AutofillProfileSpecifics::has_address_home_language_code() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_language_code() {
  _has_bits_[0] |= 0x00004000u;
}
void AutofillProfileSpecifics::clear_has_address_home_language_code() {
  _has_bits_[0] &= ~0x00004000u;
}
void AutofillProfileSpecifics::clear_address_home_language_code() {
  address_home_language_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address_home_language_code();
}
const ::std::string& AutofillProfileSpecifics::address_home_language_code() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_language_code)
  return address_home_language_code_.GetNoArena();
}
void AutofillProfileSpecifics::set_address_home_language_code(const ::std::string& value) {
  set_has_address_home_language_code();
  address_home_language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_language_code)
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_address_home_language_code(::std::string&& value) {
  set_has_address_home_language_code();
  address_home_language_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AutofillProfileSpecifics.address_home_language_code)
}
#endif
void AutofillProfileSpecifics::set_address_home_language_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address_home_language_code();
  address_home_language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_language_code)
}
void AutofillProfileSpecifics::set_address_home_language_code(const char* value, size_t size) {
  set_has_address_home_language_code();
  address_home_language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_language_code)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_language_code() {
  set_has_address_home_language_code();
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_language_code)
  return address_home_language_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_language_code() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_language_code)
  clear_has_address_home_language_code();
  return address_home_language_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_language_code(::std::string* address_home_language_code) {
  if (address_home_language_code != NULL) {
    set_has_address_home_language_code();
  } else {
    clear_has_address_home_language_code();
  }
  address_home_language_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_language_code);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_language_code)
}

// repeated string phone_home_whole_number = 13;
int AutofillProfileSpecifics::phone_home_whole_number_size() const {
  return phone_home_whole_number_.size();
}
void AutofillProfileSpecifics::clear_phone_home_whole_number() {
  phone_home_whole_number_.Clear();
}
const ::std::string& AutofillProfileSpecifics::phone_home_whole_number(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
  return phone_home_whole_number_.Get(index);
}
::std::string* AutofillProfileSpecifics::mutable_phone_home_whole_number(int index) {
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
  return phone_home_whole_number_.Mutable(index);
}
void AutofillProfileSpecifics::set_phone_home_whole_number(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
  phone_home_whole_number_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_phone_home_whole_number(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
  phone_home_whole_number_.Mutable(index)->assign(std::move(value));
}
#endif
void AutofillProfileSpecifics::set_phone_home_whole_number(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  phone_home_whole_number_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
}
void AutofillProfileSpecifics::set_phone_home_whole_number(int index, const char* value, size_t size) {
  phone_home_whole_number_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
}
::std::string* AutofillProfileSpecifics::add_phone_home_whole_number() {
  // @@protoc_insertion_point(field_add_mutable:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
  return phone_home_whole_number_.Add();
}
void AutofillProfileSpecifics::add_phone_home_whole_number(const ::std::string& value) {
  phone_home_whole_number_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
}
#if LANG_CXX11
void AutofillProfileSpecifics::add_phone_home_whole_number(::std::string&& value) {
  phone_home_whole_number_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
}
#endif
void AutofillProfileSpecifics::add_phone_home_whole_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  phone_home_whole_number_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
}
void AutofillProfileSpecifics::add_phone_home_whole_number(const char* value, size_t size) {
  phone_home_whole_number_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AutofillProfileSpecifics::phone_home_whole_number() const {
  // @@protoc_insertion_point(field_list:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
  return phone_home_whole_number_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AutofillProfileSpecifics::mutable_phone_home_whole_number() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
  return &phone_home_whole_number_;
}

// optional int64 validity_state_bitfield = 24;
bool AutofillProfileSpecifics::has_validity_state_bitfield() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void AutofillProfileSpecifics::set_has_validity_state_bitfield() {
  _has_bits_[0] |= 0x00020000u;
}
void AutofillProfileSpecifics::clear_has_validity_state_bitfield() {
  _has_bits_[0] &= ~0x00020000u;
}
void AutofillProfileSpecifics::clear_validity_state_bitfield() {
  validity_state_bitfield_ = GOOGLE_LONGLONG(0);
  clear_has_validity_state_bitfield();
}
::google::protobuf::int64 AutofillProfileSpecifics::validity_state_bitfield() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.validity_state_bitfield)
  return validity_state_bitfield_;
}
void AutofillProfileSpecifics::set_validity_state_bitfield(::google::protobuf::int64 value) {
  set_has_validity_state_bitfield();
  validity_state_bitfield_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.validity_state_bitfield)
}

// optional string label = 1 [deprecated = true];
bool AutofillProfileSpecifics::has_label() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AutofillProfileSpecifics::set_has_label() {
  _has_bits_[0] |= 0x00000001u;
}
void AutofillProfileSpecifics::clear_has_label() {
  _has_bits_[0] &= ~0x00000001u;
}
void AutofillProfileSpecifics::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_label();
}
const ::std::string& AutofillProfileSpecifics::label() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.label)
  return label_.GetNoArena();
}
void AutofillProfileSpecifics::set_label(const ::std::string& value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.label)
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_label(::std::string&& value) {
  set_has_label();
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AutofillProfileSpecifics.label)
}
#endif
void AutofillProfileSpecifics::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.label)
}
void AutofillProfileSpecifics::set_label(const char* value, size_t size) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.label)
}
::std::string* AutofillProfileSpecifics::mutable_label() {
  set_has_label();
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_label() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.label)
  clear_has_label();
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.label)
}

// optional string phone_fax_whole_number = 14 [deprecated = true];
bool AutofillProfileSpecifics::has_phone_fax_whole_number() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void AutofillProfileSpecifics::set_has_phone_fax_whole_number() {
  _has_bits_[0] |= 0x00000100u;
}
void AutofillProfileSpecifics::clear_has_phone_fax_whole_number() {
  _has_bits_[0] &= ~0x00000100u;
}
void AutofillProfileSpecifics::clear_phone_fax_whole_number() {
  phone_fax_whole_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone_fax_whole_number();
}
const ::std::string& AutofillProfileSpecifics::phone_fax_whole_number() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
  return phone_fax_whole_number_.GetNoArena();
}
void AutofillProfileSpecifics::set_phone_fax_whole_number(const ::std::string& value) {
  set_has_phone_fax_whole_number();
  phone_fax_whole_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
}
#if LANG_CXX11
void AutofillProfileSpecifics::set_phone_fax_whole_number(::std::string&& value) {
  set_has_phone_fax_whole_number();
  phone_fax_whole_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
}
#endif
void AutofillProfileSpecifics::set_phone_fax_whole_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone_fax_whole_number();
  phone_fax_whole_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
}
void AutofillProfileSpecifics::set_phone_fax_whole_number(const char* value, size_t size) {
  set_has_phone_fax_whole_number();
  phone_fax_whole_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
}
::std::string* AutofillProfileSpecifics::mutable_phone_fax_whole_number() {
  set_has_phone_fax_whole_number();
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
  return phone_fax_whole_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_phone_fax_whole_number() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
  clear_has_phone_fax_whole_number();
  return phone_fax_whole_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_phone_fax_whole_number(::std::string* phone_fax_whole_number) {
  if (phone_fax_whole_number != NULL) {
    set_has_phone_fax_whole_number();
  } else {
    clear_has_phone_fax_whole_number();
  }
  phone_fax_whole_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_fax_whole_number);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutofillSpecifics::kNameFieldNumber;
const int AutofillSpecifics::kValueFieldNumber;
const int AutofillSpecifics::kUsageTimestampFieldNumber;
const int AutofillSpecifics::kProfileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutofillSpecifics::AutofillSpecifics()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_autofill_5fspecifics_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.AutofillSpecifics)
}
AutofillSpecifics::AutofillSpecifics(const AutofillSpecifics& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      usage_timestamp_(from.usage_timestamp_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_profile()) {
    profile_ = new ::sync_pb::AutofillProfileSpecifics(*from.profile_);
  } else {
    profile_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sync_pb.AutofillSpecifics)
}

void AutofillSpecifics::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profile_ = NULL;
}

AutofillSpecifics::~AutofillSpecifics() {
  // @@protoc_insertion_point(destructor:sync_pb.AutofillSpecifics)
  SharedDtor();
}

void AutofillSpecifics::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete profile_;
  }
}

void AutofillSpecifics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AutofillSpecifics& AutofillSpecifics::default_instance() {
  protobuf_autofill_5fspecifics_2eproto::InitDefaults();
  return *internal_default_instance();
}

AutofillSpecifics* AutofillSpecifics::New(::google::protobuf::Arena* arena) const {
  AutofillSpecifics* n = new AutofillSpecifics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AutofillSpecifics::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.AutofillSpecifics)
  usage_timestamp_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_value()) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
    if (has_profile()) {
      GOOGLE_DCHECK(profile_ != NULL);
      profile_->::sync_pb::AutofillProfileSpecifics::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AutofillSpecifics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.AutofillSpecifics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 usage_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24u, input, this->mutable_usage_timestamp())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(26u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_usage_timestamp())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sync_pb.AutofillProfileSpecifics profile = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.AutofillSpecifics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.AutofillSpecifics)
  return false;
#undef DO_
}

void AutofillSpecifics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.AutofillSpecifics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // repeated int64 usage_timestamp = 3;
  for (int i = 0, n = this->usage_timestamp_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->usage_timestamp(i), output);
  }

  // optional .sync_pb.AutofillProfileSpecifics profile = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, *this->profile_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.AutofillSpecifics)
}

size_t AutofillSpecifics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.AutofillSpecifics)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated int64 usage_timestamp = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->usage_timestamp_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->usage_timestamp_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

    // optional .sync_pb.AutofillProfileSpecifics profile = 4;
    if (has_profile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->profile_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AutofillSpecifics::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AutofillSpecifics*>(&from));
}

void AutofillSpecifics::MergeFrom(const AutofillSpecifics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.AutofillSpecifics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  usage_timestamp_.MergeFrom(from.usage_timestamp_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_profile()->::sync_pb::AutofillProfileSpecifics::MergeFrom(from.profile());
    }
  }
}

void AutofillSpecifics::CopyFrom(const AutofillSpecifics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.AutofillSpecifics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutofillSpecifics::IsInitialized() const {
  return true;
}

void AutofillSpecifics::Swap(AutofillSpecifics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutofillSpecifics::InternalSwap(AutofillSpecifics* other) {
  usage_timestamp_.InternalSwap(&other->usage_timestamp_);
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  std::swap(profile_, other->profile_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string AutofillSpecifics::GetTypeName() const {
  return "sync_pb.AutofillSpecifics";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AutofillSpecifics

// optional string name = 1;
bool AutofillSpecifics::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AutofillSpecifics::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void AutofillSpecifics::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void AutofillSpecifics::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& AutofillSpecifics::name() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillSpecifics.name)
  return name_.GetNoArena();
}
void AutofillSpecifics::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AutofillSpecifics.name)
}
#if LANG_CXX11
void AutofillSpecifics::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AutofillSpecifics.name)
}
#endif
void AutofillSpecifics::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillSpecifics.name)
}
void AutofillSpecifics::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillSpecifics.name)
}
::std::string* AutofillSpecifics::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillSpecifics.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillSpecifics::release_name() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillSpecifics.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillSpecifics::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillSpecifics.name)
}

// optional string value = 2;
bool AutofillSpecifics::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AutofillSpecifics::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void AutofillSpecifics::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void AutofillSpecifics::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& AutofillSpecifics::value() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillSpecifics.value)
  return value_.GetNoArena();
}
void AutofillSpecifics::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AutofillSpecifics.value)
}
#if LANG_CXX11
void AutofillSpecifics::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AutofillSpecifics.value)
}
#endif
void AutofillSpecifics::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AutofillSpecifics.value)
}
void AutofillSpecifics::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillSpecifics.value)
}
::std::string* AutofillSpecifics::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillSpecifics.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillSpecifics::release_value() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillSpecifics.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillSpecifics::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillSpecifics.value)
}

// repeated int64 usage_timestamp = 3;
int AutofillSpecifics::usage_timestamp_size() const {
  return usage_timestamp_.size();
}
void AutofillSpecifics::clear_usage_timestamp() {
  usage_timestamp_.Clear();
}
::google::protobuf::int64 AutofillSpecifics::usage_timestamp(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillSpecifics.usage_timestamp)
  return usage_timestamp_.Get(index);
}
void AutofillSpecifics::set_usage_timestamp(int index, ::google::protobuf::int64 value) {
  usage_timestamp_.Set(index, value);
  // @@protoc_insertion_point(field_set:sync_pb.AutofillSpecifics.usage_timestamp)
}
void AutofillSpecifics::add_usage_timestamp(::google::protobuf::int64 value) {
  usage_timestamp_.Add(value);
  // @@protoc_insertion_point(field_add:sync_pb.AutofillSpecifics.usage_timestamp)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AutofillSpecifics::usage_timestamp() const {
  // @@protoc_insertion_point(field_list:sync_pb.AutofillSpecifics.usage_timestamp)
  return usage_timestamp_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AutofillSpecifics::mutable_usage_timestamp() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillSpecifics.usage_timestamp)
  return &usage_timestamp_;
}

// optional .sync_pb.AutofillProfileSpecifics profile = 4;
bool AutofillSpecifics::has_profile() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AutofillSpecifics::set_has_profile() {
  _has_bits_[0] |= 0x00000004u;
}
void AutofillSpecifics::clear_has_profile() {
  _has_bits_[0] &= ~0x00000004u;
}
void AutofillSpecifics::clear_profile() {
  if (profile_ != NULL) profile_->::sync_pb::AutofillProfileSpecifics::Clear();
  clear_has_profile();
}
const ::sync_pb::AutofillProfileSpecifics& AutofillSpecifics::profile() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillSpecifics.profile)
  return profile_ != NULL ? *profile_
                         : *::sync_pb::AutofillProfileSpecifics::internal_default_instance();
}
::sync_pb::AutofillProfileSpecifics* AutofillSpecifics::mutable_profile() {
  set_has_profile();
  if (profile_ == NULL) {
    profile_ = new ::sync_pb::AutofillProfileSpecifics;
  }
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillSpecifics.profile)
  return profile_;
}
::sync_pb::AutofillProfileSpecifics* AutofillSpecifics::release_profile() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillSpecifics.profile)
  clear_has_profile();
  ::sync_pb::AutofillProfileSpecifics* temp = profile_;
  profile_ = NULL;
  return temp;
}
void AutofillSpecifics::set_allocated_profile(::sync_pb::AutofillProfileSpecifics* profile) {
  delete profile_;
  profile_ = profile;
  if (profile) {
    set_has_profile();
  } else {
    clear_has_profile();
  }
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillSpecifics.profile)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WalletMaskedCreditCard::kIdFieldNumber;
const int WalletMaskedCreditCard::kStatusFieldNumber;
const int WalletMaskedCreditCard::kNameOnCardFieldNumber;
const int WalletMaskedCreditCard::kTypeFieldNumber;
const int WalletMaskedCreditCard::kLastFourFieldNumber;
const int WalletMaskedCreditCard::kExpMonthFieldNumber;
const int WalletMaskedCreditCard::kExpYearFieldNumber;
const int WalletMaskedCreditCard::kBillingAddressIdFieldNumber;
const int WalletMaskedCreditCard::kCardClassFieldNumber;
const int WalletMaskedCreditCard::kBankNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WalletMaskedCreditCard::WalletMaskedCreditCard()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_autofill_5fspecifics_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.WalletMaskedCreditCard)
}
WalletMaskedCreditCard::WalletMaskedCreditCard(const WalletMaskedCreditCard& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_on_card_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name_on_card()) {
    name_on_card_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_on_card_);
  }
  last_four_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_last_four()) {
    last_four_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_four_);
  }
  billing_address_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_billing_address_id()) {
    billing_address_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.billing_address_id_);
  }
  bank_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bank_name()) {
    bank_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_name_);
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&card_class_) -
    reinterpret_cast<char*>(&status_)) + sizeof(card_class_));
  // @@protoc_insertion_point(copy_constructor:sync_pb.WalletMaskedCreditCard)
}

void WalletMaskedCreditCard::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_on_card_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_four_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  billing_address_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&card_class_) -
      reinterpret_cast<char*>(&status_)) + sizeof(card_class_));
}

WalletMaskedCreditCard::~WalletMaskedCreditCard() {
  // @@protoc_insertion_point(destructor:sync_pb.WalletMaskedCreditCard)
  SharedDtor();
}

void WalletMaskedCreditCard::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_on_card_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_four_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  billing_address_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WalletMaskedCreditCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const WalletMaskedCreditCard& WalletMaskedCreditCard::default_instance() {
  protobuf_autofill_5fspecifics_2eproto::InitDefaults();
  return *internal_default_instance();
}

WalletMaskedCreditCard* WalletMaskedCreditCard::New(::google::protobuf::Arena* arena) const {
  WalletMaskedCreditCard* n = new WalletMaskedCreditCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WalletMaskedCreditCard::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.WalletMaskedCreditCard)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_id()) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (has_name_on_card()) {
      GOOGLE_DCHECK(!name_on_card_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_on_card_.UnsafeRawStringPointer())->clear();
    }
    if (has_last_four()) {
      GOOGLE_DCHECK(!last_four_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*last_four_.UnsafeRawStringPointer())->clear();
    }
    if (has_billing_address_id()) {
      GOOGLE_DCHECK(!billing_address_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*billing_address_id_.UnsafeRawStringPointer())->clear();
    }
    if (has_bank_name()) {
      GOOGLE_DCHECK(!bank_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bank_name_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 224u) {
    ::memset(&status_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&exp_month_) -
        reinterpret_cast<char*>(&status_)) + sizeof(exp_month_));
  }
  if (_has_bits_[8 / 32] & 768u) {
    ::memset(&exp_year_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&card_class_) -
        reinterpret_cast<char*>(&exp_year_)) + sizeof(card_class_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WalletMaskedCreditCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.WalletMaskedCreditCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sync_pb.WalletMaskedCreditCard.WalletCardStatus status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sync_pb::WalletMaskedCreditCard_WalletCardStatus_IsValid(value)) {
            set_status(static_cast< ::sync_pb::WalletMaskedCreditCard_WalletCardStatus >(value));
          } else {
            unknown_fields_stream.WriteVarint32(16u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name_on_card = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name_on_card()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sync_pb.WalletMaskedCreditCard.WalletCardType type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sync_pb::WalletMaskedCreditCard_WalletCardType_IsValid(value)) {
            set_type(static_cast< ::sync_pb::WalletMaskedCreditCard_WalletCardType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(32u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string last_four = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_four()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 exp_month = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_exp_month();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_month_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 exp_year = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_exp_year();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_year_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string billing_address_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_billing_address_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sync_pb.WalletMaskedCreditCard.WalletCardClass card_class = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sync_pb::WalletMaskedCreditCard_WalletCardClass_IsValid(value)) {
            set_card_class(static_cast< ::sync_pb::WalletMaskedCreditCard_WalletCardClass >(value));
          } else {
            unknown_fields_stream.WriteVarint32(72u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bank_name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.WalletMaskedCreditCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.WalletMaskedCreditCard)
  return false;
#undef DO_
}

void WalletMaskedCreditCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.WalletMaskedCreditCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .sync_pb.WalletMaskedCreditCard.WalletCardStatus status = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // optional string name_on_card = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name_on_card(), output);
  }

  // optional .sync_pb.WalletMaskedCreditCard.WalletCardType type = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // optional string last_four = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->last_four(), output);
  }

  // optional int32 exp_month = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->exp_month(), output);
  }

  // optional int32 exp_year = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->exp_year(), output);
  }

  // optional string billing_address_id = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->billing_address_id(), output);
  }

  // optional .sync_pb.WalletMaskedCreditCard.WalletCardClass card_class = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->card_class(), output);
  }

  // optional string bank_name = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->bank_name(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.WalletMaskedCreditCard)
}

size_t WalletMaskedCreditCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.WalletMaskedCreditCard)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string name_on_card = 3;
    if (has_name_on_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name_on_card());
    }

    // optional string last_four = 5;
    if (has_last_four()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->last_four());
    }

    // optional string billing_address_id = 8;
    if (has_billing_address_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->billing_address_id());
    }

    // optional string bank_name = 10;
    if (has_bank_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bank_name());
    }

    // optional .sync_pb.WalletMaskedCreditCard.WalletCardStatus status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional .sync_pb.WalletMaskedCreditCard.WalletCardType type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional int32 exp_month = 6;
    if (has_exp_month()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp_month());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional int32 exp_year = 7;
    if (has_exp_year()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp_year());
    }

    // optional .sync_pb.WalletMaskedCreditCard.WalletCardClass card_class = 9;
    if (has_card_class()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->card_class());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WalletMaskedCreditCard::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const WalletMaskedCreditCard*>(&from));
}

void WalletMaskedCreditCard::MergeFrom(const WalletMaskedCreditCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.WalletMaskedCreditCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name_on_card();
      name_on_card_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_on_card_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_last_four();
      last_four_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_four_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_billing_address_id();
      billing_address_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.billing_address_id_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_bank_name();
      bank_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_name_);
    }
    if (cached_has_bits & 0x00000020u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000040u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000080u) {
      exp_month_ = from.exp_month_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      exp_year_ = from.exp_year_;
    }
    if (cached_has_bits & 0x00000200u) {
      card_class_ = from.card_class_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WalletMaskedCreditCard::CopyFrom(const WalletMaskedCreditCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.WalletMaskedCreditCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WalletMaskedCreditCard::IsInitialized() const {
  return true;
}

void WalletMaskedCreditCard::Swap(WalletMaskedCreditCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WalletMaskedCreditCard::InternalSwap(WalletMaskedCreditCard* other) {
  id_.Swap(&other->id_);
  name_on_card_.Swap(&other->name_on_card_);
  last_four_.Swap(&other->last_four_);
  billing_address_id_.Swap(&other->billing_address_id_);
  bank_name_.Swap(&other->bank_name_);
  std::swap(status_, other->status_);
  std::swap(type_, other->type_);
  std::swap(exp_month_, other->exp_month_);
  std::swap(exp_year_, other->exp_year_);
  std::swap(card_class_, other->card_class_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string WalletMaskedCreditCard::GetTypeName() const {
  return "sync_pb.WalletMaskedCreditCard";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WalletMaskedCreditCard

// optional string id = 1;
bool WalletMaskedCreditCard::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void WalletMaskedCreditCard::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void WalletMaskedCreditCard::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void WalletMaskedCreditCard::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& WalletMaskedCreditCard::id() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.id)
  return id_.GetNoArena();
}
void WalletMaskedCreditCard::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.id)
}
#if LANG_CXX11
void WalletMaskedCreditCard::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.WalletMaskedCreditCard.id)
}
#endif
void WalletMaskedCreditCard::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletMaskedCreditCard.id)
}
void WalletMaskedCreditCard::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletMaskedCreditCard.id)
}
::std::string* WalletMaskedCreditCard::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletMaskedCreditCard.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletMaskedCreditCard::release_id() {
  // @@protoc_insertion_point(field_release:sync_pb.WalletMaskedCreditCard.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletMaskedCreditCard::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletMaskedCreditCard.id)
}

// optional .sync_pb.WalletMaskedCreditCard.WalletCardStatus status = 2;
bool WalletMaskedCreditCard::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void WalletMaskedCreditCard::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
void WalletMaskedCreditCard::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
void WalletMaskedCreditCard::clear_status() {
  status_ = 0;
  clear_has_status();
}
::sync_pb::WalletMaskedCreditCard_WalletCardStatus WalletMaskedCreditCard::status() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.status)
  return static_cast< ::sync_pb::WalletMaskedCreditCard_WalletCardStatus >(status_);
}
void WalletMaskedCreditCard::set_status(::sync_pb::WalletMaskedCreditCard_WalletCardStatus value) {
  assert(::sync_pb::WalletMaskedCreditCard_WalletCardStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.status)
}

// optional string name_on_card = 3;
bool WalletMaskedCreditCard::has_name_on_card() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void WalletMaskedCreditCard::set_has_name_on_card() {
  _has_bits_[0] |= 0x00000002u;
}
void WalletMaskedCreditCard::clear_has_name_on_card() {
  _has_bits_[0] &= ~0x00000002u;
}
void WalletMaskedCreditCard::clear_name_on_card() {
  name_on_card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name_on_card();
}
const ::std::string& WalletMaskedCreditCard::name_on_card() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.name_on_card)
  return name_on_card_.GetNoArena();
}
void WalletMaskedCreditCard::set_name_on_card(const ::std::string& value) {
  set_has_name_on_card();
  name_on_card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.name_on_card)
}
#if LANG_CXX11
void WalletMaskedCreditCard::set_name_on_card(::std::string&& value) {
  set_has_name_on_card();
  name_on_card_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.WalletMaskedCreditCard.name_on_card)
}
#endif
void WalletMaskedCreditCard::set_name_on_card(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name_on_card();
  name_on_card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletMaskedCreditCard.name_on_card)
}
void WalletMaskedCreditCard::set_name_on_card(const char* value, size_t size) {
  set_has_name_on_card();
  name_on_card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletMaskedCreditCard.name_on_card)
}
::std::string* WalletMaskedCreditCard::mutable_name_on_card() {
  set_has_name_on_card();
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletMaskedCreditCard.name_on_card)
  return name_on_card_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletMaskedCreditCard::release_name_on_card() {
  // @@protoc_insertion_point(field_release:sync_pb.WalletMaskedCreditCard.name_on_card)
  clear_has_name_on_card();
  return name_on_card_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletMaskedCreditCard::set_allocated_name_on_card(::std::string* name_on_card) {
  if (name_on_card != NULL) {
    set_has_name_on_card();
  } else {
    clear_has_name_on_card();
  }
  name_on_card_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name_on_card);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletMaskedCreditCard.name_on_card)
}

// optional .sync_pb.WalletMaskedCreditCard.WalletCardType type = 4;
bool WalletMaskedCreditCard::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void WalletMaskedCreditCard::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
void WalletMaskedCreditCard::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
void WalletMaskedCreditCard::clear_type() {
  type_ = 0;
  clear_has_type();
}
::sync_pb::WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::type() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.type)
  return static_cast< ::sync_pb::WalletMaskedCreditCard_WalletCardType >(type_);
}
void WalletMaskedCreditCard::set_type(::sync_pb::WalletMaskedCreditCard_WalletCardType value) {
  assert(::sync_pb::WalletMaskedCreditCard_WalletCardType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.type)
}

// optional string last_four = 5;
bool WalletMaskedCreditCard::has_last_four() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void WalletMaskedCreditCard::set_has_last_four() {
  _has_bits_[0] |= 0x00000004u;
}
void WalletMaskedCreditCard::clear_has_last_four() {
  _has_bits_[0] &= ~0x00000004u;
}
void WalletMaskedCreditCard::clear_last_four() {
  last_four_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_last_four();
}
const ::std::string& WalletMaskedCreditCard::last_four() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.last_four)
  return last_four_.GetNoArena();
}
void WalletMaskedCreditCard::set_last_four(const ::std::string& value) {
  set_has_last_four();
  last_four_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.last_four)
}
#if LANG_CXX11
void WalletMaskedCreditCard::set_last_four(::std::string&& value) {
  set_has_last_four();
  last_four_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.WalletMaskedCreditCard.last_four)
}
#endif
void WalletMaskedCreditCard::set_last_four(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_last_four();
  last_four_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletMaskedCreditCard.last_four)
}
void WalletMaskedCreditCard::set_last_four(const char* value, size_t size) {
  set_has_last_four();
  last_four_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletMaskedCreditCard.last_four)
}
::std::string* WalletMaskedCreditCard::mutable_last_four() {
  set_has_last_four();
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletMaskedCreditCard.last_four)
  return last_four_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletMaskedCreditCard::release_last_four() {
  // @@protoc_insertion_point(field_release:sync_pb.WalletMaskedCreditCard.last_four)
  clear_has_last_four();
  return last_four_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletMaskedCreditCard::set_allocated_last_four(::std::string* last_four) {
  if (last_four != NULL) {
    set_has_last_four();
  } else {
    clear_has_last_four();
  }
  last_four_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_four);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletMaskedCreditCard.last_four)
}

// optional int32 exp_month = 6;
bool WalletMaskedCreditCard::has_exp_month() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void WalletMaskedCreditCard::set_has_exp_month() {
  _has_bits_[0] |= 0x00000080u;
}
void WalletMaskedCreditCard::clear_has_exp_month() {
  _has_bits_[0] &= ~0x00000080u;
}
void WalletMaskedCreditCard::clear_exp_month() {
  exp_month_ = 0;
  clear_has_exp_month();
}
::google::protobuf::int32 WalletMaskedCreditCard::exp_month() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.exp_month)
  return exp_month_;
}
void WalletMaskedCreditCard::set_exp_month(::google::protobuf::int32 value) {
  set_has_exp_month();
  exp_month_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.exp_month)
}

// optional int32 exp_year = 7;
bool WalletMaskedCreditCard::has_exp_year() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void WalletMaskedCreditCard::set_has_exp_year() {
  _has_bits_[0] |= 0x00000100u;
}
void WalletMaskedCreditCard::clear_has_exp_year() {
  _has_bits_[0] &= ~0x00000100u;
}
void WalletMaskedCreditCard::clear_exp_year() {
  exp_year_ = 0;
  clear_has_exp_year();
}
::google::protobuf::int32 WalletMaskedCreditCard::exp_year() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.exp_year)
  return exp_year_;
}
void WalletMaskedCreditCard::set_exp_year(::google::protobuf::int32 value) {
  set_has_exp_year();
  exp_year_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.exp_year)
}

// optional string billing_address_id = 8;
bool WalletMaskedCreditCard::has_billing_address_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void WalletMaskedCreditCard::set_has_billing_address_id() {
  _has_bits_[0] |= 0x00000008u;
}
void WalletMaskedCreditCard::clear_has_billing_address_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void WalletMaskedCreditCard::clear_billing_address_id() {
  billing_address_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_billing_address_id();
}
const ::std::string& WalletMaskedCreditCard::billing_address_id() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.billing_address_id)
  return billing_address_id_.GetNoArena();
}
void WalletMaskedCreditCard::set_billing_address_id(const ::std::string& value) {
  set_has_billing_address_id();
  billing_address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.billing_address_id)
}
#if LANG_CXX11
void WalletMaskedCreditCard::set_billing_address_id(::std::string&& value) {
  set_has_billing_address_id();
  billing_address_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.WalletMaskedCreditCard.billing_address_id)
}
#endif
void WalletMaskedCreditCard::set_billing_address_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_billing_address_id();
  billing_address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletMaskedCreditCard.billing_address_id)
}
void WalletMaskedCreditCard::set_billing_address_id(const char* value, size_t size) {
  set_has_billing_address_id();
  billing_address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletMaskedCreditCard.billing_address_id)
}
::std::string* WalletMaskedCreditCard::mutable_billing_address_id() {
  set_has_billing_address_id();
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletMaskedCreditCard.billing_address_id)
  return billing_address_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletMaskedCreditCard::release_billing_address_id() {
  // @@protoc_insertion_point(field_release:sync_pb.WalletMaskedCreditCard.billing_address_id)
  clear_has_billing_address_id();
  return billing_address_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletMaskedCreditCard::set_allocated_billing_address_id(::std::string* billing_address_id) {
  if (billing_address_id != NULL) {
    set_has_billing_address_id();
  } else {
    clear_has_billing_address_id();
  }
  billing_address_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billing_address_id);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletMaskedCreditCard.billing_address_id)
}

// optional .sync_pb.WalletMaskedCreditCard.WalletCardClass card_class = 9;
bool WalletMaskedCreditCard::has_card_class() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void WalletMaskedCreditCard::set_has_card_class() {
  _has_bits_[0] |= 0x00000200u;
}
void WalletMaskedCreditCard::clear_has_card_class() {
  _has_bits_[0] &= ~0x00000200u;
}
void WalletMaskedCreditCard::clear_card_class() {
  card_class_ = 0;
  clear_has_card_class();
}
::sync_pb::WalletMaskedCreditCard_WalletCardClass WalletMaskedCreditCard::card_class() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.card_class)
  return static_cast< ::sync_pb::WalletMaskedCreditCard_WalletCardClass >(card_class_);
}
void WalletMaskedCreditCard::set_card_class(::sync_pb::WalletMaskedCreditCard_WalletCardClass value) {
  assert(::sync_pb::WalletMaskedCreditCard_WalletCardClass_IsValid(value));
  set_has_card_class();
  card_class_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.card_class)
}

// optional string bank_name = 10;
bool WalletMaskedCreditCard::has_bank_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void WalletMaskedCreditCard::set_has_bank_name() {
  _has_bits_[0] |= 0x00000010u;
}
void WalletMaskedCreditCard::clear_has_bank_name() {
  _has_bits_[0] &= ~0x00000010u;
}
void WalletMaskedCreditCard::clear_bank_name() {
  bank_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bank_name();
}
const ::std::string& WalletMaskedCreditCard::bank_name() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.bank_name)
  return bank_name_.GetNoArena();
}
void WalletMaskedCreditCard::set_bank_name(const ::std::string& value) {
  set_has_bank_name();
  bank_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.bank_name)
}
#if LANG_CXX11
void WalletMaskedCreditCard::set_bank_name(::std::string&& value) {
  set_has_bank_name();
  bank_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.WalletMaskedCreditCard.bank_name)
}
#endif
void WalletMaskedCreditCard::set_bank_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bank_name();
  bank_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletMaskedCreditCard.bank_name)
}
void WalletMaskedCreditCard::set_bank_name(const char* value, size_t size) {
  set_has_bank_name();
  bank_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletMaskedCreditCard.bank_name)
}
::std::string* WalletMaskedCreditCard::mutable_bank_name() {
  set_has_bank_name();
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletMaskedCreditCard.bank_name)
  return bank_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletMaskedCreditCard::release_bank_name() {
  // @@protoc_insertion_point(field_release:sync_pb.WalletMaskedCreditCard.bank_name)
  clear_has_bank_name();
  return bank_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletMaskedCreditCard::set_allocated_bank_name(::std::string* bank_name) {
  if (bank_name != NULL) {
    set_has_bank_name();
  } else {
    clear_has_bank_name();
  }
  bank_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_name);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletMaskedCreditCard.bank_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WalletPostalAddress::kIdFieldNumber;
const int WalletPostalAddress::kRecipientNameFieldNumber;
const int WalletPostalAddress::kCompanyNameFieldNumber;
const int WalletPostalAddress::kStreetAddressFieldNumber;
const int WalletPostalAddress::kAddress1FieldNumber;
const int WalletPostalAddress::kAddress2FieldNumber;
const int WalletPostalAddress::kAddress3FieldNumber;
const int WalletPostalAddress::kAddress4FieldNumber;
const int WalletPostalAddress::kPostalCodeFieldNumber;
const int WalletPostalAddress::kSortingCodeFieldNumber;
const int WalletPostalAddress::kCountryCodeFieldNumber;
const int WalletPostalAddress::kLanguageCodeFieldNumber;
const int WalletPostalAddress::kPhoneNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WalletPostalAddress::WalletPostalAddress()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_autofill_5fspecifics_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.WalletPostalAddress)
}
WalletPostalAddress::WalletPostalAddress(const WalletPostalAddress& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      street_address_(from.street_address_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  company_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_company_name()) {
    company_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.company_name_);
  }
  address_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address_1()) {
    address_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_1_);
  }
  address_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address_2()) {
    address_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_2_);
  }
  address_3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address_3()) {
    address_3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_3_);
  }
  address_4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address_4()) {
    address_4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_4_);
  }
  postal_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_postal_code()) {
    postal_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.postal_code_);
  }
  sorting_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sorting_code()) {
    sorting_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sorting_code_);
  }
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_country_code()) {
    country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
  }
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_language_code()) {
    language_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code_);
  }
  recipient_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_recipient_name()) {
    recipient_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recipient_name_);
  }
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phone_number()) {
    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  // @@protoc_insertion_point(copy_constructor:sync_pb.WalletPostalAddress)
}

void WalletPostalAddress::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  company_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  postal_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sorting_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recipient_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WalletPostalAddress::~WalletPostalAddress() {
  // @@protoc_insertion_point(destructor:sync_pb.WalletPostalAddress)
  SharedDtor();
}

void WalletPostalAddress::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  company_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_4_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  postal_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sorting_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recipient_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WalletPostalAddress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const WalletPostalAddress& WalletPostalAddress::default_instance() {
  protobuf_autofill_5fspecifics_2eproto::InitDefaults();
  return *internal_default_instance();
}

WalletPostalAddress* WalletPostalAddress::New(::google::protobuf::Arena* arena) const {
  WalletPostalAddress* n = new WalletPostalAddress;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WalletPostalAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.WalletPostalAddress)
  street_address_.Clear();
  if (_has_bits_[0 / 32] & 255u) {
    if (has_id()) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (has_company_name()) {
      GOOGLE_DCHECK(!company_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*company_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_address_1()) {
      GOOGLE_DCHECK(!address_1_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*address_1_.UnsafeRawStringPointer())->clear();
    }
    if (has_address_2()) {
      GOOGLE_DCHECK(!address_2_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*address_2_.UnsafeRawStringPointer())->clear();
    }
    if (has_address_3()) {
      GOOGLE_DCHECK(!address_3_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*address_3_.UnsafeRawStringPointer())->clear();
    }
    if (has_address_4()) {
      GOOGLE_DCHECK(!address_4_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*address_4_.UnsafeRawStringPointer())->clear();
    }
    if (has_postal_code()) {
      GOOGLE_DCHECK(!postal_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*postal_code_.UnsafeRawStringPointer())->clear();
    }
    if (has_sorting_code()) {
      GOOGLE_DCHECK(!sorting_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sorting_code_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 3840u) {
    if (has_country_code()) {
      GOOGLE_DCHECK(!country_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*country_code_.UnsafeRawStringPointer())->clear();
    }
    if (has_language_code()) {
      GOOGLE_DCHECK(!language_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*language_code_.UnsafeRawStringPointer())->clear();
    }
    if (has_recipient_name()) {
      GOOGLE_DCHECK(!recipient_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*recipient_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_phone_number()) {
      GOOGLE_DCHECK(!phone_number_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*phone_number_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WalletPostalAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.WalletPostalAddress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string company_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_company_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string street_address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_street_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string address_1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address_1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string address_2 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address_2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string address_3 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address_3()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string address_4 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address_4()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string postal_code = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_postal_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sorting_code = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sorting_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string country_code = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string language_code = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string recipient_name = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recipient_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phone_number = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_number()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.WalletPostalAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.WalletPostalAddress)
  return false;
#undef DO_
}

void WalletPostalAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.WalletPostalAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string company_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->company_name(), output);
  }

  // repeated string street_address = 3;
  for (int i = 0, n = this->street_address_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->street_address(i), output);
  }

  // optional string address_1 = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->address_1(), output);
  }

  // optional string address_2 = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->address_2(), output);
  }

  // optional string address_3 = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->address_3(), output);
  }

  // optional string address_4 = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->address_4(), output);
  }

  // optional string postal_code = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->postal_code(), output);
  }

  // optional string sorting_code = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->sorting_code(), output);
  }

  // optional string country_code = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->country_code(), output);
  }

  // optional string language_code = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->language_code(), output);
  }

  // optional string recipient_name = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->recipient_name(), output);
  }

  // optional string phone_number = 13;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->phone_number(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.WalletPostalAddress)
}

size_t WalletPostalAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.WalletPostalAddress)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated string street_address = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->street_address_size());
  for (int i = 0, n = this->street_address_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->street_address(i));
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string company_name = 2;
    if (has_company_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->company_name());
    }

    // optional string address_1 = 4;
    if (has_address_1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address_1());
    }

    // optional string address_2 = 5;
    if (has_address_2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address_2());
    }

    // optional string address_3 = 6;
    if (has_address_3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address_3());
    }

    // optional string address_4 = 7;
    if (has_address_4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address_4());
    }

    // optional string postal_code = 8;
    if (has_postal_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->postal_code());
    }

    // optional string sorting_code = 9;
    if (has_sorting_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sorting_code());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional string country_code = 10;
    if (has_country_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country_code());
    }

    // optional string language_code = 11;
    if (has_language_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->language_code());
    }

    // optional string recipient_name = 12;
    if (has_recipient_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->recipient_name());
    }

    // optional string phone_number = 13;
    if (has_phone_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone_number());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WalletPostalAddress::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const WalletPostalAddress*>(&from));
}

void WalletPostalAddress::MergeFrom(const WalletPostalAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.WalletPostalAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  street_address_.MergeFrom(from.street_address_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_company_name();
      company_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.company_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_address_1();
      address_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_1_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_address_2();
      address_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_2_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_address_3();
      address_3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_3_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_address_4();
      address_4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_4_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_postal_code();
      postal_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.postal_code_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_sorting_code();
      sorting_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sorting_code_);
    }
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_country_code();
      country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_language_code();
      language_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_recipient_name();
      recipient_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recipient_name_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_phone_number();
      phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
    }
  }
}

void WalletPostalAddress::CopyFrom(const WalletPostalAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.WalletPostalAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WalletPostalAddress::IsInitialized() const {
  return true;
}

void WalletPostalAddress::Swap(WalletPostalAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WalletPostalAddress::InternalSwap(WalletPostalAddress* other) {
  street_address_.InternalSwap(&other->street_address_);
  id_.Swap(&other->id_);
  company_name_.Swap(&other->company_name_);
  address_1_.Swap(&other->address_1_);
  address_2_.Swap(&other->address_2_);
  address_3_.Swap(&other->address_3_);
  address_4_.Swap(&other->address_4_);
  postal_code_.Swap(&other->postal_code_);
  sorting_code_.Swap(&other->sorting_code_);
  country_code_.Swap(&other->country_code_);
  language_code_.Swap(&other->language_code_);
  recipient_name_.Swap(&other->recipient_name_);
  phone_number_.Swap(&other->phone_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string WalletPostalAddress::GetTypeName() const {
  return "sync_pb.WalletPostalAddress";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WalletPostalAddress

// optional string id = 1;
bool WalletPostalAddress::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void WalletPostalAddress::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void WalletPostalAddress::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void WalletPostalAddress::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& WalletPostalAddress::id() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.id)
  return id_.GetNoArena();
}
void WalletPostalAddress::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.id)
}
#if LANG_CXX11
void WalletPostalAddress::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.WalletPostalAddress.id)
}
#endif
void WalletPostalAddress::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.id)
}
void WalletPostalAddress::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.id)
}
::std::string* WalletPostalAddress::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_id() {
  // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.id)
}

// optional string recipient_name = 12;
bool WalletPostalAddress::has_recipient_name() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void WalletPostalAddress::set_has_recipient_name() {
  _has_bits_[0] |= 0x00000400u;
}
void WalletPostalAddress::clear_has_recipient_name() {
  _has_bits_[0] &= ~0x00000400u;
}
void WalletPostalAddress::clear_recipient_name() {
  recipient_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recipient_name();
}
const ::std::string& WalletPostalAddress::recipient_name() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.recipient_name)
  return recipient_name_.GetNoArena();
}
void WalletPostalAddress::set_recipient_name(const ::std::string& value) {
  set_has_recipient_name();
  recipient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.recipient_name)
}
#if LANG_CXX11
void WalletPostalAddress::set_recipient_name(::std::string&& value) {
  set_has_recipient_name();
  recipient_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.WalletPostalAddress.recipient_name)
}
#endif
void WalletPostalAddress::set_recipient_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_recipient_name();
  recipient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.recipient_name)
}
void WalletPostalAddress::set_recipient_name(const char* value, size_t size) {
  set_has_recipient_name();
  recipient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.recipient_name)
}
::std::string* WalletPostalAddress::mutable_recipient_name() {
  set_has_recipient_name();
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.recipient_name)
  return recipient_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_recipient_name() {
  // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.recipient_name)
  clear_has_recipient_name();
  return recipient_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_recipient_name(::std::string* recipient_name) {
  if (recipient_name != NULL) {
    set_has_recipient_name();
  } else {
    clear_has_recipient_name();
  }
  recipient_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recipient_name);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.recipient_name)
}

// optional string company_name = 2;
bool WalletPostalAddress::has_company_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void WalletPostalAddress::set_has_company_name() {
  _has_bits_[0] |= 0x00000002u;
}
void WalletPostalAddress::clear_has_company_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void WalletPostalAddress::clear_company_name() {
  company_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_company_name();
}
const ::std::string& WalletPostalAddress::company_name() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.company_name)
  return company_name_.GetNoArena();
}
void WalletPostalAddress::set_company_name(const ::std::string& value) {
  set_has_company_name();
  company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.company_name)
}
#if LANG_CXX11
void WalletPostalAddress::set_company_name(::std::string&& value) {
  set_has_company_name();
  company_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.WalletPostalAddress.company_name)
}
#endif
void WalletPostalAddress::set_company_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_company_name();
  company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.company_name)
}
void WalletPostalAddress::set_company_name(const char* value, size_t size) {
  set_has_company_name();
  company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.company_name)
}
::std::string* WalletPostalAddress::mutable_company_name() {
  set_has_company_name();
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.company_name)
  return company_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_company_name() {
  // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.company_name)
  clear_has_company_name();
  return company_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_company_name(::std::string* company_name) {
  if (company_name != NULL) {
    set_has_company_name();
  } else {
    clear_has_company_name();
  }
  company_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), company_name);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.company_name)
}

// repeated string street_address = 3;
int WalletPostalAddress::street_address_size() const {
  return street_address_.size();
}
void WalletPostalAddress::clear_street_address() {
  street_address_.Clear();
}
const ::std::string& WalletPostalAddress::street_address(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.street_address)
  return street_address_.Get(index);
}
::std::string* WalletPostalAddress::mutable_street_address(int index) {
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.street_address)
  return street_address_.Mutable(index);
}
void WalletPostalAddress::set_street_address(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.street_address)
  street_address_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void WalletPostalAddress::set_street_address(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.street_address)
  street_address_.Mutable(index)->assign(std::move(value));
}
#endif
void WalletPostalAddress::set_street_address(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  street_address_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.street_address)
}
void WalletPostalAddress::set_street_address(int index, const char* value, size_t size) {
  street_address_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.street_address)
}
::std::string* WalletPostalAddress::add_street_address() {
  // @@protoc_insertion_point(field_add_mutable:sync_pb.WalletPostalAddress.street_address)
  return street_address_.Add();
}
void WalletPostalAddress::add_street_address(const ::std::string& value) {
  street_address_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:sync_pb.WalletPostalAddress.street_address)
}
#if LANG_CXX11
void WalletPostalAddress::add_street_address(::std::string&& value) {
  street_address_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:sync_pb.WalletPostalAddress.street_address)
}
#endif
void WalletPostalAddress::add_street_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  street_address_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:sync_pb.WalletPostalAddress.street_address)
}
void WalletPostalAddress::add_street_address(const char* value, size_t size) {
  street_address_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:sync_pb.WalletPostalAddress.street_address)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
WalletPostalAddress::street_address() const {
  // @@protoc_insertion_point(field_list:sync_pb.WalletPostalAddress.street_address)
  return street_address_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
WalletPostalAddress::mutable_street_address() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.WalletPostalAddress.street_address)
  return &street_address_;
}

// optional string address_1 = 4;
bool WalletPostalAddress::has_address_1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void WalletPostalAddress::set_has_address_1() {
  _has_bits_[0] |= 0x00000004u;
}
void WalletPostalAddress::clear_has_address_1() {
  _has_bits_[0] &= ~0x00000004u;
}
void WalletPostalAddress::clear_address_1() {
  address_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address_1();
}
const ::std::string& WalletPostalAddress::address_1() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.address_1)
  return address_1_.GetNoArena();
}
void WalletPostalAddress::set_address_1(const ::std::string& value) {
  set_has_address_1();
  address_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.address_1)
}
#if LANG_CXX11
void WalletPostalAddress::set_address_1(::std::string&& value) {
  set_has_address_1();
  address_1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.WalletPostalAddress.address_1)
}
#endif
void WalletPostalAddress::set_address_1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address_1();
  address_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.address_1)
}
void WalletPostalAddress::set_address_1(const char* value, size_t size) {
  set_has_address_1();
  address_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.address_1)
}
::std::string* WalletPostalAddress::mutable_address_1() {
  set_has_address_1();
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.address_1)
  return address_1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_address_1() {
  // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.address_1)
  clear_has_address_1();
  return address_1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_address_1(::std::string* address_1) {
  if (address_1 != NULL) {
    set_has_address_1();
  } else {
    clear_has_address_1();
  }
  address_1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_1);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.address_1)
}

// optional string address_2 = 5;
bool WalletPostalAddress::has_address_2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void WalletPostalAddress::set_has_address_2() {
  _has_bits_[0] |= 0x00000008u;
}
void WalletPostalAddress::clear_has_address_2() {
  _has_bits_[0] &= ~0x00000008u;
}
void WalletPostalAddress::clear_address_2() {
  address_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address_2();
}
const ::std::string& WalletPostalAddress::address_2() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.address_2)
  return address_2_.GetNoArena();
}
void WalletPostalAddress::set_address_2(const ::std::string& value) {
  set_has_address_2();
  address_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.address_2)
}
#if LANG_CXX11
void WalletPostalAddress::set_address_2(::std::string&& value) {
  set_has_address_2();
  address_2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.WalletPostalAddress.address_2)
}
#endif
void WalletPostalAddress::set_address_2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address_2();
  address_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.address_2)
}
void WalletPostalAddress::set_address_2(const char* value, size_t size) {
  set_has_address_2();
  address_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.address_2)
}
::std::string* WalletPostalAddress::mutable_address_2() {
  set_has_address_2();
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.address_2)
  return address_2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_address_2() {
  // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.address_2)
  clear_has_address_2();
  return address_2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_address_2(::std::string* address_2) {
  if (address_2 != NULL) {
    set_has_address_2();
  } else {
    clear_has_address_2();
  }
  address_2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_2);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.address_2)
}

// optional string address_3 = 6;
bool WalletPostalAddress::has_address_3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void WalletPostalAddress::set_has_address_3() {
  _has_bits_[0] |= 0x00000010u;
}
void WalletPostalAddress::clear_has_address_3() {
  _has_bits_[0] &= ~0x00000010u;
}
void WalletPostalAddress::clear_address_3() {
  address_3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address_3();
}
const ::std::string& WalletPostalAddress::address_3() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.address_3)
  return address_3_.GetNoArena();
}
void WalletPostalAddress::set_address_3(const ::std::string& value) {
  set_has_address_3();
  address_3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.address_3)
}
#if LANG_CXX11
void WalletPostalAddress::set_address_3(::std::string&& value) {
  set_has_address_3();
  address_3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.WalletPostalAddress.address_3)
}
#endif
void WalletPostalAddress::set_address_3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address_3();
  address_3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.address_3)
}
void WalletPostalAddress::set_address_3(const char* value, size_t size) {
  set_has_address_3();
  address_3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.address_3)
}
::std::string* WalletPostalAddress::mutable_address_3() {
  set_has_address_3();
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.address_3)
  return address_3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_address_3() {
  // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.address_3)
  clear_has_address_3();
  return address_3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_address_3(::std::string* address_3) {
  if (address_3 != NULL) {
    set_has_address_3();
  } else {
    clear_has_address_3();
  }
  address_3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_3);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.address_3)
}

// optional string address_4 = 7;
bool WalletPostalAddress::has_address_4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void WalletPostalAddress::set_has_address_4() {
  _has_bits_[0] |= 0x00000020u;
}
void WalletPostalAddress::clear_has_address_4() {
  _has_bits_[0] &= ~0x00000020u;
}
void WalletPostalAddress::clear_address_4() {
  address_4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address_4();
}
const ::std::string& WalletPostalAddress::address_4() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.address_4)
  return address_4_.GetNoArena();
}
void WalletPostalAddress::set_address_4(const ::std::string& value) {
  set_has_address_4();
  address_4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.address_4)
}
#if LANG_CXX11
void WalletPostalAddress::set_address_4(::std::string&& value) {
  set_has_address_4();
  address_4_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.WalletPostalAddress.address_4)
}
#endif
void WalletPostalAddress::set_address_4(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address_4();
  address_4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.address_4)
}
void WalletPostalAddress::set_address_4(const char* value, size_t size) {
  set_has_address_4();
  address_4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.address_4)
}
::std::string* WalletPostalAddress::mutable_address_4() {
  set_has_address_4();
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.address_4)
  return address_4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_address_4() {
  // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.address_4)
  clear_has_address_4();
  return address_4_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_address_4(::std::string* address_4) {
  if (address_4 != NULL) {
    set_has_address_4();
  } else {
    clear_has_address_4();
  }
  address_4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_4);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.address_4)
}

// optional string postal_code = 8;
bool WalletPostalAddress::has_postal_code() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void WalletPostalAddress::set_has_postal_code() {
  _has_bits_[0] |= 0x00000040u;
}
void WalletPostalAddress::clear_has_postal_code() {
  _has_bits_[0] &= ~0x00000040u;
}
void WalletPostalAddress::clear_postal_code() {
  postal_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_postal_code();
}
const ::std::string& WalletPostalAddress::postal_code() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.postal_code)
  return postal_code_.GetNoArena();
}
void WalletPostalAddress::set_postal_code(const ::std::string& value) {
  set_has_postal_code();
  postal_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.postal_code)
}
#if LANG_CXX11
void WalletPostalAddress::set_postal_code(::std::string&& value) {
  set_has_postal_code();
  postal_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.WalletPostalAddress.postal_code)
}
#endif
void WalletPostalAddress::set_postal_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_postal_code();
  postal_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.postal_code)
}
void WalletPostalAddress::set_postal_code(const char* value, size_t size) {
  set_has_postal_code();
  postal_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.postal_code)
}
::std::string* WalletPostalAddress::mutable_postal_code() {
  set_has_postal_code();
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.postal_code)
  return postal_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_postal_code() {
  // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.postal_code)
  clear_has_postal_code();
  return postal_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_postal_code(::std::string* postal_code) {
  if (postal_code != NULL) {
    set_has_postal_code();
  } else {
    clear_has_postal_code();
  }
  postal_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), postal_code);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.postal_code)
}

// optional string sorting_code = 9;
bool WalletPostalAddress::has_sorting_code() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void WalletPostalAddress::set_has_sorting_code() {
  _has_bits_[0] |= 0x00000080u;
}
void WalletPostalAddress::clear_has_sorting_code() {
  _has_bits_[0] &= ~0x00000080u;
}
void WalletPostalAddress::clear_sorting_code() {
  sorting_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sorting_code();
}
const ::std::string& WalletPostalAddress::sorting_code() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.sorting_code)
  return sorting_code_.GetNoArena();
}
void WalletPostalAddress::set_sorting_code(const ::std::string& value) {
  set_has_sorting_code();
  sorting_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.sorting_code)
}
#if LANG_CXX11
void WalletPostalAddress::set_sorting_code(::std::string&& value) {
  set_has_sorting_code();
  sorting_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.WalletPostalAddress.sorting_code)
}
#endif
void WalletPostalAddress::set_sorting_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sorting_code();
  sorting_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.sorting_code)
}
void WalletPostalAddress::set_sorting_code(const char* value, size_t size) {
  set_has_sorting_code();
  sorting_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.sorting_code)
}
::std::string* WalletPostalAddress::mutable_sorting_code() {
  set_has_sorting_code();
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.sorting_code)
  return sorting_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_sorting_code() {
  // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.sorting_code)
  clear_has_sorting_code();
  return sorting_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_sorting_code(::std::string* sorting_code) {
  if (sorting_code != NULL) {
    set_has_sorting_code();
  } else {
    clear_has_sorting_code();
  }
  sorting_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sorting_code);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.sorting_code)
}

// optional string country_code = 10;
bool WalletPostalAddress::has_country_code() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void WalletPostalAddress::set_has_country_code() {
  _has_bits_[0] |= 0x00000100u;
}
void WalletPostalAddress::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000100u;
}
void WalletPostalAddress::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country_code();
}
const ::std::string& WalletPostalAddress::country_code() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.country_code)
  return country_code_.GetNoArena();
}
void WalletPostalAddress::set_country_code(const ::std::string& value) {
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.country_code)
}
#if LANG_CXX11
void WalletPostalAddress::set_country_code(::std::string&& value) {
  set_has_country_code();
  country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.WalletPostalAddress.country_code)
}
#endif
void WalletPostalAddress::set_country_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.country_code)
}
void WalletPostalAddress::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.country_code)
}
::std::string* WalletPostalAddress::mutable_country_code() {
  set_has_country_code();
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_country_code() {
  // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.country_code)
  clear_has_country_code();
  return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_country_code(::std::string* country_code) {
  if (country_code != NULL) {
    set_has_country_code();
  } else {
    clear_has_country_code();
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.country_code)
}

// optional string language_code = 11;
bool WalletPostalAddress::has_language_code() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void WalletPostalAddress::set_has_language_code() {
  _has_bits_[0] |= 0x00000200u;
}
void WalletPostalAddress::clear_has_language_code() {
  _has_bits_[0] &= ~0x00000200u;
}
void WalletPostalAddress::clear_language_code() {
  language_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_language_code();
}
const ::std::string& WalletPostalAddress::language_code() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.language_code)
  return language_code_.GetNoArena();
}
void WalletPostalAddress::set_language_code(const ::std::string& value) {
  set_has_language_code();
  language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.language_code)
}
#if LANG_CXX11
void WalletPostalAddress::set_language_code(::std::string&& value) {
  set_has_language_code();
  language_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.WalletPostalAddress.language_code)
}
#endif
void WalletPostalAddress::set_language_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_language_code();
  language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.language_code)
}
void WalletPostalAddress::set_language_code(const char* value, size_t size) {
  set_has_language_code();
  language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.language_code)
}
::std::string* WalletPostalAddress::mutable_language_code() {
  set_has_language_code();
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.language_code)
  return language_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_language_code() {
  // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.language_code)
  clear_has_language_code();
  return language_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_language_code(::std::string* language_code) {
  if (language_code != NULL) {
    set_has_language_code();
  } else {
    clear_has_language_code();
  }
  language_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language_code);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.language_code)
}

// optional string phone_number = 13;
bool WalletPostalAddress::has_phone_number() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void WalletPostalAddress::set_has_phone_number() {
  _has_bits_[0] |= 0x00000800u;
}
void WalletPostalAddress::clear_has_phone_number() {
  _has_bits_[0] &= ~0x00000800u;
}
void WalletPostalAddress::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone_number();
}
const ::std::string& WalletPostalAddress::phone_number() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.phone_number)
  return phone_number_.GetNoArena();
}
void WalletPostalAddress::set_phone_number(const ::std::string& value) {
  set_has_phone_number();
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.phone_number)
}
#if LANG_CXX11
void WalletPostalAddress::set_phone_number(::std::string&& value) {
  set_has_phone_number();
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.WalletPostalAddress.phone_number)
}
#endif
void WalletPostalAddress::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone_number();
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.phone_number)
}
void WalletPostalAddress::set_phone_number(const char* value, size_t size) {
  set_has_phone_number();
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.phone_number)
}
::std::string* WalletPostalAddress::mutable_phone_number() {
  set_has_phone_number();
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_phone_number() {
  // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.phone_number)
  clear_has_phone_number();
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    set_has_phone_number();
  } else {
    clear_has_phone_number();
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.phone_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutofillWalletSpecifics::kTypeFieldNumber;
const int AutofillWalletSpecifics::kMaskedCardFieldNumber;
const int AutofillWalletSpecifics::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutofillWalletSpecifics::AutofillWalletSpecifics()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_autofill_5fspecifics_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.AutofillWalletSpecifics)
}
AutofillWalletSpecifics::AutofillWalletSpecifics(const AutofillWalletSpecifics& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_masked_card()) {
    masked_card_ = new ::sync_pb::WalletMaskedCreditCard(*from.masked_card_);
  } else {
    masked_card_ = NULL;
  }
  if (from.has_address()) {
    address_ = new ::sync_pb::WalletPostalAddress(*from.address_);
  } else {
    address_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:sync_pb.AutofillWalletSpecifics)
}

void AutofillWalletSpecifics::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&masked_card_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&masked_card_)) + sizeof(type_));
}

AutofillWalletSpecifics::~AutofillWalletSpecifics() {
  // @@protoc_insertion_point(destructor:sync_pb.AutofillWalletSpecifics)
  SharedDtor();
}

void AutofillWalletSpecifics::SharedDtor() {
  if (this != internal_default_instance()) {
    delete masked_card_;
  }
  if (this != internal_default_instance()) {
    delete address_;
  }
}

void AutofillWalletSpecifics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AutofillWalletSpecifics& AutofillWalletSpecifics::default_instance() {
  protobuf_autofill_5fspecifics_2eproto::InitDefaults();
  return *internal_default_instance();
}

AutofillWalletSpecifics* AutofillWalletSpecifics::New(::google::protobuf::Arena* arena) const {
  AutofillWalletSpecifics* n = new AutofillWalletSpecifics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AutofillWalletSpecifics::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.AutofillWalletSpecifics)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_masked_card()) {
      GOOGLE_DCHECK(masked_card_ != NULL);
      masked_card_->::sync_pb::WalletMaskedCreditCard::Clear();
    }
    if (has_address()) {
      GOOGLE_DCHECK(address_ != NULL);
      address_->::sync_pb::WalletPostalAddress::Clear();
    }
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AutofillWalletSpecifics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.AutofillWalletSpecifics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sync_pb.AutofillWalletSpecifics.WalletInfoType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sync_pb::AutofillWalletSpecifics_WalletInfoType_IsValid(value)) {
            set_type(static_cast< ::sync_pb::AutofillWalletSpecifics_WalletInfoType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sync_pb.WalletMaskedCreditCard masked_card = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_masked_card()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sync_pb.WalletPostalAddress address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.AutofillWalletSpecifics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.AutofillWalletSpecifics)
  return false;
#undef DO_
}

void AutofillWalletSpecifics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.AutofillWalletSpecifics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sync_pb.AutofillWalletSpecifics.WalletInfoType type = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .sync_pb.WalletMaskedCreditCard masked_card = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->masked_card_, output);
  }

  // optional .sync_pb.WalletPostalAddress address = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, *this->address_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.AutofillWalletSpecifics)
}

size_t AutofillWalletSpecifics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.AutofillWalletSpecifics)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 7u) {
    // optional .sync_pb.WalletMaskedCreditCard masked_card = 2;
    if (has_masked_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->masked_card_);
    }

    // optional .sync_pb.WalletPostalAddress address = 3;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->address_);
    }

    // optional .sync_pb.AutofillWalletSpecifics.WalletInfoType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AutofillWalletSpecifics::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AutofillWalletSpecifics*>(&from));
}

void AutofillWalletSpecifics::MergeFrom(const AutofillWalletSpecifics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.AutofillWalletSpecifics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_masked_card()->::sync_pb::WalletMaskedCreditCard::MergeFrom(from.masked_card());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_address()->::sync_pb::WalletPostalAddress::MergeFrom(from.address());
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AutofillWalletSpecifics::CopyFrom(const AutofillWalletSpecifics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.AutofillWalletSpecifics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutofillWalletSpecifics::IsInitialized() const {
  return true;
}

void AutofillWalletSpecifics::Swap(AutofillWalletSpecifics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutofillWalletSpecifics::InternalSwap(AutofillWalletSpecifics* other) {
  std::swap(masked_card_, other->masked_card_);
  std::swap(address_, other->address_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string AutofillWalletSpecifics::GetTypeName() const {
  return "sync_pb.AutofillWalletSpecifics";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AutofillWalletSpecifics

// optional .sync_pb.AutofillWalletSpecifics.WalletInfoType type = 1;
bool AutofillWalletSpecifics::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AutofillWalletSpecifics::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void AutofillWalletSpecifics::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void AutofillWalletSpecifics::clear_type() {
  type_ = 0;
  clear_has_type();
}
::sync_pb::AutofillWalletSpecifics_WalletInfoType AutofillWalletSpecifics::type() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillWalletSpecifics.type)
  return static_cast< ::sync_pb::AutofillWalletSpecifics_WalletInfoType >(type_);
}
void AutofillWalletSpecifics::set_type(::sync_pb::AutofillWalletSpecifics_WalletInfoType value) {
  assert(::sync_pb::AutofillWalletSpecifics_WalletInfoType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.AutofillWalletSpecifics.type)
}

// optional .sync_pb.WalletMaskedCreditCard masked_card = 2;
bool AutofillWalletSpecifics::has_masked_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AutofillWalletSpecifics::set_has_masked_card() {
  _has_bits_[0] |= 0x00000001u;
}
void AutofillWalletSpecifics::clear_has_masked_card() {
  _has_bits_[0] &= ~0x00000001u;
}
void AutofillWalletSpecifics::clear_masked_card() {
  if (masked_card_ != NULL) masked_card_->::sync_pb::WalletMaskedCreditCard::Clear();
  clear_has_masked_card();
}
const ::sync_pb::WalletMaskedCreditCard& AutofillWalletSpecifics::masked_card() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillWalletSpecifics.masked_card)
  return masked_card_ != NULL ? *masked_card_
                         : *::sync_pb::WalletMaskedCreditCard::internal_default_instance();
}
::sync_pb::WalletMaskedCreditCard* AutofillWalletSpecifics::mutable_masked_card() {
  set_has_masked_card();
  if (masked_card_ == NULL) {
    masked_card_ = new ::sync_pb::WalletMaskedCreditCard;
  }
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillWalletSpecifics.masked_card)
  return masked_card_;
}
::sync_pb::WalletMaskedCreditCard* AutofillWalletSpecifics::release_masked_card() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillWalletSpecifics.masked_card)
  clear_has_masked_card();
  ::sync_pb::WalletMaskedCreditCard* temp = masked_card_;
  masked_card_ = NULL;
  return temp;
}
void AutofillWalletSpecifics::set_allocated_masked_card(::sync_pb::WalletMaskedCreditCard* masked_card) {
  delete masked_card_;
  masked_card_ = masked_card;
  if (masked_card) {
    set_has_masked_card();
  } else {
    clear_has_masked_card();
  }
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillWalletSpecifics.masked_card)
}

// optional .sync_pb.WalletPostalAddress address = 3;
bool AutofillWalletSpecifics::has_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AutofillWalletSpecifics::set_has_address() {
  _has_bits_[0] |= 0x00000002u;
}
void AutofillWalletSpecifics::clear_has_address() {
  _has_bits_[0] &= ~0x00000002u;
}
void AutofillWalletSpecifics::clear_address() {
  if (address_ != NULL) address_->::sync_pb::WalletPostalAddress::Clear();
  clear_has_address();
}
const ::sync_pb::WalletPostalAddress& AutofillWalletSpecifics::address() const {
  // @@protoc_insertion_point(field_get:sync_pb.AutofillWalletSpecifics.address)
  return address_ != NULL ? *address_
                         : *::sync_pb::WalletPostalAddress::internal_default_instance();
}
::sync_pb::WalletPostalAddress* AutofillWalletSpecifics::mutable_address() {
  set_has_address();
  if (address_ == NULL) {
    address_ = new ::sync_pb::WalletPostalAddress;
  }
  // @@protoc_insertion_point(field_mutable:sync_pb.AutofillWalletSpecifics.address)
  return address_;
}
::sync_pb::WalletPostalAddress* AutofillWalletSpecifics::release_address() {
  // @@protoc_insertion_point(field_release:sync_pb.AutofillWalletSpecifics.address)
  clear_has_address();
  ::sync_pb::WalletPostalAddress* temp = address_;
  address_ = NULL;
  return temp;
}
void AutofillWalletSpecifics::set_allocated_address(::sync_pb::WalletPostalAddress* address) {
  delete address_;
  address_ = address;
  if (address) {
    set_has_address();
  } else {
    clear_has_address();
  }
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillWalletSpecifics.address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WalletMetadataSpecifics::kTypeFieldNumber;
const int WalletMetadataSpecifics::kIdFieldNumber;
const int WalletMetadataSpecifics::kUseCountFieldNumber;
const int WalletMetadataSpecifics::kUseDateFieldNumber;
const int WalletMetadataSpecifics::kCardBillingAddressIdFieldNumber;
const int WalletMetadataSpecifics::kAddressHasConvertedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WalletMetadataSpecifics::WalletMetadataSpecifics()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_autofill_5fspecifics_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.WalletMetadataSpecifics)
}
WalletMetadataSpecifics::WalletMetadataSpecifics(const WalletMetadataSpecifics& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  card_billing_address_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_card_billing_address_id()) {
    card_billing_address_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_billing_address_id_);
  }
  ::memcpy(&use_count_, &from.use_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&use_date_) -
    reinterpret_cast<char*>(&use_count_)) + sizeof(use_date_));
  // @@protoc_insertion_point(copy_constructor:sync_pb.WalletMetadataSpecifics)
}

void WalletMetadataSpecifics::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_billing_address_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&use_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_date_) -
      reinterpret_cast<char*>(&use_count_)) + sizeof(use_date_));
}

WalletMetadataSpecifics::~WalletMetadataSpecifics() {
  // @@protoc_insertion_point(destructor:sync_pb.WalletMetadataSpecifics)
  SharedDtor();
}

void WalletMetadataSpecifics::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_billing_address_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WalletMetadataSpecifics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const WalletMetadataSpecifics& WalletMetadataSpecifics::default_instance() {
  protobuf_autofill_5fspecifics_2eproto::InitDefaults();
  return *internal_default_instance();
}

WalletMetadataSpecifics* WalletMetadataSpecifics::New(::google::protobuf::Arena* arena) const {
  WalletMetadataSpecifics* n = new WalletMetadataSpecifics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WalletMetadataSpecifics::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.WalletMetadataSpecifics)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_id()) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (has_card_billing_address_id()) {
      GOOGLE_DCHECK(!card_billing_address_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*card_billing_address_id_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 60u) {
    ::memset(&use_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&use_date_) -
        reinterpret_cast<char*>(&use_count_)) + sizeof(use_date_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WalletMetadataSpecifics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.WalletMetadataSpecifics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sync_pb.WalletMetadataSpecifics.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sync_pb::WalletMetadataSpecifics_Type_IsValid(value)) {
            set_type(static_cast< ::sync_pb::WalletMetadataSpecifics_Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 use_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_use_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &use_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 use_date = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_use_date();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &use_date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string card_billing_address_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_card_billing_address_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool address_has_converted = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_address_has_converted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &address_has_converted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.WalletMetadataSpecifics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.WalletMetadataSpecifics)
  return false;
#undef DO_
}

void WalletMetadataSpecifics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.WalletMetadataSpecifics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sync_pb.WalletMetadataSpecifics.Type type = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional string id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // optional int64 use_count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->use_count(), output);
  }

  // optional int64 use_date = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->use_date(), output);
  }

  // optional string card_billing_address_id = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->card_billing_address_id(), output);
  }

  // optional bool address_has_converted = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->address_has_converted(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.WalletMetadataSpecifics)
}

size_t WalletMetadataSpecifics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.WalletMetadataSpecifics)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 63u) {
    // optional string id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string card_billing_address_id = 5;
    if (has_card_billing_address_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->card_billing_address_id());
    }

    // optional int64 use_count = 3;
    if (has_use_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->use_count());
    }

    // optional .sync_pb.WalletMetadataSpecifics.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional bool address_has_converted = 6;
    if (has_address_has_converted()) {
      total_size += 1 + 1;
    }

    // optional int64 use_date = 4;
    if (has_use_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->use_date());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WalletMetadataSpecifics::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const WalletMetadataSpecifics*>(&from));
}

void WalletMetadataSpecifics::MergeFrom(const WalletMetadataSpecifics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.WalletMetadataSpecifics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_card_billing_address_id();
      card_billing_address_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_billing_address_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      use_count_ = from.use_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000010u) {
      address_has_converted_ = from.address_has_converted_;
    }
    if (cached_has_bits & 0x00000020u) {
      use_date_ = from.use_date_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WalletMetadataSpecifics::CopyFrom(const WalletMetadataSpecifics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.WalletMetadataSpecifics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WalletMetadataSpecifics::IsInitialized() const {
  return true;
}

void WalletMetadataSpecifics::Swap(WalletMetadataSpecifics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WalletMetadataSpecifics::InternalSwap(WalletMetadataSpecifics* other) {
  id_.Swap(&other->id_);
  card_billing_address_id_.Swap(&other->card_billing_address_id_);
  std::swap(use_count_, other->use_count_);
  std::swap(type_, other->type_);
  std::swap(address_has_converted_, other->address_has_converted_);
  std::swap(use_date_, other->use_date_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string WalletMetadataSpecifics::GetTypeName() const {
  return "sync_pb.WalletMetadataSpecifics";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WalletMetadataSpecifics

// optional .sync_pb.WalletMetadataSpecifics.Type type = 1;
bool WalletMetadataSpecifics::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void WalletMetadataSpecifics::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
void WalletMetadataSpecifics::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void WalletMetadataSpecifics::clear_type() {
  type_ = 0;
  clear_has_type();
}
::sync_pb::WalletMetadataSpecifics_Type WalletMetadataSpecifics::type() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletMetadataSpecifics.type)
  return static_cast< ::sync_pb::WalletMetadataSpecifics_Type >(type_);
}
void WalletMetadataSpecifics::set_type(::sync_pb::WalletMetadataSpecifics_Type value) {
  assert(::sync_pb::WalletMetadataSpecifics_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.WalletMetadataSpecifics.type)
}

// optional string id = 2;
bool WalletMetadataSpecifics::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void WalletMetadataSpecifics::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void WalletMetadataSpecifics::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void WalletMetadataSpecifics::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& WalletMetadataSpecifics::id() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletMetadataSpecifics.id)
  return id_.GetNoArena();
}
void WalletMetadataSpecifics::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.WalletMetadataSpecifics.id)
}
#if LANG_CXX11
void WalletMetadataSpecifics::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.WalletMetadataSpecifics.id)
}
#endif
void WalletMetadataSpecifics::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletMetadataSpecifics.id)
}
void WalletMetadataSpecifics::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletMetadataSpecifics.id)
}
::std::string* WalletMetadataSpecifics::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletMetadataSpecifics.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletMetadataSpecifics::release_id() {
  // @@protoc_insertion_point(field_release:sync_pb.WalletMetadataSpecifics.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletMetadataSpecifics::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletMetadataSpecifics.id)
}

// optional int64 use_count = 3;
bool WalletMetadataSpecifics::has_use_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void WalletMetadataSpecifics::set_has_use_count() {
  _has_bits_[0] |= 0x00000004u;
}
void WalletMetadataSpecifics::clear_has_use_count() {
  _has_bits_[0] &= ~0x00000004u;
}
void WalletMetadataSpecifics::clear_use_count() {
  use_count_ = GOOGLE_LONGLONG(0);
  clear_has_use_count();
}
::google::protobuf::int64 WalletMetadataSpecifics::use_count() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletMetadataSpecifics.use_count)
  return use_count_;
}
void WalletMetadataSpecifics::set_use_count(::google::protobuf::int64 value) {
  set_has_use_count();
  use_count_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.WalletMetadataSpecifics.use_count)
}

// optional int64 use_date = 4;
bool WalletMetadataSpecifics::has_use_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void WalletMetadataSpecifics::set_has_use_date() {
  _has_bits_[0] |= 0x00000020u;
}
void WalletMetadataSpecifics::clear_has_use_date() {
  _has_bits_[0] &= ~0x00000020u;
}
void WalletMetadataSpecifics::clear_use_date() {
  use_date_ = GOOGLE_LONGLONG(0);
  clear_has_use_date();
}
::google::protobuf::int64 WalletMetadataSpecifics::use_date() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletMetadataSpecifics.use_date)
  return use_date_;
}
void WalletMetadataSpecifics::set_use_date(::google::protobuf::int64 value) {
  set_has_use_date();
  use_date_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.WalletMetadataSpecifics.use_date)
}

// optional string card_billing_address_id = 5;
bool WalletMetadataSpecifics::has_card_billing_address_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void WalletMetadataSpecifics::set_has_card_billing_address_id() {
  _has_bits_[0] |= 0x00000002u;
}
void WalletMetadataSpecifics::clear_has_card_billing_address_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void WalletMetadataSpecifics::clear_card_billing_address_id() {
  card_billing_address_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_billing_address_id();
}
const ::std::string& WalletMetadataSpecifics::card_billing_address_id() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
  return card_billing_address_id_.GetNoArena();
}
void WalletMetadataSpecifics::set_card_billing_address_id(const ::std::string& value) {
  set_has_card_billing_address_id();
  card_billing_address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
}
#if LANG_CXX11
void WalletMetadataSpecifics::set_card_billing_address_id(::std::string&& value) {
  set_has_card_billing_address_id();
  card_billing_address_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
}
#endif
void WalletMetadataSpecifics::set_card_billing_address_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_card_billing_address_id();
  card_billing_address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
}
void WalletMetadataSpecifics::set_card_billing_address_id(const char* value, size_t size) {
  set_has_card_billing_address_id();
  card_billing_address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
}
::std::string* WalletMetadataSpecifics::mutable_card_billing_address_id() {
  set_has_card_billing_address_id();
  // @@protoc_insertion_point(field_mutable:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
  return card_billing_address_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletMetadataSpecifics::release_card_billing_address_id() {
  // @@protoc_insertion_point(field_release:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
  clear_has_card_billing_address_id();
  return card_billing_address_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletMetadataSpecifics::set_allocated_card_billing_address_id(::std::string* card_billing_address_id) {
  if (card_billing_address_id != NULL) {
    set_has_card_billing_address_id();
  } else {
    clear_has_card_billing_address_id();
  }
  card_billing_address_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_billing_address_id);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
}

// optional bool address_has_converted = 6;
bool WalletMetadataSpecifics::has_address_has_converted() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void WalletMetadataSpecifics::set_has_address_has_converted() {
  _has_bits_[0] |= 0x00000010u;
}
void WalletMetadataSpecifics::clear_has_address_has_converted() {
  _has_bits_[0] &= ~0x00000010u;
}
void WalletMetadataSpecifics::clear_address_has_converted() {
  address_has_converted_ = false;
  clear_has_address_has_converted();
}
bool WalletMetadataSpecifics::address_has_converted() const {
  // @@protoc_insertion_point(field_get:sync_pb.WalletMetadataSpecifics.address_has_converted)
  return address_has_converted_;
}
void WalletMetadataSpecifics::set_address_has_converted(bool value) {
  set_has_address_has_converted();
  address_has_converted_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.WalletMetadataSpecifics.address_has_converted)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)
