// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_debug_info.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "client_debug_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {
class TypeHintDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TypeHint> {
} _TypeHint_default_instance_;
class DeprecatedMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeprecatedMessage> {
} _DeprecatedMessage_default_instance_;
class SyncCycleCompletedEventInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SyncCycleCompletedEventInfo> {
} _SyncCycleCompletedEventInfo_default_instance_;
class DatatypeAssociationStatsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DatatypeAssociationStats> {
} _DatatypeAssociationStats_default_instance_;
class DebugEventInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DebugEventInfo> {
} _DebugEventInfo_default_instance_;
class DebugInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DebugInfo> {
} _DebugInfo_default_instance_;

namespace protobuf_client_5fdebug_5finfo_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _TypeHint_default_instance_.Shutdown();
  _DeprecatedMessage_default_instance_.Shutdown();
  _SyncCycleCompletedEventInfo_default_instance_.Shutdown();
  _DatatypeAssociationStats_default_instance_.Shutdown();
  _DebugEventInfo_default_instance_.Shutdown();
  _DebugInfo_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::sync_pb::protobuf_get_5fupdates_5fcaller_5finfo_2eproto::InitDefaults();
  ::sync_pb::protobuf_sync_5fenums_2eproto::InitDefaults();
  _TypeHint_default_instance_.DefaultConstruct();
  _DeprecatedMessage_default_instance_.DefaultConstruct();
  _SyncCycleCompletedEventInfo_default_instance_.DefaultConstruct();
  _DatatypeAssociationStats_default_instance_.DefaultConstruct();
  _DebugEventInfo_default_instance_.DefaultConstruct();
  _DebugInfo_default_instance_.DefaultConstruct();
  _SyncCycleCompletedEventInfo_default_instance_.get_mutable()->caller_info_ = const_cast< ::sync_pb::GetUpdatesCallerInfo*>(
      ::sync_pb::GetUpdatesCallerInfo::internal_default_instance());
  _DebugEventInfo_default_instance_.get_mutable()->sync_cycle_completed_event_info_ = const_cast< ::sync_pb::SyncCycleCompletedEventInfo*>(
      ::sync_pb::SyncCycleCompletedEventInfo::internal_default_instance());
  _DebugEventInfo_default_instance_.get_mutable()->datatype_association_stats_ = const_cast< ::sync_pb::DatatypeAssociationStats*>(
      ::sync_pb::DatatypeAssociationStats::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::sync_pb::protobuf_get_5fupdates_5fcaller_5finfo_2eproto::AddDescriptors();
  ::sync_pb::protobuf_sync_5fenums_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_client_5fdebug_5finfo_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypeHint::kDataTypeIdFieldNumber;
const int TypeHint::kHasValidHintFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypeHint::TypeHint()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fdebug_5finfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.TypeHint)
}
TypeHint::TypeHint(const TypeHint& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&data_type_id_, &from.data_type_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&has_valid_hint_) -
    reinterpret_cast<char*>(&data_type_id_)) + sizeof(has_valid_hint_));
  // @@protoc_insertion_point(copy_constructor:sync_pb.TypeHint)
}

void TypeHint::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&data_type_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&has_valid_hint_) -
      reinterpret_cast<char*>(&data_type_id_)) + sizeof(has_valid_hint_));
}

TypeHint::~TypeHint() {
  // @@protoc_insertion_point(destructor:sync_pb.TypeHint)
  SharedDtor();
}

void TypeHint::SharedDtor() {
}

void TypeHint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TypeHint& TypeHint::default_instance() {
  protobuf_client_5fdebug_5finfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

TypeHint* TypeHint::New(::google::protobuf::Arena* arena) const {
  TypeHint* n = new TypeHint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TypeHint::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.TypeHint)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&data_type_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&has_valid_hint_) -
        reinterpret_cast<char*>(&data_type_id_)) + sizeof(has_valid_hint_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TypeHint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.TypeHint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 data_type_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_data_type_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_type_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool has_valid_hint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_has_valid_hint();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_valid_hint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.TypeHint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.TypeHint)
  return false;
#undef DO_
}

void TypeHint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.TypeHint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 data_type_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->data_type_id(), output);
  }

  // optional bool has_valid_hint = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->has_valid_hint(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.TypeHint)
}

size_t TypeHint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.TypeHint)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 data_type_id = 1;
    if (has_data_type_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data_type_id());
    }

    // optional bool has_valid_hint = 2;
    if (has_has_valid_hint()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypeHint::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TypeHint*>(&from));
}

void TypeHint::MergeFrom(const TypeHint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.TypeHint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      data_type_id_ = from.data_type_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      has_valid_hint_ = from.has_valid_hint_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TypeHint::CopyFrom(const TypeHint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.TypeHint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TypeHint::IsInitialized() const {
  return true;
}

void TypeHint::Swap(TypeHint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypeHint::InternalSwap(TypeHint* other) {
  std::swap(data_type_id_, other->data_type_id_);
  std::swap(has_valid_hint_, other->has_valid_hint_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TypeHint::GetTypeName() const {
  return "sync_pb.TypeHint";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TypeHint

// optional int32 data_type_id = 1;
bool TypeHint::has_data_type_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TypeHint::set_has_data_type_id() {
  _has_bits_[0] |= 0x00000001u;
}
void TypeHint::clear_has_data_type_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void TypeHint::clear_data_type_id() {
  data_type_id_ = 0;
  clear_has_data_type_id();
}
::google::protobuf::int32 TypeHint::data_type_id() const {
  // @@protoc_insertion_point(field_get:sync_pb.TypeHint.data_type_id)
  return data_type_id_;
}
void TypeHint::set_data_type_id(::google::protobuf::int32 value) {
  set_has_data_type_id();
  data_type_id_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.TypeHint.data_type_id)
}

// optional bool has_valid_hint = 2;
bool TypeHint::has_has_valid_hint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TypeHint::set_has_has_valid_hint() {
  _has_bits_[0] |= 0x00000002u;
}
void TypeHint::clear_has_has_valid_hint() {
  _has_bits_[0] &= ~0x00000002u;
}
void TypeHint::clear_has_valid_hint() {
  has_valid_hint_ = false;
  clear_has_has_valid_hint();
}
bool TypeHint::has_valid_hint() const {
  // @@protoc_insertion_point(field_get:sync_pb.TypeHint.has_valid_hint)
  return has_valid_hint_;
}
void TypeHint::set_has_valid_hint(bool value) {
  set_has_has_valid_hint();
  has_valid_hint_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.TypeHint.has_valid_hint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeprecatedMessage::DeprecatedMessage()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fdebug_5finfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.DeprecatedMessage)
}
DeprecatedMessage::DeprecatedMessage(const DeprecatedMessage& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sync_pb.DeprecatedMessage)
}

void DeprecatedMessage::SharedCtor() {
  _cached_size_ = 0;
}

DeprecatedMessage::~DeprecatedMessage() {
  // @@protoc_insertion_point(destructor:sync_pb.DeprecatedMessage)
  SharedDtor();
}

void DeprecatedMessage::SharedDtor() {
}

void DeprecatedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DeprecatedMessage& DeprecatedMessage::default_instance() {
  protobuf_client_5fdebug_5finfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeprecatedMessage* DeprecatedMessage::New(::google::protobuf::Arena* arena) const {
  DeprecatedMessage* n = new DeprecatedMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeprecatedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.DeprecatedMessage)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeprecatedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.DeprecatedMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.DeprecatedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.DeprecatedMessage)
  return false;
#undef DO_
}

void DeprecatedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.DeprecatedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.DeprecatedMessage)
}

size_t DeprecatedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.DeprecatedMessage)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeprecatedMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DeprecatedMessage*>(&from));
}

void DeprecatedMessage::MergeFrom(const DeprecatedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.DeprecatedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeprecatedMessage::CopyFrom(const DeprecatedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.DeprecatedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeprecatedMessage::IsInitialized() const {
  return true;
}

void DeprecatedMessage::Swap(DeprecatedMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeprecatedMessage::InternalSwap(DeprecatedMessage* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string DeprecatedMessage::GetTypeName() const {
  return "sync_pb.DeprecatedMessage";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeprecatedMessage

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncCycleCompletedEventInfo::kNumBlockingConflictsFieldNumber;
const int SyncCycleCompletedEventInfo::kNumNonBlockingConflictsFieldNumber;
const int SyncCycleCompletedEventInfo::kNumEncryptionConflictsFieldNumber;
const int SyncCycleCompletedEventInfo::kNumHierarchyConflictsFieldNumber;
const int SyncCycleCompletedEventInfo::kNumSimpleConflictsFieldNumber;
const int SyncCycleCompletedEventInfo::kNumServerConflictsFieldNumber;
const int SyncCycleCompletedEventInfo::kNumUpdatesDownloadedFieldNumber;
const int SyncCycleCompletedEventInfo::kNumReflectedUpdatesDownloadedFieldNumber;
const int SyncCycleCompletedEventInfo::kCallerInfoFieldNumber;
const int SyncCycleCompletedEventInfo::kSourceInfoFieldNumber;
const int SyncCycleCompletedEventInfo::kGetUpdatesOriginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncCycleCompletedEventInfo::SyncCycleCompletedEventInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fdebug_5finfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.SyncCycleCompletedEventInfo)
}
SyncCycleCompletedEventInfo::SyncCycleCompletedEventInfo(const SyncCycleCompletedEventInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      source_info_(from.source_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_caller_info()) {
    caller_info_ = new ::sync_pb::GetUpdatesCallerInfo(*from.caller_info_);
  } else {
    caller_info_ = NULL;
  }
  ::memcpy(&num_blocking_conflicts_, &from.num_blocking_conflicts_,
    static_cast<size_t>(reinterpret_cast<char*>(&get_updates_origin_) -
    reinterpret_cast<char*>(&num_blocking_conflicts_)) + sizeof(get_updates_origin_));
  // @@protoc_insertion_point(copy_constructor:sync_pb.SyncCycleCompletedEventInfo)
}

void SyncCycleCompletedEventInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&caller_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&get_updates_origin_) -
      reinterpret_cast<char*>(&caller_info_)) + sizeof(get_updates_origin_));
}

SyncCycleCompletedEventInfo::~SyncCycleCompletedEventInfo() {
  // @@protoc_insertion_point(destructor:sync_pb.SyncCycleCompletedEventInfo)
  SharedDtor();
}

void SyncCycleCompletedEventInfo::SharedDtor() {
  if (this != internal_default_instance()) {
    delete caller_info_;
  }
}

void SyncCycleCompletedEventInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SyncCycleCompletedEventInfo& SyncCycleCompletedEventInfo::default_instance() {
  protobuf_client_5fdebug_5finfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

SyncCycleCompletedEventInfo* SyncCycleCompletedEventInfo::New(::google::protobuf::Arena* arena) const {
  SyncCycleCompletedEventInfo* n = new SyncCycleCompletedEventInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncCycleCompletedEventInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.SyncCycleCompletedEventInfo)
  source_info_.Clear();
  if (has_caller_info()) {
    GOOGLE_DCHECK(caller_info_ != NULL);
    caller_info_->::sync_pb::GetUpdatesCallerInfo::Clear();
  }
  if (_has_bits_[0 / 32] & 254u) {
    ::memset(&num_blocking_conflicts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_updates_downloaded_) -
        reinterpret_cast<char*>(&num_blocking_conflicts_)) + sizeof(num_updates_downloaded_));
  }
  if (_has_bits_[8 / 32] & 768u) {
    ::memset(&num_reflected_updates_downloaded_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&get_updates_origin_) -
        reinterpret_cast<char*>(&num_reflected_updates_downloaded_)) + sizeof(get_updates_origin_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SyncCycleCompletedEventInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.SyncCycleCompletedEventInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num_blocking_conflicts = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_num_blocking_conflicts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_blocking_conflicts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_non_blocking_conflicts = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_num_non_blocking_conflicts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_non_blocking_conflicts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_encryption_conflicts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_num_encryption_conflicts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_encryption_conflicts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_hierarchy_conflicts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_num_hierarchy_conflicts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_hierarchy_conflicts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_simple_conflicts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_num_simple_conflicts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_simple_conflicts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_server_conflicts = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_num_server_conflicts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_server_conflicts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_updates_downloaded = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_num_updates_downloaded();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_updates_downloaded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_reflected_updates_downloaded = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_num_reflected_updates_downloaded();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_reflected_updates_downloaded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sync_pb.GetUpdatesCallerInfo caller_info = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_caller_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sync_pb.DeprecatedMessage source_info = 11 [deprecated = true];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_source_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sync_pb.SyncEnums.GetUpdatesOrigin get_updates_origin = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sync_pb::SyncEnums_GetUpdatesOrigin_IsValid(value)) {
            set_get_updates_origin(static_cast< ::sync_pb::SyncEnums_GetUpdatesOrigin >(value));
          } else {
            unknown_fields_stream.WriteVarint32(96u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.SyncCycleCompletedEventInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.SyncCycleCompletedEventInfo)
  return false;
#undef DO_
}

void SyncCycleCompletedEventInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.SyncCycleCompletedEventInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 num_blocking_conflicts = 2 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_blocking_conflicts(), output);
  }

  // optional int32 num_non_blocking_conflicts = 3 [deprecated = true];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num_non_blocking_conflicts(), output);
  }

  // optional int32 num_encryption_conflicts = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->num_encryption_conflicts(), output);
  }

  // optional int32 num_hierarchy_conflicts = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->num_hierarchy_conflicts(), output);
  }

  // optional int32 num_simple_conflicts = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->num_simple_conflicts(), output);
  }

  // optional int32 num_server_conflicts = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->num_server_conflicts(), output);
  }

  // optional int32 num_updates_downloaded = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->num_updates_downloaded(), output);
  }

  // optional int32 num_reflected_updates_downloaded = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->num_reflected_updates_downloaded(), output);
  }

  // optional .sync_pb.GetUpdatesCallerInfo caller_info = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      10, *this->caller_info_, output);
  }

  // repeated .sync_pb.DeprecatedMessage source_info = 11 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->source_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      11, this->source_info(static_cast<int>(i)), output);
  }

  // optional .sync_pb.SyncEnums.GetUpdatesOrigin get_updates_origin = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->get_updates_origin(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.SyncCycleCompletedEventInfo)
}

size_t SyncCycleCompletedEventInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.SyncCycleCompletedEventInfo)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated .sync_pb.DeprecatedMessage source_info = 11 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->source_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->source_info(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional .sync_pb.GetUpdatesCallerInfo caller_info = 10;
    if (has_caller_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->caller_info_);
    }

    // optional int32 num_blocking_conflicts = 2 [deprecated = true];
    if (has_num_blocking_conflicts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_blocking_conflicts());
    }

    // optional int32 num_non_blocking_conflicts = 3 [deprecated = true];
    if (has_num_non_blocking_conflicts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_non_blocking_conflicts());
    }

    // optional int32 num_encryption_conflicts = 4;
    if (has_num_encryption_conflicts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_encryption_conflicts());
    }

    // optional int32 num_hierarchy_conflicts = 5;
    if (has_num_hierarchy_conflicts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_hierarchy_conflicts());
    }

    // optional int32 num_simple_conflicts = 6;
    if (has_num_simple_conflicts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_simple_conflicts());
    }

    // optional int32 num_server_conflicts = 7;
    if (has_num_server_conflicts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_server_conflicts());
    }

    // optional int32 num_updates_downloaded = 8;
    if (has_num_updates_downloaded()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_updates_downloaded());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional int32 num_reflected_updates_downloaded = 9;
    if (has_num_reflected_updates_downloaded()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_reflected_updates_downloaded());
    }

    // optional .sync_pb.SyncEnums.GetUpdatesOrigin get_updates_origin = 12;
    if (has_get_updates_origin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->get_updates_origin());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncCycleCompletedEventInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SyncCycleCompletedEventInfo*>(&from));
}

void SyncCycleCompletedEventInfo::MergeFrom(const SyncCycleCompletedEventInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.SyncCycleCompletedEventInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  source_info_.MergeFrom(from.source_info_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_caller_info()->::sync_pb::GetUpdatesCallerInfo::MergeFrom(from.caller_info());
    }
    if (cached_has_bits & 0x00000002u) {
      num_blocking_conflicts_ = from.num_blocking_conflicts_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_non_blocking_conflicts_ = from.num_non_blocking_conflicts_;
    }
    if (cached_has_bits & 0x00000008u) {
      num_encryption_conflicts_ = from.num_encryption_conflicts_;
    }
    if (cached_has_bits & 0x00000010u) {
      num_hierarchy_conflicts_ = from.num_hierarchy_conflicts_;
    }
    if (cached_has_bits & 0x00000020u) {
      num_simple_conflicts_ = from.num_simple_conflicts_;
    }
    if (cached_has_bits & 0x00000040u) {
      num_server_conflicts_ = from.num_server_conflicts_;
    }
    if (cached_has_bits & 0x00000080u) {
      num_updates_downloaded_ = from.num_updates_downloaded_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      num_reflected_updates_downloaded_ = from.num_reflected_updates_downloaded_;
    }
    if (cached_has_bits & 0x00000200u) {
      get_updates_origin_ = from.get_updates_origin_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SyncCycleCompletedEventInfo::CopyFrom(const SyncCycleCompletedEventInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.SyncCycleCompletedEventInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncCycleCompletedEventInfo::IsInitialized() const {
  if (has_caller_info()) {
    if (!this->caller_info_->IsInitialized()) return false;
  }
  return true;
}

void SyncCycleCompletedEventInfo::Swap(SyncCycleCompletedEventInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncCycleCompletedEventInfo::InternalSwap(SyncCycleCompletedEventInfo* other) {
  source_info_.InternalSwap(&other->source_info_);
  std::swap(caller_info_, other->caller_info_);
  std::swap(num_blocking_conflicts_, other->num_blocking_conflicts_);
  std::swap(num_non_blocking_conflicts_, other->num_non_blocking_conflicts_);
  std::swap(num_encryption_conflicts_, other->num_encryption_conflicts_);
  std::swap(num_hierarchy_conflicts_, other->num_hierarchy_conflicts_);
  std::swap(num_simple_conflicts_, other->num_simple_conflicts_);
  std::swap(num_server_conflicts_, other->num_server_conflicts_);
  std::swap(num_updates_downloaded_, other->num_updates_downloaded_);
  std::swap(num_reflected_updates_downloaded_, other->num_reflected_updates_downloaded_);
  std::swap(get_updates_origin_, other->get_updates_origin_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SyncCycleCompletedEventInfo::GetTypeName() const {
  return "sync_pb.SyncCycleCompletedEventInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncCycleCompletedEventInfo

// optional int32 num_blocking_conflicts = 2 [deprecated = true];
bool SyncCycleCompletedEventInfo::has_num_blocking_conflicts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SyncCycleCompletedEventInfo::set_has_num_blocking_conflicts() {
  _has_bits_[0] |= 0x00000002u;
}
void SyncCycleCompletedEventInfo::clear_has_num_blocking_conflicts() {
  _has_bits_[0] &= ~0x00000002u;
}
void SyncCycleCompletedEventInfo::clear_num_blocking_conflicts() {
  num_blocking_conflicts_ = 0;
  clear_has_num_blocking_conflicts();
}
::google::protobuf::int32 SyncCycleCompletedEventInfo::num_blocking_conflicts() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.num_blocking_conflicts)
  return num_blocking_conflicts_;
}
void SyncCycleCompletedEventInfo::set_num_blocking_conflicts(::google::protobuf::int32 value) {
  set_has_num_blocking_conflicts();
  num_blocking_conflicts_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.SyncCycleCompletedEventInfo.num_blocking_conflicts)
}

// optional int32 num_non_blocking_conflicts = 3 [deprecated = true];
bool SyncCycleCompletedEventInfo::has_num_non_blocking_conflicts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SyncCycleCompletedEventInfo::set_has_num_non_blocking_conflicts() {
  _has_bits_[0] |= 0x00000004u;
}
void SyncCycleCompletedEventInfo::clear_has_num_non_blocking_conflicts() {
  _has_bits_[0] &= ~0x00000004u;
}
void SyncCycleCompletedEventInfo::clear_num_non_blocking_conflicts() {
  num_non_blocking_conflicts_ = 0;
  clear_has_num_non_blocking_conflicts();
}
::google::protobuf::int32 SyncCycleCompletedEventInfo::num_non_blocking_conflicts() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.num_non_blocking_conflicts)
  return num_non_blocking_conflicts_;
}
void SyncCycleCompletedEventInfo::set_num_non_blocking_conflicts(::google::protobuf::int32 value) {
  set_has_num_non_blocking_conflicts();
  num_non_blocking_conflicts_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.SyncCycleCompletedEventInfo.num_non_blocking_conflicts)
}

// optional int32 num_encryption_conflicts = 4;
bool SyncCycleCompletedEventInfo::has_num_encryption_conflicts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SyncCycleCompletedEventInfo::set_has_num_encryption_conflicts() {
  _has_bits_[0] |= 0x00000008u;
}
void SyncCycleCompletedEventInfo::clear_has_num_encryption_conflicts() {
  _has_bits_[0] &= ~0x00000008u;
}
void SyncCycleCompletedEventInfo::clear_num_encryption_conflicts() {
  num_encryption_conflicts_ = 0;
  clear_has_num_encryption_conflicts();
}
::google::protobuf::int32 SyncCycleCompletedEventInfo::num_encryption_conflicts() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.num_encryption_conflicts)
  return num_encryption_conflicts_;
}
void SyncCycleCompletedEventInfo::set_num_encryption_conflicts(::google::protobuf::int32 value) {
  set_has_num_encryption_conflicts();
  num_encryption_conflicts_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.SyncCycleCompletedEventInfo.num_encryption_conflicts)
}

// optional int32 num_hierarchy_conflicts = 5;
bool SyncCycleCompletedEventInfo::has_num_hierarchy_conflicts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SyncCycleCompletedEventInfo::set_has_num_hierarchy_conflicts() {
  _has_bits_[0] |= 0x00000010u;
}
void SyncCycleCompletedEventInfo::clear_has_num_hierarchy_conflicts() {
  _has_bits_[0] &= ~0x00000010u;
}
void SyncCycleCompletedEventInfo::clear_num_hierarchy_conflicts() {
  num_hierarchy_conflicts_ = 0;
  clear_has_num_hierarchy_conflicts();
}
::google::protobuf::int32 SyncCycleCompletedEventInfo::num_hierarchy_conflicts() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.num_hierarchy_conflicts)
  return num_hierarchy_conflicts_;
}
void SyncCycleCompletedEventInfo::set_num_hierarchy_conflicts(::google::protobuf::int32 value) {
  set_has_num_hierarchy_conflicts();
  num_hierarchy_conflicts_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.SyncCycleCompletedEventInfo.num_hierarchy_conflicts)
}

// optional int32 num_simple_conflicts = 6;
bool SyncCycleCompletedEventInfo::has_num_simple_conflicts() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SyncCycleCompletedEventInfo::set_has_num_simple_conflicts() {
  _has_bits_[0] |= 0x00000020u;
}
void SyncCycleCompletedEventInfo::clear_has_num_simple_conflicts() {
  _has_bits_[0] &= ~0x00000020u;
}
void SyncCycleCompletedEventInfo::clear_num_simple_conflicts() {
  num_simple_conflicts_ = 0;
  clear_has_num_simple_conflicts();
}
::google::protobuf::int32 SyncCycleCompletedEventInfo::num_simple_conflicts() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.num_simple_conflicts)
  return num_simple_conflicts_;
}
void SyncCycleCompletedEventInfo::set_num_simple_conflicts(::google::protobuf::int32 value) {
  set_has_num_simple_conflicts();
  num_simple_conflicts_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.SyncCycleCompletedEventInfo.num_simple_conflicts)
}

// optional int32 num_server_conflicts = 7;
bool SyncCycleCompletedEventInfo::has_num_server_conflicts() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SyncCycleCompletedEventInfo::set_has_num_server_conflicts() {
  _has_bits_[0] |= 0x00000040u;
}
void SyncCycleCompletedEventInfo::clear_has_num_server_conflicts() {
  _has_bits_[0] &= ~0x00000040u;
}
void SyncCycleCompletedEventInfo::clear_num_server_conflicts() {
  num_server_conflicts_ = 0;
  clear_has_num_server_conflicts();
}
::google::protobuf::int32 SyncCycleCompletedEventInfo::num_server_conflicts() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.num_server_conflicts)
  return num_server_conflicts_;
}
void SyncCycleCompletedEventInfo::set_num_server_conflicts(::google::protobuf::int32 value) {
  set_has_num_server_conflicts();
  num_server_conflicts_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.SyncCycleCompletedEventInfo.num_server_conflicts)
}

// optional int32 num_updates_downloaded = 8;
bool SyncCycleCompletedEventInfo::has_num_updates_downloaded() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void SyncCycleCompletedEventInfo::set_has_num_updates_downloaded() {
  _has_bits_[0] |= 0x00000080u;
}
void SyncCycleCompletedEventInfo::clear_has_num_updates_downloaded() {
  _has_bits_[0] &= ~0x00000080u;
}
void SyncCycleCompletedEventInfo::clear_num_updates_downloaded() {
  num_updates_downloaded_ = 0;
  clear_has_num_updates_downloaded();
}
::google::protobuf::int32 SyncCycleCompletedEventInfo::num_updates_downloaded() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.num_updates_downloaded)
  return num_updates_downloaded_;
}
void SyncCycleCompletedEventInfo::set_num_updates_downloaded(::google::protobuf::int32 value) {
  set_has_num_updates_downloaded();
  num_updates_downloaded_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.SyncCycleCompletedEventInfo.num_updates_downloaded)
}

// optional int32 num_reflected_updates_downloaded = 9;
bool SyncCycleCompletedEventInfo::has_num_reflected_updates_downloaded() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void SyncCycleCompletedEventInfo::set_has_num_reflected_updates_downloaded() {
  _has_bits_[0] |= 0x00000100u;
}
void SyncCycleCompletedEventInfo::clear_has_num_reflected_updates_downloaded() {
  _has_bits_[0] &= ~0x00000100u;
}
void SyncCycleCompletedEventInfo::clear_num_reflected_updates_downloaded() {
  num_reflected_updates_downloaded_ = 0;
  clear_has_num_reflected_updates_downloaded();
}
::google::protobuf::int32 SyncCycleCompletedEventInfo::num_reflected_updates_downloaded() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.num_reflected_updates_downloaded)
  return num_reflected_updates_downloaded_;
}
void SyncCycleCompletedEventInfo::set_num_reflected_updates_downloaded(::google::protobuf::int32 value) {
  set_has_num_reflected_updates_downloaded();
  num_reflected_updates_downloaded_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.SyncCycleCompletedEventInfo.num_reflected_updates_downloaded)
}

// optional .sync_pb.GetUpdatesCallerInfo caller_info = 10;
bool SyncCycleCompletedEventInfo::has_caller_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SyncCycleCompletedEventInfo::set_has_caller_info() {
  _has_bits_[0] |= 0x00000001u;
}
void SyncCycleCompletedEventInfo::clear_has_caller_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void SyncCycleCompletedEventInfo::clear_caller_info() {
  if (caller_info_ != NULL) caller_info_->::sync_pb::GetUpdatesCallerInfo::Clear();
  clear_has_caller_info();
}
const ::sync_pb::GetUpdatesCallerInfo& SyncCycleCompletedEventInfo::caller_info() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.caller_info)
  return caller_info_ != NULL ? *caller_info_
                         : *::sync_pb::GetUpdatesCallerInfo::internal_default_instance();
}
::sync_pb::GetUpdatesCallerInfo* SyncCycleCompletedEventInfo::mutable_caller_info() {
  set_has_caller_info();
  if (caller_info_ == NULL) {
    caller_info_ = new ::sync_pb::GetUpdatesCallerInfo;
  }
  // @@protoc_insertion_point(field_mutable:sync_pb.SyncCycleCompletedEventInfo.caller_info)
  return caller_info_;
}
::sync_pb::GetUpdatesCallerInfo* SyncCycleCompletedEventInfo::release_caller_info() {
  // @@protoc_insertion_point(field_release:sync_pb.SyncCycleCompletedEventInfo.caller_info)
  clear_has_caller_info();
  ::sync_pb::GetUpdatesCallerInfo* temp = caller_info_;
  caller_info_ = NULL;
  return temp;
}
void SyncCycleCompletedEventInfo::set_allocated_caller_info(::sync_pb::GetUpdatesCallerInfo* caller_info) {
  delete caller_info_;
  caller_info_ = caller_info;
  if (caller_info) {
    set_has_caller_info();
  } else {
    clear_has_caller_info();
  }
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SyncCycleCompletedEventInfo.caller_info)
}

// repeated .sync_pb.DeprecatedMessage source_info = 11 [deprecated = true];
int SyncCycleCompletedEventInfo::source_info_size() const {
  return source_info_.size();
}
void SyncCycleCompletedEventInfo::clear_source_info() {
  source_info_.Clear();
}
const ::sync_pb::DeprecatedMessage& SyncCycleCompletedEventInfo::source_info(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.source_info)
  return source_info_.Get(index);
}
::sync_pb::DeprecatedMessage* SyncCycleCompletedEventInfo::mutable_source_info(int index) {
  // @@protoc_insertion_point(field_mutable:sync_pb.SyncCycleCompletedEventInfo.source_info)
  return source_info_.Mutable(index);
}
::sync_pb::DeprecatedMessage* SyncCycleCompletedEventInfo::add_source_info() {
  // @@protoc_insertion_point(field_add:sync_pb.SyncCycleCompletedEventInfo.source_info)
  return source_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::sync_pb::DeprecatedMessage >*
SyncCycleCompletedEventInfo::mutable_source_info() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.SyncCycleCompletedEventInfo.source_info)
  return &source_info_;
}
const ::google::protobuf::RepeatedPtrField< ::sync_pb::DeprecatedMessage >&
SyncCycleCompletedEventInfo::source_info() const {
  // @@protoc_insertion_point(field_list:sync_pb.SyncCycleCompletedEventInfo.source_info)
  return source_info_;
}

// optional .sync_pb.SyncEnums.GetUpdatesOrigin get_updates_origin = 12;
bool SyncCycleCompletedEventInfo::has_get_updates_origin() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void SyncCycleCompletedEventInfo::set_has_get_updates_origin() {
  _has_bits_[0] |= 0x00000200u;
}
void SyncCycleCompletedEventInfo::clear_has_get_updates_origin() {
  _has_bits_[0] &= ~0x00000200u;
}
void SyncCycleCompletedEventInfo::clear_get_updates_origin() {
  get_updates_origin_ = 0;
  clear_has_get_updates_origin();
}
::sync_pb::SyncEnums_GetUpdatesOrigin SyncCycleCompletedEventInfo::get_updates_origin() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.get_updates_origin)
  return static_cast< ::sync_pb::SyncEnums_GetUpdatesOrigin >(get_updates_origin_);
}
void SyncCycleCompletedEventInfo::set_get_updates_origin(::sync_pb::SyncEnums_GetUpdatesOrigin value) {
  assert(::sync_pb::SyncEnums_GetUpdatesOrigin_IsValid(value));
  set_has_get_updates_origin();
  get_updates_origin_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.SyncCycleCompletedEventInfo.get_updates_origin)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DatatypeAssociationStats::kDataTypeIdFieldNumber;
const int DatatypeAssociationStats::kNumLocalItemsBeforeAssociationFieldNumber;
const int DatatypeAssociationStats::kNumSyncItemsBeforeAssociationFieldNumber;
const int DatatypeAssociationStats::kNumLocalItemsAfterAssociationFieldNumber;
const int DatatypeAssociationStats::kNumSyncItemsAfterAssociationFieldNumber;
const int DatatypeAssociationStats::kNumLocalItemsAddedFieldNumber;
const int DatatypeAssociationStats::kNumLocalItemsDeletedFieldNumber;
const int DatatypeAssociationStats::kNumLocalItemsModifiedFieldNumber;
const int DatatypeAssociationStats::kNumSyncItemsAddedFieldNumber;
const int DatatypeAssociationStats::kNumSyncItemsDeletedFieldNumber;
const int DatatypeAssociationStats::kNumSyncItemsModifiedFieldNumber;
const int DatatypeAssociationStats::kLocalVersionPreAssociationFieldNumber;
const int DatatypeAssociationStats::kSyncVersionPreAssociationFieldNumber;
const int DatatypeAssociationStats::kHadErrorFieldNumber;
const int DatatypeAssociationStats::kDownloadWaitTimeUsFieldNumber;
const int DatatypeAssociationStats::kDownloadTimeUsFieldNumber;
const int DatatypeAssociationStats::kAssociationWaitTimeForHighPriorityUsFieldNumber;
const int DatatypeAssociationStats::kAssociationWaitTimeForSamePriorityUsFieldNumber;
const int DatatypeAssociationStats::kAssociationTimeUsFieldNumber;
const int DatatypeAssociationStats::kHighPriorityTypeConfiguredBeforeFieldNumber;
const int DatatypeAssociationStats::kSamePriorityTypeConfiguredBeforeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DatatypeAssociationStats::DatatypeAssociationStats()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fdebug_5finfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.DatatypeAssociationStats)
}
DatatypeAssociationStats::DatatypeAssociationStats(const DatatypeAssociationStats& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      high_priority_type_configured_before_(from.high_priority_type_configured_before_),
      same_priority_type_configured_before_(from.same_priority_type_configured_before_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&data_type_id_, &from.data_type_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&sync_version_pre_association_) -
    reinterpret_cast<char*>(&data_type_id_)) + sizeof(sync_version_pre_association_));
  // @@protoc_insertion_point(copy_constructor:sync_pb.DatatypeAssociationStats)
}

void DatatypeAssociationStats::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&data_type_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sync_version_pre_association_) -
      reinterpret_cast<char*>(&data_type_id_)) + sizeof(sync_version_pre_association_));
}

DatatypeAssociationStats::~DatatypeAssociationStats() {
  // @@protoc_insertion_point(destructor:sync_pb.DatatypeAssociationStats)
  SharedDtor();
}

void DatatypeAssociationStats::SharedDtor() {
}

void DatatypeAssociationStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DatatypeAssociationStats& DatatypeAssociationStats::default_instance() {
  protobuf_client_5fdebug_5finfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

DatatypeAssociationStats* DatatypeAssociationStats::New(::google::protobuf::Arena* arena) const {
  DatatypeAssociationStats* n = new DatatypeAssociationStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DatatypeAssociationStats::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.DatatypeAssociationStats)
  high_priority_type_configured_before_.Clear();
  same_priority_type_configured_before_.Clear();
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&data_type_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_local_items_modified_) -
        reinterpret_cast<char*>(&data_type_id_)) + sizeof(num_local_items_modified_));
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ::memset(&num_sync_items_added_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&association_wait_time_for_high_priority_us_) -
        reinterpret_cast<char*>(&num_sync_items_added_)) + sizeof(association_wait_time_for_high_priority_us_));
  }
  if (_has_bits_[16 / 32] & 458752u) {
    ::memset(&association_time_us_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sync_version_pre_association_) -
        reinterpret_cast<char*>(&association_time_us_)) + sizeof(sync_version_pre_association_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DatatypeAssociationStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.DatatypeAssociationStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 data_type_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_data_type_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_type_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_local_items_before_association = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_num_local_items_before_association();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_local_items_before_association_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_sync_items_before_association = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_num_sync_items_before_association();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_sync_items_before_association_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_local_items_after_association = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_num_local_items_after_association();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_local_items_after_association_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_sync_items_after_association = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_num_sync_items_after_association();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_sync_items_after_association_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_local_items_added = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_num_local_items_added();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_local_items_added_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_local_items_deleted = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_num_local_items_deleted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_local_items_deleted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_local_items_modified = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_num_local_items_modified();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_local_items_modified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_sync_items_added = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_num_sync_items_added();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_sync_items_added_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_sync_items_deleted = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_num_sync_items_deleted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_sync_items_deleted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_sync_items_modified = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_num_sync_items_modified();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_sync_items_modified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool had_error = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          set_has_had_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &had_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 download_time_us = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          set_has_download_time_us();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &download_time_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 association_wait_time_for_same_priority_us = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has_association_wait_time_for_same_priority_us();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &association_wait_time_for_same_priority_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 download_wait_time_us = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {
          set_has_download_wait_time_us();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &download_wait_time_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 association_wait_time_for_high_priority_us = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          set_has_association_wait_time_for_high_priority_us();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &association_wait_time_for_high_priority_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 association_time_us = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {
          set_has_association_time_us();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &association_time_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 high_priority_type_configured_before = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 144u, input, this->mutable_high_priority_type_configured_before())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(146u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_high_priority_type_configured_before())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 same_priority_type_configured_before = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 152u, input, this->mutable_same_priority_type_configured_before())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(154u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_same_priority_type_configured_before())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 local_version_pre_association = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u)) {
          set_has_local_version_pre_association();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &local_version_pre_association_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 sync_version_pre_association = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u)) {
          set_has_sync_version_pre_association();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sync_version_pre_association_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.DatatypeAssociationStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.DatatypeAssociationStats)
  return false;
#undef DO_
}

void DatatypeAssociationStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.DatatypeAssociationStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 data_type_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->data_type_id(), output);
  }

  // optional int32 num_local_items_before_association = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_local_items_before_association(), output);
  }

  // optional int32 num_sync_items_before_association = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num_sync_items_before_association(), output);
  }

  // optional int32 num_local_items_after_association = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->num_local_items_after_association(), output);
  }

  // optional int32 num_sync_items_after_association = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->num_sync_items_after_association(), output);
  }

  // optional int32 num_local_items_added = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->num_local_items_added(), output);
  }

  // optional int32 num_local_items_deleted = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->num_local_items_deleted(), output);
  }

  // optional int32 num_local_items_modified = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->num_local_items_modified(), output);
  }

  // optional int32 num_sync_items_added = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->num_sync_items_added(), output);
  }

  // optional int32 num_sync_items_deleted = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->num_sync_items_deleted(), output);
  }

  // optional int32 num_sync_items_modified = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->num_sync_items_modified(), output);
  }

  // optional bool had_error = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->had_error(), output);
  }

  // optional int64 download_time_us = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->download_time_us(), output);
  }

  // optional int64 association_wait_time_for_same_priority_us = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->association_wait_time_for_same_priority_us(), output);
  }

  // optional int64 download_wait_time_us = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->download_wait_time_us(), output);
  }

  // optional int64 association_wait_time_for_high_priority_us = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->association_wait_time_for_high_priority_us(), output);
  }

  // optional int64 association_time_us = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->association_time_us(), output);
  }

  // repeated int32 high_priority_type_configured_before = 18;
  for (int i = 0, n = this->high_priority_type_configured_before_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      18, this->high_priority_type_configured_before(i), output);
  }

  // repeated int32 same_priority_type_configured_before = 19;
  for (int i = 0, n = this->same_priority_type_configured_before_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      19, this->same_priority_type_configured_before(i), output);
  }

  // optional int64 local_version_pre_association = 20;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(20, this->local_version_pre_association(), output);
  }

  // optional int64 sync_version_pre_association = 21;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(21, this->sync_version_pre_association(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.DatatypeAssociationStats)
}

size_t DatatypeAssociationStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.DatatypeAssociationStats)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated int32 high_priority_type_configured_before = 18;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->high_priority_type_configured_before_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->high_priority_type_configured_before_size());
    total_size += data_size;
  }

  // repeated int32 same_priority_type_configured_before = 19;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->same_priority_type_configured_before_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->same_priority_type_configured_before_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 data_type_id = 1;
    if (has_data_type_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data_type_id());
    }

    // optional int32 num_local_items_before_association = 2;
    if (has_num_local_items_before_association()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_local_items_before_association());
    }

    // optional int32 num_sync_items_before_association = 3;
    if (has_num_sync_items_before_association()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_sync_items_before_association());
    }

    // optional int32 num_local_items_after_association = 4;
    if (has_num_local_items_after_association()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_local_items_after_association());
    }

    // optional int32 num_sync_items_after_association = 5;
    if (has_num_sync_items_after_association()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_sync_items_after_association());
    }

    // optional int32 num_local_items_added = 6;
    if (has_num_local_items_added()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_local_items_added());
    }

    // optional int32 num_local_items_deleted = 7;
    if (has_num_local_items_deleted()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_local_items_deleted());
    }

    // optional int32 num_local_items_modified = 8;
    if (has_num_local_items_modified()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_local_items_modified());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 num_sync_items_added = 9;
    if (has_num_sync_items_added()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_sync_items_added());
    }

    // optional int32 num_sync_items_deleted = 10;
    if (has_num_sync_items_deleted()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_sync_items_deleted());
    }

    // optional int32 num_sync_items_modified = 11;
    if (has_num_sync_items_modified()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_sync_items_modified());
    }

    // optional bool had_error = 12;
    if (has_had_error()) {
      total_size += 1 + 1;
    }

    // optional int64 download_time_us = 13;
    if (has_download_time_us()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->download_time_us());
    }

    // optional int64 association_wait_time_for_same_priority_us = 14;
    if (has_association_wait_time_for_same_priority_us()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->association_wait_time_for_same_priority_us());
    }

    // optional int64 download_wait_time_us = 15;
    if (has_download_wait_time_us()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->download_wait_time_us());
    }

    // optional int64 association_wait_time_for_high_priority_us = 16;
    if (has_association_wait_time_for_high_priority_us()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->association_wait_time_for_high_priority_us());
    }

  }
  if (_has_bits_[16 / 32] & 458752u) {
    // optional int64 association_time_us = 17;
    if (has_association_time_us()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->association_time_us());
    }

    // optional int64 local_version_pre_association = 20;
    if (has_local_version_pre_association()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->local_version_pre_association());
    }

    // optional int64 sync_version_pre_association = 21;
    if (has_sync_version_pre_association()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->sync_version_pre_association());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DatatypeAssociationStats::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DatatypeAssociationStats*>(&from));
}

void DatatypeAssociationStats::MergeFrom(const DatatypeAssociationStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.DatatypeAssociationStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  high_priority_type_configured_before_.MergeFrom(from.high_priority_type_configured_before_);
  same_priority_type_configured_before_.MergeFrom(from.same_priority_type_configured_before_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      data_type_id_ = from.data_type_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_local_items_before_association_ = from.num_local_items_before_association_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_sync_items_before_association_ = from.num_sync_items_before_association_;
    }
    if (cached_has_bits & 0x00000008u) {
      num_local_items_after_association_ = from.num_local_items_after_association_;
    }
    if (cached_has_bits & 0x00000010u) {
      num_sync_items_after_association_ = from.num_sync_items_after_association_;
    }
    if (cached_has_bits & 0x00000020u) {
      num_local_items_added_ = from.num_local_items_added_;
    }
    if (cached_has_bits & 0x00000040u) {
      num_local_items_deleted_ = from.num_local_items_deleted_;
    }
    if (cached_has_bits & 0x00000080u) {
      num_local_items_modified_ = from.num_local_items_modified_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      num_sync_items_added_ = from.num_sync_items_added_;
    }
    if (cached_has_bits & 0x00000200u) {
      num_sync_items_deleted_ = from.num_sync_items_deleted_;
    }
    if (cached_has_bits & 0x00000400u) {
      num_sync_items_modified_ = from.num_sync_items_modified_;
    }
    if (cached_has_bits & 0x00000800u) {
      had_error_ = from.had_error_;
    }
    if (cached_has_bits & 0x00001000u) {
      download_time_us_ = from.download_time_us_;
    }
    if (cached_has_bits & 0x00002000u) {
      association_wait_time_for_same_priority_us_ = from.association_wait_time_for_same_priority_us_;
    }
    if (cached_has_bits & 0x00004000u) {
      download_wait_time_us_ = from.download_wait_time_us_;
    }
    if (cached_has_bits & 0x00008000u) {
      association_wait_time_for_high_priority_us_ = from.association_wait_time_for_high_priority_us_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 458752u) {
    if (cached_has_bits & 0x00010000u) {
      association_time_us_ = from.association_time_us_;
    }
    if (cached_has_bits & 0x00020000u) {
      local_version_pre_association_ = from.local_version_pre_association_;
    }
    if (cached_has_bits & 0x00040000u) {
      sync_version_pre_association_ = from.sync_version_pre_association_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DatatypeAssociationStats::CopyFrom(const DatatypeAssociationStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.DatatypeAssociationStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DatatypeAssociationStats::IsInitialized() const {
  return true;
}

void DatatypeAssociationStats::Swap(DatatypeAssociationStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DatatypeAssociationStats::InternalSwap(DatatypeAssociationStats* other) {
  high_priority_type_configured_before_.InternalSwap(&other->high_priority_type_configured_before_);
  same_priority_type_configured_before_.InternalSwap(&other->same_priority_type_configured_before_);
  std::swap(data_type_id_, other->data_type_id_);
  std::swap(num_local_items_before_association_, other->num_local_items_before_association_);
  std::swap(num_sync_items_before_association_, other->num_sync_items_before_association_);
  std::swap(num_local_items_after_association_, other->num_local_items_after_association_);
  std::swap(num_sync_items_after_association_, other->num_sync_items_after_association_);
  std::swap(num_local_items_added_, other->num_local_items_added_);
  std::swap(num_local_items_deleted_, other->num_local_items_deleted_);
  std::swap(num_local_items_modified_, other->num_local_items_modified_);
  std::swap(num_sync_items_added_, other->num_sync_items_added_);
  std::swap(num_sync_items_deleted_, other->num_sync_items_deleted_);
  std::swap(num_sync_items_modified_, other->num_sync_items_modified_);
  std::swap(had_error_, other->had_error_);
  std::swap(download_time_us_, other->download_time_us_);
  std::swap(association_wait_time_for_same_priority_us_, other->association_wait_time_for_same_priority_us_);
  std::swap(download_wait_time_us_, other->download_wait_time_us_);
  std::swap(association_wait_time_for_high_priority_us_, other->association_wait_time_for_high_priority_us_);
  std::swap(association_time_us_, other->association_time_us_);
  std::swap(local_version_pre_association_, other->local_version_pre_association_);
  std::swap(sync_version_pre_association_, other->sync_version_pre_association_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string DatatypeAssociationStats::GetTypeName() const {
  return "sync_pb.DatatypeAssociationStats";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DatatypeAssociationStats

// optional int32 data_type_id = 1;
bool DatatypeAssociationStats::has_data_type_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DatatypeAssociationStats::set_has_data_type_id() {
  _has_bits_[0] |= 0x00000001u;
}
void DatatypeAssociationStats::clear_has_data_type_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void DatatypeAssociationStats::clear_data_type_id() {
  data_type_id_ = 0;
  clear_has_data_type_id();
}
::google::protobuf::int32 DatatypeAssociationStats::data_type_id() const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.data_type_id)
  return data_type_id_;
}
void DatatypeAssociationStats::set_data_type_id(::google::protobuf::int32 value) {
  set_has_data_type_id();
  data_type_id_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.data_type_id)
}

// optional int32 num_local_items_before_association = 2;
bool DatatypeAssociationStats::has_num_local_items_before_association() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DatatypeAssociationStats::set_has_num_local_items_before_association() {
  _has_bits_[0] |= 0x00000002u;
}
void DatatypeAssociationStats::clear_has_num_local_items_before_association() {
  _has_bits_[0] &= ~0x00000002u;
}
void DatatypeAssociationStats::clear_num_local_items_before_association() {
  num_local_items_before_association_ = 0;
  clear_has_num_local_items_before_association();
}
::google::protobuf::int32 DatatypeAssociationStats::num_local_items_before_association() const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_local_items_before_association)
  return num_local_items_before_association_;
}
void DatatypeAssociationStats::set_num_local_items_before_association(::google::protobuf::int32 value) {
  set_has_num_local_items_before_association();
  num_local_items_before_association_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_local_items_before_association)
}

// optional int32 num_sync_items_before_association = 3;
bool DatatypeAssociationStats::has_num_sync_items_before_association() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DatatypeAssociationStats::set_has_num_sync_items_before_association() {
  _has_bits_[0] |= 0x00000004u;
}
void DatatypeAssociationStats::clear_has_num_sync_items_before_association() {
  _has_bits_[0] &= ~0x00000004u;
}
void DatatypeAssociationStats::clear_num_sync_items_before_association() {
  num_sync_items_before_association_ = 0;
  clear_has_num_sync_items_before_association();
}
::google::protobuf::int32 DatatypeAssociationStats::num_sync_items_before_association() const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_sync_items_before_association)
  return num_sync_items_before_association_;
}
void DatatypeAssociationStats::set_num_sync_items_before_association(::google::protobuf::int32 value) {
  set_has_num_sync_items_before_association();
  num_sync_items_before_association_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_sync_items_before_association)
}

// optional int32 num_local_items_after_association = 4;
bool DatatypeAssociationStats::has_num_local_items_after_association() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DatatypeAssociationStats::set_has_num_local_items_after_association() {
  _has_bits_[0] |= 0x00000008u;
}
void DatatypeAssociationStats::clear_has_num_local_items_after_association() {
  _has_bits_[0] &= ~0x00000008u;
}
void DatatypeAssociationStats::clear_num_local_items_after_association() {
  num_local_items_after_association_ = 0;
  clear_has_num_local_items_after_association();
}
::google::protobuf::int32 DatatypeAssociationStats::num_local_items_after_association() const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_local_items_after_association)
  return num_local_items_after_association_;
}
void DatatypeAssociationStats::set_num_local_items_after_association(::google::protobuf::int32 value) {
  set_has_num_local_items_after_association();
  num_local_items_after_association_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_local_items_after_association)
}

// optional int32 num_sync_items_after_association = 5;
bool DatatypeAssociationStats::has_num_sync_items_after_association() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DatatypeAssociationStats::set_has_num_sync_items_after_association() {
  _has_bits_[0] |= 0x00000010u;
}
void DatatypeAssociationStats::clear_has_num_sync_items_after_association() {
  _has_bits_[0] &= ~0x00000010u;
}
void DatatypeAssociationStats::clear_num_sync_items_after_association() {
  num_sync_items_after_association_ = 0;
  clear_has_num_sync_items_after_association();
}
::google::protobuf::int32 DatatypeAssociationStats::num_sync_items_after_association() const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_sync_items_after_association)
  return num_sync_items_after_association_;
}
void DatatypeAssociationStats::set_num_sync_items_after_association(::google::protobuf::int32 value) {
  set_has_num_sync_items_after_association();
  num_sync_items_after_association_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_sync_items_after_association)
}

// optional int32 num_local_items_added = 6;
bool DatatypeAssociationStats::has_num_local_items_added() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void DatatypeAssociationStats::set_has_num_local_items_added() {
  _has_bits_[0] |= 0x00000020u;
}
void DatatypeAssociationStats::clear_has_num_local_items_added() {
  _has_bits_[0] &= ~0x00000020u;
}
void DatatypeAssociationStats::clear_num_local_items_added() {
  num_local_items_added_ = 0;
  clear_has_num_local_items_added();
}
::google::protobuf::int32 DatatypeAssociationStats::num_local_items_added() const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_local_items_added)
  return num_local_items_added_;
}
void DatatypeAssociationStats::set_num_local_items_added(::google::protobuf::int32 value) {
  set_has_num_local_items_added();
  num_local_items_added_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_local_items_added)
}

// optional int32 num_local_items_deleted = 7;
bool DatatypeAssociationStats::has_num_local_items_deleted() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void DatatypeAssociationStats::set_has_num_local_items_deleted() {
  _has_bits_[0] |= 0x00000040u;
}
void DatatypeAssociationStats::clear_has_num_local_items_deleted() {
  _has_bits_[0] &= ~0x00000040u;
}
void DatatypeAssociationStats::clear_num_local_items_deleted() {
  num_local_items_deleted_ = 0;
  clear_has_num_local_items_deleted();
}
::google::protobuf::int32 DatatypeAssociationStats::num_local_items_deleted() const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_local_items_deleted)
  return num_local_items_deleted_;
}
void DatatypeAssociationStats::set_num_local_items_deleted(::google::protobuf::int32 value) {
  set_has_num_local_items_deleted();
  num_local_items_deleted_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_local_items_deleted)
}

// optional int32 num_local_items_modified = 8;
bool DatatypeAssociationStats::has_num_local_items_modified() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void DatatypeAssociationStats::set_has_num_local_items_modified() {
  _has_bits_[0] |= 0x00000080u;
}
void DatatypeAssociationStats::clear_has_num_local_items_modified() {
  _has_bits_[0] &= ~0x00000080u;
}
void DatatypeAssociationStats::clear_num_local_items_modified() {
  num_local_items_modified_ = 0;
  clear_has_num_local_items_modified();
}
::google::protobuf::int32 DatatypeAssociationStats::num_local_items_modified() const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_local_items_modified)
  return num_local_items_modified_;
}
void DatatypeAssociationStats::set_num_local_items_modified(::google::protobuf::int32 value) {
  set_has_num_local_items_modified();
  num_local_items_modified_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_local_items_modified)
}

// optional int32 num_sync_items_added = 9;
bool DatatypeAssociationStats::has_num_sync_items_added() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void DatatypeAssociationStats::set_has_num_sync_items_added() {
  _has_bits_[0] |= 0x00000100u;
}
void DatatypeAssociationStats::clear_has_num_sync_items_added() {
  _has_bits_[0] &= ~0x00000100u;
}
void DatatypeAssociationStats::clear_num_sync_items_added() {
  num_sync_items_added_ = 0;
  clear_has_num_sync_items_added();
}
::google::protobuf::int32 DatatypeAssociationStats::num_sync_items_added() const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_sync_items_added)
  return num_sync_items_added_;
}
void DatatypeAssociationStats::set_num_sync_items_added(::google::protobuf::int32 value) {
  set_has_num_sync_items_added();
  num_sync_items_added_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_sync_items_added)
}

// optional int32 num_sync_items_deleted = 10;
bool DatatypeAssociationStats::has_num_sync_items_deleted() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void DatatypeAssociationStats::set_has_num_sync_items_deleted() {
  _has_bits_[0] |= 0x00000200u;
}
void DatatypeAssociationStats::clear_has_num_sync_items_deleted() {
  _has_bits_[0] &= ~0x00000200u;
}
void DatatypeAssociationStats::clear_num_sync_items_deleted() {
  num_sync_items_deleted_ = 0;
  clear_has_num_sync_items_deleted();
}
::google::protobuf::int32 DatatypeAssociationStats::num_sync_items_deleted() const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_sync_items_deleted)
  return num_sync_items_deleted_;
}
void DatatypeAssociationStats::set_num_sync_items_deleted(::google::protobuf::int32 value) {
  set_has_num_sync_items_deleted();
  num_sync_items_deleted_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_sync_items_deleted)
}

// optional int32 num_sync_items_modified = 11;
bool DatatypeAssociationStats::has_num_sync_items_modified() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void DatatypeAssociationStats::set_has_num_sync_items_modified() {
  _has_bits_[0] |= 0x00000400u;
}
void DatatypeAssociationStats::clear_has_num_sync_items_modified() {
  _has_bits_[0] &= ~0x00000400u;
}
void DatatypeAssociationStats::clear_num_sync_items_modified() {
  num_sync_items_modified_ = 0;
  clear_has_num_sync_items_modified();
}
::google::protobuf::int32 DatatypeAssociationStats::num_sync_items_modified() const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_sync_items_modified)
  return num_sync_items_modified_;
}
void DatatypeAssociationStats::set_num_sync_items_modified(::google::protobuf::int32 value) {
  set_has_num_sync_items_modified();
  num_sync_items_modified_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_sync_items_modified)
}

// optional int64 local_version_pre_association = 20;
bool DatatypeAssociationStats::has_local_version_pre_association() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void DatatypeAssociationStats::set_has_local_version_pre_association() {
  _has_bits_[0] |= 0x00020000u;
}
void DatatypeAssociationStats::clear_has_local_version_pre_association() {
  _has_bits_[0] &= ~0x00020000u;
}
void DatatypeAssociationStats::clear_local_version_pre_association() {
  local_version_pre_association_ = GOOGLE_LONGLONG(0);
  clear_has_local_version_pre_association();
}
::google::protobuf::int64 DatatypeAssociationStats::local_version_pre_association() const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.local_version_pre_association)
  return local_version_pre_association_;
}
void DatatypeAssociationStats::set_local_version_pre_association(::google::protobuf::int64 value) {
  set_has_local_version_pre_association();
  local_version_pre_association_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.local_version_pre_association)
}

// optional int64 sync_version_pre_association = 21;
bool DatatypeAssociationStats::has_sync_version_pre_association() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void DatatypeAssociationStats::set_has_sync_version_pre_association() {
  _has_bits_[0] |= 0x00040000u;
}
void DatatypeAssociationStats::clear_has_sync_version_pre_association() {
  _has_bits_[0] &= ~0x00040000u;
}
void DatatypeAssociationStats::clear_sync_version_pre_association() {
  sync_version_pre_association_ = GOOGLE_LONGLONG(0);
  clear_has_sync_version_pre_association();
}
::google::protobuf::int64 DatatypeAssociationStats::sync_version_pre_association() const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.sync_version_pre_association)
  return sync_version_pre_association_;
}
void DatatypeAssociationStats::set_sync_version_pre_association(::google::protobuf::int64 value) {
  set_has_sync_version_pre_association();
  sync_version_pre_association_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.sync_version_pre_association)
}

// optional bool had_error = 12;
bool DatatypeAssociationStats::has_had_error() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void DatatypeAssociationStats::set_has_had_error() {
  _has_bits_[0] |= 0x00000800u;
}
void DatatypeAssociationStats::clear_has_had_error() {
  _has_bits_[0] &= ~0x00000800u;
}
void DatatypeAssociationStats::clear_had_error() {
  had_error_ = false;
  clear_has_had_error();
}
bool DatatypeAssociationStats::had_error() const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.had_error)
  return had_error_;
}
void DatatypeAssociationStats::set_had_error(bool value) {
  set_has_had_error();
  had_error_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.had_error)
}

// optional int64 download_wait_time_us = 15;
bool DatatypeAssociationStats::has_download_wait_time_us() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void DatatypeAssociationStats::set_has_download_wait_time_us() {
  _has_bits_[0] |= 0x00004000u;
}
void DatatypeAssociationStats::clear_has_download_wait_time_us() {
  _has_bits_[0] &= ~0x00004000u;
}
void DatatypeAssociationStats::clear_download_wait_time_us() {
  download_wait_time_us_ = GOOGLE_LONGLONG(0);
  clear_has_download_wait_time_us();
}
::google::protobuf::int64 DatatypeAssociationStats::download_wait_time_us() const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.download_wait_time_us)
  return download_wait_time_us_;
}
void DatatypeAssociationStats::set_download_wait_time_us(::google::protobuf::int64 value) {
  set_has_download_wait_time_us();
  download_wait_time_us_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.download_wait_time_us)
}

// optional int64 download_time_us = 13;
bool DatatypeAssociationStats::has_download_time_us() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void DatatypeAssociationStats::set_has_download_time_us() {
  _has_bits_[0] |= 0x00001000u;
}
void DatatypeAssociationStats::clear_has_download_time_us() {
  _has_bits_[0] &= ~0x00001000u;
}
void DatatypeAssociationStats::clear_download_time_us() {
  download_time_us_ = GOOGLE_LONGLONG(0);
  clear_has_download_time_us();
}
::google::protobuf::int64 DatatypeAssociationStats::download_time_us() const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.download_time_us)
  return download_time_us_;
}
void DatatypeAssociationStats::set_download_time_us(::google::protobuf::int64 value) {
  set_has_download_time_us();
  download_time_us_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.download_time_us)
}

// optional int64 association_wait_time_for_high_priority_us = 16;
bool DatatypeAssociationStats::has_association_wait_time_for_high_priority_us() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void DatatypeAssociationStats::set_has_association_wait_time_for_high_priority_us() {
  _has_bits_[0] |= 0x00008000u;
}
void DatatypeAssociationStats::clear_has_association_wait_time_for_high_priority_us() {
  _has_bits_[0] &= ~0x00008000u;
}
void DatatypeAssociationStats::clear_association_wait_time_for_high_priority_us() {
  association_wait_time_for_high_priority_us_ = GOOGLE_LONGLONG(0);
  clear_has_association_wait_time_for_high_priority_us();
}
::google::protobuf::int64 DatatypeAssociationStats::association_wait_time_for_high_priority_us() const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.association_wait_time_for_high_priority_us)
  return association_wait_time_for_high_priority_us_;
}
void DatatypeAssociationStats::set_association_wait_time_for_high_priority_us(::google::protobuf::int64 value) {
  set_has_association_wait_time_for_high_priority_us();
  association_wait_time_for_high_priority_us_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.association_wait_time_for_high_priority_us)
}

// optional int64 association_wait_time_for_same_priority_us = 14;
bool DatatypeAssociationStats::has_association_wait_time_for_same_priority_us() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void DatatypeAssociationStats::set_has_association_wait_time_for_same_priority_us() {
  _has_bits_[0] |= 0x00002000u;
}
void DatatypeAssociationStats::clear_has_association_wait_time_for_same_priority_us() {
  _has_bits_[0] &= ~0x00002000u;
}
void DatatypeAssociationStats::clear_association_wait_time_for_same_priority_us() {
  association_wait_time_for_same_priority_us_ = GOOGLE_LONGLONG(0);
  clear_has_association_wait_time_for_same_priority_us();
}
::google::protobuf::int64 DatatypeAssociationStats::association_wait_time_for_same_priority_us() const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.association_wait_time_for_same_priority_us)
  return association_wait_time_for_same_priority_us_;
}
void DatatypeAssociationStats::set_association_wait_time_for_same_priority_us(::google::protobuf::int64 value) {
  set_has_association_wait_time_for_same_priority_us();
  association_wait_time_for_same_priority_us_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.association_wait_time_for_same_priority_us)
}

// optional int64 association_time_us = 17;
bool DatatypeAssociationStats::has_association_time_us() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void DatatypeAssociationStats::set_has_association_time_us() {
  _has_bits_[0] |= 0x00010000u;
}
void DatatypeAssociationStats::clear_has_association_time_us() {
  _has_bits_[0] &= ~0x00010000u;
}
void DatatypeAssociationStats::clear_association_time_us() {
  association_time_us_ = GOOGLE_LONGLONG(0);
  clear_has_association_time_us();
}
::google::protobuf::int64 DatatypeAssociationStats::association_time_us() const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.association_time_us)
  return association_time_us_;
}
void DatatypeAssociationStats::set_association_time_us(::google::protobuf::int64 value) {
  set_has_association_time_us();
  association_time_us_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.association_time_us)
}

// repeated int32 high_priority_type_configured_before = 18;
int DatatypeAssociationStats::high_priority_type_configured_before_size() const {
  return high_priority_type_configured_before_.size();
}
void DatatypeAssociationStats::clear_high_priority_type_configured_before() {
  high_priority_type_configured_before_.Clear();
}
::google::protobuf::int32 DatatypeAssociationStats::high_priority_type_configured_before(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.high_priority_type_configured_before)
  return high_priority_type_configured_before_.Get(index);
}
void DatatypeAssociationStats::set_high_priority_type_configured_before(int index, ::google::protobuf::int32 value) {
  high_priority_type_configured_before_.Set(index, value);
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.high_priority_type_configured_before)
}
void DatatypeAssociationStats::add_high_priority_type_configured_before(::google::protobuf::int32 value) {
  high_priority_type_configured_before_.Add(value);
  // @@protoc_insertion_point(field_add:sync_pb.DatatypeAssociationStats.high_priority_type_configured_before)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DatatypeAssociationStats::high_priority_type_configured_before() const {
  // @@protoc_insertion_point(field_list:sync_pb.DatatypeAssociationStats.high_priority_type_configured_before)
  return high_priority_type_configured_before_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DatatypeAssociationStats::mutable_high_priority_type_configured_before() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.DatatypeAssociationStats.high_priority_type_configured_before)
  return &high_priority_type_configured_before_;
}

// repeated int32 same_priority_type_configured_before = 19;
int DatatypeAssociationStats::same_priority_type_configured_before_size() const {
  return same_priority_type_configured_before_.size();
}
void DatatypeAssociationStats::clear_same_priority_type_configured_before() {
  same_priority_type_configured_before_.Clear();
}
::google::protobuf::int32 DatatypeAssociationStats::same_priority_type_configured_before(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.same_priority_type_configured_before)
  return same_priority_type_configured_before_.Get(index);
}
void DatatypeAssociationStats::set_same_priority_type_configured_before(int index, ::google::protobuf::int32 value) {
  same_priority_type_configured_before_.Set(index, value);
  // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.same_priority_type_configured_before)
}
void DatatypeAssociationStats::add_same_priority_type_configured_before(::google::protobuf::int32 value) {
  same_priority_type_configured_before_.Add(value);
  // @@protoc_insertion_point(field_add:sync_pb.DatatypeAssociationStats.same_priority_type_configured_before)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DatatypeAssociationStats::same_priority_type_configured_before() const {
  // @@protoc_insertion_point(field_list:sync_pb.DatatypeAssociationStats.same_priority_type_configured_before)
  return same_priority_type_configured_before_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DatatypeAssociationStats::mutable_same_priority_type_configured_before() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.DatatypeAssociationStats.same_priority_type_configured_before)
  return &same_priority_type_configured_before_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugEventInfo::kSingletonEventFieldNumber;
const int DebugEventInfo::kSyncCycleCompletedEventInfoFieldNumber;
const int DebugEventInfo::kNudgingDatatypeFieldNumber;
const int DebugEventInfo::kDatatypesNotifiedFromServerFieldNumber;
const int DebugEventInfo::kDatatypeAssociationStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugEventInfo::DebugEventInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fdebug_5finfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.DebugEventInfo)
}
DebugEventInfo::DebugEventInfo(const DebugEventInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      datatypes_notified_from_server_(from.datatypes_notified_from_server_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sync_cycle_completed_event_info()) {
    sync_cycle_completed_event_info_ = new ::sync_pb::SyncCycleCompletedEventInfo(*from.sync_cycle_completed_event_info_);
  } else {
    sync_cycle_completed_event_info_ = NULL;
  }
  if (from.has_datatype_association_stats()) {
    datatype_association_stats_ = new ::sync_pb::DatatypeAssociationStats(*from.datatype_association_stats_);
  } else {
    datatype_association_stats_ = NULL;
  }
  ::memcpy(&nudging_datatype_, &from.nudging_datatype_,
    static_cast<size_t>(reinterpret_cast<char*>(&singleton_event_) -
    reinterpret_cast<char*>(&nudging_datatype_)) + sizeof(singleton_event_));
  // @@protoc_insertion_point(copy_constructor:sync_pb.DebugEventInfo)
}

void DebugEventInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&sync_cycle_completed_event_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nudging_datatype_) -
      reinterpret_cast<char*>(&sync_cycle_completed_event_info_)) + sizeof(nudging_datatype_));
  singleton_event_ = 1;
}

DebugEventInfo::~DebugEventInfo() {
  // @@protoc_insertion_point(destructor:sync_pb.DebugEventInfo)
  SharedDtor();
}

void DebugEventInfo::SharedDtor() {
  if (this != internal_default_instance()) {
    delete sync_cycle_completed_event_info_;
  }
  if (this != internal_default_instance()) {
    delete datatype_association_stats_;
  }
}

void DebugEventInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DebugEventInfo& DebugEventInfo::default_instance() {
  protobuf_client_5fdebug_5finfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

DebugEventInfo* DebugEventInfo::New(::google::protobuf::Arena* arena) const {
  DebugEventInfo* n = new DebugEventInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DebugEventInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.DebugEventInfo)
  datatypes_notified_from_server_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_sync_cycle_completed_event_info()) {
      GOOGLE_DCHECK(sync_cycle_completed_event_info_ != NULL);
      sync_cycle_completed_event_info_->::sync_pb::SyncCycleCompletedEventInfo::Clear();
    }
    if (has_datatype_association_stats()) {
      GOOGLE_DCHECK(datatype_association_stats_ != NULL);
      datatype_association_stats_->::sync_pb::DatatypeAssociationStats::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    nudging_datatype_ = 0;
    singleton_event_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DebugEventInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.DebugEventInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sync_pb.SyncEnums.SingletonDebugEventType singleton_event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sync_pb::SyncEnums_SingletonDebugEventType_IsValid(value)) {
            set_singleton_event(static_cast< ::sync_pb::SyncEnums_SingletonDebugEventType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sync_pb.SyncCycleCompletedEventInfo sync_cycle_completed_event_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sync_cycle_completed_event_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 nudging_datatype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_nudging_datatype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nudging_datatype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 datatypes_notified_from_server = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_datatypes_notified_from_server())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(34u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_datatypes_notified_from_server())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sync_pb.DatatypeAssociationStats datatype_association_stats = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_datatype_association_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.DebugEventInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.DebugEventInfo)
  return false;
#undef DO_
}

void DebugEventInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.DebugEventInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sync_pb.SyncEnums.SingletonDebugEventType singleton_event = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->singleton_event(), output);
  }

  // optional .sync_pb.SyncCycleCompletedEventInfo sync_cycle_completed_event_info = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->sync_cycle_completed_event_info_, output);
  }

  // optional int32 nudging_datatype = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nudging_datatype(), output);
  }

  // repeated int32 datatypes_notified_from_server = 4;
  for (int i = 0, n = this->datatypes_notified_from_server_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->datatypes_notified_from_server(i), output);
  }

  // optional .sync_pb.DatatypeAssociationStats datatype_association_stats = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, *this->datatype_association_stats_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.DebugEventInfo)
}

size_t DebugEventInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.DebugEventInfo)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated int32 datatypes_notified_from_server = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->datatypes_notified_from_server_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->datatypes_notified_from_server_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional .sync_pb.SyncCycleCompletedEventInfo sync_cycle_completed_event_info = 2;
    if (has_sync_cycle_completed_event_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->sync_cycle_completed_event_info_);
    }

    // optional .sync_pb.DatatypeAssociationStats datatype_association_stats = 5;
    if (has_datatype_association_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->datatype_association_stats_);
    }

    // optional int32 nudging_datatype = 3;
    if (has_nudging_datatype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nudging_datatype());
    }

    // optional .sync_pb.SyncEnums.SingletonDebugEventType singleton_event = 1;
    if (has_singleton_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->singleton_event());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DebugEventInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DebugEventInfo*>(&from));
}

void DebugEventInfo::MergeFrom(const DebugEventInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.DebugEventInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  datatypes_notified_from_server_.MergeFrom(from.datatypes_notified_from_server_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_sync_cycle_completed_event_info()->::sync_pb::SyncCycleCompletedEventInfo::MergeFrom(from.sync_cycle_completed_event_info());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_datatype_association_stats()->::sync_pb::DatatypeAssociationStats::MergeFrom(from.datatype_association_stats());
    }
    if (cached_has_bits & 0x00000004u) {
      nudging_datatype_ = from.nudging_datatype_;
    }
    if (cached_has_bits & 0x00000008u) {
      singleton_event_ = from.singleton_event_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DebugEventInfo::CopyFrom(const DebugEventInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.DebugEventInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugEventInfo::IsInitialized() const {
  if (has_sync_cycle_completed_event_info()) {
    if (!this->sync_cycle_completed_event_info_->IsInitialized()) return false;
  }
  return true;
}

void DebugEventInfo::Swap(DebugEventInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DebugEventInfo::InternalSwap(DebugEventInfo* other) {
  datatypes_notified_from_server_.InternalSwap(&other->datatypes_notified_from_server_);
  std::swap(sync_cycle_completed_event_info_, other->sync_cycle_completed_event_info_);
  std::swap(datatype_association_stats_, other->datatype_association_stats_);
  std::swap(nudging_datatype_, other->nudging_datatype_);
  std::swap(singleton_event_, other->singleton_event_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string DebugEventInfo::GetTypeName() const {
  return "sync_pb.DebugEventInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DebugEventInfo

// optional .sync_pb.SyncEnums.SingletonDebugEventType singleton_event = 1;
bool DebugEventInfo::has_singleton_event() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DebugEventInfo::set_has_singleton_event() {
  _has_bits_[0] |= 0x00000008u;
}
void DebugEventInfo::clear_has_singleton_event() {
  _has_bits_[0] &= ~0x00000008u;
}
void DebugEventInfo::clear_singleton_event() {
  singleton_event_ = 1;
  clear_has_singleton_event();
}
::sync_pb::SyncEnums_SingletonDebugEventType DebugEventInfo::singleton_event() const {
  // @@protoc_insertion_point(field_get:sync_pb.DebugEventInfo.singleton_event)
  return static_cast< ::sync_pb::SyncEnums_SingletonDebugEventType >(singleton_event_);
}
void DebugEventInfo::set_singleton_event(::sync_pb::SyncEnums_SingletonDebugEventType value) {
  assert(::sync_pb::SyncEnums_SingletonDebugEventType_IsValid(value));
  set_has_singleton_event();
  singleton_event_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DebugEventInfo.singleton_event)
}

// optional .sync_pb.SyncCycleCompletedEventInfo sync_cycle_completed_event_info = 2;
bool DebugEventInfo::has_sync_cycle_completed_event_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DebugEventInfo::set_has_sync_cycle_completed_event_info() {
  _has_bits_[0] |= 0x00000001u;
}
void DebugEventInfo::clear_has_sync_cycle_completed_event_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void DebugEventInfo::clear_sync_cycle_completed_event_info() {
  if (sync_cycle_completed_event_info_ != NULL) sync_cycle_completed_event_info_->::sync_pb::SyncCycleCompletedEventInfo::Clear();
  clear_has_sync_cycle_completed_event_info();
}
const ::sync_pb::SyncCycleCompletedEventInfo& DebugEventInfo::sync_cycle_completed_event_info() const {
  // @@protoc_insertion_point(field_get:sync_pb.DebugEventInfo.sync_cycle_completed_event_info)
  return sync_cycle_completed_event_info_ != NULL ? *sync_cycle_completed_event_info_
                         : *::sync_pb::SyncCycleCompletedEventInfo::internal_default_instance();
}
::sync_pb::SyncCycleCompletedEventInfo* DebugEventInfo::mutable_sync_cycle_completed_event_info() {
  set_has_sync_cycle_completed_event_info();
  if (sync_cycle_completed_event_info_ == NULL) {
    sync_cycle_completed_event_info_ = new ::sync_pb::SyncCycleCompletedEventInfo;
  }
  // @@protoc_insertion_point(field_mutable:sync_pb.DebugEventInfo.sync_cycle_completed_event_info)
  return sync_cycle_completed_event_info_;
}
::sync_pb::SyncCycleCompletedEventInfo* DebugEventInfo::release_sync_cycle_completed_event_info() {
  // @@protoc_insertion_point(field_release:sync_pb.DebugEventInfo.sync_cycle_completed_event_info)
  clear_has_sync_cycle_completed_event_info();
  ::sync_pb::SyncCycleCompletedEventInfo* temp = sync_cycle_completed_event_info_;
  sync_cycle_completed_event_info_ = NULL;
  return temp;
}
void DebugEventInfo::set_allocated_sync_cycle_completed_event_info(::sync_pb::SyncCycleCompletedEventInfo* sync_cycle_completed_event_info) {
  delete sync_cycle_completed_event_info_;
  sync_cycle_completed_event_info_ = sync_cycle_completed_event_info;
  if (sync_cycle_completed_event_info) {
    set_has_sync_cycle_completed_event_info();
  } else {
    clear_has_sync_cycle_completed_event_info();
  }
  // @@protoc_insertion_point(field_set_allocated:sync_pb.DebugEventInfo.sync_cycle_completed_event_info)
}

// optional int32 nudging_datatype = 3;
bool DebugEventInfo::has_nudging_datatype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DebugEventInfo::set_has_nudging_datatype() {
  _has_bits_[0] |= 0x00000004u;
}
void DebugEventInfo::clear_has_nudging_datatype() {
  _has_bits_[0] &= ~0x00000004u;
}
void DebugEventInfo::clear_nudging_datatype() {
  nudging_datatype_ = 0;
  clear_has_nudging_datatype();
}
::google::protobuf::int32 DebugEventInfo::nudging_datatype() const {
  // @@protoc_insertion_point(field_get:sync_pb.DebugEventInfo.nudging_datatype)
  return nudging_datatype_;
}
void DebugEventInfo::set_nudging_datatype(::google::protobuf::int32 value) {
  set_has_nudging_datatype();
  nudging_datatype_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DebugEventInfo.nudging_datatype)
}

// repeated int32 datatypes_notified_from_server = 4;
int DebugEventInfo::datatypes_notified_from_server_size() const {
  return datatypes_notified_from_server_.size();
}
void DebugEventInfo::clear_datatypes_notified_from_server() {
  datatypes_notified_from_server_.Clear();
}
::google::protobuf::int32 DebugEventInfo::datatypes_notified_from_server(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.DebugEventInfo.datatypes_notified_from_server)
  return datatypes_notified_from_server_.Get(index);
}
void DebugEventInfo::set_datatypes_notified_from_server(int index, ::google::protobuf::int32 value) {
  datatypes_notified_from_server_.Set(index, value);
  // @@protoc_insertion_point(field_set:sync_pb.DebugEventInfo.datatypes_notified_from_server)
}
void DebugEventInfo::add_datatypes_notified_from_server(::google::protobuf::int32 value) {
  datatypes_notified_from_server_.Add(value);
  // @@protoc_insertion_point(field_add:sync_pb.DebugEventInfo.datatypes_notified_from_server)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DebugEventInfo::datatypes_notified_from_server() const {
  // @@protoc_insertion_point(field_list:sync_pb.DebugEventInfo.datatypes_notified_from_server)
  return datatypes_notified_from_server_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DebugEventInfo::mutable_datatypes_notified_from_server() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.DebugEventInfo.datatypes_notified_from_server)
  return &datatypes_notified_from_server_;
}

// optional .sync_pb.DatatypeAssociationStats datatype_association_stats = 5;
bool DebugEventInfo::has_datatype_association_stats() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DebugEventInfo::set_has_datatype_association_stats() {
  _has_bits_[0] |= 0x00000002u;
}
void DebugEventInfo::clear_has_datatype_association_stats() {
  _has_bits_[0] &= ~0x00000002u;
}
void DebugEventInfo::clear_datatype_association_stats() {
  if (datatype_association_stats_ != NULL) datatype_association_stats_->::sync_pb::DatatypeAssociationStats::Clear();
  clear_has_datatype_association_stats();
}
const ::sync_pb::DatatypeAssociationStats& DebugEventInfo::datatype_association_stats() const {
  // @@protoc_insertion_point(field_get:sync_pb.DebugEventInfo.datatype_association_stats)
  return datatype_association_stats_ != NULL ? *datatype_association_stats_
                         : *::sync_pb::DatatypeAssociationStats::internal_default_instance();
}
::sync_pb::DatatypeAssociationStats* DebugEventInfo::mutable_datatype_association_stats() {
  set_has_datatype_association_stats();
  if (datatype_association_stats_ == NULL) {
    datatype_association_stats_ = new ::sync_pb::DatatypeAssociationStats;
  }
  // @@protoc_insertion_point(field_mutable:sync_pb.DebugEventInfo.datatype_association_stats)
  return datatype_association_stats_;
}
::sync_pb::DatatypeAssociationStats* DebugEventInfo::release_datatype_association_stats() {
  // @@protoc_insertion_point(field_release:sync_pb.DebugEventInfo.datatype_association_stats)
  clear_has_datatype_association_stats();
  ::sync_pb::DatatypeAssociationStats* temp = datatype_association_stats_;
  datatype_association_stats_ = NULL;
  return temp;
}
void DebugEventInfo::set_allocated_datatype_association_stats(::sync_pb::DatatypeAssociationStats* datatype_association_stats) {
  delete datatype_association_stats_;
  datatype_association_stats_ = datatype_association_stats;
  if (datatype_association_stats) {
    set_has_datatype_association_stats();
  } else {
    clear_has_datatype_association_stats();
  }
  // @@protoc_insertion_point(field_set_allocated:sync_pb.DebugEventInfo.datatype_association_stats)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugInfo::kEventsFieldNumber;
const int DebugInfo::kCryptographerReadyFieldNumber;
const int DebugInfo::kCryptographerHasPendingKeysFieldNumber;
const int DebugInfo::kEventsDroppedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugInfo::DebugInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fdebug_5finfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.DebugInfo)
}
DebugInfo::DebugInfo(const DebugInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      events_(from.events_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cryptographer_ready_, &from.cryptographer_ready_,
    static_cast<size_t>(reinterpret_cast<char*>(&events_dropped_) -
    reinterpret_cast<char*>(&cryptographer_ready_)) + sizeof(events_dropped_));
  // @@protoc_insertion_point(copy_constructor:sync_pb.DebugInfo)
}

void DebugInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&cryptographer_ready_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&events_dropped_) -
      reinterpret_cast<char*>(&cryptographer_ready_)) + sizeof(events_dropped_));
}

DebugInfo::~DebugInfo() {
  // @@protoc_insertion_point(destructor:sync_pb.DebugInfo)
  SharedDtor();
}

void DebugInfo::SharedDtor() {
}

void DebugInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DebugInfo& DebugInfo::default_instance() {
  protobuf_client_5fdebug_5finfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

DebugInfo* DebugInfo::New(::google::protobuf::Arena* arena) const {
  DebugInfo* n = new DebugInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DebugInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.DebugInfo)
  events_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&cryptographer_ready_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&events_dropped_) -
        reinterpret_cast<char*>(&cryptographer_ready_)) + sizeof(events_dropped_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DebugInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.DebugInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .sync_pb.DebugEventInfo events = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool cryptographer_ready = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_cryptographer_ready();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cryptographer_ready_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool cryptographer_has_pending_keys = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_cryptographer_has_pending_keys();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cryptographer_has_pending_keys_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool events_dropped = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_events_dropped();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &events_dropped_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.DebugInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.DebugInfo)
  return false;
#undef DO_
}

void DebugInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.DebugInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sync_pb.DebugEventInfo events = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->events(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool cryptographer_ready = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->cryptographer_ready(), output);
  }

  // optional bool cryptographer_has_pending_keys = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->cryptographer_has_pending_keys(), output);
  }

  // optional bool events_dropped = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->events_dropped(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.DebugInfo)
}

size_t DebugInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.DebugInfo)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated .sync_pb.DebugEventInfo events = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->events(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional bool cryptographer_ready = 2;
    if (has_cryptographer_ready()) {
      total_size += 1 + 1;
    }

    // optional bool cryptographer_has_pending_keys = 3;
    if (has_cryptographer_has_pending_keys()) {
      total_size += 1 + 1;
    }

    // optional bool events_dropped = 4;
    if (has_events_dropped()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DebugInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DebugInfo*>(&from));
}

void DebugInfo::MergeFrom(const DebugInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.DebugInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      cryptographer_ready_ = from.cryptographer_ready_;
    }
    if (cached_has_bits & 0x00000002u) {
      cryptographer_has_pending_keys_ = from.cryptographer_has_pending_keys_;
    }
    if (cached_has_bits & 0x00000004u) {
      events_dropped_ = from.events_dropped_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DebugInfo::CopyFrom(const DebugInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.DebugInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugInfo::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->events())) return false;
  return true;
}

void DebugInfo::Swap(DebugInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DebugInfo::InternalSwap(DebugInfo* other) {
  events_.InternalSwap(&other->events_);
  std::swap(cryptographer_ready_, other->cryptographer_ready_);
  std::swap(cryptographer_has_pending_keys_, other->cryptographer_has_pending_keys_);
  std::swap(events_dropped_, other->events_dropped_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string DebugInfo::GetTypeName() const {
  return "sync_pb.DebugInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DebugInfo

// repeated .sync_pb.DebugEventInfo events = 1;
int DebugInfo::events_size() const {
  return events_.size();
}
void DebugInfo::clear_events() {
  events_.Clear();
}
const ::sync_pb::DebugEventInfo& DebugInfo::events(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.DebugInfo.events)
  return events_.Get(index);
}
::sync_pb::DebugEventInfo* DebugInfo::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:sync_pb.DebugInfo.events)
  return events_.Mutable(index);
}
::sync_pb::DebugEventInfo* DebugInfo::add_events() {
  // @@protoc_insertion_point(field_add:sync_pb.DebugInfo.events)
  return events_.Add();
}
::google::protobuf::RepeatedPtrField< ::sync_pb::DebugEventInfo >*
DebugInfo::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.DebugInfo.events)
  return &events_;
}
const ::google::protobuf::RepeatedPtrField< ::sync_pb::DebugEventInfo >&
DebugInfo::events() const {
  // @@protoc_insertion_point(field_list:sync_pb.DebugInfo.events)
  return events_;
}

// optional bool cryptographer_ready = 2;
bool DebugInfo::has_cryptographer_ready() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DebugInfo::set_has_cryptographer_ready() {
  _has_bits_[0] |= 0x00000001u;
}
void DebugInfo::clear_has_cryptographer_ready() {
  _has_bits_[0] &= ~0x00000001u;
}
void DebugInfo::clear_cryptographer_ready() {
  cryptographer_ready_ = false;
  clear_has_cryptographer_ready();
}
bool DebugInfo::cryptographer_ready() const {
  // @@protoc_insertion_point(field_get:sync_pb.DebugInfo.cryptographer_ready)
  return cryptographer_ready_;
}
void DebugInfo::set_cryptographer_ready(bool value) {
  set_has_cryptographer_ready();
  cryptographer_ready_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DebugInfo.cryptographer_ready)
}

// optional bool cryptographer_has_pending_keys = 3;
bool DebugInfo::has_cryptographer_has_pending_keys() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DebugInfo::set_has_cryptographer_has_pending_keys() {
  _has_bits_[0] |= 0x00000002u;
}
void DebugInfo::clear_has_cryptographer_has_pending_keys() {
  _has_bits_[0] &= ~0x00000002u;
}
void DebugInfo::clear_cryptographer_has_pending_keys() {
  cryptographer_has_pending_keys_ = false;
  clear_has_cryptographer_has_pending_keys();
}
bool DebugInfo::cryptographer_has_pending_keys() const {
  // @@protoc_insertion_point(field_get:sync_pb.DebugInfo.cryptographer_has_pending_keys)
  return cryptographer_has_pending_keys_;
}
void DebugInfo::set_cryptographer_has_pending_keys(bool value) {
  set_has_cryptographer_has_pending_keys();
  cryptographer_has_pending_keys_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DebugInfo.cryptographer_has_pending_keys)
}

// optional bool events_dropped = 4;
bool DebugInfo::has_events_dropped() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DebugInfo::set_has_events_dropped() {
  _has_bits_[0] |= 0x00000004u;
}
void DebugInfo::clear_has_events_dropped() {
  _has_bits_[0] &= ~0x00000004u;
}
void DebugInfo::clear_events_dropped() {
  events_dropped_ = false;
  clear_has_events_dropped();
}
bool DebugInfo::events_dropped() const {
  // @@protoc_insertion_point(field_get:sync_pb.DebugInfo.events_dropped)
  return events_dropped_;
}
void DebugInfo::set_events_dropped(bool value) {
  set_has_events_dropped();
  events_dropped_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.DebugInfo.events_dropped)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)
