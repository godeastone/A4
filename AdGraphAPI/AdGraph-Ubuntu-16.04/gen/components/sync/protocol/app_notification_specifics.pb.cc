// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app_notification_specifics.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "app_notification_specifics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {
class AppNotificationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AppNotification> {
} _AppNotification_default_instance_;

namespace protobuf_app_5fnotification_5fspecifics_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _AppNotification_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _AppNotification_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_app_5fnotification_5fspecifics_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppNotification::kGuidFieldNumber;
const int AppNotification::kAppIdFieldNumber;
const int AppNotification::kCreationTimestampMsFieldNumber;
const int AppNotification::kTitleFieldNumber;
const int AppNotification::kBodyTextFieldNumber;
const int AppNotification::kLinkUrlFieldNumber;
const int AppNotification::kLinkTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppNotification::AppNotification()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_app_5fnotification_5fspecifics_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.AppNotification)
}
AppNotification::AppNotification(const AppNotification& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid()) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_app_id()) {
    app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_id_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  body_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_body_text()) {
    body_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_text_);
  }
  link_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_link_url()) {
    link_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_url_);
  }
  link_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_link_text()) {
    link_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_text_);
  }
  creation_timestamp_ms_ = from.creation_timestamp_ms_;
  // @@protoc_insertion_point(copy_constructor:sync_pb.AppNotification)
}

void AppNotification::SharedCtor() {
  _cached_size_ = 0;
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creation_timestamp_ms_ = GOOGLE_LONGLONG(0);
}

AppNotification::~AppNotification() {
  // @@protoc_insertion_point(destructor:sync_pb.AppNotification)
  SharedDtor();
}

void AppNotification::SharedDtor() {
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AppNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AppNotification& AppNotification::default_instance() {
  protobuf_app_5fnotification_5fspecifics_2eproto::InitDefaults();
  return *internal_default_instance();
}

AppNotification* AppNotification::New(::google::protobuf::Arena* arena) const {
  AppNotification* n = new AppNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.AppNotification)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_guid()) {
      GOOGLE_DCHECK(!guid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*guid_.UnsafeRawStringPointer())->clear();
    }
    if (has_app_id()) {
      GOOGLE_DCHECK(!app_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*app_id_.UnsafeRawStringPointer())->clear();
    }
    if (has_title()) {
      GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*title_.UnsafeRawStringPointer())->clear();
    }
    if (has_body_text()) {
      GOOGLE_DCHECK(!body_text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*body_text_.UnsafeRawStringPointer())->clear();
    }
    if (has_link_url()) {
      GOOGLE_DCHECK(!link_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*link_url_.UnsafeRawStringPointer())->clear();
    }
    if (has_link_text()) {
      GOOGLE_DCHECK(!link_text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*link_text_.UnsafeRawStringPointer())->clear();
    }
  }
  creation_timestamp_ms_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AppNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.AppNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 creation_timestamp_ms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_creation_timestamp_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &creation_timestamp_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string body_text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string link_url = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string link_text = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.AppNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.AppNotification)
  return false;
#undef DO_
}

void AppNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.AppNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guid(), output);
  }

  // optional string app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->app_id(), output);
  }

  // optional int64 creation_timestamp_ms = 3;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->creation_timestamp_ms(), output);
  }

  // optional string title = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->title(), output);
  }

  // optional string body_text = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->body_text(), output);
  }

  // optional string link_url = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->link_url(), output);
  }

  // optional string link_text = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->link_text(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.AppNotification)
}

size_t AppNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.AppNotification)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 127u) {
    // optional string guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // optional string app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->app_id());
    }

    // optional string title = 4;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string body_text = 5;
    if (has_body_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->body_text());
    }

    // optional string link_url = 6;
    if (has_link_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->link_url());
    }

    // optional string link_text = 7;
    if (has_link_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->link_text());
    }

    // optional int64 creation_timestamp_ms = 3;
    if (has_creation_timestamp_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->creation_timestamp_ms());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppNotification::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AppNotification*>(&from));
}

void AppNotification::MergeFrom(const AppNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.AppNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_guid();
      guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_app_id();
      app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_body_text();
      body_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_text_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_link_url();
      link_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_url_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_link_text();
      link_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_text_);
    }
    if (cached_has_bits & 0x00000040u) {
      creation_timestamp_ms_ = from.creation_timestamp_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AppNotification::CopyFrom(const AppNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.AppNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppNotification::IsInitialized() const {
  return true;
}

void AppNotification::Swap(AppNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppNotification::InternalSwap(AppNotification* other) {
  guid_.Swap(&other->guid_);
  app_id_.Swap(&other->app_id_);
  title_.Swap(&other->title_);
  body_text_.Swap(&other->body_text_);
  link_url_.Swap(&other->link_url_);
  link_text_.Swap(&other->link_text_);
  std::swap(creation_timestamp_ms_, other->creation_timestamp_ms_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string AppNotification::GetTypeName() const {
  return "sync_pb.AppNotification";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppNotification

// optional string guid = 1;
bool AppNotification::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AppNotification::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
void AppNotification::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AppNotification::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
const ::std::string& AppNotification::guid() const {
  // @@protoc_insertion_point(field_get:sync_pb.AppNotification.guid)
  return guid_.GetNoArena();
}
void AppNotification::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AppNotification.guid)
}
#if LANG_CXX11
void AppNotification::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AppNotification.guid)
}
#endif
void AppNotification::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AppNotification.guid)
}
void AppNotification::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AppNotification.guid)
}
::std::string* AppNotification::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:sync_pb.AppNotification.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppNotification::release_guid() {
  // @@protoc_insertion_point(field_release:sync_pb.AppNotification.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotification::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AppNotification.guid)
}

// optional string app_id = 2;
bool AppNotification::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AppNotification::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
void AppNotification::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void AppNotification::clear_app_id() {
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_id();
}
const ::std::string& AppNotification::app_id() const {
  // @@protoc_insertion_point(field_get:sync_pb.AppNotification.app_id)
  return app_id_.GetNoArena();
}
void AppNotification::set_app_id(const ::std::string& value) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AppNotification.app_id)
}
#if LANG_CXX11
void AppNotification::set_app_id(::std::string&& value) {
  set_has_app_id();
  app_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AppNotification.app_id)
}
#endif
void AppNotification::set_app_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AppNotification.app_id)
}
void AppNotification::set_app_id(const char* value, size_t size) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AppNotification.app_id)
}
::std::string* AppNotification::mutable_app_id() {
  set_has_app_id();
  // @@protoc_insertion_point(field_mutable:sync_pb.AppNotification.app_id)
  return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppNotification::release_app_id() {
  // @@protoc_insertion_point(field_release:sync_pb.AppNotification.app_id)
  clear_has_app_id();
  return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotification::set_allocated_app_id(::std::string* app_id) {
  if (app_id != NULL) {
    set_has_app_id();
  } else {
    clear_has_app_id();
  }
  app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AppNotification.app_id)
}

// optional int64 creation_timestamp_ms = 3;
bool AppNotification::has_creation_timestamp_ms() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void AppNotification::set_has_creation_timestamp_ms() {
  _has_bits_[0] |= 0x00000040u;
}
void AppNotification::clear_has_creation_timestamp_ms() {
  _has_bits_[0] &= ~0x00000040u;
}
void AppNotification::clear_creation_timestamp_ms() {
  creation_timestamp_ms_ = GOOGLE_LONGLONG(0);
  clear_has_creation_timestamp_ms();
}
::google::protobuf::int64 AppNotification::creation_timestamp_ms() const {
  // @@protoc_insertion_point(field_get:sync_pb.AppNotification.creation_timestamp_ms)
  return creation_timestamp_ms_;
}
void AppNotification::set_creation_timestamp_ms(::google::protobuf::int64 value) {
  set_has_creation_timestamp_ms();
  creation_timestamp_ms_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.AppNotification.creation_timestamp_ms)
}

// optional string title = 4;
bool AppNotification::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AppNotification::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
void AppNotification::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
void AppNotification::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
const ::std::string& AppNotification::title() const {
  // @@protoc_insertion_point(field_get:sync_pb.AppNotification.title)
  return title_.GetNoArena();
}
void AppNotification::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AppNotification.title)
}
#if LANG_CXX11
void AppNotification::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AppNotification.title)
}
#endif
void AppNotification::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AppNotification.title)
}
void AppNotification::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AppNotification.title)
}
::std::string* AppNotification::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:sync_pb.AppNotification.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppNotification::release_title() {
  // @@protoc_insertion_point(field_release:sync_pb.AppNotification.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotification::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AppNotification.title)
}

// optional string body_text = 5;
bool AppNotification::has_body_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AppNotification::set_has_body_text() {
  _has_bits_[0] |= 0x00000008u;
}
void AppNotification::clear_has_body_text() {
  _has_bits_[0] &= ~0x00000008u;
}
void AppNotification::clear_body_text() {
  body_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body_text();
}
const ::std::string& AppNotification::body_text() const {
  // @@protoc_insertion_point(field_get:sync_pb.AppNotification.body_text)
  return body_text_.GetNoArena();
}
void AppNotification::set_body_text(const ::std::string& value) {
  set_has_body_text();
  body_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AppNotification.body_text)
}
#if LANG_CXX11
void AppNotification::set_body_text(::std::string&& value) {
  set_has_body_text();
  body_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AppNotification.body_text)
}
#endif
void AppNotification::set_body_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_body_text();
  body_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AppNotification.body_text)
}
void AppNotification::set_body_text(const char* value, size_t size) {
  set_has_body_text();
  body_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AppNotification.body_text)
}
::std::string* AppNotification::mutable_body_text() {
  set_has_body_text();
  // @@protoc_insertion_point(field_mutable:sync_pb.AppNotification.body_text)
  return body_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppNotification::release_body_text() {
  // @@protoc_insertion_point(field_release:sync_pb.AppNotification.body_text)
  clear_has_body_text();
  return body_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotification::set_allocated_body_text(::std::string* body_text) {
  if (body_text != NULL) {
    set_has_body_text();
  } else {
    clear_has_body_text();
  }
  body_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body_text);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AppNotification.body_text)
}

// optional string link_url = 6;
bool AppNotification::has_link_url() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AppNotification::set_has_link_url() {
  _has_bits_[0] |= 0x00000010u;
}
void AppNotification::clear_has_link_url() {
  _has_bits_[0] &= ~0x00000010u;
}
void AppNotification::clear_link_url() {
  link_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_link_url();
}
const ::std::string& AppNotification::link_url() const {
  // @@protoc_insertion_point(field_get:sync_pb.AppNotification.link_url)
  return link_url_.GetNoArena();
}
void AppNotification::set_link_url(const ::std::string& value) {
  set_has_link_url();
  link_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AppNotification.link_url)
}
#if LANG_CXX11
void AppNotification::set_link_url(::std::string&& value) {
  set_has_link_url();
  link_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AppNotification.link_url)
}
#endif
void AppNotification::set_link_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_link_url();
  link_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AppNotification.link_url)
}
void AppNotification::set_link_url(const char* value, size_t size) {
  set_has_link_url();
  link_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AppNotification.link_url)
}
::std::string* AppNotification::mutable_link_url() {
  set_has_link_url();
  // @@protoc_insertion_point(field_mutable:sync_pb.AppNotification.link_url)
  return link_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppNotification::release_link_url() {
  // @@protoc_insertion_point(field_release:sync_pb.AppNotification.link_url)
  clear_has_link_url();
  return link_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotification::set_allocated_link_url(::std::string* link_url) {
  if (link_url != NULL) {
    set_has_link_url();
  } else {
    clear_has_link_url();
  }
  link_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link_url);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AppNotification.link_url)
}

// optional string link_text = 7;
bool AppNotification::has_link_text() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AppNotification::set_has_link_text() {
  _has_bits_[0] |= 0x00000020u;
}
void AppNotification::clear_has_link_text() {
  _has_bits_[0] &= ~0x00000020u;
}
void AppNotification::clear_link_text() {
  link_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_link_text();
}
const ::std::string& AppNotification::link_text() const {
  // @@protoc_insertion_point(field_get:sync_pb.AppNotification.link_text)
  return link_text_.GetNoArena();
}
void AppNotification::set_link_text(const ::std::string& value) {
  set_has_link_text();
  link_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.AppNotification.link_text)
}
#if LANG_CXX11
void AppNotification::set_link_text(::std::string&& value) {
  set_has_link_text();
  link_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.AppNotification.link_text)
}
#endif
void AppNotification::set_link_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_link_text();
  link_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.AppNotification.link_text)
}
void AppNotification::set_link_text(const char* value, size_t size) {
  set_has_link_text();
  link_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.AppNotification.link_text)
}
::std::string* AppNotification::mutable_link_text() {
  set_has_link_text();
  // @@protoc_insertion_point(field_mutable:sync_pb.AppNotification.link_text)
  return link_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppNotification::release_link_text() {
  // @@protoc_insertion_point(field_release:sync_pb.AppNotification.link_text)
  clear_has_link_text();
  return link_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotification::set_allocated_link_text(::std::string* link_text) {
  if (link_text != NULL) {
    set_has_link_text();
  } else {
    clear_has_link_text();
  }
  link_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link_text);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.AppNotification.link_text)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)
