// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: theme_specifics.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "theme_specifics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {
class ThemeSpecificsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ThemeSpecifics> {
} _ThemeSpecifics_default_instance_;

namespace protobuf_theme_5fspecifics_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _ThemeSpecifics_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ThemeSpecifics_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_theme_5fspecifics_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThemeSpecifics::kUseCustomThemeFieldNumber;
const int ThemeSpecifics::kUseSystemThemeByDefaultFieldNumber;
const int ThemeSpecifics::kCustomThemeNameFieldNumber;
const int ThemeSpecifics::kCustomThemeIdFieldNumber;
const int ThemeSpecifics::kCustomThemeUpdateUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThemeSpecifics::ThemeSpecifics()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_theme_5fspecifics_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.ThemeSpecifics)
}
ThemeSpecifics::ThemeSpecifics(const ThemeSpecifics& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  custom_theme_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_custom_theme_name()) {
    custom_theme_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_theme_name_);
  }
  custom_theme_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_custom_theme_id()) {
    custom_theme_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_theme_id_);
  }
  custom_theme_update_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_custom_theme_update_url()) {
    custom_theme_update_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_theme_update_url_);
  }
  ::memcpy(&use_custom_theme_, &from.use_custom_theme_,
    static_cast<size_t>(reinterpret_cast<char*>(&use_system_theme_by_default_) -
    reinterpret_cast<char*>(&use_custom_theme_)) + sizeof(use_system_theme_by_default_));
  // @@protoc_insertion_point(copy_constructor:sync_pb.ThemeSpecifics)
}

void ThemeSpecifics::SharedCtor() {
  _cached_size_ = 0;
  custom_theme_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_theme_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_theme_update_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&use_custom_theme_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_system_theme_by_default_) -
      reinterpret_cast<char*>(&use_custom_theme_)) + sizeof(use_system_theme_by_default_));
}

ThemeSpecifics::~ThemeSpecifics() {
  // @@protoc_insertion_point(destructor:sync_pb.ThemeSpecifics)
  SharedDtor();
}

void ThemeSpecifics::SharedDtor() {
  custom_theme_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_theme_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_theme_update_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ThemeSpecifics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ThemeSpecifics& ThemeSpecifics::default_instance() {
  protobuf_theme_5fspecifics_2eproto::InitDefaults();
  return *internal_default_instance();
}

ThemeSpecifics* ThemeSpecifics::New(::google::protobuf::Arena* arena) const {
  ThemeSpecifics* n = new ThemeSpecifics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThemeSpecifics::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.ThemeSpecifics)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_custom_theme_name()) {
      GOOGLE_DCHECK(!custom_theme_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*custom_theme_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_custom_theme_id()) {
      GOOGLE_DCHECK(!custom_theme_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*custom_theme_id_.UnsafeRawStringPointer())->clear();
    }
    if (has_custom_theme_update_url()) {
      GOOGLE_DCHECK(!custom_theme_update_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*custom_theme_update_url_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 24u) {
    ::memset(&use_custom_theme_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&use_system_theme_by_default_) -
        reinterpret_cast<char*>(&use_custom_theme_)) + sizeof(use_system_theme_by_default_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ThemeSpecifics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.ThemeSpecifics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool use_custom_theme = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_use_custom_theme();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_custom_theme_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_system_theme_by_default = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_use_system_theme_by_default();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_system_theme_by_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string custom_theme_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_custom_theme_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string custom_theme_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_custom_theme_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string custom_theme_update_url = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_custom_theme_update_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.ThemeSpecifics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.ThemeSpecifics)
  return false;
#undef DO_
}

void ThemeSpecifics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.ThemeSpecifics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool use_custom_theme = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->use_custom_theme(), output);
  }

  // optional bool use_system_theme_by_default = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->use_system_theme_by_default(), output);
  }

  // optional string custom_theme_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->custom_theme_name(), output);
  }

  // optional string custom_theme_id = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->custom_theme_id(), output);
  }

  // optional string custom_theme_update_url = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->custom_theme_update_url(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.ThemeSpecifics)
}

size_t ThemeSpecifics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.ThemeSpecifics)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 31u) {
    // optional string custom_theme_name = 3;
    if (has_custom_theme_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->custom_theme_name());
    }

    // optional string custom_theme_id = 4;
    if (has_custom_theme_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->custom_theme_id());
    }

    // optional string custom_theme_update_url = 5;
    if (has_custom_theme_update_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->custom_theme_update_url());
    }

    // optional bool use_custom_theme = 1;
    if (has_use_custom_theme()) {
      total_size += 1 + 1;
    }

    // optional bool use_system_theme_by_default = 2;
    if (has_use_system_theme_by_default()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThemeSpecifics::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ThemeSpecifics*>(&from));
}

void ThemeSpecifics::MergeFrom(const ThemeSpecifics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.ThemeSpecifics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_custom_theme_name();
      custom_theme_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_theme_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_custom_theme_id();
      custom_theme_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_theme_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_custom_theme_update_url();
      custom_theme_update_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_theme_update_url_);
    }
    if (cached_has_bits & 0x00000008u) {
      use_custom_theme_ = from.use_custom_theme_;
    }
    if (cached_has_bits & 0x00000010u) {
      use_system_theme_by_default_ = from.use_system_theme_by_default_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ThemeSpecifics::CopyFrom(const ThemeSpecifics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.ThemeSpecifics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThemeSpecifics::IsInitialized() const {
  return true;
}

void ThemeSpecifics::Swap(ThemeSpecifics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThemeSpecifics::InternalSwap(ThemeSpecifics* other) {
  custom_theme_name_.Swap(&other->custom_theme_name_);
  custom_theme_id_.Swap(&other->custom_theme_id_);
  custom_theme_update_url_.Swap(&other->custom_theme_update_url_);
  std::swap(use_custom_theme_, other->use_custom_theme_);
  std::swap(use_system_theme_by_default_, other->use_system_theme_by_default_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ThemeSpecifics::GetTypeName() const {
  return "sync_pb.ThemeSpecifics";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ThemeSpecifics

// optional bool use_custom_theme = 1;
bool ThemeSpecifics::has_use_custom_theme() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ThemeSpecifics::set_has_use_custom_theme() {
  _has_bits_[0] |= 0x00000008u;
}
void ThemeSpecifics::clear_has_use_custom_theme() {
  _has_bits_[0] &= ~0x00000008u;
}
void ThemeSpecifics::clear_use_custom_theme() {
  use_custom_theme_ = false;
  clear_has_use_custom_theme();
}
bool ThemeSpecifics::use_custom_theme() const {
  // @@protoc_insertion_point(field_get:sync_pb.ThemeSpecifics.use_custom_theme)
  return use_custom_theme_;
}
void ThemeSpecifics::set_use_custom_theme(bool value) {
  set_has_use_custom_theme();
  use_custom_theme_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.ThemeSpecifics.use_custom_theme)
}

// optional bool use_system_theme_by_default = 2;
bool ThemeSpecifics::has_use_system_theme_by_default() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ThemeSpecifics::set_has_use_system_theme_by_default() {
  _has_bits_[0] |= 0x00000010u;
}
void ThemeSpecifics::clear_has_use_system_theme_by_default() {
  _has_bits_[0] &= ~0x00000010u;
}
void ThemeSpecifics::clear_use_system_theme_by_default() {
  use_system_theme_by_default_ = false;
  clear_has_use_system_theme_by_default();
}
bool ThemeSpecifics::use_system_theme_by_default() const {
  // @@protoc_insertion_point(field_get:sync_pb.ThemeSpecifics.use_system_theme_by_default)
  return use_system_theme_by_default_;
}
void ThemeSpecifics::set_use_system_theme_by_default(bool value) {
  set_has_use_system_theme_by_default();
  use_system_theme_by_default_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.ThemeSpecifics.use_system_theme_by_default)
}

// optional string custom_theme_name = 3;
bool ThemeSpecifics::has_custom_theme_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ThemeSpecifics::set_has_custom_theme_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ThemeSpecifics::clear_has_custom_theme_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ThemeSpecifics::clear_custom_theme_name() {
  custom_theme_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_custom_theme_name();
}
const ::std::string& ThemeSpecifics::custom_theme_name() const {
  // @@protoc_insertion_point(field_get:sync_pb.ThemeSpecifics.custom_theme_name)
  return custom_theme_name_.GetNoArena();
}
void ThemeSpecifics::set_custom_theme_name(const ::std::string& value) {
  set_has_custom_theme_name();
  custom_theme_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.ThemeSpecifics.custom_theme_name)
}
#if LANG_CXX11
void ThemeSpecifics::set_custom_theme_name(::std::string&& value) {
  set_has_custom_theme_name();
  custom_theme_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.ThemeSpecifics.custom_theme_name)
}
#endif
void ThemeSpecifics::set_custom_theme_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_custom_theme_name();
  custom_theme_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.ThemeSpecifics.custom_theme_name)
}
void ThemeSpecifics::set_custom_theme_name(const char* value, size_t size) {
  set_has_custom_theme_name();
  custom_theme_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.ThemeSpecifics.custom_theme_name)
}
::std::string* ThemeSpecifics::mutable_custom_theme_name() {
  set_has_custom_theme_name();
  // @@protoc_insertion_point(field_mutable:sync_pb.ThemeSpecifics.custom_theme_name)
  return custom_theme_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ThemeSpecifics::release_custom_theme_name() {
  // @@protoc_insertion_point(field_release:sync_pb.ThemeSpecifics.custom_theme_name)
  clear_has_custom_theme_name();
  return custom_theme_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ThemeSpecifics::set_allocated_custom_theme_name(::std::string* custom_theme_name) {
  if (custom_theme_name != NULL) {
    set_has_custom_theme_name();
  } else {
    clear_has_custom_theme_name();
  }
  custom_theme_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), custom_theme_name);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.ThemeSpecifics.custom_theme_name)
}

// optional string custom_theme_id = 4;
bool ThemeSpecifics::has_custom_theme_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ThemeSpecifics::set_has_custom_theme_id() {
  _has_bits_[0] |= 0x00000002u;
}
void ThemeSpecifics::clear_has_custom_theme_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void ThemeSpecifics::clear_custom_theme_id() {
  custom_theme_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_custom_theme_id();
}
const ::std::string& ThemeSpecifics::custom_theme_id() const {
  // @@protoc_insertion_point(field_get:sync_pb.ThemeSpecifics.custom_theme_id)
  return custom_theme_id_.GetNoArena();
}
void ThemeSpecifics::set_custom_theme_id(const ::std::string& value) {
  set_has_custom_theme_id();
  custom_theme_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.ThemeSpecifics.custom_theme_id)
}
#if LANG_CXX11
void ThemeSpecifics::set_custom_theme_id(::std::string&& value) {
  set_has_custom_theme_id();
  custom_theme_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.ThemeSpecifics.custom_theme_id)
}
#endif
void ThemeSpecifics::set_custom_theme_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_custom_theme_id();
  custom_theme_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.ThemeSpecifics.custom_theme_id)
}
void ThemeSpecifics::set_custom_theme_id(const char* value, size_t size) {
  set_has_custom_theme_id();
  custom_theme_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.ThemeSpecifics.custom_theme_id)
}
::std::string* ThemeSpecifics::mutable_custom_theme_id() {
  set_has_custom_theme_id();
  // @@protoc_insertion_point(field_mutable:sync_pb.ThemeSpecifics.custom_theme_id)
  return custom_theme_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ThemeSpecifics::release_custom_theme_id() {
  // @@protoc_insertion_point(field_release:sync_pb.ThemeSpecifics.custom_theme_id)
  clear_has_custom_theme_id();
  return custom_theme_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ThemeSpecifics::set_allocated_custom_theme_id(::std::string* custom_theme_id) {
  if (custom_theme_id != NULL) {
    set_has_custom_theme_id();
  } else {
    clear_has_custom_theme_id();
  }
  custom_theme_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), custom_theme_id);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.ThemeSpecifics.custom_theme_id)
}

// optional string custom_theme_update_url = 5;
bool ThemeSpecifics::has_custom_theme_update_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ThemeSpecifics::set_has_custom_theme_update_url() {
  _has_bits_[0] |= 0x00000004u;
}
void ThemeSpecifics::clear_has_custom_theme_update_url() {
  _has_bits_[0] &= ~0x00000004u;
}
void ThemeSpecifics::clear_custom_theme_update_url() {
  custom_theme_update_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_custom_theme_update_url();
}
const ::std::string& ThemeSpecifics::custom_theme_update_url() const {
  // @@protoc_insertion_point(field_get:sync_pb.ThemeSpecifics.custom_theme_update_url)
  return custom_theme_update_url_.GetNoArena();
}
void ThemeSpecifics::set_custom_theme_update_url(const ::std::string& value) {
  set_has_custom_theme_update_url();
  custom_theme_update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.ThemeSpecifics.custom_theme_update_url)
}
#if LANG_CXX11
void ThemeSpecifics::set_custom_theme_update_url(::std::string&& value) {
  set_has_custom_theme_update_url();
  custom_theme_update_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.ThemeSpecifics.custom_theme_update_url)
}
#endif
void ThemeSpecifics::set_custom_theme_update_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_custom_theme_update_url();
  custom_theme_update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.ThemeSpecifics.custom_theme_update_url)
}
void ThemeSpecifics::set_custom_theme_update_url(const char* value, size_t size) {
  set_has_custom_theme_update_url();
  custom_theme_update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.ThemeSpecifics.custom_theme_update_url)
}
::std::string* ThemeSpecifics::mutable_custom_theme_update_url() {
  set_has_custom_theme_update_url();
  // @@protoc_insertion_point(field_mutable:sync_pb.ThemeSpecifics.custom_theme_update_url)
  return custom_theme_update_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ThemeSpecifics::release_custom_theme_update_url() {
  // @@protoc_insertion_point(field_release:sync_pb.ThemeSpecifics.custom_theme_update_url)
  clear_has_custom_theme_update_url();
  return custom_theme_update_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ThemeSpecifics::set_allocated_custom_theme_update_url(::std::string* custom_theme_update_url) {
  if (custom_theme_update_url != NULL) {
    set_has_custom_theme_update_url();
  } else {
    clear_has_custom_theme_update_url();
  }
  custom_theme_update_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), custom_theme_update_url);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.ThemeSpecifics.custom_theme_update_url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)
