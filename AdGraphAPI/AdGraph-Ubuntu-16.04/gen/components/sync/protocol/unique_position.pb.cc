// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: unique_position.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "unique_position.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {
class UniquePositionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UniquePosition> {
} _UniquePosition_default_instance_;

namespace protobuf_unique_5fposition_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _UniquePosition_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _UniquePosition_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_unique_5fposition_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UniquePosition::kValueFieldNumber;
const int UniquePosition::kCompressedValueFieldNumber;
const int UniquePosition::kUncompressedLengthFieldNumber;
const int UniquePosition::kCustomCompressedV1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UniquePosition::UniquePosition()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_unique_5fposition_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.UniquePosition)
}
UniquePosition::UniquePosition(const UniquePosition& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  compressed_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_compressed_value()) {
    compressed_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compressed_value_);
  }
  custom_compressed_v1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_custom_compressed_v1()) {
    custom_compressed_v1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_compressed_v1_);
  }
  uncompressed_length_ = from.uncompressed_length_;
  // @@protoc_insertion_point(copy_constructor:sync_pb.UniquePosition)
}

void UniquePosition::SharedCtor() {
  _cached_size_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compressed_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_compressed_v1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uncompressed_length_ = GOOGLE_ULONGLONG(0);
}

UniquePosition::~UniquePosition() {
  // @@protoc_insertion_point(destructor:sync_pb.UniquePosition)
  SharedDtor();
}

void UniquePosition::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compressed_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_compressed_v1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UniquePosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const UniquePosition& UniquePosition::default_instance() {
  protobuf_unique_5fposition_2eproto::InitDefaults();
  return *internal_default_instance();
}

UniquePosition* UniquePosition::New(::google::protobuf::Arena* arena) const {
  UniquePosition* n = new UniquePosition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UniquePosition::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.UniquePosition)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_value()) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
    if (has_compressed_value()) {
      GOOGLE_DCHECK(!compressed_value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*compressed_value_.UnsafeRawStringPointer())->clear();
    }
    if (has_custom_compressed_v1()) {
      GOOGLE_DCHECK(!custom_compressed_v1_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*custom_compressed_v1_.UnsafeRawStringPointer())->clear();
    }
  }
  uncompressed_length_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UniquePosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.UniquePosition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes compressed_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_compressed_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 uncompressed_length = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_uncompressed_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uncompressed_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes custom_compressed_v1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_custom_compressed_v1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.UniquePosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.UniquePosition)
  return false;
#undef DO_
}

void UniquePosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.UniquePosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->value(), output);
  }

  // optional bytes compressed_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->compressed_value(), output);
  }

  // optional uint64 uncompressed_length = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->uncompressed_length(), output);
  }

  // optional bytes custom_compressed_v1 = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->custom_compressed_v1(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.UniquePosition)
}

size_t UniquePosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.UniquePosition)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes value = 1;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

    // optional bytes compressed_value = 2;
    if (has_compressed_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->compressed_value());
    }

    // optional bytes custom_compressed_v1 = 4;
    if (has_custom_compressed_v1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->custom_compressed_v1());
    }

    // optional uint64 uncompressed_length = 3;
    if (has_uncompressed_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uncompressed_length());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UniquePosition::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const UniquePosition*>(&from));
}

void UniquePosition::MergeFrom(const UniquePosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.UniquePosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_compressed_value();
      compressed_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compressed_value_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_custom_compressed_v1();
      custom_compressed_v1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_compressed_v1_);
    }
    if (cached_has_bits & 0x00000008u) {
      uncompressed_length_ = from.uncompressed_length_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UniquePosition::CopyFrom(const UniquePosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.UniquePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniquePosition::IsInitialized() const {
  return true;
}

void UniquePosition::Swap(UniquePosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UniquePosition::InternalSwap(UniquePosition* other) {
  value_.Swap(&other->value_);
  compressed_value_.Swap(&other->compressed_value_);
  custom_compressed_v1_.Swap(&other->custom_compressed_v1_);
  std::swap(uncompressed_length_, other->uncompressed_length_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string UniquePosition::GetTypeName() const {
  return "sync_pb.UniquePosition";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UniquePosition

// optional bytes value = 1;
bool UniquePosition::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UniquePosition::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
void UniquePosition::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void UniquePosition::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& UniquePosition::value() const {
  // @@protoc_insertion_point(field_get:sync_pb.UniquePosition.value)
  return value_.GetNoArena();
}
void UniquePosition::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.UniquePosition.value)
}
#if LANG_CXX11
void UniquePosition::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.UniquePosition.value)
}
#endif
void UniquePosition::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.UniquePosition.value)
}
void UniquePosition::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.UniquePosition.value)
}
::std::string* UniquePosition::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:sync_pb.UniquePosition.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UniquePosition::release_value() {
  // @@protoc_insertion_point(field_release:sync_pb.UniquePosition.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UniquePosition::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.UniquePosition.value)
}

// optional bytes compressed_value = 2;
bool UniquePosition::has_compressed_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UniquePosition::set_has_compressed_value() {
  _has_bits_[0] |= 0x00000002u;
}
void UniquePosition::clear_has_compressed_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void UniquePosition::clear_compressed_value() {
  compressed_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_compressed_value();
}
const ::std::string& UniquePosition::compressed_value() const {
  // @@protoc_insertion_point(field_get:sync_pb.UniquePosition.compressed_value)
  return compressed_value_.GetNoArena();
}
void UniquePosition::set_compressed_value(const ::std::string& value) {
  set_has_compressed_value();
  compressed_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.UniquePosition.compressed_value)
}
#if LANG_CXX11
void UniquePosition::set_compressed_value(::std::string&& value) {
  set_has_compressed_value();
  compressed_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.UniquePosition.compressed_value)
}
#endif
void UniquePosition::set_compressed_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_compressed_value();
  compressed_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.UniquePosition.compressed_value)
}
void UniquePosition::set_compressed_value(const void* value, size_t size) {
  set_has_compressed_value();
  compressed_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.UniquePosition.compressed_value)
}
::std::string* UniquePosition::mutable_compressed_value() {
  set_has_compressed_value();
  // @@protoc_insertion_point(field_mutable:sync_pb.UniquePosition.compressed_value)
  return compressed_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UniquePosition::release_compressed_value() {
  // @@protoc_insertion_point(field_release:sync_pb.UniquePosition.compressed_value)
  clear_has_compressed_value();
  return compressed_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UniquePosition::set_allocated_compressed_value(::std::string* compressed_value) {
  if (compressed_value != NULL) {
    set_has_compressed_value();
  } else {
    clear_has_compressed_value();
  }
  compressed_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), compressed_value);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.UniquePosition.compressed_value)
}

// optional uint64 uncompressed_length = 3;
bool UniquePosition::has_uncompressed_length() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void UniquePosition::set_has_uncompressed_length() {
  _has_bits_[0] |= 0x00000008u;
}
void UniquePosition::clear_has_uncompressed_length() {
  _has_bits_[0] &= ~0x00000008u;
}
void UniquePosition::clear_uncompressed_length() {
  uncompressed_length_ = GOOGLE_ULONGLONG(0);
  clear_has_uncompressed_length();
}
::google::protobuf::uint64 UniquePosition::uncompressed_length() const {
  // @@protoc_insertion_point(field_get:sync_pb.UniquePosition.uncompressed_length)
  return uncompressed_length_;
}
void UniquePosition::set_uncompressed_length(::google::protobuf::uint64 value) {
  set_has_uncompressed_length();
  uncompressed_length_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.UniquePosition.uncompressed_length)
}

// optional bytes custom_compressed_v1 = 4;
bool UniquePosition::has_custom_compressed_v1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UniquePosition::set_has_custom_compressed_v1() {
  _has_bits_[0] |= 0x00000004u;
}
void UniquePosition::clear_has_custom_compressed_v1() {
  _has_bits_[0] &= ~0x00000004u;
}
void UniquePosition::clear_custom_compressed_v1() {
  custom_compressed_v1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_custom_compressed_v1();
}
const ::std::string& UniquePosition::custom_compressed_v1() const {
  // @@protoc_insertion_point(field_get:sync_pb.UniquePosition.custom_compressed_v1)
  return custom_compressed_v1_.GetNoArena();
}
void UniquePosition::set_custom_compressed_v1(const ::std::string& value) {
  set_has_custom_compressed_v1();
  custom_compressed_v1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.UniquePosition.custom_compressed_v1)
}
#if LANG_CXX11
void UniquePosition::set_custom_compressed_v1(::std::string&& value) {
  set_has_custom_compressed_v1();
  custom_compressed_v1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.UniquePosition.custom_compressed_v1)
}
#endif
void UniquePosition::set_custom_compressed_v1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_custom_compressed_v1();
  custom_compressed_v1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.UniquePosition.custom_compressed_v1)
}
void UniquePosition::set_custom_compressed_v1(const void* value, size_t size) {
  set_has_custom_compressed_v1();
  custom_compressed_v1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.UniquePosition.custom_compressed_v1)
}
::std::string* UniquePosition::mutable_custom_compressed_v1() {
  set_has_custom_compressed_v1();
  // @@protoc_insertion_point(field_mutable:sync_pb.UniquePosition.custom_compressed_v1)
  return custom_compressed_v1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UniquePosition::release_custom_compressed_v1() {
  // @@protoc_insertion_point(field_release:sync_pb.UniquePosition.custom_compressed_v1)
  clear_has_custom_compressed_v1();
  return custom_compressed_v1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UniquePosition::set_allocated_custom_compressed_v1(::std::string* custom_compressed_v1) {
  if (custom_compressed_v1 != NULL) {
    set_has_custom_compressed_v1();
  } else {
    clear_has_custom_compressed_v1();
  }
  custom_compressed_v1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), custom_compressed_v1);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.UniquePosition.custom_compressed_v1)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)
