// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: history_status.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "history_status.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {
class HistoryStatusRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HistoryStatusRequest> {
} _HistoryStatusRequest_default_instance_;
class HistoryStatusResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HistoryStatusResponse> {
} _HistoryStatusResponse_default_instance_;

namespace protobuf_history_5fstatus_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _HistoryStatusRequest_default_instance_.Shutdown();
  _HistoryStatusResponse_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _HistoryStatusRequest_default_instance_.DefaultConstruct();
  _HistoryStatusResponse_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_history_5fstatus_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HistoryStatusRequest::HistoryStatusRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_history_5fstatus_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.HistoryStatusRequest)
}
HistoryStatusRequest::HistoryStatusRequest(const HistoryStatusRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sync_pb.HistoryStatusRequest)
}

void HistoryStatusRequest::SharedCtor() {
  _cached_size_ = 0;
}

HistoryStatusRequest::~HistoryStatusRequest() {
  // @@protoc_insertion_point(destructor:sync_pb.HistoryStatusRequest)
  SharedDtor();
}

void HistoryStatusRequest::SharedDtor() {
}

void HistoryStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const HistoryStatusRequest& HistoryStatusRequest::default_instance() {
  protobuf_history_5fstatus_2eproto::InitDefaults();
  return *internal_default_instance();
}

HistoryStatusRequest* HistoryStatusRequest::New(::google::protobuf::Arena* arena) const {
  HistoryStatusRequest* n = new HistoryStatusRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HistoryStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.HistoryStatusRequest)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HistoryStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.HistoryStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.HistoryStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.HistoryStatusRequest)
  return false;
#undef DO_
}

void HistoryStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.HistoryStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.HistoryStatusRequest)
}

size_t HistoryStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.HistoryStatusRequest)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HistoryStatusRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const HistoryStatusRequest*>(&from));
}

void HistoryStatusRequest::MergeFrom(const HistoryStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.HistoryStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HistoryStatusRequest::CopyFrom(const HistoryStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.HistoryStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HistoryStatusRequest::IsInitialized() const {
  return true;
}

void HistoryStatusRequest::Swap(HistoryStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HistoryStatusRequest::InternalSwap(HistoryStatusRequest* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string HistoryStatusRequest::GetTypeName() const {
  return "sync_pb.HistoryStatusRequest";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HistoryStatusRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HistoryStatusResponse::kMinPollIntervalSecondsFieldNumber;
const int HistoryStatusResponse::kHasDerivedDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HistoryStatusResponse::HistoryStatusResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_history_5fstatus_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.HistoryStatusResponse)
}
HistoryStatusResponse::HistoryStatusResponse(const HistoryStatusResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&has_derived_data_, &from.has_derived_data_,
    static_cast<size_t>(reinterpret_cast<char*>(&min_poll_interval_seconds_) -
    reinterpret_cast<char*>(&has_derived_data_)) + sizeof(min_poll_interval_seconds_));
  // @@protoc_insertion_point(copy_constructor:sync_pb.HistoryStatusResponse)
}

void HistoryStatusResponse::SharedCtor() {
  _cached_size_ = 0;
  has_derived_data_ = false;
  min_poll_interval_seconds_ = 3600;
}

HistoryStatusResponse::~HistoryStatusResponse() {
  // @@protoc_insertion_point(destructor:sync_pb.HistoryStatusResponse)
  SharedDtor();
}

void HistoryStatusResponse::SharedDtor() {
}

void HistoryStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const HistoryStatusResponse& HistoryStatusResponse::default_instance() {
  protobuf_history_5fstatus_2eproto::InitDefaults();
  return *internal_default_instance();
}

HistoryStatusResponse* HistoryStatusResponse::New(::google::protobuf::Arena* arena) const {
  HistoryStatusResponse* n = new HistoryStatusResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HistoryStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.HistoryStatusResponse)
  if (_has_bits_[0 / 32] & 3u) {
    has_derived_data_ = false;
    min_poll_interval_seconds_ = 3600;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HistoryStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.HistoryStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 min_poll_interval_seconds = 1 [default = 3600];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_min_poll_interval_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_poll_interval_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool has_derived_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_has_derived_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_derived_data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.HistoryStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.HistoryStatusResponse)
  return false;
#undef DO_
}

void HistoryStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.HistoryStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 min_poll_interval_seconds = 1 [default = 3600];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->min_poll_interval_seconds(), output);
  }

  // optional bool has_derived_data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->has_derived_data(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.HistoryStatusResponse)
}

size_t HistoryStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.HistoryStatusResponse)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional bool has_derived_data = 2;
    if (has_has_derived_data()) {
      total_size += 1 + 1;
    }

    // optional int32 min_poll_interval_seconds = 1 [default = 3600];
    if (has_min_poll_interval_seconds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->min_poll_interval_seconds());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HistoryStatusResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const HistoryStatusResponse*>(&from));
}

void HistoryStatusResponse::MergeFrom(const HistoryStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.HistoryStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      has_derived_data_ = from.has_derived_data_;
    }
    if (cached_has_bits & 0x00000002u) {
      min_poll_interval_seconds_ = from.min_poll_interval_seconds_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void HistoryStatusResponse::CopyFrom(const HistoryStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.HistoryStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HistoryStatusResponse::IsInitialized() const {
  return true;
}

void HistoryStatusResponse::Swap(HistoryStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HistoryStatusResponse::InternalSwap(HistoryStatusResponse* other) {
  std::swap(has_derived_data_, other->has_derived_data_);
  std::swap(min_poll_interval_seconds_, other->min_poll_interval_seconds_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string HistoryStatusResponse::GetTypeName() const {
  return "sync_pb.HistoryStatusResponse";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HistoryStatusResponse

// optional int32 min_poll_interval_seconds = 1 [default = 3600];
bool HistoryStatusResponse::has_min_poll_interval_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HistoryStatusResponse::set_has_min_poll_interval_seconds() {
  _has_bits_[0] |= 0x00000002u;
}
void HistoryStatusResponse::clear_has_min_poll_interval_seconds() {
  _has_bits_[0] &= ~0x00000002u;
}
void HistoryStatusResponse::clear_min_poll_interval_seconds() {
  min_poll_interval_seconds_ = 3600;
  clear_has_min_poll_interval_seconds();
}
::google::protobuf::int32 HistoryStatusResponse::min_poll_interval_seconds() const {
  // @@protoc_insertion_point(field_get:sync_pb.HistoryStatusResponse.min_poll_interval_seconds)
  return min_poll_interval_seconds_;
}
void HistoryStatusResponse::set_min_poll_interval_seconds(::google::protobuf::int32 value) {
  set_has_min_poll_interval_seconds();
  min_poll_interval_seconds_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.HistoryStatusResponse.min_poll_interval_seconds)
}

// optional bool has_derived_data = 2;
bool HistoryStatusResponse::has_has_derived_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HistoryStatusResponse::set_has_has_derived_data() {
  _has_bits_[0] |= 0x00000001u;
}
void HistoryStatusResponse::clear_has_has_derived_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void HistoryStatusResponse::clear_has_derived_data() {
  has_derived_data_ = false;
  clear_has_has_derived_data();
}
bool HistoryStatusResponse::has_derived_data() const {
  // @@protoc_insertion_point(field_get:sync_pb.HistoryStatusResponse.has_derived_data)
  return has_derived_data_;
}
void HistoryStatusResponse::set_has_derived_data(bool value) {
  set_has_has_derived_data();
  has_derived_data_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.HistoryStatusResponse.has_derived_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)
