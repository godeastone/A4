// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: search_engine_specifics.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "search_engine_specifics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {
class SearchEngineSpecificsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SearchEngineSpecifics> {
} _SearchEngineSpecifics_default_instance_;

namespace protobuf_search_5fengine_5fspecifics_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _SearchEngineSpecifics_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _SearchEngineSpecifics_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_search_5fengine_5fspecifics_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchEngineSpecifics::kShortNameFieldNumber;
const int SearchEngineSpecifics::kKeywordFieldNumber;
const int SearchEngineSpecifics::kFaviconUrlFieldNumber;
const int SearchEngineSpecifics::kUrlFieldNumber;
const int SearchEngineSpecifics::kSafeForAutoreplaceFieldNumber;
const int SearchEngineSpecifics::kOriginatingUrlFieldNumber;
const int SearchEngineSpecifics::kDateCreatedFieldNumber;
const int SearchEngineSpecifics::kInputEncodingsFieldNumber;
const int SearchEngineSpecifics::kDeprecatedShowInDefaultListFieldNumber;
const int SearchEngineSpecifics::kSuggestionsUrlFieldNumber;
const int SearchEngineSpecifics::kPrepopulateIdFieldNumber;
const int SearchEngineSpecifics::kAutogenerateKeywordFieldNumber;
const int SearchEngineSpecifics::kInstantUrlFieldNumber;
const int SearchEngineSpecifics::kLastModifiedFieldNumber;
const int SearchEngineSpecifics::kSyncGuidFieldNumber;
const int SearchEngineSpecifics::kAlternateUrlsFieldNumber;
const int SearchEngineSpecifics::kSearchTermsReplacementKeyFieldNumber;
const int SearchEngineSpecifics::kImageUrlFieldNumber;
const int SearchEngineSpecifics::kSearchUrlPostParamsFieldNumber;
const int SearchEngineSpecifics::kSuggestionsUrlPostParamsFieldNumber;
const int SearchEngineSpecifics::kInstantUrlPostParamsFieldNumber;
const int SearchEngineSpecifics::kImageUrlPostParamsFieldNumber;
const int SearchEngineSpecifics::kNewTabUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchEngineSpecifics::SearchEngineSpecifics()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_search_5fengine_5fspecifics_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.SearchEngineSpecifics)
}
SearchEngineSpecifics::SearchEngineSpecifics(const SearchEngineSpecifics& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      alternate_urls_(from.alternate_urls_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  short_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_short_name()) {
    short_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short_name_);
  }
  keyword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_keyword()) {
    keyword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyword_);
  }
  favicon_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_favicon_url()) {
    favicon_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.favicon_url_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  originating_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_originating_url()) {
    originating_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.originating_url_);
  }
  input_encodings_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_input_encodings()) {
    input_encodings_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_encodings_);
  }
  suggestions_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_suggestions_url()) {
    suggestions_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suggestions_url_);
  }
  instant_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_instant_url()) {
    instant_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instant_url_);
  }
  sync_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sync_guid()) {
    sync_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sync_guid_);
  }
  search_terms_replacement_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_search_terms_replacement_key()) {
    search_terms_replacement_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_terms_replacement_key_);
  }
  image_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_image_url()) {
    image_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_url_);
  }
  search_url_post_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_search_url_post_params()) {
    search_url_post_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_url_post_params_);
  }
  suggestions_url_post_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_suggestions_url_post_params()) {
    suggestions_url_post_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suggestions_url_post_params_);
  }
  instant_url_post_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_instant_url_post_params()) {
    instant_url_post_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instant_url_post_params_);
  }
  image_url_post_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_image_url_post_params()) {
    image_url_post_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_url_post_params_);
  }
  new_tab_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_new_tab_url()) {
    new_tab_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_tab_url_);
  }
  ::memcpy(&date_created_, &from.date_created_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_modified_) -
    reinterpret_cast<char*>(&date_created_)) + sizeof(last_modified_));
  // @@protoc_insertion_point(copy_constructor:sync_pb.SearchEngineSpecifics)
}

void SearchEngineSpecifics::SharedCtor() {
  _cached_size_ = 0;
  short_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  favicon_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  originating_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_encodings_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  suggestions_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instant_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sync_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  search_terms_replacement_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  search_url_post_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  suggestions_url_post_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instant_url_post_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_url_post_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_tab_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&date_created_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_modified_) -
      reinterpret_cast<char*>(&date_created_)) + sizeof(last_modified_));
}

SearchEngineSpecifics::~SearchEngineSpecifics() {
  // @@protoc_insertion_point(destructor:sync_pb.SearchEngineSpecifics)
  SharedDtor();
}

void SearchEngineSpecifics::SharedDtor() {
  short_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  favicon_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  originating_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_encodings_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  suggestions_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instant_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sync_guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  search_terms_replacement_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  search_url_post_params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  suggestions_url_post_params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instant_url_post_params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_url_post_params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_tab_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchEngineSpecifics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SearchEngineSpecifics& SearchEngineSpecifics::default_instance() {
  protobuf_search_5fengine_5fspecifics_2eproto::InitDefaults();
  return *internal_default_instance();
}

SearchEngineSpecifics* SearchEngineSpecifics::New(::google::protobuf::Arena* arena) const {
  SearchEngineSpecifics* n = new SearchEngineSpecifics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchEngineSpecifics::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.SearchEngineSpecifics)
  alternate_urls_.Clear();
  if (_has_bits_[0 / 32] & 255u) {
    if (has_short_name()) {
      GOOGLE_DCHECK(!short_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*short_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_keyword()) {
      GOOGLE_DCHECK(!keyword_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*keyword_.UnsafeRawStringPointer())->clear();
    }
    if (has_favicon_url()) {
      GOOGLE_DCHECK(!favicon_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*favicon_url_.UnsafeRawStringPointer())->clear();
    }
    if (has_url()) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    if (has_originating_url()) {
      GOOGLE_DCHECK(!originating_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*originating_url_.UnsafeRawStringPointer())->clear();
    }
    if (has_input_encodings()) {
      GOOGLE_DCHECK(!input_encodings_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*input_encodings_.UnsafeRawStringPointer())->clear();
    }
    if (has_suggestions_url()) {
      GOOGLE_DCHECK(!suggestions_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*suggestions_url_.UnsafeRawStringPointer())->clear();
    }
    if (has_instant_url()) {
      GOOGLE_DCHECK(!instant_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*instant_url_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    if (has_sync_guid()) {
      GOOGLE_DCHECK(!sync_guid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sync_guid_.UnsafeRawStringPointer())->clear();
    }
    if (has_search_terms_replacement_key()) {
      GOOGLE_DCHECK(!search_terms_replacement_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*search_terms_replacement_key_.UnsafeRawStringPointer())->clear();
    }
    if (has_image_url()) {
      GOOGLE_DCHECK(!image_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*image_url_.UnsafeRawStringPointer())->clear();
    }
    if (has_search_url_post_params()) {
      GOOGLE_DCHECK(!search_url_post_params_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*search_url_post_params_.UnsafeRawStringPointer())->clear();
    }
    if (has_suggestions_url_post_params()) {
      GOOGLE_DCHECK(!suggestions_url_post_params_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*suggestions_url_post_params_.UnsafeRawStringPointer())->clear();
    }
    if (has_instant_url_post_params()) {
      GOOGLE_DCHECK(!instant_url_post_params_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*instant_url_post_params_.UnsafeRawStringPointer())->clear();
    }
    if (has_image_url_post_params()) {
      GOOGLE_DCHECK(!image_url_post_params_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*image_url_post_params_.UnsafeRawStringPointer())->clear();
    }
    if (has_new_tab_url()) {
      GOOGLE_DCHECK(!new_tab_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*new_tab_url_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[16 / 32] & 4128768u) {
    ::memset(&date_created_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&last_modified_) -
        reinterpret_cast<char*>(&date_created_)) + sizeof(last_modified_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SearchEngineSpecifics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:sync_pb.SearchEngineSpecifics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string short_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_short_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string keyword = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyword()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string favicon_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_favicon_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool safe_for_autoreplace = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_safe_for_autoreplace();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &safe_for_autoreplace_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string originating_url = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_originating_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 date_created = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_date_created();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &date_created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string input_encodings = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input_encodings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool deprecated_show_in_default_list = 9 [deprecated = true];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_deprecated_show_in_default_list();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &deprecated_show_in_default_list_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string suggestions_url = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suggestions_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 prepopulate_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_prepopulate_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prepopulate_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool autogenerate_keyword = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          set_has_autogenerate_keyword();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &autogenerate_keyword_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string instant_url = 15 [deprecated = true];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instant_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 last_modified = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {
          set_has_last_modified();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_modified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sync_guid = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sync_guid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string alternate_urls = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_alternate_urls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string search_terms_replacement_key = 20 [deprecated = true];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_terms_replacement_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string image_url = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string search_url_post_params = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_url_post_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string suggestions_url_post_params = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suggestions_url_post_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string instant_url_post_params = 24 [deprecated = true];
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instant_url_post_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string image_url_post_params = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_url_post_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string new_tab_url = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_tab_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.SearchEngineSpecifics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.SearchEngineSpecifics)
  return false;
#undef DO_
}

void SearchEngineSpecifics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.SearchEngineSpecifics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string short_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->short_name(), output);
  }

  // optional string keyword = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->keyword(), output);
  }

  // optional string favicon_url = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->favicon_url(), output);
  }

  // optional string url = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->url(), output);
  }

  // optional bool safe_for_autoreplace = 5;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->safe_for_autoreplace(), output);
  }

  // optional string originating_url = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->originating_url(), output);
  }

  // optional int64 date_created = 7;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->date_created(), output);
  }

  // optional string input_encodings = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->input_encodings(), output);
  }

  // optional bool deprecated_show_in_default_list = 9 [deprecated = true];
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->deprecated_show_in_default_list(), output);
  }

  // optional string suggestions_url = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->suggestions_url(), output);
  }

  // optional int32 prepopulate_id = 11;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->prepopulate_id(), output);
  }

  // optional bool autogenerate_keyword = 12;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->autogenerate_keyword(), output);
  }

  // optional string instant_url = 15 [deprecated = true];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->instant_url(), output);
  }

  // optional int64 last_modified = 17;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->last_modified(), output);
  }

  // optional string sync_guid = 18;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->sync_guid(), output);
  }

  // repeated string alternate_urls = 19;
  for (int i = 0, n = this->alternate_urls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->alternate_urls(i), output);
  }

  // optional string search_terms_replacement_key = 20 [deprecated = true];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->search_terms_replacement_key(), output);
  }

  // optional string image_url = 21;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->image_url(), output);
  }

  // optional string search_url_post_params = 22;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->search_url_post_params(), output);
  }

  // optional string suggestions_url_post_params = 23;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->suggestions_url_post_params(), output);
  }

  // optional string instant_url_post_params = 24 [deprecated = true];
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->instant_url_post_params(), output);
  }

  // optional string image_url_post_params = 25;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->image_url_post_params(), output);
  }

  // optional string new_tab_url = 26;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->new_tab_url(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.SearchEngineSpecifics)
}

size_t SearchEngineSpecifics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.SearchEngineSpecifics)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated string alternate_urls = 19;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->alternate_urls_size());
  for (int i = 0, n = this->alternate_urls_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->alternate_urls(i));
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string short_name = 1;
    if (has_short_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->short_name());
    }

    // optional string keyword = 2;
    if (has_keyword()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->keyword());
    }

    // optional string favicon_url = 3;
    if (has_favicon_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->favicon_url());
    }

    // optional string url = 4;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string originating_url = 6;
    if (has_originating_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->originating_url());
    }

    // optional string input_encodings = 8;
    if (has_input_encodings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->input_encodings());
    }

    // optional string suggestions_url = 10;
    if (has_suggestions_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->suggestions_url());
    }

    // optional string instant_url = 15 [deprecated = true];
    if (has_instant_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->instant_url());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional string sync_guid = 18;
    if (has_sync_guid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sync_guid());
    }

    // optional string search_terms_replacement_key = 20 [deprecated = true];
    if (has_search_terms_replacement_key()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->search_terms_replacement_key());
    }

    // optional string image_url = 21;
    if (has_image_url()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->image_url());
    }

    // optional string search_url_post_params = 22;
    if (has_search_url_post_params()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->search_url_post_params());
    }

    // optional string suggestions_url_post_params = 23;
    if (has_suggestions_url_post_params()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->suggestions_url_post_params());
    }

    // optional string instant_url_post_params = 24 [deprecated = true];
    if (has_instant_url_post_params()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->instant_url_post_params());
    }

    // optional string image_url_post_params = 25;
    if (has_image_url_post_params()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->image_url_post_params());
    }

    // optional string new_tab_url = 26;
    if (has_new_tab_url()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->new_tab_url());
    }

  }
  if (_has_bits_[16 / 32] & 4128768u) {
    // optional int64 date_created = 7;
    if (has_date_created()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->date_created());
    }

    // optional bool safe_for_autoreplace = 5;
    if (has_safe_for_autoreplace()) {
      total_size += 1 + 1;
    }

    // optional bool deprecated_show_in_default_list = 9 [deprecated = true];
    if (has_deprecated_show_in_default_list()) {
      total_size += 1 + 1;
    }

    // optional bool autogenerate_keyword = 12;
    if (has_autogenerate_keyword()) {
      total_size += 1 + 1;
    }

    // optional int32 prepopulate_id = 11;
    if (has_prepopulate_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->prepopulate_id());
    }

    // optional int64 last_modified = 17;
    if (has_last_modified()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->last_modified());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchEngineSpecifics::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SearchEngineSpecifics*>(&from));
}

void SearchEngineSpecifics::MergeFrom(const SearchEngineSpecifics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.SearchEngineSpecifics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alternate_urls_.MergeFrom(from.alternate_urls_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_short_name();
      short_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_keyword();
      keyword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyword_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_favicon_url();
      favicon_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.favicon_url_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_originating_url();
      originating_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.originating_url_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_input_encodings();
      input_encodings_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_encodings_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_suggestions_url();
      suggestions_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suggestions_url_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_instant_url();
      instant_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instant_url_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_sync_guid();
      sync_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sync_guid_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_search_terms_replacement_key();
      search_terms_replacement_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_terms_replacement_key_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_image_url();
      image_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_url_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_search_url_post_params();
      search_url_post_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_url_post_params_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has_suggestions_url_post_params();
      suggestions_url_post_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suggestions_url_post_params_);
    }
    if (cached_has_bits & 0x00002000u) {
      set_has_instant_url_post_params();
      instant_url_post_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instant_url_post_params_);
    }
    if (cached_has_bits & 0x00004000u) {
      set_has_image_url_post_params();
      image_url_post_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_url_post_params_);
    }
    if (cached_has_bits & 0x00008000u) {
      set_has_new_tab_url();
      new_tab_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_tab_url_);
    }
  }
  if (cached_has_bits & 4128768u) {
    if (cached_has_bits & 0x00010000u) {
      date_created_ = from.date_created_;
    }
    if (cached_has_bits & 0x00020000u) {
      safe_for_autoreplace_ = from.safe_for_autoreplace_;
    }
    if (cached_has_bits & 0x00040000u) {
      deprecated_show_in_default_list_ = from.deprecated_show_in_default_list_;
    }
    if (cached_has_bits & 0x00080000u) {
      autogenerate_keyword_ = from.autogenerate_keyword_;
    }
    if (cached_has_bits & 0x00100000u) {
      prepopulate_id_ = from.prepopulate_id_;
    }
    if (cached_has_bits & 0x00200000u) {
      last_modified_ = from.last_modified_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SearchEngineSpecifics::CopyFrom(const SearchEngineSpecifics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.SearchEngineSpecifics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchEngineSpecifics::IsInitialized() const {
  return true;
}

void SearchEngineSpecifics::Swap(SearchEngineSpecifics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchEngineSpecifics::InternalSwap(SearchEngineSpecifics* other) {
  alternate_urls_.InternalSwap(&other->alternate_urls_);
  short_name_.Swap(&other->short_name_);
  keyword_.Swap(&other->keyword_);
  favicon_url_.Swap(&other->favicon_url_);
  url_.Swap(&other->url_);
  originating_url_.Swap(&other->originating_url_);
  input_encodings_.Swap(&other->input_encodings_);
  suggestions_url_.Swap(&other->suggestions_url_);
  instant_url_.Swap(&other->instant_url_);
  sync_guid_.Swap(&other->sync_guid_);
  search_terms_replacement_key_.Swap(&other->search_terms_replacement_key_);
  image_url_.Swap(&other->image_url_);
  search_url_post_params_.Swap(&other->search_url_post_params_);
  suggestions_url_post_params_.Swap(&other->suggestions_url_post_params_);
  instant_url_post_params_.Swap(&other->instant_url_post_params_);
  image_url_post_params_.Swap(&other->image_url_post_params_);
  new_tab_url_.Swap(&other->new_tab_url_);
  std::swap(date_created_, other->date_created_);
  std::swap(safe_for_autoreplace_, other->safe_for_autoreplace_);
  std::swap(deprecated_show_in_default_list_, other->deprecated_show_in_default_list_);
  std::swap(autogenerate_keyword_, other->autogenerate_keyword_);
  std::swap(prepopulate_id_, other->prepopulate_id_);
  std::swap(last_modified_, other->last_modified_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SearchEngineSpecifics::GetTypeName() const {
  return "sync_pb.SearchEngineSpecifics";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchEngineSpecifics

// optional string short_name = 1;
bool SearchEngineSpecifics::has_short_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SearchEngineSpecifics::set_has_short_name() {
  _has_bits_[0] |= 0x00000001u;
}
void SearchEngineSpecifics::clear_has_short_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void SearchEngineSpecifics::clear_short_name() {
  short_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_short_name();
}
const ::std::string& SearchEngineSpecifics::short_name() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.short_name)
  return short_name_.GetNoArena();
}
void SearchEngineSpecifics::set_short_name(const ::std::string& value) {
  set_has_short_name();
  short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.short_name)
}
#if LANG_CXX11
void SearchEngineSpecifics::set_short_name(::std::string&& value) {
  set_has_short_name();
  short_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.SearchEngineSpecifics.short_name)
}
#endif
void SearchEngineSpecifics::set_short_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_short_name();
  short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.short_name)
}
void SearchEngineSpecifics::set_short_name(const char* value, size_t size) {
  set_has_short_name();
  short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.short_name)
}
::std::string* SearchEngineSpecifics::mutable_short_name() {
  set_has_short_name();
  // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.short_name)
  return short_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchEngineSpecifics::release_short_name() {
  // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.short_name)
  clear_has_short_name();
  return short_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchEngineSpecifics::set_allocated_short_name(::std::string* short_name) {
  if (short_name != NULL) {
    set_has_short_name();
  } else {
    clear_has_short_name();
  }
  short_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), short_name);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.short_name)
}

// optional string keyword = 2;
bool SearchEngineSpecifics::has_keyword() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SearchEngineSpecifics::set_has_keyword() {
  _has_bits_[0] |= 0x00000002u;
}
void SearchEngineSpecifics::clear_has_keyword() {
  _has_bits_[0] &= ~0x00000002u;
}
void SearchEngineSpecifics::clear_keyword() {
  keyword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keyword();
}
const ::std::string& SearchEngineSpecifics::keyword() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.keyword)
  return keyword_.GetNoArena();
}
void SearchEngineSpecifics::set_keyword(const ::std::string& value) {
  set_has_keyword();
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.keyword)
}
#if LANG_CXX11
void SearchEngineSpecifics::set_keyword(::std::string&& value) {
  set_has_keyword();
  keyword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.SearchEngineSpecifics.keyword)
}
#endif
void SearchEngineSpecifics::set_keyword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_keyword();
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.keyword)
}
void SearchEngineSpecifics::set_keyword(const char* value, size_t size) {
  set_has_keyword();
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.keyword)
}
::std::string* SearchEngineSpecifics::mutable_keyword() {
  set_has_keyword();
  // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.keyword)
  return keyword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchEngineSpecifics::release_keyword() {
  // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.keyword)
  clear_has_keyword();
  return keyword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchEngineSpecifics::set_allocated_keyword(::std::string* keyword) {
  if (keyword != NULL) {
    set_has_keyword();
  } else {
    clear_has_keyword();
  }
  keyword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyword);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.keyword)
}

// optional string favicon_url = 3;
bool SearchEngineSpecifics::has_favicon_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SearchEngineSpecifics::set_has_favicon_url() {
  _has_bits_[0] |= 0x00000004u;
}
void SearchEngineSpecifics::clear_has_favicon_url() {
  _has_bits_[0] &= ~0x00000004u;
}
void SearchEngineSpecifics::clear_favicon_url() {
  favicon_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_favicon_url();
}
const ::std::string& SearchEngineSpecifics::favicon_url() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.favicon_url)
  return favicon_url_.GetNoArena();
}
void SearchEngineSpecifics::set_favicon_url(const ::std::string& value) {
  set_has_favicon_url();
  favicon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.favicon_url)
}
#if LANG_CXX11
void SearchEngineSpecifics::set_favicon_url(::std::string&& value) {
  set_has_favicon_url();
  favicon_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.SearchEngineSpecifics.favicon_url)
}
#endif
void SearchEngineSpecifics::set_favicon_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_favicon_url();
  favicon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.favicon_url)
}
void SearchEngineSpecifics::set_favicon_url(const char* value, size_t size) {
  set_has_favicon_url();
  favicon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.favicon_url)
}
::std::string* SearchEngineSpecifics::mutable_favicon_url() {
  set_has_favicon_url();
  // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.favicon_url)
  return favicon_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchEngineSpecifics::release_favicon_url() {
  // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.favicon_url)
  clear_has_favicon_url();
  return favicon_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchEngineSpecifics::set_allocated_favicon_url(::std::string* favicon_url) {
  if (favicon_url != NULL) {
    set_has_favicon_url();
  } else {
    clear_has_favicon_url();
  }
  favicon_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), favicon_url);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.favicon_url)
}

// optional string url = 4;
bool SearchEngineSpecifics::has_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SearchEngineSpecifics::set_has_url() {
  _has_bits_[0] |= 0x00000008u;
}
void SearchEngineSpecifics::clear_has_url() {
  _has_bits_[0] &= ~0x00000008u;
}
void SearchEngineSpecifics::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& SearchEngineSpecifics::url() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.url)
  return url_.GetNoArena();
}
void SearchEngineSpecifics::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.url)
}
#if LANG_CXX11
void SearchEngineSpecifics::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.SearchEngineSpecifics.url)
}
#endif
void SearchEngineSpecifics::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.url)
}
void SearchEngineSpecifics::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.url)
}
::std::string* SearchEngineSpecifics::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchEngineSpecifics::release_url() {
  // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchEngineSpecifics::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.url)
}

// optional bool safe_for_autoreplace = 5;
bool SearchEngineSpecifics::has_safe_for_autoreplace() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void SearchEngineSpecifics::set_has_safe_for_autoreplace() {
  _has_bits_[0] |= 0x00020000u;
}
void SearchEngineSpecifics::clear_has_safe_for_autoreplace() {
  _has_bits_[0] &= ~0x00020000u;
}
void SearchEngineSpecifics::clear_safe_for_autoreplace() {
  safe_for_autoreplace_ = false;
  clear_has_safe_for_autoreplace();
}
bool SearchEngineSpecifics::safe_for_autoreplace() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.safe_for_autoreplace)
  return safe_for_autoreplace_;
}
void SearchEngineSpecifics::set_safe_for_autoreplace(bool value) {
  set_has_safe_for_autoreplace();
  safe_for_autoreplace_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.safe_for_autoreplace)
}

// optional string originating_url = 6;
bool SearchEngineSpecifics::has_originating_url() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SearchEngineSpecifics::set_has_originating_url() {
  _has_bits_[0] |= 0x00000010u;
}
void SearchEngineSpecifics::clear_has_originating_url() {
  _has_bits_[0] &= ~0x00000010u;
}
void SearchEngineSpecifics::clear_originating_url() {
  originating_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_originating_url();
}
const ::std::string& SearchEngineSpecifics::originating_url() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.originating_url)
  return originating_url_.GetNoArena();
}
void SearchEngineSpecifics::set_originating_url(const ::std::string& value) {
  set_has_originating_url();
  originating_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.originating_url)
}
#if LANG_CXX11
void SearchEngineSpecifics::set_originating_url(::std::string&& value) {
  set_has_originating_url();
  originating_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.SearchEngineSpecifics.originating_url)
}
#endif
void SearchEngineSpecifics::set_originating_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_originating_url();
  originating_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.originating_url)
}
void SearchEngineSpecifics::set_originating_url(const char* value, size_t size) {
  set_has_originating_url();
  originating_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.originating_url)
}
::std::string* SearchEngineSpecifics::mutable_originating_url() {
  set_has_originating_url();
  // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.originating_url)
  return originating_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchEngineSpecifics::release_originating_url() {
  // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.originating_url)
  clear_has_originating_url();
  return originating_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchEngineSpecifics::set_allocated_originating_url(::std::string* originating_url) {
  if (originating_url != NULL) {
    set_has_originating_url();
  } else {
    clear_has_originating_url();
  }
  originating_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), originating_url);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.originating_url)
}

// optional int64 date_created = 7;
bool SearchEngineSpecifics::has_date_created() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void SearchEngineSpecifics::set_has_date_created() {
  _has_bits_[0] |= 0x00010000u;
}
void SearchEngineSpecifics::clear_has_date_created() {
  _has_bits_[0] &= ~0x00010000u;
}
void SearchEngineSpecifics::clear_date_created() {
  date_created_ = GOOGLE_LONGLONG(0);
  clear_has_date_created();
}
::google::protobuf::int64 SearchEngineSpecifics::date_created() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.date_created)
  return date_created_;
}
void SearchEngineSpecifics::set_date_created(::google::protobuf::int64 value) {
  set_has_date_created();
  date_created_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.date_created)
}

// optional string input_encodings = 8;
bool SearchEngineSpecifics::has_input_encodings() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SearchEngineSpecifics::set_has_input_encodings() {
  _has_bits_[0] |= 0x00000020u;
}
void SearchEngineSpecifics::clear_has_input_encodings() {
  _has_bits_[0] &= ~0x00000020u;
}
void SearchEngineSpecifics::clear_input_encodings() {
  input_encodings_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_input_encodings();
}
const ::std::string& SearchEngineSpecifics::input_encodings() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.input_encodings)
  return input_encodings_.GetNoArena();
}
void SearchEngineSpecifics::set_input_encodings(const ::std::string& value) {
  set_has_input_encodings();
  input_encodings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.input_encodings)
}
#if LANG_CXX11
void SearchEngineSpecifics::set_input_encodings(::std::string&& value) {
  set_has_input_encodings();
  input_encodings_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.SearchEngineSpecifics.input_encodings)
}
#endif
void SearchEngineSpecifics::set_input_encodings(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_input_encodings();
  input_encodings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.input_encodings)
}
void SearchEngineSpecifics::set_input_encodings(const char* value, size_t size) {
  set_has_input_encodings();
  input_encodings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.input_encodings)
}
::std::string* SearchEngineSpecifics::mutable_input_encodings() {
  set_has_input_encodings();
  // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.input_encodings)
  return input_encodings_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchEngineSpecifics::release_input_encodings() {
  // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.input_encodings)
  clear_has_input_encodings();
  return input_encodings_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchEngineSpecifics::set_allocated_input_encodings(::std::string* input_encodings) {
  if (input_encodings != NULL) {
    set_has_input_encodings();
  } else {
    clear_has_input_encodings();
  }
  input_encodings_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_encodings);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.input_encodings)
}

// optional bool deprecated_show_in_default_list = 9 [deprecated = true];
bool SearchEngineSpecifics::has_deprecated_show_in_default_list() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void SearchEngineSpecifics::set_has_deprecated_show_in_default_list() {
  _has_bits_[0] |= 0x00040000u;
}
void SearchEngineSpecifics::clear_has_deprecated_show_in_default_list() {
  _has_bits_[0] &= ~0x00040000u;
}
void SearchEngineSpecifics::clear_deprecated_show_in_default_list() {
  deprecated_show_in_default_list_ = false;
  clear_has_deprecated_show_in_default_list();
}
bool SearchEngineSpecifics::deprecated_show_in_default_list() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.deprecated_show_in_default_list)
  return deprecated_show_in_default_list_;
}
void SearchEngineSpecifics::set_deprecated_show_in_default_list(bool value) {
  set_has_deprecated_show_in_default_list();
  deprecated_show_in_default_list_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.deprecated_show_in_default_list)
}

// optional string suggestions_url = 10;
bool SearchEngineSpecifics::has_suggestions_url() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SearchEngineSpecifics::set_has_suggestions_url() {
  _has_bits_[0] |= 0x00000040u;
}
void SearchEngineSpecifics::clear_has_suggestions_url() {
  _has_bits_[0] &= ~0x00000040u;
}
void SearchEngineSpecifics::clear_suggestions_url() {
  suggestions_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_suggestions_url();
}
const ::std::string& SearchEngineSpecifics::suggestions_url() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.suggestions_url)
  return suggestions_url_.GetNoArena();
}
void SearchEngineSpecifics::set_suggestions_url(const ::std::string& value) {
  set_has_suggestions_url();
  suggestions_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.suggestions_url)
}
#if LANG_CXX11
void SearchEngineSpecifics::set_suggestions_url(::std::string&& value) {
  set_has_suggestions_url();
  suggestions_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.SearchEngineSpecifics.suggestions_url)
}
#endif
void SearchEngineSpecifics::set_suggestions_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_suggestions_url();
  suggestions_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.suggestions_url)
}
void SearchEngineSpecifics::set_suggestions_url(const char* value, size_t size) {
  set_has_suggestions_url();
  suggestions_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.suggestions_url)
}
::std::string* SearchEngineSpecifics::mutable_suggestions_url() {
  set_has_suggestions_url();
  // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.suggestions_url)
  return suggestions_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchEngineSpecifics::release_suggestions_url() {
  // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.suggestions_url)
  clear_has_suggestions_url();
  return suggestions_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchEngineSpecifics::set_allocated_suggestions_url(::std::string* suggestions_url) {
  if (suggestions_url != NULL) {
    set_has_suggestions_url();
  } else {
    clear_has_suggestions_url();
  }
  suggestions_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suggestions_url);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.suggestions_url)
}

// optional int32 prepopulate_id = 11;
bool SearchEngineSpecifics::has_prepopulate_id() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void SearchEngineSpecifics::set_has_prepopulate_id() {
  _has_bits_[0] |= 0x00100000u;
}
void SearchEngineSpecifics::clear_has_prepopulate_id() {
  _has_bits_[0] &= ~0x00100000u;
}
void SearchEngineSpecifics::clear_prepopulate_id() {
  prepopulate_id_ = 0;
  clear_has_prepopulate_id();
}
::google::protobuf::int32 SearchEngineSpecifics::prepopulate_id() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.prepopulate_id)
  return prepopulate_id_;
}
void SearchEngineSpecifics::set_prepopulate_id(::google::protobuf::int32 value) {
  set_has_prepopulate_id();
  prepopulate_id_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.prepopulate_id)
}

// optional bool autogenerate_keyword = 12;
bool SearchEngineSpecifics::has_autogenerate_keyword() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void SearchEngineSpecifics::set_has_autogenerate_keyword() {
  _has_bits_[0] |= 0x00080000u;
}
void SearchEngineSpecifics::clear_has_autogenerate_keyword() {
  _has_bits_[0] &= ~0x00080000u;
}
void SearchEngineSpecifics::clear_autogenerate_keyword() {
  autogenerate_keyword_ = false;
  clear_has_autogenerate_keyword();
}
bool SearchEngineSpecifics::autogenerate_keyword() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.autogenerate_keyword)
  return autogenerate_keyword_;
}
void SearchEngineSpecifics::set_autogenerate_keyword(bool value) {
  set_has_autogenerate_keyword();
  autogenerate_keyword_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.autogenerate_keyword)
}

// optional string instant_url = 15 [deprecated = true];
bool SearchEngineSpecifics::has_instant_url() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void SearchEngineSpecifics::set_has_instant_url() {
  _has_bits_[0] |= 0x00000080u;
}
void SearchEngineSpecifics::clear_has_instant_url() {
  _has_bits_[0] &= ~0x00000080u;
}
void SearchEngineSpecifics::clear_instant_url() {
  instant_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instant_url();
}
const ::std::string& SearchEngineSpecifics::instant_url() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.instant_url)
  return instant_url_.GetNoArena();
}
void SearchEngineSpecifics::set_instant_url(const ::std::string& value) {
  set_has_instant_url();
  instant_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.instant_url)
}
#if LANG_CXX11
void SearchEngineSpecifics::set_instant_url(::std::string&& value) {
  set_has_instant_url();
  instant_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.SearchEngineSpecifics.instant_url)
}
#endif
void SearchEngineSpecifics::set_instant_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_instant_url();
  instant_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.instant_url)
}
void SearchEngineSpecifics::set_instant_url(const char* value, size_t size) {
  set_has_instant_url();
  instant_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.instant_url)
}
::std::string* SearchEngineSpecifics::mutable_instant_url() {
  set_has_instant_url();
  // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.instant_url)
  return instant_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchEngineSpecifics::release_instant_url() {
  // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.instant_url)
  clear_has_instant_url();
  return instant_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchEngineSpecifics::set_allocated_instant_url(::std::string* instant_url) {
  if (instant_url != NULL) {
    set_has_instant_url();
  } else {
    clear_has_instant_url();
  }
  instant_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instant_url);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.instant_url)
}

// optional int64 last_modified = 17;
bool SearchEngineSpecifics::has_last_modified() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void SearchEngineSpecifics::set_has_last_modified() {
  _has_bits_[0] |= 0x00200000u;
}
void SearchEngineSpecifics::clear_has_last_modified() {
  _has_bits_[0] &= ~0x00200000u;
}
void SearchEngineSpecifics::clear_last_modified() {
  last_modified_ = GOOGLE_LONGLONG(0);
  clear_has_last_modified();
}
::google::protobuf::int64 SearchEngineSpecifics::last_modified() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.last_modified)
  return last_modified_;
}
void SearchEngineSpecifics::set_last_modified(::google::protobuf::int64 value) {
  set_has_last_modified();
  last_modified_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.last_modified)
}

// optional string sync_guid = 18;
bool SearchEngineSpecifics::has_sync_guid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void SearchEngineSpecifics::set_has_sync_guid() {
  _has_bits_[0] |= 0x00000100u;
}
void SearchEngineSpecifics::clear_has_sync_guid() {
  _has_bits_[0] &= ~0x00000100u;
}
void SearchEngineSpecifics::clear_sync_guid() {
  sync_guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sync_guid();
}
const ::std::string& SearchEngineSpecifics::sync_guid() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.sync_guid)
  return sync_guid_.GetNoArena();
}
void SearchEngineSpecifics::set_sync_guid(const ::std::string& value) {
  set_has_sync_guid();
  sync_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.sync_guid)
}
#if LANG_CXX11
void SearchEngineSpecifics::set_sync_guid(::std::string&& value) {
  set_has_sync_guid();
  sync_guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.SearchEngineSpecifics.sync_guid)
}
#endif
void SearchEngineSpecifics::set_sync_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sync_guid();
  sync_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.sync_guid)
}
void SearchEngineSpecifics::set_sync_guid(const char* value, size_t size) {
  set_has_sync_guid();
  sync_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.sync_guid)
}
::std::string* SearchEngineSpecifics::mutable_sync_guid() {
  set_has_sync_guid();
  // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.sync_guid)
  return sync_guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchEngineSpecifics::release_sync_guid() {
  // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.sync_guid)
  clear_has_sync_guid();
  return sync_guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchEngineSpecifics::set_allocated_sync_guid(::std::string* sync_guid) {
  if (sync_guid != NULL) {
    set_has_sync_guid();
  } else {
    clear_has_sync_guid();
  }
  sync_guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sync_guid);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.sync_guid)
}

// repeated string alternate_urls = 19;
int SearchEngineSpecifics::alternate_urls_size() const {
  return alternate_urls_.size();
}
void SearchEngineSpecifics::clear_alternate_urls() {
  alternate_urls_.Clear();
}
const ::std::string& SearchEngineSpecifics::alternate_urls(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.alternate_urls)
  return alternate_urls_.Get(index);
}
::std::string* SearchEngineSpecifics::mutable_alternate_urls(int index) {
  // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.alternate_urls)
  return alternate_urls_.Mutable(index);
}
void SearchEngineSpecifics::set_alternate_urls(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.alternate_urls)
  alternate_urls_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void SearchEngineSpecifics::set_alternate_urls(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.alternate_urls)
  alternate_urls_.Mutable(index)->assign(std::move(value));
}
#endif
void SearchEngineSpecifics::set_alternate_urls(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  alternate_urls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.alternate_urls)
}
void SearchEngineSpecifics::set_alternate_urls(int index, const char* value, size_t size) {
  alternate_urls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.alternate_urls)
}
::std::string* SearchEngineSpecifics::add_alternate_urls() {
  // @@protoc_insertion_point(field_add_mutable:sync_pb.SearchEngineSpecifics.alternate_urls)
  return alternate_urls_.Add();
}
void SearchEngineSpecifics::add_alternate_urls(const ::std::string& value) {
  alternate_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:sync_pb.SearchEngineSpecifics.alternate_urls)
}
#if LANG_CXX11
void SearchEngineSpecifics::add_alternate_urls(::std::string&& value) {
  alternate_urls_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:sync_pb.SearchEngineSpecifics.alternate_urls)
}
#endif
void SearchEngineSpecifics::add_alternate_urls(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  alternate_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:sync_pb.SearchEngineSpecifics.alternate_urls)
}
void SearchEngineSpecifics::add_alternate_urls(const char* value, size_t size) {
  alternate_urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:sync_pb.SearchEngineSpecifics.alternate_urls)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchEngineSpecifics::alternate_urls() const {
  // @@protoc_insertion_point(field_list:sync_pb.SearchEngineSpecifics.alternate_urls)
  return alternate_urls_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
SearchEngineSpecifics::mutable_alternate_urls() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.SearchEngineSpecifics.alternate_urls)
  return &alternate_urls_;
}

// optional string search_terms_replacement_key = 20 [deprecated = true];
bool SearchEngineSpecifics::has_search_terms_replacement_key() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void SearchEngineSpecifics::set_has_search_terms_replacement_key() {
  _has_bits_[0] |= 0x00000200u;
}
void SearchEngineSpecifics::clear_has_search_terms_replacement_key() {
  _has_bits_[0] &= ~0x00000200u;
}
void SearchEngineSpecifics::clear_search_terms_replacement_key() {
  search_terms_replacement_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_search_terms_replacement_key();
}
const ::std::string& SearchEngineSpecifics::search_terms_replacement_key() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.search_terms_replacement_key)
  return search_terms_replacement_key_.GetNoArena();
}
void SearchEngineSpecifics::set_search_terms_replacement_key(const ::std::string& value) {
  set_has_search_terms_replacement_key();
  search_terms_replacement_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.search_terms_replacement_key)
}
#if LANG_CXX11
void SearchEngineSpecifics::set_search_terms_replacement_key(::std::string&& value) {
  set_has_search_terms_replacement_key();
  search_terms_replacement_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.SearchEngineSpecifics.search_terms_replacement_key)
}
#endif
void SearchEngineSpecifics::set_search_terms_replacement_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_search_terms_replacement_key();
  search_terms_replacement_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.search_terms_replacement_key)
}
void SearchEngineSpecifics::set_search_terms_replacement_key(const char* value, size_t size) {
  set_has_search_terms_replacement_key();
  search_terms_replacement_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.search_terms_replacement_key)
}
::std::string* SearchEngineSpecifics::mutable_search_terms_replacement_key() {
  set_has_search_terms_replacement_key();
  // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.search_terms_replacement_key)
  return search_terms_replacement_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchEngineSpecifics::release_search_terms_replacement_key() {
  // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.search_terms_replacement_key)
  clear_has_search_terms_replacement_key();
  return search_terms_replacement_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchEngineSpecifics::set_allocated_search_terms_replacement_key(::std::string* search_terms_replacement_key) {
  if (search_terms_replacement_key != NULL) {
    set_has_search_terms_replacement_key();
  } else {
    clear_has_search_terms_replacement_key();
  }
  search_terms_replacement_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_terms_replacement_key);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.search_terms_replacement_key)
}

// optional string image_url = 21;
bool SearchEngineSpecifics::has_image_url() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void SearchEngineSpecifics::set_has_image_url() {
  _has_bits_[0] |= 0x00000400u;
}
void SearchEngineSpecifics::clear_has_image_url() {
  _has_bits_[0] &= ~0x00000400u;
}
void SearchEngineSpecifics::clear_image_url() {
  image_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_image_url();
}
const ::std::string& SearchEngineSpecifics::image_url() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.image_url)
  return image_url_.GetNoArena();
}
void SearchEngineSpecifics::set_image_url(const ::std::string& value) {
  set_has_image_url();
  image_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.image_url)
}
#if LANG_CXX11
void SearchEngineSpecifics::set_image_url(::std::string&& value) {
  set_has_image_url();
  image_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.SearchEngineSpecifics.image_url)
}
#endif
void SearchEngineSpecifics::set_image_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_image_url();
  image_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.image_url)
}
void SearchEngineSpecifics::set_image_url(const char* value, size_t size) {
  set_has_image_url();
  image_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.image_url)
}
::std::string* SearchEngineSpecifics::mutable_image_url() {
  set_has_image_url();
  // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.image_url)
  return image_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchEngineSpecifics::release_image_url() {
  // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.image_url)
  clear_has_image_url();
  return image_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchEngineSpecifics::set_allocated_image_url(::std::string* image_url) {
  if (image_url != NULL) {
    set_has_image_url();
  } else {
    clear_has_image_url();
  }
  image_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_url);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.image_url)
}

// optional string search_url_post_params = 22;
bool SearchEngineSpecifics::has_search_url_post_params() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void SearchEngineSpecifics::set_has_search_url_post_params() {
  _has_bits_[0] |= 0x00000800u;
}
void SearchEngineSpecifics::clear_has_search_url_post_params() {
  _has_bits_[0] &= ~0x00000800u;
}
void SearchEngineSpecifics::clear_search_url_post_params() {
  search_url_post_params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_search_url_post_params();
}
const ::std::string& SearchEngineSpecifics::search_url_post_params() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.search_url_post_params)
  return search_url_post_params_.GetNoArena();
}
void SearchEngineSpecifics::set_search_url_post_params(const ::std::string& value) {
  set_has_search_url_post_params();
  search_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.search_url_post_params)
}
#if LANG_CXX11
void SearchEngineSpecifics::set_search_url_post_params(::std::string&& value) {
  set_has_search_url_post_params();
  search_url_post_params_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.SearchEngineSpecifics.search_url_post_params)
}
#endif
void SearchEngineSpecifics::set_search_url_post_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_search_url_post_params();
  search_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.search_url_post_params)
}
void SearchEngineSpecifics::set_search_url_post_params(const char* value, size_t size) {
  set_has_search_url_post_params();
  search_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.search_url_post_params)
}
::std::string* SearchEngineSpecifics::mutable_search_url_post_params() {
  set_has_search_url_post_params();
  // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.search_url_post_params)
  return search_url_post_params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchEngineSpecifics::release_search_url_post_params() {
  // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.search_url_post_params)
  clear_has_search_url_post_params();
  return search_url_post_params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchEngineSpecifics::set_allocated_search_url_post_params(::std::string* search_url_post_params) {
  if (search_url_post_params != NULL) {
    set_has_search_url_post_params();
  } else {
    clear_has_search_url_post_params();
  }
  search_url_post_params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_url_post_params);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.search_url_post_params)
}

// optional string suggestions_url_post_params = 23;
bool SearchEngineSpecifics::has_suggestions_url_post_params() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void SearchEngineSpecifics::set_has_suggestions_url_post_params() {
  _has_bits_[0] |= 0x00001000u;
}
void SearchEngineSpecifics::clear_has_suggestions_url_post_params() {
  _has_bits_[0] &= ~0x00001000u;
}
void SearchEngineSpecifics::clear_suggestions_url_post_params() {
  suggestions_url_post_params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_suggestions_url_post_params();
}
const ::std::string& SearchEngineSpecifics::suggestions_url_post_params() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.suggestions_url_post_params)
  return suggestions_url_post_params_.GetNoArena();
}
void SearchEngineSpecifics::set_suggestions_url_post_params(const ::std::string& value) {
  set_has_suggestions_url_post_params();
  suggestions_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.suggestions_url_post_params)
}
#if LANG_CXX11
void SearchEngineSpecifics::set_suggestions_url_post_params(::std::string&& value) {
  set_has_suggestions_url_post_params();
  suggestions_url_post_params_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.SearchEngineSpecifics.suggestions_url_post_params)
}
#endif
void SearchEngineSpecifics::set_suggestions_url_post_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_suggestions_url_post_params();
  suggestions_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.suggestions_url_post_params)
}
void SearchEngineSpecifics::set_suggestions_url_post_params(const char* value, size_t size) {
  set_has_suggestions_url_post_params();
  suggestions_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.suggestions_url_post_params)
}
::std::string* SearchEngineSpecifics::mutable_suggestions_url_post_params() {
  set_has_suggestions_url_post_params();
  // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.suggestions_url_post_params)
  return suggestions_url_post_params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchEngineSpecifics::release_suggestions_url_post_params() {
  // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.suggestions_url_post_params)
  clear_has_suggestions_url_post_params();
  return suggestions_url_post_params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchEngineSpecifics::set_allocated_suggestions_url_post_params(::std::string* suggestions_url_post_params) {
  if (suggestions_url_post_params != NULL) {
    set_has_suggestions_url_post_params();
  } else {
    clear_has_suggestions_url_post_params();
  }
  suggestions_url_post_params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suggestions_url_post_params);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.suggestions_url_post_params)
}

// optional string instant_url_post_params = 24 [deprecated = true];
bool SearchEngineSpecifics::has_instant_url_post_params() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void SearchEngineSpecifics::set_has_instant_url_post_params() {
  _has_bits_[0] |= 0x00002000u;
}
void SearchEngineSpecifics::clear_has_instant_url_post_params() {
  _has_bits_[0] &= ~0x00002000u;
}
void SearchEngineSpecifics::clear_instant_url_post_params() {
  instant_url_post_params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instant_url_post_params();
}
const ::std::string& SearchEngineSpecifics::instant_url_post_params() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.instant_url_post_params)
  return instant_url_post_params_.GetNoArena();
}
void SearchEngineSpecifics::set_instant_url_post_params(const ::std::string& value) {
  set_has_instant_url_post_params();
  instant_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.instant_url_post_params)
}
#if LANG_CXX11
void SearchEngineSpecifics::set_instant_url_post_params(::std::string&& value) {
  set_has_instant_url_post_params();
  instant_url_post_params_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.SearchEngineSpecifics.instant_url_post_params)
}
#endif
void SearchEngineSpecifics::set_instant_url_post_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_instant_url_post_params();
  instant_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.instant_url_post_params)
}
void SearchEngineSpecifics::set_instant_url_post_params(const char* value, size_t size) {
  set_has_instant_url_post_params();
  instant_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.instant_url_post_params)
}
::std::string* SearchEngineSpecifics::mutable_instant_url_post_params() {
  set_has_instant_url_post_params();
  // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.instant_url_post_params)
  return instant_url_post_params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchEngineSpecifics::release_instant_url_post_params() {
  // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.instant_url_post_params)
  clear_has_instant_url_post_params();
  return instant_url_post_params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchEngineSpecifics::set_allocated_instant_url_post_params(::std::string* instant_url_post_params) {
  if (instant_url_post_params != NULL) {
    set_has_instant_url_post_params();
  } else {
    clear_has_instant_url_post_params();
  }
  instant_url_post_params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instant_url_post_params);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.instant_url_post_params)
}

// optional string image_url_post_params = 25;
bool SearchEngineSpecifics::has_image_url_post_params() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void SearchEngineSpecifics::set_has_image_url_post_params() {
  _has_bits_[0] |= 0x00004000u;
}
void SearchEngineSpecifics::clear_has_image_url_post_params() {
  _has_bits_[0] &= ~0x00004000u;
}
void SearchEngineSpecifics::clear_image_url_post_params() {
  image_url_post_params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_image_url_post_params();
}
const ::std::string& SearchEngineSpecifics::image_url_post_params() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.image_url_post_params)
  return image_url_post_params_.GetNoArena();
}
void SearchEngineSpecifics::set_image_url_post_params(const ::std::string& value) {
  set_has_image_url_post_params();
  image_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.image_url_post_params)
}
#if LANG_CXX11
void SearchEngineSpecifics::set_image_url_post_params(::std::string&& value) {
  set_has_image_url_post_params();
  image_url_post_params_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.SearchEngineSpecifics.image_url_post_params)
}
#endif
void SearchEngineSpecifics::set_image_url_post_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_image_url_post_params();
  image_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.image_url_post_params)
}
void SearchEngineSpecifics::set_image_url_post_params(const char* value, size_t size) {
  set_has_image_url_post_params();
  image_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.image_url_post_params)
}
::std::string* SearchEngineSpecifics::mutable_image_url_post_params() {
  set_has_image_url_post_params();
  // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.image_url_post_params)
  return image_url_post_params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchEngineSpecifics::release_image_url_post_params() {
  // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.image_url_post_params)
  clear_has_image_url_post_params();
  return image_url_post_params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchEngineSpecifics::set_allocated_image_url_post_params(::std::string* image_url_post_params) {
  if (image_url_post_params != NULL) {
    set_has_image_url_post_params();
  } else {
    clear_has_image_url_post_params();
  }
  image_url_post_params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_url_post_params);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.image_url_post_params)
}

// optional string new_tab_url = 26;
bool SearchEngineSpecifics::has_new_tab_url() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void SearchEngineSpecifics::set_has_new_tab_url() {
  _has_bits_[0] |= 0x00008000u;
}
void SearchEngineSpecifics::clear_has_new_tab_url() {
  _has_bits_[0] &= ~0x00008000u;
}
void SearchEngineSpecifics::clear_new_tab_url() {
  new_tab_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_new_tab_url();
}
const ::std::string& SearchEngineSpecifics::new_tab_url() const {
  // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.new_tab_url)
  return new_tab_url_.GetNoArena();
}
void SearchEngineSpecifics::set_new_tab_url(const ::std::string& value) {
  set_has_new_tab_url();
  new_tab_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.new_tab_url)
}
#if LANG_CXX11
void SearchEngineSpecifics::set_new_tab_url(::std::string&& value) {
  set_has_new_tab_url();
  new_tab_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.SearchEngineSpecifics.new_tab_url)
}
#endif
void SearchEngineSpecifics::set_new_tab_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_new_tab_url();
  new_tab_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.new_tab_url)
}
void SearchEngineSpecifics::set_new_tab_url(const char* value, size_t size) {
  set_has_new_tab_url();
  new_tab_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.new_tab_url)
}
::std::string* SearchEngineSpecifics::mutable_new_tab_url() {
  set_has_new_tab_url();
  // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.new_tab_url)
  return new_tab_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchEngineSpecifics::release_new_tab_url() {
  // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.new_tab_url)
  clear_has_new_tab_url();
  return new_tab_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchEngineSpecifics::set_allocated_new_tab_url(::std::string* new_tab_url) {
  if (new_tab_url != NULL) {
    set_has_new_tab_url();
  } else {
    clear_has_new_tab_url();
  }
  new_tab_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_tab_url);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.new_tab_url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)
