// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v4_store.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "v4_store.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace safe_browsing {
class V4StoreFileFormatDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<V4StoreFileFormat> {
} _V4StoreFileFormat_default_instance_;

namespace protobuf_v4_5fstore_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _V4StoreFileFormat_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::safe_browsing::protobuf_safebrowsing_2eproto::InitDefaults();
  _V4StoreFileFormat_default_instance_.DefaultConstruct();
  _V4StoreFileFormat_default_instance_.get_mutable()->list_update_response_ = const_cast< ::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse*>(
      ::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::safe_browsing::protobuf_safebrowsing_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_v4_5fstore_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int V4StoreFileFormat::kMagicNumberFieldNumber;
const int V4StoreFileFormat::kVersionNumberFieldNumber;
const int V4StoreFileFormat::kListUpdateResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

V4StoreFileFormat::V4StoreFileFormat()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_v4_5fstore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:safe_browsing.V4StoreFileFormat)
}
V4StoreFileFormat::V4StoreFileFormat(const V4StoreFileFormat& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_list_update_response()) {
    list_update_response_ = new ::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse(*from.list_update_response_);
  } else {
    list_update_response_ = NULL;
  }
  ::memcpy(&magic_number_, &from.magic_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_number_) -
    reinterpret_cast<char*>(&magic_number_)) + sizeof(version_number_));
  // @@protoc_insertion_point(copy_constructor:safe_browsing.V4StoreFileFormat)
}

void V4StoreFileFormat::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&list_update_response_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_number_) -
      reinterpret_cast<char*>(&list_update_response_)) + sizeof(version_number_));
}

V4StoreFileFormat::~V4StoreFileFormat() {
  // @@protoc_insertion_point(destructor:safe_browsing.V4StoreFileFormat)
  SharedDtor();
}

void V4StoreFileFormat::SharedDtor() {
  if (this != internal_default_instance()) {
    delete list_update_response_;
  }
}

void V4StoreFileFormat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const V4StoreFileFormat& V4StoreFileFormat::default_instance() {
  protobuf_v4_5fstore_2eproto::InitDefaults();
  return *internal_default_instance();
}

V4StoreFileFormat* V4StoreFileFormat::New(::google::protobuf::Arena* arena) const {
  V4StoreFileFormat* n = new V4StoreFileFormat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void V4StoreFileFormat::Clear() {
// @@protoc_insertion_point(message_clear_start:safe_browsing.V4StoreFileFormat)
  if (has_list_update_response()) {
    GOOGLE_DCHECK(list_update_response_ != NULL);
    list_update_response_->::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse::Clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&magic_number_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&version_number_) -
        reinterpret_cast<char*>(&magic_number_)) + sizeof(version_number_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool V4StoreFileFormat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:safe_browsing.V4StoreFileFormat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 magic_number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_magic_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &magic_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 version_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_version_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .safe_browsing.FetchThreatListUpdatesResponse.ListUpdateResponse list_update_response = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_list_update_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:safe_browsing.V4StoreFileFormat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:safe_browsing.V4StoreFileFormat)
  return false;
#undef DO_
}

void V4StoreFileFormat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:safe_browsing.V4StoreFileFormat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 magic_number = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->magic_number(), output);
  }

  // optional uint32 version_number = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version_number(), output);
  }

  // optional .safe_browsing.FetchThreatListUpdatesResponse.ListUpdateResponse list_update_response = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, *this->list_update_response_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:safe_browsing.V4StoreFileFormat)
}

size_t V4StoreFileFormat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safe_browsing.V4StoreFileFormat)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 7u) {
    // optional .safe_browsing.FetchThreatListUpdatesResponse.ListUpdateResponse list_update_response = 3;
    if (has_list_update_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->list_update_response_);
    }

    // optional uint32 magic_number = 1;
    if (has_magic_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->magic_number());
    }

    // optional uint32 version_number = 2;
    if (has_version_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version_number());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void V4StoreFileFormat::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const V4StoreFileFormat*>(&from));
}

void V4StoreFileFormat::MergeFrom(const V4StoreFileFormat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safe_browsing.V4StoreFileFormat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_list_update_response()->::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse::MergeFrom(from.list_update_response());
    }
    if (cached_has_bits & 0x00000002u) {
      magic_number_ = from.magic_number_;
    }
    if (cached_has_bits & 0x00000004u) {
      version_number_ = from.version_number_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void V4StoreFileFormat::CopyFrom(const V4StoreFileFormat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safe_browsing.V4StoreFileFormat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool V4StoreFileFormat::IsInitialized() const {
  return true;
}

void V4StoreFileFormat::Swap(V4StoreFileFormat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void V4StoreFileFormat::InternalSwap(V4StoreFileFormat* other) {
  std::swap(list_update_response_, other->list_update_response_);
  std::swap(magic_number_, other->magic_number_);
  std::swap(version_number_, other->version_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string V4StoreFileFormat::GetTypeName() const {
  return "safe_browsing.V4StoreFileFormat";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// V4StoreFileFormat

// optional uint32 magic_number = 1;
bool V4StoreFileFormat::has_magic_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void V4StoreFileFormat::set_has_magic_number() {
  _has_bits_[0] |= 0x00000002u;
}
void V4StoreFileFormat::clear_has_magic_number() {
  _has_bits_[0] &= ~0x00000002u;
}
void V4StoreFileFormat::clear_magic_number() {
  magic_number_ = 0u;
  clear_has_magic_number();
}
::google::protobuf::uint32 V4StoreFileFormat::magic_number() const {
  // @@protoc_insertion_point(field_get:safe_browsing.V4StoreFileFormat.magic_number)
  return magic_number_;
}
void V4StoreFileFormat::set_magic_number(::google::protobuf::uint32 value) {
  set_has_magic_number();
  magic_number_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.V4StoreFileFormat.magic_number)
}

// optional uint32 version_number = 2;
bool V4StoreFileFormat::has_version_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void V4StoreFileFormat::set_has_version_number() {
  _has_bits_[0] |= 0x00000004u;
}
void V4StoreFileFormat::clear_has_version_number() {
  _has_bits_[0] &= ~0x00000004u;
}
void V4StoreFileFormat::clear_version_number() {
  version_number_ = 0u;
  clear_has_version_number();
}
::google::protobuf::uint32 V4StoreFileFormat::version_number() const {
  // @@protoc_insertion_point(field_get:safe_browsing.V4StoreFileFormat.version_number)
  return version_number_;
}
void V4StoreFileFormat::set_version_number(::google::protobuf::uint32 value) {
  set_has_version_number();
  version_number_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.V4StoreFileFormat.version_number)
}

// optional .safe_browsing.FetchThreatListUpdatesResponse.ListUpdateResponse list_update_response = 3;
bool V4StoreFileFormat::has_list_update_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void V4StoreFileFormat::set_has_list_update_response() {
  _has_bits_[0] |= 0x00000001u;
}
void V4StoreFileFormat::clear_has_list_update_response() {
  _has_bits_[0] &= ~0x00000001u;
}
void V4StoreFileFormat::clear_list_update_response() {
  if (list_update_response_ != NULL) list_update_response_->::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse::Clear();
  clear_has_list_update_response();
}
const ::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse& V4StoreFileFormat::list_update_response() const {
  // @@protoc_insertion_point(field_get:safe_browsing.V4StoreFileFormat.list_update_response)
  return list_update_response_ != NULL ? *list_update_response_
                         : *::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse::internal_default_instance();
}
::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse* V4StoreFileFormat::mutable_list_update_response() {
  set_has_list_update_response();
  if (list_update_response_ == NULL) {
    list_update_response_ = new ::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.V4StoreFileFormat.list_update_response)
  return list_update_response_;
}
::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse* V4StoreFileFormat::release_list_update_response() {
  // @@protoc_insertion_point(field_release:safe_browsing.V4StoreFileFormat.list_update_response)
  clear_has_list_update_response();
  ::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse* temp = list_update_response_;
  list_update_response_ = NULL;
  return temp;
}
void V4StoreFileFormat::set_allocated_list_update_response(::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse* list_update_response) {
  delete list_update_response_;
  list_update_response_ = list_update_response;
  if (list_update_response) {
    set_has_list_update_response();
  } else {
    clear_has_list_update_response();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.V4StoreFileFormat.list_update_response)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace safe_browsing

// @@protoc_insertion_point(global_scope)
