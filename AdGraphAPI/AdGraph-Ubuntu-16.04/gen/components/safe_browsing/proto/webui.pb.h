// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: webui.proto

#ifndef PROTOBUF_webui_2eproto__INCLUDED
#define PROTOBUF_webui_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
namespace safe_browsing {
class DatabaseManagerInfo;
class DatabaseManagerInfoDefaultTypeInternal;
extern DatabaseManagerInfoDefaultTypeInternal _DatabaseManagerInfo_default_instance_;
class DatabaseManagerInfo_DatabaseInfo;
class DatabaseManagerInfo_DatabaseInfoDefaultTypeInternal;
extern DatabaseManagerInfo_DatabaseInfoDefaultTypeInternal _DatabaseManagerInfo_DatabaseInfo_default_instance_;
class DatabaseManagerInfo_DatabaseInfo_StoreInfo;
class DatabaseManagerInfo_DatabaseInfo_StoreInfoDefaultTypeInternal;
extern DatabaseManagerInfo_DatabaseInfo_StoreInfoDefaultTypeInternal _DatabaseManagerInfo_DatabaseInfo_StoreInfo_default_instance_;
class DatabaseManagerInfo_UpdateInfo;
class DatabaseManagerInfo_UpdateInfoDefaultTypeInternal;
extern DatabaseManagerInfo_UpdateInfoDefaultTypeInternal _DatabaseManagerInfo_UpdateInfo_default_instance_;
class FullHashCacheInfo;
class FullHashCacheInfoDefaultTypeInternal;
extern FullHashCacheInfoDefaultTypeInternal _FullHashCacheInfo_default_instance_;
class FullHashCacheInfo_FullHashCache;
class FullHashCacheInfo_FullHashCacheDefaultTypeInternal;
extern FullHashCacheInfo_FullHashCacheDefaultTypeInternal _FullHashCacheInfo_FullHashCache_default_instance_;
class FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo;
class FullHashCacheInfo_FullHashCache_CachedHashPrefixInfoDefaultTypeInternal;
extern FullHashCacheInfo_FullHashCache_CachedHashPrefixInfoDefaultTypeInternal _FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_default_instance_;
class FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo;
class FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfoDefaultTypeInternal;
extern FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfoDefaultTypeInternal _FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_default_instance_;
class FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier;
class FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifierDefaultTypeInternal;
extern FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifierDefaultTypeInternal _FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier_default_instance_;
}  // namespace safe_browsing

namespace safe_browsing {

namespace protobuf_webui_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_webui_2eproto

// ===================================================================

class DatabaseManagerInfo_UpdateInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.DatabaseManagerInfo.UpdateInfo) */ {
 public:
  DatabaseManagerInfo_UpdateInfo();
  virtual ~DatabaseManagerInfo_UpdateInfo();

  DatabaseManagerInfo_UpdateInfo(const DatabaseManagerInfo_UpdateInfo& from);

  inline DatabaseManagerInfo_UpdateInfo& operator=(const DatabaseManagerInfo_UpdateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DatabaseManagerInfo_UpdateInfo& default_instance();

  static inline const DatabaseManagerInfo_UpdateInfo* internal_default_instance() {
    return reinterpret_cast<const DatabaseManagerInfo_UpdateInfo*>(
               &_DatabaseManagerInfo_UpdateInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(DatabaseManagerInfo_UpdateInfo* other);

  // implements Message ----------------------------------------------

  inline DatabaseManagerInfo_UpdateInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DatabaseManagerInfo_UpdateInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DatabaseManagerInfo_UpdateInfo& from);
  void MergeFrom(const DatabaseManagerInfo_UpdateInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DatabaseManagerInfo_UpdateInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 last_update_time_millis = 2;
  bool has_last_update_time_millis() const;
  void clear_last_update_time_millis();
  static const int kLastUpdateTimeMillisFieldNumber = 2;
  ::google::protobuf::uint64 last_update_time_millis() const;
  void set_last_update_time_millis(::google::protobuf::uint64 value);

  // optional int32 network_status_code = 1;
  bool has_network_status_code() const;
  void clear_network_status_code();
  static const int kNetworkStatusCodeFieldNumber = 1;
  ::google::protobuf::int32 network_status_code() const;
  void set_network_status_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.DatabaseManagerInfo.UpdateInfo)
 private:
  void set_has_network_status_code();
  void clear_has_network_status_code();
  void set_has_last_update_time_millis();
  void clear_has_last_update_time_millis();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 last_update_time_millis_;
  ::google::protobuf::int32 network_status_code_;
  friend struct protobuf_webui_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DatabaseManagerInfo_DatabaseInfo_StoreInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo) */ {
 public:
  DatabaseManagerInfo_DatabaseInfo_StoreInfo();
  virtual ~DatabaseManagerInfo_DatabaseInfo_StoreInfo();

  DatabaseManagerInfo_DatabaseInfo_StoreInfo(const DatabaseManagerInfo_DatabaseInfo_StoreInfo& from);

  inline DatabaseManagerInfo_DatabaseInfo_StoreInfo& operator=(const DatabaseManagerInfo_DatabaseInfo_StoreInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DatabaseManagerInfo_DatabaseInfo_StoreInfo& default_instance();

  static inline const DatabaseManagerInfo_DatabaseInfo_StoreInfo* internal_default_instance() {
    return reinterpret_cast<const DatabaseManagerInfo_DatabaseInfo_StoreInfo*>(
               &_DatabaseManagerInfo_DatabaseInfo_StoreInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(DatabaseManagerInfo_DatabaseInfo_StoreInfo* other);

  // implements Message ----------------------------------------------

  inline DatabaseManagerInfo_DatabaseInfo_StoreInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DatabaseManagerInfo_DatabaseInfo_StoreInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DatabaseManagerInfo_DatabaseInfo_StoreInfo& from);
  void MergeFrom(const DatabaseManagerInfo_DatabaseInfo_StoreInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DatabaseManagerInfo_DatabaseInfo_StoreInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string file_name = 1;
  bool has_file_name() const;
  void clear_file_name();
  static const int kFileNameFieldNumber = 1;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_name(::std::string&& value);
  #endif
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // optional int64 file_size_bytes = 2;
  bool has_file_size_bytes() const;
  void clear_file_size_bytes();
  static const int kFileSizeBytesFieldNumber = 2;
  ::google::protobuf::int64 file_size_bytes() const;
  void set_file_size_bytes(::google::protobuf::int64 value);

  // optional uint64 last_apply_update_time_millis = 4;
  bool has_last_apply_update_time_millis() const;
  void clear_last_apply_update_time_millis();
  static const int kLastApplyUpdateTimeMillisFieldNumber = 4;
  ::google::protobuf::uint64 last_apply_update_time_millis() const;
  void set_last_apply_update_time_millis(::google::protobuf::uint64 value);

  // optional int32 update_status = 3;
  bool has_update_status() const;
  void clear_update_status();
  static const int kUpdateStatusFieldNumber = 3;
  ::google::protobuf::int32 update_status() const;
  void set_update_status(::google::protobuf::int32 value);

  // optional uint32 checks_attempted = 5;
  bool has_checks_attempted() const;
  void clear_checks_attempted();
  static const int kChecksAttemptedFieldNumber = 5;
  ::google::protobuf::uint32 checks_attempted() const;
  void set_checks_attempted(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo)
 private:
  void set_has_file_name();
  void clear_has_file_name();
  void set_has_file_size_bytes();
  void clear_has_file_size_bytes();
  void set_has_update_status();
  void clear_has_update_status();
  void set_has_last_apply_update_time_millis();
  void clear_has_last_apply_update_time_millis();
  void set_has_checks_attempted();
  void clear_has_checks_attempted();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  ::google::protobuf::int64 file_size_bytes_;
  ::google::protobuf::uint64 last_apply_update_time_millis_;
  ::google::protobuf::int32 update_status_;
  ::google::protobuf::uint32 checks_attempted_;
  friend struct protobuf_webui_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DatabaseManagerInfo_DatabaseInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.DatabaseManagerInfo.DatabaseInfo) */ {
 public:
  DatabaseManagerInfo_DatabaseInfo();
  virtual ~DatabaseManagerInfo_DatabaseInfo();

  DatabaseManagerInfo_DatabaseInfo(const DatabaseManagerInfo_DatabaseInfo& from);

  inline DatabaseManagerInfo_DatabaseInfo& operator=(const DatabaseManagerInfo_DatabaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DatabaseManagerInfo_DatabaseInfo& default_instance();

  static inline const DatabaseManagerInfo_DatabaseInfo* internal_default_instance() {
    return reinterpret_cast<const DatabaseManagerInfo_DatabaseInfo*>(
               &_DatabaseManagerInfo_DatabaseInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(DatabaseManagerInfo_DatabaseInfo* other);

  // implements Message ----------------------------------------------

  inline DatabaseManagerInfo_DatabaseInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DatabaseManagerInfo_DatabaseInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DatabaseManagerInfo_DatabaseInfo& from);
  void MergeFrom(const DatabaseManagerInfo_DatabaseInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DatabaseManagerInfo_DatabaseInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DatabaseManagerInfo_DatabaseInfo_StoreInfo StoreInfo;

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo store_info = 3;
  int store_info_size() const;
  void clear_store_info();
  static const int kStoreInfoFieldNumber = 3;
  const ::safe_browsing::DatabaseManagerInfo_DatabaseInfo_StoreInfo& store_info(int index) const;
  ::safe_browsing::DatabaseManagerInfo_DatabaseInfo_StoreInfo* mutable_store_info(int index);
  ::safe_browsing::DatabaseManagerInfo_DatabaseInfo_StoreInfo* add_store_info();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::DatabaseManagerInfo_DatabaseInfo_StoreInfo >*
      mutable_store_info();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::DatabaseManagerInfo_DatabaseInfo_StoreInfo >&
      store_info() const;

  // optional uint64 database_size_bytes = 2;
  bool has_database_size_bytes() const;
  void clear_database_size_bytes();
  static const int kDatabaseSizeBytesFieldNumber = 2;
  ::google::protobuf::uint64 database_size_bytes() const;
  void set_database_size_bytes(::google::protobuf::uint64 value);

  // optional bool update_successful = 1;
  bool has_update_successful() const;
  void clear_update_successful();
  static const int kUpdateSuccessfulFieldNumber = 1;
  bool update_successful() const;
  void set_update_successful(bool value);

  // @@protoc_insertion_point(class_scope:safe_browsing.DatabaseManagerInfo.DatabaseInfo)
 private:
  void set_has_update_successful();
  void clear_has_update_successful();
  void set_has_database_size_bytes();
  void clear_has_database_size_bytes();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::DatabaseManagerInfo_DatabaseInfo_StoreInfo > store_info_;
  ::google::protobuf::uint64 database_size_bytes_;
  bool update_successful_;
  friend struct protobuf_webui_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DatabaseManagerInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.DatabaseManagerInfo) */ {
 public:
  DatabaseManagerInfo();
  virtual ~DatabaseManagerInfo();

  DatabaseManagerInfo(const DatabaseManagerInfo& from);

  inline DatabaseManagerInfo& operator=(const DatabaseManagerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DatabaseManagerInfo& default_instance();

  static inline const DatabaseManagerInfo* internal_default_instance() {
    return reinterpret_cast<const DatabaseManagerInfo*>(
               &_DatabaseManagerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(DatabaseManagerInfo* other);

  // implements Message ----------------------------------------------

  inline DatabaseManagerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DatabaseManagerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DatabaseManagerInfo& from);
  void MergeFrom(const DatabaseManagerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DatabaseManagerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DatabaseManagerInfo_UpdateInfo UpdateInfo;
  typedef DatabaseManagerInfo_DatabaseInfo DatabaseInfo;

  // accessors -------------------------------------------------------

  // optional .safe_browsing.DatabaseManagerInfo.UpdateInfo update_info = 1;
  bool has_update_info() const;
  void clear_update_info();
  static const int kUpdateInfoFieldNumber = 1;
  const ::safe_browsing::DatabaseManagerInfo_UpdateInfo& update_info() const;
  ::safe_browsing::DatabaseManagerInfo_UpdateInfo* mutable_update_info();
  ::safe_browsing::DatabaseManagerInfo_UpdateInfo* release_update_info();
  void set_allocated_update_info(::safe_browsing::DatabaseManagerInfo_UpdateInfo* update_info);

  // optional .safe_browsing.DatabaseManagerInfo.DatabaseInfo database_info = 2;
  bool has_database_info() const;
  void clear_database_info();
  static const int kDatabaseInfoFieldNumber = 2;
  const ::safe_browsing::DatabaseManagerInfo_DatabaseInfo& database_info() const;
  ::safe_browsing::DatabaseManagerInfo_DatabaseInfo* mutable_database_info();
  ::safe_browsing::DatabaseManagerInfo_DatabaseInfo* release_database_info();
  void set_allocated_database_info(::safe_browsing::DatabaseManagerInfo_DatabaseInfo* database_info);

  // @@protoc_insertion_point(class_scope:safe_browsing.DatabaseManagerInfo)
 private:
  void set_has_update_info();
  void clear_has_update_info();
  void set_has_database_info();
  void clear_has_database_info();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::safe_browsing::DatabaseManagerInfo_UpdateInfo* update_info_;
  ::safe_browsing::DatabaseManagerInfo_DatabaseInfo* database_info_;
  friend struct protobuf_webui_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.ListIdentifier) */ {
 public:
  FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier();
  virtual ~FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier();

  FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier(const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier& from);

  inline FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier& operator=(const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier& default_instance();

  static inline const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier* internal_default_instance() {
    return reinterpret_cast<const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier*>(
               &_FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier* other);

  // implements Message ----------------------------------------------

  inline FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier* New() const PROTOBUF_FINAL { return New(NULL); }

  FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier& from);
  void MergeFrom(const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 platform_type = 1;
  bool has_platform_type() const;
  void clear_platform_type();
  static const int kPlatformTypeFieldNumber = 1;
  ::google::protobuf::int32 platform_type() const;
  void set_platform_type(::google::protobuf::int32 value);

  // optional int32 threat_entry_type = 2;
  bool has_threat_entry_type() const;
  void clear_threat_entry_type();
  static const int kThreatEntryTypeFieldNumber = 2;
  ::google::protobuf::int32 threat_entry_type() const;
  void set_threat_entry_type(::google::protobuf::int32 value);

  // optional int32 threat_type = 3;
  bool has_threat_type() const;
  void clear_threat_type();
  static const int kThreatTypeFieldNumber = 3;
  ::google::protobuf::int32 threat_type() const;
  void set_threat_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.ListIdentifier)
 private:
  void set_has_platform_type();
  void clear_has_platform_type();
  void set_has_threat_entry_type();
  void clear_has_threat_entry_type();
  void set_has_threat_type();
  void clear_has_threat_type();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 platform_type_;
  ::google::protobuf::int32 threat_entry_type_;
  ::google::protobuf::int32 threat_type_;
  friend struct protobuf_webui_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo) */ {
 public:
  FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo();
  virtual ~FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo();

  FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo(const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo& from);

  inline FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo& operator=(const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo& default_instance();

  static inline const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo* internal_default_instance() {
    return reinterpret_cast<const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo*>(
               &_FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo* other);

  // implements Message ----------------------------------------------

  inline FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo& from);
  void MergeFrom(const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier ListIdentifier;

  // accessors -------------------------------------------------------

  // optional string full_hash = 2;
  bool has_full_hash() const;
  void clear_full_hash();
  static const int kFullHashFieldNumber = 2;
  const ::std::string& full_hash() const;
  void set_full_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_full_hash(::std::string&& value);
  #endif
  void set_full_hash(const char* value);
  void set_full_hash(const char* value, size_t size);
  ::std::string* mutable_full_hash();
  ::std::string* release_full_hash();
  void set_allocated_full_hash(::std::string* full_hash);

  // optional .safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.ListIdentifier list_identifier = 3;
  bool has_list_identifier() const;
  void clear_list_identifier();
  static const int kListIdentifierFieldNumber = 3;
  const ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier& list_identifier() const;
  ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier* mutable_list_identifier();
  ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier* release_list_identifier();
  void set_allocated_list_identifier(::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier* list_identifier);

  // optional int64 positive_expiry = 1;
  bool has_positive_expiry() const;
  void clear_positive_expiry();
  static const int kPositiveExpiryFieldNumber = 1;
  ::google::protobuf::int64 positive_expiry() const;
  void set_positive_expiry(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo)
 private:
  void set_has_positive_expiry();
  void clear_has_positive_expiry();
  void set_has_full_hash();
  void clear_has_full_hash();
  void set_has_list_identifier();
  void clear_has_list_identifier();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr full_hash_;
  ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier* list_identifier_;
  ::google::protobuf::int64 positive_expiry_;
  friend struct protobuf_webui_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo) */ {
 public:
  FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo();
  virtual ~FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo();

  FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo(const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo& from);

  inline FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo& operator=(const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo& default_instance();

  static inline const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo* internal_default_instance() {
    return reinterpret_cast<const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo*>(
               &_FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo* other);

  // implements Message ----------------------------------------------

  inline FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo& from);
  void MergeFrom(const FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo FullHashInfo;

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo full_hash_info = 2;
  int full_hash_info_size() const;
  void clear_full_hash_info();
  static const int kFullHashInfoFieldNumber = 2;
  const ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo& full_hash_info(int index) const;
  ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo* mutable_full_hash_info(int index);
  ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo* add_full_hash_info();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo >*
      mutable_full_hash_info();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo >&
      full_hash_info() const;

  // optional int64 negative_expiry = 1;
  bool has_negative_expiry() const;
  void clear_negative_expiry();
  static const int kNegativeExpiryFieldNumber = 1;
  ::google::protobuf::int64 negative_expiry() const;
  void set_negative_expiry(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo)
 private:
  void set_has_negative_expiry();
  void clear_has_negative_expiry();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo > full_hash_info_;
  ::google::protobuf::int64 negative_expiry_;
  friend struct protobuf_webui_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FullHashCacheInfo_FullHashCache : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.FullHashCacheInfo.FullHashCache) */ {
 public:
  FullHashCacheInfo_FullHashCache();
  virtual ~FullHashCacheInfo_FullHashCache();

  FullHashCacheInfo_FullHashCache(const FullHashCacheInfo_FullHashCache& from);

  inline FullHashCacheInfo_FullHashCache& operator=(const FullHashCacheInfo_FullHashCache& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const FullHashCacheInfo_FullHashCache& default_instance();

  static inline const FullHashCacheInfo_FullHashCache* internal_default_instance() {
    return reinterpret_cast<const FullHashCacheInfo_FullHashCache*>(
               &_FullHashCacheInfo_FullHashCache_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(FullHashCacheInfo_FullHashCache* other);

  // implements Message ----------------------------------------------

  inline FullHashCacheInfo_FullHashCache* New() const PROTOBUF_FINAL { return New(NULL); }

  FullHashCacheInfo_FullHashCache* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const FullHashCacheInfo_FullHashCache& from);
  void MergeFrom(const FullHashCacheInfo_FullHashCache& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FullHashCacheInfo_FullHashCache* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo CachedHashPrefixInfo;

  // accessors -------------------------------------------------------

  // optional string hash_prefix = 1;
  bool has_hash_prefix() const;
  void clear_hash_prefix();
  static const int kHashPrefixFieldNumber = 1;
  const ::std::string& hash_prefix() const;
  void set_hash_prefix(const ::std::string& value);
  #if LANG_CXX11
  void set_hash_prefix(::std::string&& value);
  #endif
  void set_hash_prefix(const char* value);
  void set_hash_prefix(const char* value, size_t size);
  ::std::string* mutable_hash_prefix();
  ::std::string* release_hash_prefix();
  void set_allocated_hash_prefix(::std::string* hash_prefix);

  // optional .safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo cached_hash_prefix_info = 2;
  bool has_cached_hash_prefix_info() const;
  void clear_cached_hash_prefix_info();
  static const int kCachedHashPrefixInfoFieldNumber = 2;
  const ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo& cached_hash_prefix_info() const;
  ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo* mutable_cached_hash_prefix_info();
  ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo* release_cached_hash_prefix_info();
  void set_allocated_cached_hash_prefix_info(::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo* cached_hash_prefix_info);

  // @@protoc_insertion_point(class_scope:safe_browsing.FullHashCacheInfo.FullHashCache)
 private:
  void set_has_hash_prefix();
  void clear_has_hash_prefix();
  void set_has_cached_hash_prefix_info();
  void clear_has_cached_hash_prefix_info();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr hash_prefix_;
  ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo* cached_hash_prefix_info_;
  friend struct protobuf_webui_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FullHashCacheInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.FullHashCacheInfo) */ {
 public:
  FullHashCacheInfo();
  virtual ~FullHashCacheInfo();

  FullHashCacheInfo(const FullHashCacheInfo& from);

  inline FullHashCacheInfo& operator=(const FullHashCacheInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const FullHashCacheInfo& default_instance();

  static inline const FullHashCacheInfo* internal_default_instance() {
    return reinterpret_cast<const FullHashCacheInfo*>(
               &_FullHashCacheInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(FullHashCacheInfo* other);

  // implements Message ----------------------------------------------

  inline FullHashCacheInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FullHashCacheInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const FullHashCacheInfo& from);
  void MergeFrom(const FullHashCacheInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FullHashCacheInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FullHashCacheInfo_FullHashCache FullHashCache;

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.FullHashCacheInfo.FullHashCache full_hash_cache = 2;
  int full_hash_cache_size() const;
  void clear_full_hash_cache();
  static const int kFullHashCacheFieldNumber = 2;
  const ::safe_browsing::FullHashCacheInfo_FullHashCache& full_hash_cache(int index) const;
  ::safe_browsing::FullHashCacheInfo_FullHashCache* mutable_full_hash_cache(int index);
  ::safe_browsing::FullHashCacheInfo_FullHashCache* add_full_hash_cache();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::FullHashCacheInfo_FullHashCache >*
      mutable_full_hash_cache();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::FullHashCacheInfo_FullHashCache >&
      full_hash_cache() const;

  // optional int32 number_of_hits = 1;
  bool has_number_of_hits() const;
  void clear_number_of_hits();
  static const int kNumberOfHitsFieldNumber = 1;
  ::google::protobuf::int32 number_of_hits() const;
  void set_number_of_hits(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.FullHashCacheInfo)
 private:
  void set_has_number_of_hits();
  void clear_has_number_of_hits();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::FullHashCacheInfo_FullHashCache > full_hash_cache_;
  ::google::protobuf::int32 number_of_hits_;
  friend struct protobuf_webui_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DatabaseManagerInfo_UpdateInfo

// optional int32 network_status_code = 1;
inline bool DatabaseManagerInfo_UpdateInfo::has_network_status_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DatabaseManagerInfo_UpdateInfo::set_has_network_status_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DatabaseManagerInfo_UpdateInfo::clear_has_network_status_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DatabaseManagerInfo_UpdateInfo::clear_network_status_code() {
  network_status_code_ = 0;
  clear_has_network_status_code();
}
inline ::google::protobuf::int32 DatabaseManagerInfo_UpdateInfo::network_status_code() const {
  // @@protoc_insertion_point(field_get:safe_browsing.DatabaseManagerInfo.UpdateInfo.network_status_code)
  return network_status_code_;
}
inline void DatabaseManagerInfo_UpdateInfo::set_network_status_code(::google::protobuf::int32 value) {
  set_has_network_status_code();
  network_status_code_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.DatabaseManagerInfo.UpdateInfo.network_status_code)
}

// optional uint64 last_update_time_millis = 2;
inline bool DatabaseManagerInfo_UpdateInfo::has_last_update_time_millis() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DatabaseManagerInfo_UpdateInfo::set_has_last_update_time_millis() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DatabaseManagerInfo_UpdateInfo::clear_has_last_update_time_millis() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DatabaseManagerInfo_UpdateInfo::clear_last_update_time_millis() {
  last_update_time_millis_ = GOOGLE_ULONGLONG(0);
  clear_has_last_update_time_millis();
}
inline ::google::protobuf::uint64 DatabaseManagerInfo_UpdateInfo::last_update_time_millis() const {
  // @@protoc_insertion_point(field_get:safe_browsing.DatabaseManagerInfo.UpdateInfo.last_update_time_millis)
  return last_update_time_millis_;
}
inline void DatabaseManagerInfo_UpdateInfo::set_last_update_time_millis(::google::protobuf::uint64 value) {
  set_has_last_update_time_millis();
  last_update_time_millis_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.DatabaseManagerInfo.UpdateInfo.last_update_time_millis)
}

// -------------------------------------------------------------------

// DatabaseManagerInfo_DatabaseInfo_StoreInfo

// optional string file_name = 1;
inline bool DatabaseManagerInfo_DatabaseInfo_StoreInfo::has_file_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::set_has_file_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::clear_has_file_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_name();
}
inline const ::std::string& DatabaseManagerInfo_DatabaseInfo_StoreInfo::file_name() const {
  // @@protoc_insertion_point(field_get:safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo.file_name)
  return file_name_.GetNoArena();
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::set_file_name(const ::std::string& value) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo.file_name)
}
#if LANG_CXX11
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::set_file_name(::std::string&& value) {
  set_has_file_name();
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo.file_name)
}
#endif
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo.file_name)
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::set_file_name(const char* value, size_t size) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo.file_name)
}
inline ::std::string* DatabaseManagerInfo_DatabaseInfo_StoreInfo::mutable_file_name() {
  set_has_file_name();
  // @@protoc_insertion_point(field_mutable:safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DatabaseManagerInfo_DatabaseInfo_StoreInfo::release_file_name() {
  // @@protoc_insertion_point(field_release:safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo.file_name)
  clear_has_file_name();
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    set_has_file_name();
  } else {
    clear_has_file_name();
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo.file_name)
}

// optional int64 file_size_bytes = 2;
inline bool DatabaseManagerInfo_DatabaseInfo_StoreInfo::has_file_size_bytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::set_has_file_size_bytes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::clear_has_file_size_bytes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::clear_file_size_bytes() {
  file_size_bytes_ = GOOGLE_LONGLONG(0);
  clear_has_file_size_bytes();
}
inline ::google::protobuf::int64 DatabaseManagerInfo_DatabaseInfo_StoreInfo::file_size_bytes() const {
  // @@protoc_insertion_point(field_get:safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo.file_size_bytes)
  return file_size_bytes_;
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::set_file_size_bytes(::google::protobuf::int64 value) {
  set_has_file_size_bytes();
  file_size_bytes_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo.file_size_bytes)
}

// optional int32 update_status = 3;
inline bool DatabaseManagerInfo_DatabaseInfo_StoreInfo::has_update_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::set_has_update_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::clear_has_update_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::clear_update_status() {
  update_status_ = 0;
  clear_has_update_status();
}
inline ::google::protobuf::int32 DatabaseManagerInfo_DatabaseInfo_StoreInfo::update_status() const {
  // @@protoc_insertion_point(field_get:safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo.update_status)
  return update_status_;
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::set_update_status(::google::protobuf::int32 value) {
  set_has_update_status();
  update_status_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo.update_status)
}

// optional uint64 last_apply_update_time_millis = 4;
inline bool DatabaseManagerInfo_DatabaseInfo_StoreInfo::has_last_apply_update_time_millis() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::set_has_last_apply_update_time_millis() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::clear_has_last_apply_update_time_millis() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::clear_last_apply_update_time_millis() {
  last_apply_update_time_millis_ = GOOGLE_ULONGLONG(0);
  clear_has_last_apply_update_time_millis();
}
inline ::google::protobuf::uint64 DatabaseManagerInfo_DatabaseInfo_StoreInfo::last_apply_update_time_millis() const {
  // @@protoc_insertion_point(field_get:safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo.last_apply_update_time_millis)
  return last_apply_update_time_millis_;
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::set_last_apply_update_time_millis(::google::protobuf::uint64 value) {
  set_has_last_apply_update_time_millis();
  last_apply_update_time_millis_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo.last_apply_update_time_millis)
}

// optional uint32 checks_attempted = 5;
inline bool DatabaseManagerInfo_DatabaseInfo_StoreInfo::has_checks_attempted() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::set_has_checks_attempted() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::clear_has_checks_attempted() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::clear_checks_attempted() {
  checks_attempted_ = 0u;
  clear_has_checks_attempted();
}
inline ::google::protobuf::uint32 DatabaseManagerInfo_DatabaseInfo_StoreInfo::checks_attempted() const {
  // @@protoc_insertion_point(field_get:safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo.checks_attempted)
  return checks_attempted_;
}
inline void DatabaseManagerInfo_DatabaseInfo_StoreInfo::set_checks_attempted(::google::protobuf::uint32 value) {
  set_has_checks_attempted();
  checks_attempted_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo.checks_attempted)
}

// -------------------------------------------------------------------

// DatabaseManagerInfo_DatabaseInfo

// optional bool update_successful = 1;
inline bool DatabaseManagerInfo_DatabaseInfo::has_update_successful() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DatabaseManagerInfo_DatabaseInfo::set_has_update_successful() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DatabaseManagerInfo_DatabaseInfo::clear_has_update_successful() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DatabaseManagerInfo_DatabaseInfo::clear_update_successful() {
  update_successful_ = false;
  clear_has_update_successful();
}
inline bool DatabaseManagerInfo_DatabaseInfo::update_successful() const {
  // @@protoc_insertion_point(field_get:safe_browsing.DatabaseManagerInfo.DatabaseInfo.update_successful)
  return update_successful_;
}
inline void DatabaseManagerInfo_DatabaseInfo::set_update_successful(bool value) {
  set_has_update_successful();
  update_successful_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.DatabaseManagerInfo.DatabaseInfo.update_successful)
}

// optional uint64 database_size_bytes = 2;
inline bool DatabaseManagerInfo_DatabaseInfo::has_database_size_bytes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DatabaseManagerInfo_DatabaseInfo::set_has_database_size_bytes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DatabaseManagerInfo_DatabaseInfo::clear_has_database_size_bytes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DatabaseManagerInfo_DatabaseInfo::clear_database_size_bytes() {
  database_size_bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_database_size_bytes();
}
inline ::google::protobuf::uint64 DatabaseManagerInfo_DatabaseInfo::database_size_bytes() const {
  // @@protoc_insertion_point(field_get:safe_browsing.DatabaseManagerInfo.DatabaseInfo.database_size_bytes)
  return database_size_bytes_;
}
inline void DatabaseManagerInfo_DatabaseInfo::set_database_size_bytes(::google::protobuf::uint64 value) {
  set_has_database_size_bytes();
  database_size_bytes_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.DatabaseManagerInfo.DatabaseInfo.database_size_bytes)
}

// repeated .safe_browsing.DatabaseManagerInfo.DatabaseInfo.StoreInfo store_info = 3;
inline int DatabaseManagerInfo_DatabaseInfo::store_info_size() const {
  return store_info_.size();
}
inline void DatabaseManagerInfo_DatabaseInfo::clear_store_info() {
  store_info_.Clear();
}
inline const ::safe_browsing::DatabaseManagerInfo_DatabaseInfo_StoreInfo& DatabaseManagerInfo_DatabaseInfo::store_info(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.DatabaseManagerInfo.DatabaseInfo.store_info)
  return store_info_.Get(index);
}
inline ::safe_browsing::DatabaseManagerInfo_DatabaseInfo_StoreInfo* DatabaseManagerInfo_DatabaseInfo::mutable_store_info(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.DatabaseManagerInfo.DatabaseInfo.store_info)
  return store_info_.Mutable(index);
}
inline ::safe_browsing::DatabaseManagerInfo_DatabaseInfo_StoreInfo* DatabaseManagerInfo_DatabaseInfo::add_store_info() {
  // @@protoc_insertion_point(field_add:safe_browsing.DatabaseManagerInfo.DatabaseInfo.store_info)
  return store_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::DatabaseManagerInfo_DatabaseInfo_StoreInfo >*
DatabaseManagerInfo_DatabaseInfo::mutable_store_info() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.DatabaseManagerInfo.DatabaseInfo.store_info)
  return &store_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::DatabaseManagerInfo_DatabaseInfo_StoreInfo >&
DatabaseManagerInfo_DatabaseInfo::store_info() const {
  // @@protoc_insertion_point(field_list:safe_browsing.DatabaseManagerInfo.DatabaseInfo.store_info)
  return store_info_;
}

// -------------------------------------------------------------------

// DatabaseManagerInfo

// optional .safe_browsing.DatabaseManagerInfo.UpdateInfo update_info = 1;
inline bool DatabaseManagerInfo::has_update_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DatabaseManagerInfo::set_has_update_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DatabaseManagerInfo::clear_has_update_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DatabaseManagerInfo::clear_update_info() {
  if (update_info_ != NULL) update_info_->::safe_browsing::DatabaseManagerInfo_UpdateInfo::Clear();
  clear_has_update_info();
}
inline const ::safe_browsing::DatabaseManagerInfo_UpdateInfo& DatabaseManagerInfo::update_info() const {
  // @@protoc_insertion_point(field_get:safe_browsing.DatabaseManagerInfo.update_info)
  return update_info_ != NULL ? *update_info_
                         : *::safe_browsing::DatabaseManagerInfo_UpdateInfo::internal_default_instance();
}
inline ::safe_browsing::DatabaseManagerInfo_UpdateInfo* DatabaseManagerInfo::mutable_update_info() {
  set_has_update_info();
  if (update_info_ == NULL) {
    update_info_ = new ::safe_browsing::DatabaseManagerInfo_UpdateInfo;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.DatabaseManagerInfo.update_info)
  return update_info_;
}
inline ::safe_browsing::DatabaseManagerInfo_UpdateInfo* DatabaseManagerInfo::release_update_info() {
  // @@protoc_insertion_point(field_release:safe_browsing.DatabaseManagerInfo.update_info)
  clear_has_update_info();
  ::safe_browsing::DatabaseManagerInfo_UpdateInfo* temp = update_info_;
  update_info_ = NULL;
  return temp;
}
inline void DatabaseManagerInfo::set_allocated_update_info(::safe_browsing::DatabaseManagerInfo_UpdateInfo* update_info) {
  delete update_info_;
  update_info_ = update_info;
  if (update_info) {
    set_has_update_info();
  } else {
    clear_has_update_info();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.DatabaseManagerInfo.update_info)
}

// optional .safe_browsing.DatabaseManagerInfo.DatabaseInfo database_info = 2;
inline bool DatabaseManagerInfo::has_database_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DatabaseManagerInfo::set_has_database_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DatabaseManagerInfo::clear_has_database_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DatabaseManagerInfo::clear_database_info() {
  if (database_info_ != NULL) database_info_->::safe_browsing::DatabaseManagerInfo_DatabaseInfo::Clear();
  clear_has_database_info();
}
inline const ::safe_browsing::DatabaseManagerInfo_DatabaseInfo& DatabaseManagerInfo::database_info() const {
  // @@protoc_insertion_point(field_get:safe_browsing.DatabaseManagerInfo.database_info)
  return database_info_ != NULL ? *database_info_
                         : *::safe_browsing::DatabaseManagerInfo_DatabaseInfo::internal_default_instance();
}
inline ::safe_browsing::DatabaseManagerInfo_DatabaseInfo* DatabaseManagerInfo::mutable_database_info() {
  set_has_database_info();
  if (database_info_ == NULL) {
    database_info_ = new ::safe_browsing::DatabaseManagerInfo_DatabaseInfo;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.DatabaseManagerInfo.database_info)
  return database_info_;
}
inline ::safe_browsing::DatabaseManagerInfo_DatabaseInfo* DatabaseManagerInfo::release_database_info() {
  // @@protoc_insertion_point(field_release:safe_browsing.DatabaseManagerInfo.database_info)
  clear_has_database_info();
  ::safe_browsing::DatabaseManagerInfo_DatabaseInfo* temp = database_info_;
  database_info_ = NULL;
  return temp;
}
inline void DatabaseManagerInfo::set_allocated_database_info(::safe_browsing::DatabaseManagerInfo_DatabaseInfo* database_info) {
  delete database_info_;
  database_info_ = database_info;
  if (database_info) {
    set_has_database_info();
  } else {
    clear_has_database_info();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.DatabaseManagerInfo.database_info)
}

// -------------------------------------------------------------------

// FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier

// optional int32 platform_type = 1;
inline bool FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::has_platform_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::set_has_platform_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::clear_has_platform_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::clear_platform_type() {
  platform_type_ = 0;
  clear_has_platform_type();
}
inline ::google::protobuf::int32 FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::platform_type() const {
  // @@protoc_insertion_point(field_get:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.ListIdentifier.platform_type)
  return platform_type_;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::set_platform_type(::google::protobuf::int32 value) {
  set_has_platform_type();
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.ListIdentifier.platform_type)
}

// optional int32 threat_entry_type = 2;
inline bool FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::has_threat_entry_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::set_has_threat_entry_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::clear_has_threat_entry_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::clear_threat_entry_type() {
  threat_entry_type_ = 0;
  clear_has_threat_entry_type();
}
inline ::google::protobuf::int32 FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::threat_entry_type() const {
  // @@protoc_insertion_point(field_get:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.ListIdentifier.threat_entry_type)
  return threat_entry_type_;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::set_threat_entry_type(::google::protobuf::int32 value) {
  set_has_threat_entry_type();
  threat_entry_type_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.ListIdentifier.threat_entry_type)
}

// optional int32 threat_type = 3;
inline bool FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::has_threat_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::set_has_threat_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::clear_has_threat_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::clear_threat_type() {
  threat_type_ = 0;
  clear_has_threat_type();
}
inline ::google::protobuf::int32 FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::threat_type() const {
  // @@protoc_insertion_point(field_get:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.ListIdentifier.threat_type)
  return threat_type_;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::set_threat_type(::google::protobuf::int32 value) {
  set_has_threat_type();
  threat_type_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.ListIdentifier.threat_type)
}

// -------------------------------------------------------------------

// FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo

// optional int64 positive_expiry = 1;
inline bool FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::has_positive_expiry() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::set_has_positive_expiry() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::clear_has_positive_expiry() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::clear_positive_expiry() {
  positive_expiry_ = GOOGLE_LONGLONG(0);
  clear_has_positive_expiry();
}
inline ::google::protobuf::int64 FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::positive_expiry() const {
  // @@protoc_insertion_point(field_get:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.positive_expiry)
  return positive_expiry_;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::set_positive_expiry(::google::protobuf::int64 value) {
  set_has_positive_expiry();
  positive_expiry_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.positive_expiry)
}

// optional string full_hash = 2;
inline bool FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::has_full_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::set_has_full_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::clear_has_full_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::clear_full_hash() {
  full_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_full_hash();
}
inline const ::std::string& FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::full_hash() const {
  // @@protoc_insertion_point(field_get:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.full_hash)
  return full_hash_.GetNoArena();
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::set_full_hash(const ::std::string& value) {
  set_has_full_hash();
  full_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.full_hash)
}
#if LANG_CXX11
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::set_full_hash(::std::string&& value) {
  set_has_full_hash();
  full_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.full_hash)
}
#endif
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::set_full_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_full_hash();
  full_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.full_hash)
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::set_full_hash(const char* value, size_t size) {
  set_has_full_hash();
  full_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.full_hash)
}
inline ::std::string* FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::mutable_full_hash() {
  set_has_full_hash();
  // @@protoc_insertion_point(field_mutable:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.full_hash)
  return full_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::release_full_hash() {
  // @@protoc_insertion_point(field_release:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.full_hash)
  clear_has_full_hash();
  return full_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::set_allocated_full_hash(::std::string* full_hash) {
  if (full_hash != NULL) {
    set_has_full_hash();
  } else {
    clear_has_full_hash();
  }
  full_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), full_hash);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.full_hash)
}

// optional .safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.ListIdentifier list_identifier = 3;
inline bool FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::has_list_identifier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::set_has_list_identifier() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::clear_has_list_identifier() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::clear_list_identifier() {
  if (list_identifier_ != NULL) list_identifier_->::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::Clear();
  clear_has_list_identifier();
}
inline const ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier& FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::list_identifier() const {
  // @@protoc_insertion_point(field_get:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.list_identifier)
  return list_identifier_ != NULL ? *list_identifier_
                         : *::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier::internal_default_instance();
}
inline ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier* FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::mutable_list_identifier() {
  set_has_list_identifier();
  if (list_identifier_ == NULL) {
    list_identifier_ = new ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.list_identifier)
  return list_identifier_;
}
inline ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier* FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::release_list_identifier() {
  // @@protoc_insertion_point(field_release:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.list_identifier)
  clear_has_list_identifier();
  ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier* temp = list_identifier_;
  list_identifier_ = NULL;
  return temp;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo::set_allocated_list_identifier(::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo_ListIdentifier* list_identifier) {
  delete list_identifier_;
  list_identifier_ = list_identifier;
  if (list_identifier) {
    set_has_list_identifier();
  } else {
    clear_has_list_identifier();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo.list_identifier)
}

// -------------------------------------------------------------------

// FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo

// optional int64 negative_expiry = 1;
inline bool FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo::has_negative_expiry() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo::set_has_negative_expiry() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo::clear_has_negative_expiry() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo::clear_negative_expiry() {
  negative_expiry_ = GOOGLE_LONGLONG(0);
  clear_has_negative_expiry();
}
inline ::google::protobuf::int64 FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo::negative_expiry() const {
  // @@protoc_insertion_point(field_get:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.negative_expiry)
  return negative_expiry_;
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo::set_negative_expiry(::google::protobuf::int64 value) {
  set_has_negative_expiry();
  negative_expiry_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.negative_expiry)
}

// repeated .safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.FullHashInfo full_hash_info = 2;
inline int FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo::full_hash_info_size() const {
  return full_hash_info_.size();
}
inline void FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo::clear_full_hash_info() {
  full_hash_info_.Clear();
}
inline const ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo& FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo::full_hash_info(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.full_hash_info)
  return full_hash_info_.Get(index);
}
inline ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo* FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo::mutable_full_hash_info(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.full_hash_info)
  return full_hash_info_.Mutable(index);
}
inline ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo* FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo::add_full_hash_info() {
  // @@protoc_insertion_point(field_add:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.full_hash_info)
  return full_hash_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo >*
FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo::mutable_full_hash_info() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.full_hash_info)
  return &full_hash_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo_FullHashInfo >&
FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo::full_hash_info() const {
  // @@protoc_insertion_point(field_list:safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo.full_hash_info)
  return full_hash_info_;
}

// -------------------------------------------------------------------

// FullHashCacheInfo_FullHashCache

// optional string hash_prefix = 1;
inline bool FullHashCacheInfo_FullHashCache::has_hash_prefix() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FullHashCacheInfo_FullHashCache::set_has_hash_prefix() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FullHashCacheInfo_FullHashCache::clear_has_hash_prefix() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FullHashCacheInfo_FullHashCache::clear_hash_prefix() {
  hash_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hash_prefix();
}
inline const ::std::string& FullHashCacheInfo_FullHashCache::hash_prefix() const {
  // @@protoc_insertion_point(field_get:safe_browsing.FullHashCacheInfo.FullHashCache.hash_prefix)
  return hash_prefix_.GetNoArena();
}
inline void FullHashCacheInfo_FullHashCache::set_hash_prefix(const ::std::string& value) {
  set_has_hash_prefix();
  hash_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.FullHashCacheInfo.FullHashCache.hash_prefix)
}
#if LANG_CXX11
inline void FullHashCacheInfo_FullHashCache::set_hash_prefix(::std::string&& value) {
  set_has_hash_prefix();
  hash_prefix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.FullHashCacheInfo.FullHashCache.hash_prefix)
}
#endif
inline void FullHashCacheInfo_FullHashCache::set_hash_prefix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hash_prefix();
  hash_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.FullHashCacheInfo.FullHashCache.hash_prefix)
}
inline void FullHashCacheInfo_FullHashCache::set_hash_prefix(const char* value, size_t size) {
  set_has_hash_prefix();
  hash_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.FullHashCacheInfo.FullHashCache.hash_prefix)
}
inline ::std::string* FullHashCacheInfo_FullHashCache::mutable_hash_prefix() {
  set_has_hash_prefix();
  // @@protoc_insertion_point(field_mutable:safe_browsing.FullHashCacheInfo.FullHashCache.hash_prefix)
  return hash_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FullHashCacheInfo_FullHashCache::release_hash_prefix() {
  // @@protoc_insertion_point(field_release:safe_browsing.FullHashCacheInfo.FullHashCache.hash_prefix)
  clear_has_hash_prefix();
  return hash_prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FullHashCacheInfo_FullHashCache::set_allocated_hash_prefix(::std::string* hash_prefix) {
  if (hash_prefix != NULL) {
    set_has_hash_prefix();
  } else {
    clear_has_hash_prefix();
  }
  hash_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash_prefix);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.FullHashCacheInfo.FullHashCache.hash_prefix)
}

// optional .safe_browsing.FullHashCacheInfo.FullHashCache.CachedHashPrefixInfo cached_hash_prefix_info = 2;
inline bool FullHashCacheInfo_FullHashCache::has_cached_hash_prefix_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FullHashCacheInfo_FullHashCache::set_has_cached_hash_prefix_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FullHashCacheInfo_FullHashCache::clear_has_cached_hash_prefix_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FullHashCacheInfo_FullHashCache::clear_cached_hash_prefix_info() {
  if (cached_hash_prefix_info_ != NULL) cached_hash_prefix_info_->::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo::Clear();
  clear_has_cached_hash_prefix_info();
}
inline const ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo& FullHashCacheInfo_FullHashCache::cached_hash_prefix_info() const {
  // @@protoc_insertion_point(field_get:safe_browsing.FullHashCacheInfo.FullHashCache.cached_hash_prefix_info)
  return cached_hash_prefix_info_ != NULL ? *cached_hash_prefix_info_
                         : *::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo::internal_default_instance();
}
inline ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo* FullHashCacheInfo_FullHashCache::mutable_cached_hash_prefix_info() {
  set_has_cached_hash_prefix_info();
  if (cached_hash_prefix_info_ == NULL) {
    cached_hash_prefix_info_ = new ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.FullHashCacheInfo.FullHashCache.cached_hash_prefix_info)
  return cached_hash_prefix_info_;
}
inline ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo* FullHashCacheInfo_FullHashCache::release_cached_hash_prefix_info() {
  // @@protoc_insertion_point(field_release:safe_browsing.FullHashCacheInfo.FullHashCache.cached_hash_prefix_info)
  clear_has_cached_hash_prefix_info();
  ::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo* temp = cached_hash_prefix_info_;
  cached_hash_prefix_info_ = NULL;
  return temp;
}
inline void FullHashCacheInfo_FullHashCache::set_allocated_cached_hash_prefix_info(::safe_browsing::FullHashCacheInfo_FullHashCache_CachedHashPrefixInfo* cached_hash_prefix_info) {
  delete cached_hash_prefix_info_;
  cached_hash_prefix_info_ = cached_hash_prefix_info;
  if (cached_hash_prefix_info) {
    set_has_cached_hash_prefix_info();
  } else {
    clear_has_cached_hash_prefix_info();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.FullHashCacheInfo.FullHashCache.cached_hash_prefix_info)
}

// -------------------------------------------------------------------

// FullHashCacheInfo

// optional int32 number_of_hits = 1;
inline bool FullHashCacheInfo::has_number_of_hits() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FullHashCacheInfo::set_has_number_of_hits() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FullHashCacheInfo::clear_has_number_of_hits() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FullHashCacheInfo::clear_number_of_hits() {
  number_of_hits_ = 0;
  clear_has_number_of_hits();
}
inline ::google::protobuf::int32 FullHashCacheInfo::number_of_hits() const {
  // @@protoc_insertion_point(field_get:safe_browsing.FullHashCacheInfo.number_of_hits)
  return number_of_hits_;
}
inline void FullHashCacheInfo::set_number_of_hits(::google::protobuf::int32 value) {
  set_has_number_of_hits();
  number_of_hits_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.FullHashCacheInfo.number_of_hits)
}

// repeated .safe_browsing.FullHashCacheInfo.FullHashCache full_hash_cache = 2;
inline int FullHashCacheInfo::full_hash_cache_size() const {
  return full_hash_cache_.size();
}
inline void FullHashCacheInfo::clear_full_hash_cache() {
  full_hash_cache_.Clear();
}
inline const ::safe_browsing::FullHashCacheInfo_FullHashCache& FullHashCacheInfo::full_hash_cache(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.FullHashCacheInfo.full_hash_cache)
  return full_hash_cache_.Get(index);
}
inline ::safe_browsing::FullHashCacheInfo_FullHashCache* FullHashCacheInfo::mutable_full_hash_cache(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.FullHashCacheInfo.full_hash_cache)
  return full_hash_cache_.Mutable(index);
}
inline ::safe_browsing::FullHashCacheInfo_FullHashCache* FullHashCacheInfo::add_full_hash_cache() {
  // @@protoc_insertion_point(field_add:safe_browsing.FullHashCacheInfo.full_hash_cache)
  return full_hash_cache_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::FullHashCacheInfo_FullHashCache >*
FullHashCacheInfo::mutable_full_hash_cache() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.FullHashCacheInfo.full_hash_cache)
  return &full_hash_cache_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::FullHashCacheInfo_FullHashCache >&
FullHashCacheInfo::full_hash_cache() const {
  // @@protoc_insertion_point(field_list:safe_browsing.FullHashCacheInfo.full_hash_cache)
  return full_hash_cache_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace safe_browsing

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_webui_2eproto__INCLUDED
