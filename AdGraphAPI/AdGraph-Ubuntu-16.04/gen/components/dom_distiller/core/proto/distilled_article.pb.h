// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: distilled_article.proto

#ifndef PROTOBUF_distilled_5farticle_2eproto__INCLUDED
#define PROTOBUF_distilled_5farticle_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "distilled_page.pb.h"
// @@protoc_insertion_point(includes)
namespace dom_distiller {
class DistilledArticleProto;
class DistilledArticleProtoDefaultTypeInternal;
extern DistilledArticleProtoDefaultTypeInternal _DistilledArticleProto_default_instance_;
}  // namespace dom_distiller

namespace dom_distiller {

namespace protobuf_distilled_5farticle_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_distilled_5farticle_2eproto

// ===================================================================

class DistilledArticleProto : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:dom_distiller.DistilledArticleProto) */ {
 public:
  DistilledArticleProto();
  virtual ~DistilledArticleProto();

  DistilledArticleProto(const DistilledArticleProto& from);

  inline DistilledArticleProto& operator=(const DistilledArticleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DistilledArticleProto& default_instance();

  static inline const DistilledArticleProto* internal_default_instance() {
    return reinterpret_cast<const DistilledArticleProto*>(
               &_DistilledArticleProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(DistilledArticleProto* other);

  // implements Message ----------------------------------------------

  inline DistilledArticleProto* New() const PROTOBUF_FINAL { return New(NULL); }

  DistilledArticleProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DistilledArticleProto& from);
  void MergeFrom(const DistilledArticleProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DistilledArticleProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dom_distiller.DistilledPageProto pages = 2;
  int pages_size() const;
  void clear_pages();
  static const int kPagesFieldNumber = 2;
  const ::dom_distiller::DistilledPageProto& pages(int index) const;
  ::dom_distiller::DistilledPageProto* mutable_pages(int index);
  ::dom_distiller::DistilledPageProto* add_pages();
  ::google::protobuf::RepeatedPtrField< ::dom_distiller::DistilledPageProto >*
      mutable_pages();
  const ::google::protobuf::RepeatedPtrField< ::dom_distiller::DistilledPageProto >&
      pages() const;

  // optional string title = 1;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // @@protoc_insertion_point(class_scope:dom_distiller.DistilledArticleProto)
 private:
  void set_has_title();
  void clear_has_title();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::dom_distiller::DistilledPageProto > pages_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  friend struct protobuf_distilled_5farticle_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DistilledArticleProto

// optional string title = 1;
inline bool DistilledArticleProto::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DistilledArticleProto::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DistilledArticleProto::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DistilledArticleProto::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& DistilledArticleProto::title() const {
  // @@protoc_insertion_point(field_get:dom_distiller.DistilledArticleProto.title)
  return title_.GetNoArena();
}
inline void DistilledArticleProto::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dom_distiller.DistilledArticleProto.title)
}
#if LANG_CXX11
inline void DistilledArticleProto::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dom_distiller.DistilledArticleProto.title)
}
#endif
inline void DistilledArticleProto::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dom_distiller.DistilledArticleProto.title)
}
inline void DistilledArticleProto::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dom_distiller.DistilledArticleProto.title)
}
inline ::std::string* DistilledArticleProto::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:dom_distiller.DistilledArticleProto.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DistilledArticleProto::release_title() {
  // @@protoc_insertion_point(field_release:dom_distiller.DistilledArticleProto.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DistilledArticleProto::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:dom_distiller.DistilledArticleProto.title)
}

// repeated .dom_distiller.DistilledPageProto pages = 2;
inline int DistilledArticleProto::pages_size() const {
  return pages_.size();
}
inline void DistilledArticleProto::clear_pages() {
  pages_.Clear();
}
inline const ::dom_distiller::DistilledPageProto& DistilledArticleProto::pages(int index) const {
  // @@protoc_insertion_point(field_get:dom_distiller.DistilledArticleProto.pages)
  return pages_.Get(index);
}
inline ::dom_distiller::DistilledPageProto* DistilledArticleProto::mutable_pages(int index) {
  // @@protoc_insertion_point(field_mutable:dom_distiller.DistilledArticleProto.pages)
  return pages_.Mutable(index);
}
inline ::dom_distiller::DistilledPageProto* DistilledArticleProto::add_pages() {
  // @@protoc_insertion_point(field_add:dom_distiller.DistilledArticleProto.pages)
  return pages_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::dom_distiller::DistilledPageProto >*
DistilledArticleProto::mutable_pages() {
  // @@protoc_insertion_point(field_mutable_list:dom_distiller.DistilledArticleProto.pages)
  return &pages_;
}
inline const ::google::protobuf::RepeatedPtrField< ::dom_distiller::DistilledPageProto >&
DistilledArticleProto::pages() const {
  // @@protoc_insertion_point(field_list:dom_distiller.DistilledArticleProto.pages)
  return pages_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace dom_distiller

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_distilled_5farticle_2eproto__INCLUDED
