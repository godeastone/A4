// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perfetto/config/trace_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "perfetto/config/trace_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace perfetto {
namespace protos {
class TraceConfig_BufferConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TraceConfig_BufferConfig> {
} _TraceConfig_BufferConfig_default_instance_;
class TraceConfig_DataSourceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TraceConfig_DataSource> {
} _TraceConfig_DataSource_default_instance_;
class TraceConfig_ProducerConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TraceConfig_ProducerConfig> {
} _TraceConfig_ProducerConfig_default_instance_;
class TraceConfig_StatsdMetadataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TraceConfig_StatsdMetadata> {
} _TraceConfig_StatsdMetadata_default_instance_;
class TraceConfig_GuardrailOverridesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TraceConfig_GuardrailOverrides> {
} _TraceConfig_GuardrailOverrides_default_instance_;
class TraceConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TraceConfig> {
} _TraceConfig_default_instance_;

namespace protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _TraceConfig_BufferConfig_default_instance_.Shutdown();
  _TraceConfig_DataSource_default_instance_.Shutdown();
  _TraceConfig_ProducerConfig_default_instance_.Shutdown();
  _TraceConfig_StatsdMetadata_default_instance_.Shutdown();
  _TraceConfig_GuardrailOverrides_default_instance_.Shutdown();
  _TraceConfig_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::perfetto::protos::protobuf_perfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto::InitDefaults();
  _TraceConfig_BufferConfig_default_instance_.DefaultConstruct();
  _TraceConfig_DataSource_default_instance_.DefaultConstruct();
  _TraceConfig_ProducerConfig_default_instance_.DefaultConstruct();
  _TraceConfig_StatsdMetadata_default_instance_.DefaultConstruct();
  _TraceConfig_GuardrailOverrides_default_instance_.DefaultConstruct();
  _TraceConfig_default_instance_.DefaultConstruct();
  _TraceConfig_DataSource_default_instance_.get_mutable()->config_ = const_cast< ::perfetto::protos::DataSourceConfig*>(
      ::perfetto::protos::DataSourceConfig::internal_default_instance());
  _TraceConfig_default_instance_.get_mutable()->statsd_metadata_ = const_cast< ::perfetto::protos::TraceConfig_StatsdMetadata*>(
      ::perfetto::protos::TraceConfig_StatsdMetadata::internal_default_instance());
  _TraceConfig_default_instance_.get_mutable()->guardrail_overrides_ = const_cast< ::perfetto::protos::TraceConfig_GuardrailOverrides*>(
      ::perfetto::protos::TraceConfig_GuardrailOverrides::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::perfetto::protos::protobuf_perfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto

bool TraceConfig_BufferConfig_FillPolicy_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TraceConfig_BufferConfig_FillPolicy TraceConfig_BufferConfig::UNSPECIFIED;
const TraceConfig_BufferConfig_FillPolicy TraceConfig_BufferConfig::RING_BUFFER;
const TraceConfig_BufferConfig_FillPolicy TraceConfig_BufferConfig::FillPolicy_MIN;
const TraceConfig_BufferConfig_FillPolicy TraceConfig_BufferConfig::FillPolicy_MAX;
const int TraceConfig_BufferConfig::FillPolicy_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool TraceConfig_LockdownModeOperation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TraceConfig_LockdownModeOperation TraceConfig::LOCKDOWN_UNCHANGED;
const TraceConfig_LockdownModeOperation TraceConfig::LOCKDOWN_CLEAR;
const TraceConfig_LockdownModeOperation TraceConfig::LOCKDOWN_SET;
const TraceConfig_LockdownModeOperation TraceConfig::LockdownModeOperation_MIN;
const TraceConfig_LockdownModeOperation TraceConfig::LockdownModeOperation_MAX;
const int TraceConfig::LockdownModeOperation_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraceConfig_BufferConfig::kSizeKbFieldNumber;
const int TraceConfig_BufferConfig::kFillPolicyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraceConfig_BufferConfig::TraceConfig_BufferConfig()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.TraceConfig.BufferConfig)
}
TraceConfig_BufferConfig::TraceConfig_BufferConfig(const TraceConfig_BufferConfig& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&size_kb_, &from.size_kb_,
    static_cast<size_t>(reinterpret_cast<char*>(&fill_policy_) -
    reinterpret_cast<char*>(&size_kb_)) + sizeof(fill_policy_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.TraceConfig.BufferConfig)
}

void TraceConfig_BufferConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&size_kb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fill_policy_) -
      reinterpret_cast<char*>(&size_kb_)) + sizeof(fill_policy_));
}

TraceConfig_BufferConfig::~TraceConfig_BufferConfig() {
  // @@protoc_insertion_point(destructor:perfetto.protos.TraceConfig.BufferConfig)
  SharedDtor();
}

void TraceConfig_BufferConfig::SharedDtor() {
}

void TraceConfig_BufferConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TraceConfig_BufferConfig& TraceConfig_BufferConfig::default_instance() {
  protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

TraceConfig_BufferConfig* TraceConfig_BufferConfig::New(::google::protobuf::Arena* arena) const {
  TraceConfig_BufferConfig* n = new TraceConfig_BufferConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TraceConfig_BufferConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.TraceConfig.BufferConfig)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&size_kb_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fill_policy_) -
        reinterpret_cast<char*>(&size_kb_)) + sizeof(fill_policy_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TraceConfig_BufferConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.TraceConfig.BufferConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 size_kb = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_size_kb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_kb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.TraceConfig.BufferConfig.FillPolicy fill_policy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::perfetto::protos::TraceConfig_BufferConfig_FillPolicy_IsValid(value)) {
            set_fill_policy(static_cast< ::perfetto::protos::TraceConfig_BufferConfig_FillPolicy >(value));
          } else {
            unknown_fields_stream.WriteVarint32(32u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.TraceConfig.BufferConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.TraceConfig.BufferConfig)
  return false;
#undef DO_
}

void TraceConfig_BufferConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.TraceConfig.BufferConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 size_kb = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->size_kb(), output);
  }

  // optional .perfetto.protos.TraceConfig.BufferConfig.FillPolicy fill_policy = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->fill_policy(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.TraceConfig.BufferConfig)
}

size_t TraceConfig_BufferConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.TraceConfig.BufferConfig)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 size_kb = 1;
    if (has_size_kb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->size_kb());
    }

    // optional .perfetto.protos.TraceConfig.BufferConfig.FillPolicy fill_policy = 4;
    if (has_fill_policy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->fill_policy());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TraceConfig_BufferConfig::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TraceConfig_BufferConfig*>(&from));
}

void TraceConfig_BufferConfig::MergeFrom(const TraceConfig_BufferConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.TraceConfig.BufferConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      size_kb_ = from.size_kb_;
    }
    if (cached_has_bits & 0x00000002u) {
      fill_policy_ = from.fill_policy_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TraceConfig_BufferConfig::CopyFrom(const TraceConfig_BufferConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.TraceConfig.BufferConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceConfig_BufferConfig::IsInitialized() const {
  return true;
}

void TraceConfig_BufferConfig::Swap(TraceConfig_BufferConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TraceConfig_BufferConfig::InternalSwap(TraceConfig_BufferConfig* other) {
  std::swap(size_kb_, other->size_kb_);
  std::swap(fill_policy_, other->fill_policy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TraceConfig_BufferConfig::GetTypeName() const {
  return "perfetto.protos.TraceConfig.BufferConfig";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TraceConfig_BufferConfig

// optional uint32 size_kb = 1;
bool TraceConfig_BufferConfig::has_size_kb() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TraceConfig_BufferConfig::set_has_size_kb() {
  _has_bits_[0] |= 0x00000001u;
}
void TraceConfig_BufferConfig::clear_has_size_kb() {
  _has_bits_[0] &= ~0x00000001u;
}
void TraceConfig_BufferConfig::clear_size_kb() {
  size_kb_ = 0u;
  clear_has_size_kb();
}
::google::protobuf::uint32 TraceConfig_BufferConfig::size_kb() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.BufferConfig.size_kb)
  return size_kb_;
}
void TraceConfig_BufferConfig::set_size_kb(::google::protobuf::uint32 value) {
  set_has_size_kb();
  size_kb_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.BufferConfig.size_kb)
}

// optional .perfetto.protos.TraceConfig.BufferConfig.FillPolicy fill_policy = 4;
bool TraceConfig_BufferConfig::has_fill_policy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TraceConfig_BufferConfig::set_has_fill_policy() {
  _has_bits_[0] |= 0x00000002u;
}
void TraceConfig_BufferConfig::clear_has_fill_policy() {
  _has_bits_[0] &= ~0x00000002u;
}
void TraceConfig_BufferConfig::clear_fill_policy() {
  fill_policy_ = 0;
  clear_has_fill_policy();
}
::perfetto::protos::TraceConfig_BufferConfig_FillPolicy TraceConfig_BufferConfig::fill_policy() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.BufferConfig.fill_policy)
  return static_cast< ::perfetto::protos::TraceConfig_BufferConfig_FillPolicy >(fill_policy_);
}
void TraceConfig_BufferConfig::set_fill_policy(::perfetto::protos::TraceConfig_BufferConfig_FillPolicy value) {
  assert(::perfetto::protos::TraceConfig_BufferConfig_FillPolicy_IsValid(value));
  set_has_fill_policy();
  fill_policy_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.BufferConfig.fill_policy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraceConfig_DataSource::kConfigFieldNumber;
const int TraceConfig_DataSource::kProducerNameFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraceConfig_DataSource::TraceConfig_DataSource()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.TraceConfig.DataSource)
}
TraceConfig_DataSource::TraceConfig_DataSource(const TraceConfig_DataSource& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      producer_name_filter_(from.producer_name_filter_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::perfetto::protos::DataSourceConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.TraceConfig.DataSource)
}

void TraceConfig_DataSource::SharedCtor() {
  _cached_size_ = 0;
  config_ = NULL;
}

TraceConfig_DataSource::~TraceConfig_DataSource() {
  // @@protoc_insertion_point(destructor:perfetto.protos.TraceConfig.DataSource)
  SharedDtor();
}

void TraceConfig_DataSource::SharedDtor() {
  if (this != internal_default_instance()) {
    delete config_;
  }
}

void TraceConfig_DataSource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TraceConfig_DataSource& TraceConfig_DataSource::default_instance() {
  protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

TraceConfig_DataSource* TraceConfig_DataSource::New(::google::protobuf::Arena* arena) const {
  TraceConfig_DataSource* n = new TraceConfig_DataSource;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TraceConfig_DataSource::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.TraceConfig.DataSource)
  producer_name_filter_.Clear();
  if (has_config()) {
    GOOGLE_DCHECK(config_ != NULL);
    config_->::perfetto::protos::DataSourceConfig::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TraceConfig_DataSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.TraceConfig.DataSource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .perfetto.protos.DataSourceConfig config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string producer_name_filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_producer_name_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.TraceConfig.DataSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.TraceConfig.DataSource)
  return false;
#undef DO_
}

void TraceConfig_DataSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.TraceConfig.DataSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .perfetto.protos.DataSourceConfig config = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->config_, output);
  }

  // repeated string producer_name_filter = 2;
  for (int i = 0, n = this->producer_name_filter_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->producer_name_filter(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.TraceConfig.DataSource)
}

size_t TraceConfig_DataSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.TraceConfig.DataSource)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated string producer_name_filter = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->producer_name_filter_size());
  for (int i = 0, n = this->producer_name_filter_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->producer_name_filter(i));
  }

  // optional .perfetto.protos.DataSourceConfig config = 1;
  if (has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TraceConfig_DataSource::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TraceConfig_DataSource*>(&from));
}

void TraceConfig_DataSource::MergeFrom(const TraceConfig_DataSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.TraceConfig.DataSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  producer_name_filter_.MergeFrom(from.producer_name_filter_);
  if (from.has_config()) {
    mutable_config()->::perfetto::protos::DataSourceConfig::MergeFrom(from.config());
  }
}

void TraceConfig_DataSource::CopyFrom(const TraceConfig_DataSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.TraceConfig.DataSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceConfig_DataSource::IsInitialized() const {
  return true;
}

void TraceConfig_DataSource::Swap(TraceConfig_DataSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TraceConfig_DataSource::InternalSwap(TraceConfig_DataSource* other) {
  producer_name_filter_.InternalSwap(&other->producer_name_filter_);
  std::swap(config_, other->config_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TraceConfig_DataSource::GetTypeName() const {
  return "perfetto.protos.TraceConfig.DataSource";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TraceConfig_DataSource

// optional .perfetto.protos.DataSourceConfig config = 1;
bool TraceConfig_DataSource::has_config() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TraceConfig_DataSource::set_has_config() {
  _has_bits_[0] |= 0x00000001u;
}
void TraceConfig_DataSource::clear_has_config() {
  _has_bits_[0] &= ~0x00000001u;
}
void TraceConfig_DataSource::clear_config() {
  if (config_ != NULL) config_->::perfetto::protos::DataSourceConfig::Clear();
  clear_has_config();
}
const ::perfetto::protos::DataSourceConfig& TraceConfig_DataSource::config() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.DataSource.config)
  return config_ != NULL ? *config_
                         : *::perfetto::protos::DataSourceConfig::internal_default_instance();
}
::perfetto::protos::DataSourceConfig* TraceConfig_DataSource::mutable_config() {
  set_has_config();
  if (config_ == NULL) {
    config_ = new ::perfetto::protos::DataSourceConfig;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.DataSource.config)
  return config_;
}
::perfetto::protos::DataSourceConfig* TraceConfig_DataSource::release_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TraceConfig.DataSource.config)
  clear_has_config();
  ::perfetto::protos::DataSourceConfig* temp = config_;
  config_ = NULL;
  return temp;
}
void TraceConfig_DataSource::set_allocated_config(::perfetto::protos::DataSourceConfig* config) {
  delete config_;
  config_ = config;
  if (config) {
    set_has_config();
  } else {
    clear_has_config();
  }
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TraceConfig.DataSource.config)
}

// repeated string producer_name_filter = 2;
int TraceConfig_DataSource::producer_name_filter_size() const {
  return producer_name_filter_.size();
}
void TraceConfig_DataSource::clear_producer_name_filter() {
  producer_name_filter_.Clear();
}
const ::std::string& TraceConfig_DataSource::producer_name_filter(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
  return producer_name_filter_.Get(index);
}
::std::string* TraceConfig_DataSource::mutable_producer_name_filter(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
  return producer_name_filter_.Mutable(index);
}
void TraceConfig_DataSource::set_producer_name_filter(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
  producer_name_filter_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void TraceConfig_DataSource::set_producer_name_filter(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
  producer_name_filter_.Mutable(index)->assign(std::move(value));
}
#endif
void TraceConfig_DataSource::set_producer_name_filter(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  producer_name_filter_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
}
void TraceConfig_DataSource::set_producer_name_filter(int index, const char* value, size_t size) {
  producer_name_filter_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
}
::std::string* TraceConfig_DataSource::add_producer_name_filter() {
  // @@protoc_insertion_point(field_add_mutable:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
  return producer_name_filter_.Add();
}
void TraceConfig_DataSource::add_producer_name_filter(const ::std::string& value) {
  producer_name_filter_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
}
#if LANG_CXX11
void TraceConfig_DataSource::add_producer_name_filter(::std::string&& value) {
  producer_name_filter_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
}
#endif
void TraceConfig_DataSource::add_producer_name_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  producer_name_filter_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
}
void TraceConfig_DataSource::add_producer_name_filter(const char* value, size_t size) {
  producer_name_filter_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TraceConfig_DataSource::producer_name_filter() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
  return producer_name_filter_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TraceConfig_DataSource::mutable_producer_name_filter() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
  return &producer_name_filter_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraceConfig_ProducerConfig::kProducerNameFieldNumber;
const int TraceConfig_ProducerConfig::kShmSizeKbFieldNumber;
const int TraceConfig_ProducerConfig::kPageSizeKbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraceConfig_ProducerConfig::TraceConfig_ProducerConfig()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.TraceConfig.ProducerConfig)
}
TraceConfig_ProducerConfig::TraceConfig_ProducerConfig(const TraceConfig_ProducerConfig& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  producer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_producer_name()) {
    producer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_name_);
  }
  ::memcpy(&shm_size_kb_, &from.shm_size_kb_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_size_kb_) -
    reinterpret_cast<char*>(&shm_size_kb_)) + sizeof(page_size_kb_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.TraceConfig.ProducerConfig)
}

void TraceConfig_ProducerConfig::SharedCtor() {
  _cached_size_ = 0;
  producer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shm_size_kb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_kb_) -
      reinterpret_cast<char*>(&shm_size_kb_)) + sizeof(page_size_kb_));
}

TraceConfig_ProducerConfig::~TraceConfig_ProducerConfig() {
  // @@protoc_insertion_point(destructor:perfetto.protos.TraceConfig.ProducerConfig)
  SharedDtor();
}

void TraceConfig_ProducerConfig::SharedDtor() {
  producer_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TraceConfig_ProducerConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TraceConfig_ProducerConfig& TraceConfig_ProducerConfig::default_instance() {
  protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

TraceConfig_ProducerConfig* TraceConfig_ProducerConfig::New(::google::protobuf::Arena* arena) const {
  TraceConfig_ProducerConfig* n = new TraceConfig_ProducerConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TraceConfig_ProducerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.TraceConfig.ProducerConfig)
  if (has_producer_name()) {
    GOOGLE_DCHECK(!producer_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*producer_name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&shm_size_kb_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&page_size_kb_) -
        reinterpret_cast<char*>(&shm_size_kb_)) + sizeof(page_size_kb_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TraceConfig_ProducerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.TraceConfig.ProducerConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string producer_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_producer_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 shm_size_kb = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_shm_size_kb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shm_size_kb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 page_size_kb = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_page_size_kb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_size_kb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.TraceConfig.ProducerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.TraceConfig.ProducerConfig)
  return false;
#undef DO_
}

void TraceConfig_ProducerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.TraceConfig.ProducerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string producer_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->producer_name(), output);
  }

  // optional uint32 shm_size_kb = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->shm_size_kb(), output);
  }

  // optional uint32 page_size_kb = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->page_size_kb(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.TraceConfig.ProducerConfig)
}

size_t TraceConfig_ProducerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.TraceConfig.ProducerConfig)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 7u) {
    // optional string producer_name = 1;
    if (has_producer_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->producer_name());
    }

    // optional uint32 shm_size_kb = 2;
    if (has_shm_size_kb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shm_size_kb());
    }

    // optional uint32 page_size_kb = 3;
    if (has_page_size_kb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->page_size_kb());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TraceConfig_ProducerConfig::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TraceConfig_ProducerConfig*>(&from));
}

void TraceConfig_ProducerConfig::MergeFrom(const TraceConfig_ProducerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.TraceConfig.ProducerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_producer_name();
      producer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      shm_size_kb_ = from.shm_size_kb_;
    }
    if (cached_has_bits & 0x00000004u) {
      page_size_kb_ = from.page_size_kb_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TraceConfig_ProducerConfig::CopyFrom(const TraceConfig_ProducerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.TraceConfig.ProducerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceConfig_ProducerConfig::IsInitialized() const {
  return true;
}

void TraceConfig_ProducerConfig::Swap(TraceConfig_ProducerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TraceConfig_ProducerConfig::InternalSwap(TraceConfig_ProducerConfig* other) {
  producer_name_.Swap(&other->producer_name_);
  std::swap(shm_size_kb_, other->shm_size_kb_);
  std::swap(page_size_kb_, other->page_size_kb_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TraceConfig_ProducerConfig::GetTypeName() const {
  return "perfetto.protos.TraceConfig.ProducerConfig";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TraceConfig_ProducerConfig

// optional string producer_name = 1;
bool TraceConfig_ProducerConfig::has_producer_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TraceConfig_ProducerConfig::set_has_producer_name() {
  _has_bits_[0] |= 0x00000001u;
}
void TraceConfig_ProducerConfig::clear_has_producer_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void TraceConfig_ProducerConfig::clear_producer_name() {
  producer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_producer_name();
}
const ::std::string& TraceConfig_ProducerConfig::producer_name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.ProducerConfig.producer_name)
  return producer_name_.GetNoArena();
}
void TraceConfig_ProducerConfig::set_producer_name(const ::std::string& value) {
  set_has_producer_name();
  producer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.ProducerConfig.producer_name)
}
#if LANG_CXX11
void TraceConfig_ProducerConfig::set_producer_name(::std::string&& value) {
  set_has_producer_name();
  producer_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.TraceConfig.ProducerConfig.producer_name)
}
#endif
void TraceConfig_ProducerConfig::set_producer_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_producer_name();
  producer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.TraceConfig.ProducerConfig.producer_name)
}
void TraceConfig_ProducerConfig::set_producer_name(const char* value, size_t size) {
  set_has_producer_name();
  producer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.TraceConfig.ProducerConfig.producer_name)
}
::std::string* TraceConfig_ProducerConfig::mutable_producer_name() {
  set_has_producer_name();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.ProducerConfig.producer_name)
  return producer_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TraceConfig_ProducerConfig::release_producer_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TraceConfig.ProducerConfig.producer_name)
  clear_has_producer_name();
  return producer_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TraceConfig_ProducerConfig::set_allocated_producer_name(::std::string* producer_name) {
  if (producer_name != NULL) {
    set_has_producer_name();
  } else {
    clear_has_producer_name();
  }
  producer_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), producer_name);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TraceConfig.ProducerConfig.producer_name)
}

// optional uint32 shm_size_kb = 2;
bool TraceConfig_ProducerConfig::has_shm_size_kb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TraceConfig_ProducerConfig::set_has_shm_size_kb() {
  _has_bits_[0] |= 0x00000002u;
}
void TraceConfig_ProducerConfig::clear_has_shm_size_kb() {
  _has_bits_[0] &= ~0x00000002u;
}
void TraceConfig_ProducerConfig::clear_shm_size_kb() {
  shm_size_kb_ = 0u;
  clear_has_shm_size_kb();
}
::google::protobuf::uint32 TraceConfig_ProducerConfig::shm_size_kb() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.ProducerConfig.shm_size_kb)
  return shm_size_kb_;
}
void TraceConfig_ProducerConfig::set_shm_size_kb(::google::protobuf::uint32 value) {
  set_has_shm_size_kb();
  shm_size_kb_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.ProducerConfig.shm_size_kb)
}

// optional uint32 page_size_kb = 3;
bool TraceConfig_ProducerConfig::has_page_size_kb() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TraceConfig_ProducerConfig::set_has_page_size_kb() {
  _has_bits_[0] |= 0x00000004u;
}
void TraceConfig_ProducerConfig::clear_has_page_size_kb() {
  _has_bits_[0] &= ~0x00000004u;
}
void TraceConfig_ProducerConfig::clear_page_size_kb() {
  page_size_kb_ = 0u;
  clear_has_page_size_kb();
}
::google::protobuf::uint32 TraceConfig_ProducerConfig::page_size_kb() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.ProducerConfig.page_size_kb)
  return page_size_kb_;
}
void TraceConfig_ProducerConfig::set_page_size_kb(::google::protobuf::uint32 value) {
  set_has_page_size_kb();
  page_size_kb_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.ProducerConfig.page_size_kb)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraceConfig_StatsdMetadata::kTriggeringAlertIdFieldNumber;
const int TraceConfig_StatsdMetadata::kTriggeringConfigUidFieldNumber;
const int TraceConfig_StatsdMetadata::kTriggeringConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraceConfig_StatsdMetadata::TraceConfig_StatsdMetadata()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.TraceConfig.StatsdMetadata)
}
TraceConfig_StatsdMetadata::TraceConfig_StatsdMetadata(const TraceConfig_StatsdMetadata& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&triggering_alert_id_, &from.triggering_alert_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&triggering_config_uid_) -
    reinterpret_cast<char*>(&triggering_alert_id_)) + sizeof(triggering_config_uid_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.TraceConfig.StatsdMetadata)
}

void TraceConfig_StatsdMetadata::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&triggering_alert_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&triggering_config_uid_) -
      reinterpret_cast<char*>(&triggering_alert_id_)) + sizeof(triggering_config_uid_));
}

TraceConfig_StatsdMetadata::~TraceConfig_StatsdMetadata() {
  // @@protoc_insertion_point(destructor:perfetto.protos.TraceConfig.StatsdMetadata)
  SharedDtor();
}

void TraceConfig_StatsdMetadata::SharedDtor() {
}

void TraceConfig_StatsdMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TraceConfig_StatsdMetadata& TraceConfig_StatsdMetadata::default_instance() {
  protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

TraceConfig_StatsdMetadata* TraceConfig_StatsdMetadata::New(::google::protobuf::Arena* arena) const {
  TraceConfig_StatsdMetadata* n = new TraceConfig_StatsdMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TraceConfig_StatsdMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.TraceConfig.StatsdMetadata)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&triggering_alert_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&triggering_config_uid_) -
        reinterpret_cast<char*>(&triggering_alert_id_)) + sizeof(triggering_config_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TraceConfig_StatsdMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.TraceConfig.StatsdMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 triggering_alert_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_triggering_alert_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &triggering_alert_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 triggering_config_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_triggering_config_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &triggering_config_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 triggering_config_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_triggering_config_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &triggering_config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.TraceConfig.StatsdMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.TraceConfig.StatsdMetadata)
  return false;
#undef DO_
}

void TraceConfig_StatsdMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.TraceConfig.StatsdMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 triggering_alert_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->triggering_alert_id(), output);
  }

  // optional int32 triggering_config_uid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->triggering_config_uid(), output);
  }

  // optional int64 triggering_config_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->triggering_config_id(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.TraceConfig.StatsdMetadata)
}

size_t TraceConfig_StatsdMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.TraceConfig.StatsdMetadata)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 7u) {
    // optional int64 triggering_alert_id = 1;
    if (has_triggering_alert_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->triggering_alert_id());
    }

    // optional int64 triggering_config_id = 3;
    if (has_triggering_config_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->triggering_config_id());
    }

    // optional int32 triggering_config_uid = 2;
    if (has_triggering_config_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->triggering_config_uid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TraceConfig_StatsdMetadata::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TraceConfig_StatsdMetadata*>(&from));
}

void TraceConfig_StatsdMetadata::MergeFrom(const TraceConfig_StatsdMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.TraceConfig.StatsdMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      triggering_alert_id_ = from.triggering_alert_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      triggering_config_id_ = from.triggering_config_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      triggering_config_uid_ = from.triggering_config_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TraceConfig_StatsdMetadata::CopyFrom(const TraceConfig_StatsdMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.TraceConfig.StatsdMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceConfig_StatsdMetadata::IsInitialized() const {
  return true;
}

void TraceConfig_StatsdMetadata::Swap(TraceConfig_StatsdMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TraceConfig_StatsdMetadata::InternalSwap(TraceConfig_StatsdMetadata* other) {
  std::swap(triggering_alert_id_, other->triggering_alert_id_);
  std::swap(triggering_config_id_, other->triggering_config_id_);
  std::swap(triggering_config_uid_, other->triggering_config_uid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TraceConfig_StatsdMetadata::GetTypeName() const {
  return "perfetto.protos.TraceConfig.StatsdMetadata";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TraceConfig_StatsdMetadata

// optional int64 triggering_alert_id = 1;
bool TraceConfig_StatsdMetadata::has_triggering_alert_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TraceConfig_StatsdMetadata::set_has_triggering_alert_id() {
  _has_bits_[0] |= 0x00000001u;
}
void TraceConfig_StatsdMetadata::clear_has_triggering_alert_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void TraceConfig_StatsdMetadata::clear_triggering_alert_id() {
  triggering_alert_id_ = GOOGLE_LONGLONG(0);
  clear_has_triggering_alert_id();
}
::google::protobuf::int64 TraceConfig_StatsdMetadata::triggering_alert_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.StatsdMetadata.triggering_alert_id)
  return triggering_alert_id_;
}
void TraceConfig_StatsdMetadata::set_triggering_alert_id(::google::protobuf::int64 value) {
  set_has_triggering_alert_id();
  triggering_alert_id_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.StatsdMetadata.triggering_alert_id)
}

// optional int32 triggering_config_uid = 2;
bool TraceConfig_StatsdMetadata::has_triggering_config_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TraceConfig_StatsdMetadata::set_has_triggering_config_uid() {
  _has_bits_[0] |= 0x00000004u;
}
void TraceConfig_StatsdMetadata::clear_has_triggering_config_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
void TraceConfig_StatsdMetadata::clear_triggering_config_uid() {
  triggering_config_uid_ = 0;
  clear_has_triggering_config_uid();
}
::google::protobuf::int32 TraceConfig_StatsdMetadata::triggering_config_uid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.StatsdMetadata.triggering_config_uid)
  return triggering_config_uid_;
}
void TraceConfig_StatsdMetadata::set_triggering_config_uid(::google::protobuf::int32 value) {
  set_has_triggering_config_uid();
  triggering_config_uid_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.StatsdMetadata.triggering_config_uid)
}

// optional int64 triggering_config_id = 3;
bool TraceConfig_StatsdMetadata::has_triggering_config_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TraceConfig_StatsdMetadata::set_has_triggering_config_id() {
  _has_bits_[0] |= 0x00000002u;
}
void TraceConfig_StatsdMetadata::clear_has_triggering_config_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void TraceConfig_StatsdMetadata::clear_triggering_config_id() {
  triggering_config_id_ = GOOGLE_LONGLONG(0);
  clear_has_triggering_config_id();
}
::google::protobuf::int64 TraceConfig_StatsdMetadata::triggering_config_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.StatsdMetadata.triggering_config_id)
  return triggering_config_id_;
}
void TraceConfig_StatsdMetadata::set_triggering_config_id(::google::protobuf::int64 value) {
  set_has_triggering_config_id();
  triggering_config_id_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.StatsdMetadata.triggering_config_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraceConfig_GuardrailOverrides::kMaxUploadPerDayBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraceConfig_GuardrailOverrides::TraceConfig_GuardrailOverrides()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.TraceConfig.GuardrailOverrides)
}
TraceConfig_GuardrailOverrides::TraceConfig_GuardrailOverrides(const TraceConfig_GuardrailOverrides& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  max_upload_per_day_bytes_ = from.max_upload_per_day_bytes_;
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.TraceConfig.GuardrailOverrides)
}

void TraceConfig_GuardrailOverrides::SharedCtor() {
  _cached_size_ = 0;
  max_upload_per_day_bytes_ = GOOGLE_ULONGLONG(0);
}

TraceConfig_GuardrailOverrides::~TraceConfig_GuardrailOverrides() {
  // @@protoc_insertion_point(destructor:perfetto.protos.TraceConfig.GuardrailOverrides)
  SharedDtor();
}

void TraceConfig_GuardrailOverrides::SharedDtor() {
}

void TraceConfig_GuardrailOverrides::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TraceConfig_GuardrailOverrides& TraceConfig_GuardrailOverrides::default_instance() {
  protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

TraceConfig_GuardrailOverrides* TraceConfig_GuardrailOverrides::New(::google::protobuf::Arena* arena) const {
  TraceConfig_GuardrailOverrides* n = new TraceConfig_GuardrailOverrides;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TraceConfig_GuardrailOverrides::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.TraceConfig.GuardrailOverrides)
  max_upload_per_day_bytes_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TraceConfig_GuardrailOverrides::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.TraceConfig.GuardrailOverrides)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 max_upload_per_day_bytes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_max_upload_per_day_bytes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_upload_per_day_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.TraceConfig.GuardrailOverrides)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.TraceConfig.GuardrailOverrides)
  return false;
#undef DO_
}

void TraceConfig_GuardrailOverrides::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.TraceConfig.GuardrailOverrides)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 max_upload_per_day_bytes = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->max_upload_per_day_bytes(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.TraceConfig.GuardrailOverrides)
}

size_t TraceConfig_GuardrailOverrides::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.TraceConfig.GuardrailOverrides)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // optional uint64 max_upload_per_day_bytes = 1;
  if (has_max_upload_per_day_bytes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->max_upload_per_day_bytes());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TraceConfig_GuardrailOverrides::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TraceConfig_GuardrailOverrides*>(&from));
}

void TraceConfig_GuardrailOverrides::MergeFrom(const TraceConfig_GuardrailOverrides& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.TraceConfig.GuardrailOverrides)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_max_upload_per_day_bytes()) {
    set_max_upload_per_day_bytes(from.max_upload_per_day_bytes());
  }
}

void TraceConfig_GuardrailOverrides::CopyFrom(const TraceConfig_GuardrailOverrides& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.TraceConfig.GuardrailOverrides)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceConfig_GuardrailOverrides::IsInitialized() const {
  return true;
}

void TraceConfig_GuardrailOverrides::Swap(TraceConfig_GuardrailOverrides* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TraceConfig_GuardrailOverrides::InternalSwap(TraceConfig_GuardrailOverrides* other) {
  std::swap(max_upload_per_day_bytes_, other->max_upload_per_day_bytes_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TraceConfig_GuardrailOverrides::GetTypeName() const {
  return "perfetto.protos.TraceConfig.GuardrailOverrides";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TraceConfig_GuardrailOverrides

// optional uint64 max_upload_per_day_bytes = 1;
bool TraceConfig_GuardrailOverrides::has_max_upload_per_day_bytes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TraceConfig_GuardrailOverrides::set_has_max_upload_per_day_bytes() {
  _has_bits_[0] |= 0x00000001u;
}
void TraceConfig_GuardrailOverrides::clear_has_max_upload_per_day_bytes() {
  _has_bits_[0] &= ~0x00000001u;
}
void TraceConfig_GuardrailOverrides::clear_max_upload_per_day_bytes() {
  max_upload_per_day_bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_max_upload_per_day_bytes();
}
::google::protobuf::uint64 TraceConfig_GuardrailOverrides::max_upload_per_day_bytes() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.GuardrailOverrides.max_upload_per_day_bytes)
  return max_upload_per_day_bytes_;
}
void TraceConfig_GuardrailOverrides::set_max_upload_per_day_bytes(::google::protobuf::uint64 value) {
  set_has_max_upload_per_day_bytes();
  max_upload_per_day_bytes_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.GuardrailOverrides.max_upload_per_day_bytes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraceConfig::kBuffersFieldNumber;
const int TraceConfig::kDataSourcesFieldNumber;
const int TraceConfig::kDurationMsFieldNumber;
const int TraceConfig::kEnableExtraGuardrailsFieldNumber;
const int TraceConfig::kLockdownModeFieldNumber;
const int TraceConfig::kProducersFieldNumber;
const int TraceConfig::kStatsdMetadataFieldNumber;
const int TraceConfig::kWriteIntoFileFieldNumber;
const int TraceConfig::kFileWritePeriodMsFieldNumber;
const int TraceConfig::kMaxFileSizeBytesFieldNumber;
const int TraceConfig::kGuardrailOverridesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraceConfig::TraceConfig()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.TraceConfig)
}
TraceConfig::TraceConfig(const TraceConfig& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      buffers_(from.buffers_),
      data_sources_(from.data_sources_),
      producers_(from.producers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_statsd_metadata()) {
    statsd_metadata_ = new ::perfetto::protos::TraceConfig_StatsdMetadata(*from.statsd_metadata_);
  } else {
    statsd_metadata_ = NULL;
  }
  if (from.has_guardrail_overrides()) {
    guardrail_overrides_ = new ::perfetto::protos::TraceConfig_GuardrailOverrides(*from.guardrail_overrides_);
  } else {
    guardrail_overrides_ = NULL;
  }
  ::memcpy(&duration_ms_, &from.duration_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_file_size_bytes_) -
    reinterpret_cast<char*>(&duration_ms_)) + sizeof(max_file_size_bytes_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.TraceConfig)
}

void TraceConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&statsd_metadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_file_size_bytes_) -
      reinterpret_cast<char*>(&statsd_metadata_)) + sizeof(max_file_size_bytes_));
}

TraceConfig::~TraceConfig() {
  // @@protoc_insertion_point(destructor:perfetto.protos.TraceConfig)
  SharedDtor();
}

void TraceConfig::SharedDtor() {
  if (this != internal_default_instance()) {
    delete statsd_metadata_;
  }
  if (this != internal_default_instance()) {
    delete guardrail_overrides_;
  }
}

void TraceConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TraceConfig& TraceConfig::default_instance() {
  protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

TraceConfig* TraceConfig::New(::google::protobuf::Arena* arena) const {
  TraceConfig* n = new TraceConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TraceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.TraceConfig)
  buffers_.Clear();
  data_sources_.Clear();
  producers_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_statsd_metadata()) {
      GOOGLE_DCHECK(statsd_metadata_ != NULL);
      statsd_metadata_->::perfetto::protos::TraceConfig_StatsdMetadata::Clear();
    }
    if (has_guardrail_overrides()) {
      GOOGLE_DCHECK(guardrail_overrides_ != NULL);
      guardrail_overrides_->::perfetto::protos::TraceConfig_GuardrailOverrides::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 252u) {
    ::memset(&duration_ms_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_file_size_bytes_) -
        reinterpret_cast<char*>(&duration_ms_)) + sizeof(max_file_size_bytes_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TraceConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.TraceConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .perfetto.protos.TraceConfig.BufferConfig buffers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_buffers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .perfetto.protos.TraceConfig.DataSource data_sources = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data_sources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 duration_ms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_duration_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &duration_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enable_extra_guardrails = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_enable_extra_guardrails();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_extra_guardrails_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.TraceConfig.LockdownModeOperation lockdown_mode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::perfetto::protos::TraceConfig_LockdownModeOperation_IsValid(value)) {
            set_lockdown_mode(static_cast< ::perfetto::protos::TraceConfig_LockdownModeOperation >(value));
          } else {
            unknown_fields_stream.WriteVarint32(40u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .perfetto.protos.TraceConfig.ProducerConfig producers = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_producers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.TraceConfig.StatsdMetadata statsd_metadata = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_statsd_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool write_into_file = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_write_into_file();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &write_into_file_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 file_write_period_ms = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_file_write_period_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_write_period_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 max_file_size_bytes = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_max_file_size_bytes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_file_size_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.TraceConfig.GuardrailOverrides guardrail_overrides = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_guardrail_overrides()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.TraceConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.TraceConfig)
  return false;
#undef DO_
}

void TraceConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.TraceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .perfetto.protos.TraceConfig.BufferConfig buffers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buffers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->buffers(static_cast<int>(i)), output);
  }

  // repeated .perfetto.protos.TraceConfig.DataSource data_sources = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_sources_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->data_sources(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 duration_ms = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->duration_ms(), output);
  }

  // optional bool enable_extra_guardrails = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->enable_extra_guardrails(), output);
  }

  // optional .perfetto.protos.TraceConfig.LockdownModeOperation lockdown_mode = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->lockdown_mode(), output);
  }

  // repeated .perfetto.protos.TraceConfig.ProducerConfig producers = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->producers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->producers(static_cast<int>(i)), output);
  }

  // optional .perfetto.protos.TraceConfig.StatsdMetadata statsd_metadata = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7, *this->statsd_metadata_, output);
  }

  // optional bool write_into_file = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->write_into_file(), output);
  }

  // optional uint32 file_write_period_ms = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->file_write_period_ms(), output);
  }

  // optional uint64 max_file_size_bytes = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->max_file_size_bytes(), output);
  }

  // optional .perfetto.protos.TraceConfig.GuardrailOverrides guardrail_overrides = 11;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      11, *this->guardrail_overrides_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.TraceConfig)
}

size_t TraceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.TraceConfig)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated .perfetto.protos.TraceConfig.BufferConfig buffers = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->buffers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->buffers(static_cast<int>(i)));
    }
  }

  // repeated .perfetto.protos.TraceConfig.DataSource data_sources = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->data_sources_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data_sources(static_cast<int>(i)));
    }
  }

  // repeated .perfetto.protos.TraceConfig.ProducerConfig producers = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->producers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->producers(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional .perfetto.protos.TraceConfig.StatsdMetadata statsd_metadata = 7;
    if (has_statsd_metadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->statsd_metadata_);
    }

    // optional .perfetto.protos.TraceConfig.GuardrailOverrides guardrail_overrides = 11;
    if (has_guardrail_overrides()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->guardrail_overrides_);
    }

    // optional uint32 duration_ms = 3;
    if (has_duration_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->duration_ms());
    }

    // optional .perfetto.protos.TraceConfig.LockdownModeOperation lockdown_mode = 5;
    if (has_lockdown_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->lockdown_mode());
    }

    // optional bool enable_extra_guardrails = 4;
    if (has_enable_extra_guardrails()) {
      total_size += 1 + 1;
    }

    // optional bool write_into_file = 8;
    if (has_write_into_file()) {
      total_size += 1 + 1;
    }

    // optional uint32 file_write_period_ms = 9;
    if (has_file_write_period_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->file_write_period_ms());
    }

    // optional uint64 max_file_size_bytes = 10;
    if (has_max_file_size_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->max_file_size_bytes());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TraceConfig::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TraceConfig*>(&from));
}

void TraceConfig::MergeFrom(const TraceConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.TraceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  buffers_.MergeFrom(from.buffers_);
  data_sources_.MergeFrom(from.data_sources_);
  producers_.MergeFrom(from.producers_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_statsd_metadata()->::perfetto::protos::TraceConfig_StatsdMetadata::MergeFrom(from.statsd_metadata());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_guardrail_overrides()->::perfetto::protos::TraceConfig_GuardrailOverrides::MergeFrom(from.guardrail_overrides());
    }
    if (cached_has_bits & 0x00000004u) {
      duration_ms_ = from.duration_ms_;
    }
    if (cached_has_bits & 0x00000008u) {
      lockdown_mode_ = from.lockdown_mode_;
    }
    if (cached_has_bits & 0x00000010u) {
      enable_extra_guardrails_ = from.enable_extra_guardrails_;
    }
    if (cached_has_bits & 0x00000020u) {
      write_into_file_ = from.write_into_file_;
    }
    if (cached_has_bits & 0x00000040u) {
      file_write_period_ms_ = from.file_write_period_ms_;
    }
    if (cached_has_bits & 0x00000080u) {
      max_file_size_bytes_ = from.max_file_size_bytes_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TraceConfig::CopyFrom(const TraceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.TraceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceConfig::IsInitialized() const {
  return true;
}

void TraceConfig::Swap(TraceConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TraceConfig::InternalSwap(TraceConfig* other) {
  buffers_.InternalSwap(&other->buffers_);
  data_sources_.InternalSwap(&other->data_sources_);
  producers_.InternalSwap(&other->producers_);
  std::swap(statsd_metadata_, other->statsd_metadata_);
  std::swap(guardrail_overrides_, other->guardrail_overrides_);
  std::swap(duration_ms_, other->duration_ms_);
  std::swap(lockdown_mode_, other->lockdown_mode_);
  std::swap(enable_extra_guardrails_, other->enable_extra_guardrails_);
  std::swap(write_into_file_, other->write_into_file_);
  std::swap(file_write_period_ms_, other->file_write_period_ms_);
  std::swap(max_file_size_bytes_, other->max_file_size_bytes_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TraceConfig::GetTypeName() const {
  return "perfetto.protos.TraceConfig";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TraceConfig

// repeated .perfetto.protos.TraceConfig.BufferConfig buffers = 1;
int TraceConfig::buffers_size() const {
  return buffers_.size();
}
void TraceConfig::clear_buffers() {
  buffers_.Clear();
}
const ::perfetto::protos::TraceConfig_BufferConfig& TraceConfig::buffers(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.buffers)
  return buffers_.Get(index);
}
::perfetto::protos::TraceConfig_BufferConfig* TraceConfig::mutable_buffers(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.buffers)
  return buffers_.Mutable(index);
}
::perfetto::protos::TraceConfig_BufferConfig* TraceConfig::add_buffers() {
  // @@protoc_insertion_point(field_add:perfetto.protos.TraceConfig.buffers)
  return buffers_.Add();
}
::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_BufferConfig >*
TraceConfig::mutable_buffers() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.TraceConfig.buffers)
  return &buffers_;
}
const ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_BufferConfig >&
TraceConfig::buffers() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.TraceConfig.buffers)
  return buffers_;
}

// repeated .perfetto.protos.TraceConfig.DataSource data_sources = 2;
int TraceConfig::data_sources_size() const {
  return data_sources_.size();
}
void TraceConfig::clear_data_sources() {
  data_sources_.Clear();
}
const ::perfetto::protos::TraceConfig_DataSource& TraceConfig::data_sources(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.data_sources)
  return data_sources_.Get(index);
}
::perfetto::protos::TraceConfig_DataSource* TraceConfig::mutable_data_sources(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.data_sources)
  return data_sources_.Mutable(index);
}
::perfetto::protos::TraceConfig_DataSource* TraceConfig::add_data_sources() {
  // @@protoc_insertion_point(field_add:perfetto.protos.TraceConfig.data_sources)
  return data_sources_.Add();
}
::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_DataSource >*
TraceConfig::mutable_data_sources() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.TraceConfig.data_sources)
  return &data_sources_;
}
const ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_DataSource >&
TraceConfig::data_sources() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.TraceConfig.data_sources)
  return data_sources_;
}

// optional uint32 duration_ms = 3;
bool TraceConfig::has_duration_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TraceConfig::set_has_duration_ms() {
  _has_bits_[0] |= 0x00000004u;
}
void TraceConfig::clear_has_duration_ms() {
  _has_bits_[0] &= ~0x00000004u;
}
void TraceConfig::clear_duration_ms() {
  duration_ms_ = 0u;
  clear_has_duration_ms();
}
::google::protobuf::uint32 TraceConfig::duration_ms() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.duration_ms)
  return duration_ms_;
}
void TraceConfig::set_duration_ms(::google::protobuf::uint32 value) {
  set_has_duration_ms();
  duration_ms_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.duration_ms)
}

// optional bool enable_extra_guardrails = 4;
bool TraceConfig::has_enable_extra_guardrails() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TraceConfig::set_has_enable_extra_guardrails() {
  _has_bits_[0] |= 0x00000010u;
}
void TraceConfig::clear_has_enable_extra_guardrails() {
  _has_bits_[0] &= ~0x00000010u;
}
void TraceConfig::clear_enable_extra_guardrails() {
  enable_extra_guardrails_ = false;
  clear_has_enable_extra_guardrails();
}
bool TraceConfig::enable_extra_guardrails() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.enable_extra_guardrails)
  return enable_extra_guardrails_;
}
void TraceConfig::set_enable_extra_guardrails(bool value) {
  set_has_enable_extra_guardrails();
  enable_extra_guardrails_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.enable_extra_guardrails)
}

// optional .perfetto.protos.TraceConfig.LockdownModeOperation lockdown_mode = 5;
bool TraceConfig::has_lockdown_mode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TraceConfig::set_has_lockdown_mode() {
  _has_bits_[0] |= 0x00000008u;
}
void TraceConfig::clear_has_lockdown_mode() {
  _has_bits_[0] &= ~0x00000008u;
}
void TraceConfig::clear_lockdown_mode() {
  lockdown_mode_ = 0;
  clear_has_lockdown_mode();
}
::perfetto::protos::TraceConfig_LockdownModeOperation TraceConfig::lockdown_mode() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.lockdown_mode)
  return static_cast< ::perfetto::protos::TraceConfig_LockdownModeOperation >(lockdown_mode_);
}
void TraceConfig::set_lockdown_mode(::perfetto::protos::TraceConfig_LockdownModeOperation value) {
  assert(::perfetto::protos::TraceConfig_LockdownModeOperation_IsValid(value));
  set_has_lockdown_mode();
  lockdown_mode_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.lockdown_mode)
}

// repeated .perfetto.protos.TraceConfig.ProducerConfig producers = 6;
int TraceConfig::producers_size() const {
  return producers_.size();
}
void TraceConfig::clear_producers() {
  producers_.Clear();
}
const ::perfetto::protos::TraceConfig_ProducerConfig& TraceConfig::producers(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.producers)
  return producers_.Get(index);
}
::perfetto::protos::TraceConfig_ProducerConfig* TraceConfig::mutable_producers(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.producers)
  return producers_.Mutable(index);
}
::perfetto::protos::TraceConfig_ProducerConfig* TraceConfig::add_producers() {
  // @@protoc_insertion_point(field_add:perfetto.protos.TraceConfig.producers)
  return producers_.Add();
}
::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_ProducerConfig >*
TraceConfig::mutable_producers() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.TraceConfig.producers)
  return &producers_;
}
const ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_ProducerConfig >&
TraceConfig::producers() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.TraceConfig.producers)
  return producers_;
}

// optional .perfetto.protos.TraceConfig.StatsdMetadata statsd_metadata = 7;
bool TraceConfig::has_statsd_metadata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TraceConfig::set_has_statsd_metadata() {
  _has_bits_[0] |= 0x00000001u;
}
void TraceConfig::clear_has_statsd_metadata() {
  _has_bits_[0] &= ~0x00000001u;
}
void TraceConfig::clear_statsd_metadata() {
  if (statsd_metadata_ != NULL) statsd_metadata_->::perfetto::protos::TraceConfig_StatsdMetadata::Clear();
  clear_has_statsd_metadata();
}
const ::perfetto::protos::TraceConfig_StatsdMetadata& TraceConfig::statsd_metadata() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.statsd_metadata)
  return statsd_metadata_ != NULL ? *statsd_metadata_
                         : *::perfetto::protos::TraceConfig_StatsdMetadata::internal_default_instance();
}
::perfetto::protos::TraceConfig_StatsdMetadata* TraceConfig::mutable_statsd_metadata() {
  set_has_statsd_metadata();
  if (statsd_metadata_ == NULL) {
    statsd_metadata_ = new ::perfetto::protos::TraceConfig_StatsdMetadata;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.statsd_metadata)
  return statsd_metadata_;
}
::perfetto::protos::TraceConfig_StatsdMetadata* TraceConfig::release_statsd_metadata() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TraceConfig.statsd_metadata)
  clear_has_statsd_metadata();
  ::perfetto::protos::TraceConfig_StatsdMetadata* temp = statsd_metadata_;
  statsd_metadata_ = NULL;
  return temp;
}
void TraceConfig::set_allocated_statsd_metadata(::perfetto::protos::TraceConfig_StatsdMetadata* statsd_metadata) {
  delete statsd_metadata_;
  statsd_metadata_ = statsd_metadata;
  if (statsd_metadata) {
    set_has_statsd_metadata();
  } else {
    clear_has_statsd_metadata();
  }
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TraceConfig.statsd_metadata)
}

// optional bool write_into_file = 8;
bool TraceConfig::has_write_into_file() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TraceConfig::set_has_write_into_file() {
  _has_bits_[0] |= 0x00000020u;
}
void TraceConfig::clear_has_write_into_file() {
  _has_bits_[0] &= ~0x00000020u;
}
void TraceConfig::clear_write_into_file() {
  write_into_file_ = false;
  clear_has_write_into_file();
}
bool TraceConfig::write_into_file() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.write_into_file)
  return write_into_file_;
}
void TraceConfig::set_write_into_file(bool value) {
  set_has_write_into_file();
  write_into_file_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.write_into_file)
}

// optional uint32 file_write_period_ms = 9;
bool TraceConfig::has_file_write_period_ms() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void TraceConfig::set_has_file_write_period_ms() {
  _has_bits_[0] |= 0x00000040u;
}
void TraceConfig::clear_has_file_write_period_ms() {
  _has_bits_[0] &= ~0x00000040u;
}
void TraceConfig::clear_file_write_period_ms() {
  file_write_period_ms_ = 0u;
  clear_has_file_write_period_ms();
}
::google::protobuf::uint32 TraceConfig::file_write_period_ms() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.file_write_period_ms)
  return file_write_period_ms_;
}
void TraceConfig::set_file_write_period_ms(::google::protobuf::uint32 value) {
  set_has_file_write_period_ms();
  file_write_period_ms_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.file_write_period_ms)
}

// optional uint64 max_file_size_bytes = 10;
bool TraceConfig::has_max_file_size_bytes() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void TraceConfig::set_has_max_file_size_bytes() {
  _has_bits_[0] |= 0x00000080u;
}
void TraceConfig::clear_has_max_file_size_bytes() {
  _has_bits_[0] &= ~0x00000080u;
}
void TraceConfig::clear_max_file_size_bytes() {
  max_file_size_bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_max_file_size_bytes();
}
::google::protobuf::uint64 TraceConfig::max_file_size_bytes() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.max_file_size_bytes)
  return max_file_size_bytes_;
}
void TraceConfig::set_max_file_size_bytes(::google::protobuf::uint64 value) {
  set_has_max_file_size_bytes();
  max_file_size_bytes_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.max_file_size_bytes)
}

// optional .perfetto.protos.TraceConfig.GuardrailOverrides guardrail_overrides = 11;
bool TraceConfig::has_guardrail_overrides() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TraceConfig::set_has_guardrail_overrides() {
  _has_bits_[0] |= 0x00000002u;
}
void TraceConfig::clear_has_guardrail_overrides() {
  _has_bits_[0] &= ~0x00000002u;
}
void TraceConfig::clear_guardrail_overrides() {
  if (guardrail_overrides_ != NULL) guardrail_overrides_->::perfetto::protos::TraceConfig_GuardrailOverrides::Clear();
  clear_has_guardrail_overrides();
}
const ::perfetto::protos::TraceConfig_GuardrailOverrides& TraceConfig::guardrail_overrides() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.guardrail_overrides)
  return guardrail_overrides_ != NULL ? *guardrail_overrides_
                         : *::perfetto::protos::TraceConfig_GuardrailOverrides::internal_default_instance();
}
::perfetto::protos::TraceConfig_GuardrailOverrides* TraceConfig::mutable_guardrail_overrides() {
  set_has_guardrail_overrides();
  if (guardrail_overrides_ == NULL) {
    guardrail_overrides_ = new ::perfetto::protos::TraceConfig_GuardrailOverrides;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.guardrail_overrides)
  return guardrail_overrides_;
}
::perfetto::protos::TraceConfig_GuardrailOverrides* TraceConfig::release_guardrail_overrides() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TraceConfig.guardrail_overrides)
  clear_has_guardrail_overrides();
  ::perfetto::protos::TraceConfig_GuardrailOverrides* temp = guardrail_overrides_;
  guardrail_overrides_ = NULL;
  return temp;
}
void TraceConfig::set_allocated_guardrail_overrides(::perfetto::protos::TraceConfig_GuardrailOverrides* guardrail_overrides) {
  delete guardrail_overrides_;
  guardrail_overrides_ = guardrail_overrides;
  if (guardrail_overrides) {
    set_has_guardrail_overrides();
  } else {
    clear_has_guardrail_overrides();
  }
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TraceConfig.guardrail_overrides)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace perfetto

// @@protoc_insertion_point(global_scope)
