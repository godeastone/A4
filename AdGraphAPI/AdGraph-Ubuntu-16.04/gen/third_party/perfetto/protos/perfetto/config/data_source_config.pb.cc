// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perfetto/config/data_source_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "perfetto/config/data_source_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace perfetto {
namespace protos {
class DataSourceConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DataSourceConfig> {
} _DataSourceConfig_default_instance_;

namespace protobuf_perfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _DataSourceConfig_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::perfetto::protos::protobuf_perfetto_2fconfig_2fchrome_2fchrome_5fconfig_2eproto::InitDefaults();
  ::perfetto::protos::protobuf_perfetto_2fconfig_2fftrace_2fftrace_5fconfig_2eproto::InitDefaults();
  ::perfetto::protos::protobuf_perfetto_2fconfig_2finode_5ffile_2finode_5ffile_5fconfig_2eproto::InitDefaults();
  ::perfetto::protos::protobuf_perfetto_2fconfig_2fprocess_5fstats_2fprocess_5fstats_5fconfig_2eproto::InitDefaults();
  ::perfetto::protos::protobuf_perfetto_2fconfig_2ftest_5fconfig_2eproto::InitDefaults();
  _DataSourceConfig_default_instance_.DefaultConstruct();
  _DataSourceConfig_default_instance_.get_mutable()->ftrace_config_ = const_cast< ::perfetto::protos::FtraceConfig*>(
      ::perfetto::protos::FtraceConfig::internal_default_instance());
  _DataSourceConfig_default_instance_.get_mutable()->chrome_config_ = const_cast< ::perfetto::protos::ChromeConfig*>(
      ::perfetto::protos::ChromeConfig::internal_default_instance());
  _DataSourceConfig_default_instance_.get_mutable()->inode_file_config_ = const_cast< ::perfetto::protos::InodeFileConfig*>(
      ::perfetto::protos::InodeFileConfig::internal_default_instance());
  _DataSourceConfig_default_instance_.get_mutable()->process_stats_config_ = const_cast< ::perfetto::protos::ProcessStatsConfig*>(
      ::perfetto::protos::ProcessStatsConfig::internal_default_instance());
  _DataSourceConfig_default_instance_.get_mutable()->for_testing_ = const_cast< ::perfetto::protos::TestConfig*>(
      ::perfetto::protos::TestConfig::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::perfetto::protos::protobuf_perfetto_2fconfig_2fchrome_2fchrome_5fconfig_2eproto::AddDescriptors();
  ::perfetto::protos::protobuf_perfetto_2fconfig_2fftrace_2fftrace_5fconfig_2eproto::AddDescriptors();
  ::perfetto::protos::protobuf_perfetto_2fconfig_2finode_5ffile_2finode_5ffile_5fconfig_2eproto::AddDescriptors();
  ::perfetto::protos::protobuf_perfetto_2fconfig_2fprocess_5fstats_2fprocess_5fstats_5fconfig_2eproto::AddDescriptors();
  ::perfetto::protos::protobuf_perfetto_2fconfig_2ftest_5fconfig_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_perfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataSourceConfig::kNameFieldNumber;
const int DataSourceConfig::kTargetBufferFieldNumber;
const int DataSourceConfig::kTraceDurationMsFieldNumber;
const int DataSourceConfig::kFtraceConfigFieldNumber;
const int DataSourceConfig::kChromeConfigFieldNumber;
const int DataSourceConfig::kInodeFileConfigFieldNumber;
const int DataSourceConfig::kProcessStatsConfigFieldNumber;
const int DataSourceConfig::kLegacyConfigFieldNumber;
const int DataSourceConfig::kForTestingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataSourceConfig::DataSourceConfig()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_perfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.DataSourceConfig)
}
DataSourceConfig::DataSourceConfig(const DataSourceConfig& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  legacy_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_legacy_config()) {
    legacy_config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.legacy_config_);
  }
  if (from.has_ftrace_config()) {
    ftrace_config_ = new ::perfetto::protos::FtraceConfig(*from.ftrace_config_);
  } else {
    ftrace_config_ = NULL;
  }
  if (from.has_chrome_config()) {
    chrome_config_ = new ::perfetto::protos::ChromeConfig(*from.chrome_config_);
  } else {
    chrome_config_ = NULL;
  }
  if (from.has_inode_file_config()) {
    inode_file_config_ = new ::perfetto::protos::InodeFileConfig(*from.inode_file_config_);
  } else {
    inode_file_config_ = NULL;
  }
  if (from.has_process_stats_config()) {
    process_stats_config_ = new ::perfetto::protos::ProcessStatsConfig(*from.process_stats_config_);
  } else {
    process_stats_config_ = NULL;
  }
  if (from.has_for_testing()) {
    for_testing_ = new ::perfetto::protos::TestConfig(*from.for_testing_);
  } else {
    for_testing_ = NULL;
  }
  ::memcpy(&target_buffer_, &from.target_buffer_,
    static_cast<size_t>(reinterpret_cast<char*>(&trace_duration_ms_) -
    reinterpret_cast<char*>(&target_buffer_)) + sizeof(trace_duration_ms_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.DataSourceConfig)
}

void DataSourceConfig::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  legacy_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ftrace_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trace_duration_ms_) -
      reinterpret_cast<char*>(&ftrace_config_)) + sizeof(trace_duration_ms_));
}

DataSourceConfig::~DataSourceConfig() {
  // @@protoc_insertion_point(destructor:perfetto.protos.DataSourceConfig)
  SharedDtor();
}

void DataSourceConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  legacy_config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete ftrace_config_;
  }
  if (this != internal_default_instance()) {
    delete chrome_config_;
  }
  if (this != internal_default_instance()) {
    delete inode_file_config_;
  }
  if (this != internal_default_instance()) {
    delete process_stats_config_;
  }
  if (this != internal_default_instance()) {
    delete for_testing_;
  }
}

void DataSourceConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DataSourceConfig& DataSourceConfig::default_instance() {
  protobuf_perfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

DataSourceConfig* DataSourceConfig::New(::google::protobuf::Arena* arena) const {
  DataSourceConfig* n = new DataSourceConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataSourceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.DataSourceConfig)
  if (_has_bits_[0 / 32] & 127u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_legacy_config()) {
      GOOGLE_DCHECK(!legacy_config_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*legacy_config_.UnsafeRawStringPointer())->clear();
    }
    if (has_ftrace_config()) {
      GOOGLE_DCHECK(ftrace_config_ != NULL);
      ftrace_config_->::perfetto::protos::FtraceConfig::Clear();
    }
    if (has_chrome_config()) {
      GOOGLE_DCHECK(chrome_config_ != NULL);
      chrome_config_->::perfetto::protos::ChromeConfig::Clear();
    }
    if (has_inode_file_config()) {
      GOOGLE_DCHECK(inode_file_config_ != NULL);
      inode_file_config_->::perfetto::protos::InodeFileConfig::Clear();
    }
    if (has_process_stats_config()) {
      GOOGLE_DCHECK(process_stats_config_ != NULL);
      process_stats_config_->::perfetto::protos::ProcessStatsConfig::Clear();
    }
    if (has_for_testing()) {
      GOOGLE_DCHECK(for_testing_ != NULL);
      for_testing_->::perfetto::protos::TestConfig::Clear();
    }
  }
  target_buffer_ = 0u;
  trace_duration_ms_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DataSourceConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.DataSourceConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4294967290u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 target_buffer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_target_buffer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_buffer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 trace_duration_ms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_trace_duration_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trace_duration_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.FtraceConfig ftrace_config = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ftrace_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.ChromeConfig chrome_config = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chrome_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.InodeFileConfig inode_file_config = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_inode_file_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.ProcessStatsConfig process_stats_config = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_process_stats_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string legacy_config = 1000;
      case 1000: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_legacy_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.TestConfig for_testing = 536870911;
      case 536870911: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_for_testing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.DataSourceConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.DataSourceConfig)
  return false;
#undef DO_
}

void DataSourceConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.DataSourceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 target_buffer = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_buffer(), output);
  }

  // optional uint32 trace_duration_ms = 3;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->trace_duration_ms(), output);
  }

  // optional .perfetto.protos.FtraceConfig ftrace_config = 100;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      100, *this->ftrace_config_, output);
  }

  // optional .perfetto.protos.ChromeConfig chrome_config = 101;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      101, *this->chrome_config_, output);
  }

  // optional .perfetto.protos.InodeFileConfig inode_file_config = 102;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      102, *this->inode_file_config_, output);
  }

  // optional .perfetto.protos.ProcessStatsConfig process_stats_config = 103;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      103, *this->process_stats_config_, output);
  }

  // optional string legacy_config = 1000;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1000, this->legacy_config(), output);
  }

  // optional .perfetto.protos.TestConfig for_testing = 536870911;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      536870911, *this->for_testing_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.DataSourceConfig)
}

size_t DataSourceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.DataSourceConfig)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string legacy_config = 1000;
    if (has_legacy_config()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->legacy_config());
    }

    // optional .perfetto.protos.FtraceConfig ftrace_config = 100;
    if (has_ftrace_config()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->ftrace_config_);
    }

    // optional .perfetto.protos.ChromeConfig chrome_config = 101;
    if (has_chrome_config()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->chrome_config_);
    }

    // optional .perfetto.protos.InodeFileConfig inode_file_config = 102;
    if (has_inode_file_config()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->inode_file_config_);
    }

    // optional .perfetto.protos.ProcessStatsConfig process_stats_config = 103;
    if (has_process_stats_config()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->process_stats_config_);
    }

    // optional .perfetto.protos.TestConfig for_testing = 536870911;
    if (has_for_testing()) {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->for_testing_);
    }

    // optional uint32 target_buffer = 2;
    if (has_target_buffer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->target_buffer());
    }

  }
  // optional uint32 trace_duration_ms = 3;
  if (has_trace_duration_ms()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->trace_duration_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataSourceConfig::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DataSourceConfig*>(&from));
}

void DataSourceConfig::MergeFrom(const DataSourceConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.DataSourceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_legacy_config();
      legacy_config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.legacy_config_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_ftrace_config()->::perfetto::protos::FtraceConfig::MergeFrom(from.ftrace_config());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_chrome_config()->::perfetto::protos::ChromeConfig::MergeFrom(from.chrome_config());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_inode_file_config()->::perfetto::protos::InodeFileConfig::MergeFrom(from.inode_file_config());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_process_stats_config()->::perfetto::protos::ProcessStatsConfig::MergeFrom(from.process_stats_config());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_for_testing()->::perfetto::protos::TestConfig::MergeFrom(from.for_testing());
    }
    if (cached_has_bits & 0x00000080u) {
      target_buffer_ = from.target_buffer_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_trace_duration_ms(from.trace_duration_ms());
  }
}

void DataSourceConfig::CopyFrom(const DataSourceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.DataSourceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataSourceConfig::IsInitialized() const {
  return true;
}

void DataSourceConfig::Swap(DataSourceConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataSourceConfig::InternalSwap(DataSourceConfig* other) {
  name_.Swap(&other->name_);
  legacy_config_.Swap(&other->legacy_config_);
  std::swap(ftrace_config_, other->ftrace_config_);
  std::swap(chrome_config_, other->chrome_config_);
  std::swap(inode_file_config_, other->inode_file_config_);
  std::swap(process_stats_config_, other->process_stats_config_);
  std::swap(for_testing_, other->for_testing_);
  std::swap(target_buffer_, other->target_buffer_);
  std::swap(trace_duration_ms_, other->trace_duration_ms_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string DataSourceConfig::GetTypeName() const {
  return "perfetto.protos.DataSourceConfig";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DataSourceConfig

// optional string name = 1;
bool DataSourceConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DataSourceConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void DataSourceConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void DataSourceConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& DataSourceConfig::name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.name)
  return name_.GetNoArena();
}
void DataSourceConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.DataSourceConfig.name)
}
#if LANG_CXX11
void DataSourceConfig::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.DataSourceConfig.name)
}
#endif
void DataSourceConfig::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.DataSourceConfig.name)
}
void DataSourceConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.DataSourceConfig.name)
}
::std::string* DataSourceConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataSourceConfig::release_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataSourceConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.name)
}

// optional uint32 target_buffer = 2;
bool DataSourceConfig::has_target_buffer() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void DataSourceConfig::set_has_target_buffer() {
  _has_bits_[0] |= 0x00000080u;
}
void DataSourceConfig::clear_has_target_buffer() {
  _has_bits_[0] &= ~0x00000080u;
}
void DataSourceConfig::clear_target_buffer() {
  target_buffer_ = 0u;
  clear_has_target_buffer();
}
::google::protobuf::uint32 DataSourceConfig::target_buffer() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.target_buffer)
  return target_buffer_;
}
void DataSourceConfig::set_target_buffer(::google::protobuf::uint32 value) {
  set_has_target_buffer();
  target_buffer_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.DataSourceConfig.target_buffer)
}

// optional uint32 trace_duration_ms = 3;
bool DataSourceConfig::has_trace_duration_ms() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void DataSourceConfig::set_has_trace_duration_ms() {
  _has_bits_[0] |= 0x00000100u;
}
void DataSourceConfig::clear_has_trace_duration_ms() {
  _has_bits_[0] &= ~0x00000100u;
}
void DataSourceConfig::clear_trace_duration_ms() {
  trace_duration_ms_ = 0u;
  clear_has_trace_duration_ms();
}
::google::protobuf::uint32 DataSourceConfig::trace_duration_ms() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.trace_duration_ms)
  return trace_duration_ms_;
}
void DataSourceConfig::set_trace_duration_ms(::google::protobuf::uint32 value) {
  set_has_trace_duration_ms();
  trace_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.DataSourceConfig.trace_duration_ms)
}

// optional .perfetto.protos.FtraceConfig ftrace_config = 100;
bool DataSourceConfig::has_ftrace_config() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DataSourceConfig::set_has_ftrace_config() {
  _has_bits_[0] |= 0x00000004u;
}
void DataSourceConfig::clear_has_ftrace_config() {
  _has_bits_[0] &= ~0x00000004u;
}
void DataSourceConfig::clear_ftrace_config() {
  if (ftrace_config_ != NULL) ftrace_config_->::perfetto::protos::FtraceConfig::Clear();
  clear_has_ftrace_config();
}
const ::perfetto::protos::FtraceConfig& DataSourceConfig::ftrace_config() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.ftrace_config)
  return ftrace_config_ != NULL ? *ftrace_config_
                         : *::perfetto::protos::FtraceConfig::internal_default_instance();
}
::perfetto::protos::FtraceConfig* DataSourceConfig::mutable_ftrace_config() {
  set_has_ftrace_config();
  if (ftrace_config_ == NULL) {
    ftrace_config_ = new ::perfetto::protos::FtraceConfig;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.ftrace_config)
  return ftrace_config_;
}
::perfetto::protos::FtraceConfig* DataSourceConfig::release_ftrace_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.ftrace_config)
  clear_has_ftrace_config();
  ::perfetto::protos::FtraceConfig* temp = ftrace_config_;
  ftrace_config_ = NULL;
  return temp;
}
void DataSourceConfig::set_allocated_ftrace_config(::perfetto::protos::FtraceConfig* ftrace_config) {
  delete ftrace_config_;
  ftrace_config_ = ftrace_config;
  if (ftrace_config) {
    set_has_ftrace_config();
  } else {
    clear_has_ftrace_config();
  }
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.ftrace_config)
}

// optional .perfetto.protos.ChromeConfig chrome_config = 101;
bool DataSourceConfig::has_chrome_config() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DataSourceConfig::set_has_chrome_config() {
  _has_bits_[0] |= 0x00000008u;
}
void DataSourceConfig::clear_has_chrome_config() {
  _has_bits_[0] &= ~0x00000008u;
}
void DataSourceConfig::clear_chrome_config() {
  if (chrome_config_ != NULL) chrome_config_->::perfetto::protos::ChromeConfig::Clear();
  clear_has_chrome_config();
}
const ::perfetto::protos::ChromeConfig& DataSourceConfig::chrome_config() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.chrome_config)
  return chrome_config_ != NULL ? *chrome_config_
                         : *::perfetto::protos::ChromeConfig::internal_default_instance();
}
::perfetto::protos::ChromeConfig* DataSourceConfig::mutable_chrome_config() {
  set_has_chrome_config();
  if (chrome_config_ == NULL) {
    chrome_config_ = new ::perfetto::protos::ChromeConfig;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.chrome_config)
  return chrome_config_;
}
::perfetto::protos::ChromeConfig* DataSourceConfig::release_chrome_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.chrome_config)
  clear_has_chrome_config();
  ::perfetto::protos::ChromeConfig* temp = chrome_config_;
  chrome_config_ = NULL;
  return temp;
}
void DataSourceConfig::set_allocated_chrome_config(::perfetto::protos::ChromeConfig* chrome_config) {
  delete chrome_config_;
  chrome_config_ = chrome_config;
  if (chrome_config) {
    set_has_chrome_config();
  } else {
    clear_has_chrome_config();
  }
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.chrome_config)
}

// optional .perfetto.protos.InodeFileConfig inode_file_config = 102;
bool DataSourceConfig::has_inode_file_config() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DataSourceConfig::set_has_inode_file_config() {
  _has_bits_[0] |= 0x00000010u;
}
void DataSourceConfig::clear_has_inode_file_config() {
  _has_bits_[0] &= ~0x00000010u;
}
void DataSourceConfig::clear_inode_file_config() {
  if (inode_file_config_ != NULL) inode_file_config_->::perfetto::protos::InodeFileConfig::Clear();
  clear_has_inode_file_config();
}
const ::perfetto::protos::InodeFileConfig& DataSourceConfig::inode_file_config() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.inode_file_config)
  return inode_file_config_ != NULL ? *inode_file_config_
                         : *::perfetto::protos::InodeFileConfig::internal_default_instance();
}
::perfetto::protos::InodeFileConfig* DataSourceConfig::mutable_inode_file_config() {
  set_has_inode_file_config();
  if (inode_file_config_ == NULL) {
    inode_file_config_ = new ::perfetto::protos::InodeFileConfig;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.inode_file_config)
  return inode_file_config_;
}
::perfetto::protos::InodeFileConfig* DataSourceConfig::release_inode_file_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.inode_file_config)
  clear_has_inode_file_config();
  ::perfetto::protos::InodeFileConfig* temp = inode_file_config_;
  inode_file_config_ = NULL;
  return temp;
}
void DataSourceConfig::set_allocated_inode_file_config(::perfetto::protos::InodeFileConfig* inode_file_config) {
  delete inode_file_config_;
  inode_file_config_ = inode_file_config;
  if (inode_file_config) {
    set_has_inode_file_config();
  } else {
    clear_has_inode_file_config();
  }
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.inode_file_config)
}

// optional .perfetto.protos.ProcessStatsConfig process_stats_config = 103;
bool DataSourceConfig::has_process_stats_config() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void DataSourceConfig::set_has_process_stats_config() {
  _has_bits_[0] |= 0x00000020u;
}
void DataSourceConfig::clear_has_process_stats_config() {
  _has_bits_[0] &= ~0x00000020u;
}
void DataSourceConfig::clear_process_stats_config() {
  if (process_stats_config_ != NULL) process_stats_config_->::perfetto::protos::ProcessStatsConfig::Clear();
  clear_has_process_stats_config();
}
const ::perfetto::protos::ProcessStatsConfig& DataSourceConfig::process_stats_config() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.process_stats_config)
  return process_stats_config_ != NULL ? *process_stats_config_
                         : *::perfetto::protos::ProcessStatsConfig::internal_default_instance();
}
::perfetto::protos::ProcessStatsConfig* DataSourceConfig::mutable_process_stats_config() {
  set_has_process_stats_config();
  if (process_stats_config_ == NULL) {
    process_stats_config_ = new ::perfetto::protos::ProcessStatsConfig;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.process_stats_config)
  return process_stats_config_;
}
::perfetto::protos::ProcessStatsConfig* DataSourceConfig::release_process_stats_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.process_stats_config)
  clear_has_process_stats_config();
  ::perfetto::protos::ProcessStatsConfig* temp = process_stats_config_;
  process_stats_config_ = NULL;
  return temp;
}
void DataSourceConfig::set_allocated_process_stats_config(::perfetto::protos::ProcessStatsConfig* process_stats_config) {
  delete process_stats_config_;
  process_stats_config_ = process_stats_config;
  if (process_stats_config) {
    set_has_process_stats_config();
  } else {
    clear_has_process_stats_config();
  }
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.process_stats_config)
}

// optional string legacy_config = 1000;
bool DataSourceConfig::has_legacy_config() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DataSourceConfig::set_has_legacy_config() {
  _has_bits_[0] |= 0x00000002u;
}
void DataSourceConfig::clear_has_legacy_config() {
  _has_bits_[0] &= ~0x00000002u;
}
void DataSourceConfig::clear_legacy_config() {
  legacy_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_legacy_config();
}
const ::std::string& DataSourceConfig::legacy_config() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.legacy_config)
  return legacy_config_.GetNoArena();
}
void DataSourceConfig::set_legacy_config(const ::std::string& value) {
  set_has_legacy_config();
  legacy_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.DataSourceConfig.legacy_config)
}
#if LANG_CXX11
void DataSourceConfig::set_legacy_config(::std::string&& value) {
  set_has_legacy_config();
  legacy_config_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.DataSourceConfig.legacy_config)
}
#endif
void DataSourceConfig::set_legacy_config(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_legacy_config();
  legacy_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.DataSourceConfig.legacy_config)
}
void DataSourceConfig::set_legacy_config(const char* value, size_t size) {
  set_has_legacy_config();
  legacy_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.DataSourceConfig.legacy_config)
}
::std::string* DataSourceConfig::mutable_legacy_config() {
  set_has_legacy_config();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.legacy_config)
  return legacy_config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataSourceConfig::release_legacy_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.legacy_config)
  clear_has_legacy_config();
  return legacy_config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataSourceConfig::set_allocated_legacy_config(::std::string* legacy_config) {
  if (legacy_config != NULL) {
    set_has_legacy_config();
  } else {
    clear_has_legacy_config();
  }
  legacy_config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), legacy_config);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.legacy_config)
}

// optional .perfetto.protos.TestConfig for_testing = 536870911;
bool DataSourceConfig::has_for_testing() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void DataSourceConfig::set_has_for_testing() {
  _has_bits_[0] |= 0x00000040u;
}
void DataSourceConfig::clear_has_for_testing() {
  _has_bits_[0] &= ~0x00000040u;
}
void DataSourceConfig::clear_for_testing() {
  if (for_testing_ != NULL) for_testing_->::perfetto::protos::TestConfig::Clear();
  clear_has_for_testing();
}
const ::perfetto::protos::TestConfig& DataSourceConfig::for_testing() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.for_testing)
  return for_testing_ != NULL ? *for_testing_
                         : *::perfetto::protos::TestConfig::internal_default_instance();
}
::perfetto::protos::TestConfig* DataSourceConfig::mutable_for_testing() {
  set_has_for_testing();
  if (for_testing_ == NULL) {
    for_testing_ = new ::perfetto::protos::TestConfig;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.for_testing)
  return for_testing_;
}
::perfetto::protos::TestConfig* DataSourceConfig::release_for_testing() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.for_testing)
  clear_has_for_testing();
  ::perfetto::protos::TestConfig* temp = for_testing_;
  for_testing_ = NULL;
  return temp;
}
void DataSourceConfig::set_allocated_for_testing(::perfetto::protos::TestConfig* for_testing) {
  delete for_testing_;
  for_testing_ = for_testing;
  if (for_testing) {
    set_has_for_testing();
  } else {
    clear_has_for_testing();
  }
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.for_testing)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace perfetto

// @@protoc_insertion_point(global_scope)
