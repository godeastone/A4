// Autogenerated by the ProtoZero compiler plugin. DO NOT EDIT.

#include "perfetto/trace/ftrace/mdp_perf_set_wm_levels.pbzero.h"

namespace {
  static const ::protozero::ProtoFieldDescriptor kInvalidField = {"", ::protozero::ProtoFieldDescriptor::Type::TYPE_INVALID, 0, false};
}

namespace perfetto {
namespace protos {
namespace pbzero {

static const ::protozero::ProtoFieldDescriptor kFields_MdpPerfSetWmLevelsFtraceEvent[] = {
  {"pnum", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 1, 0},
  {"use_space", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 2, 0},
  {"priority_bytes", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 3, 0},
  {"wm0", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 4, 0},
  {"wm1", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 5, 0},
  {"wm2", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 6, 0},
  {"mb_cnt", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 7, 0},
  {"mb_size", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 8, 0},
};

const ::protozero::ProtoFieldDescriptor* MdpPerfSetWmLevelsFtraceEvent::GetFieldDescriptor(uint32_t field_id) {
  switch (field_id) {
    case kPnumFieldNumber:
      return &kFields_MdpPerfSetWmLevelsFtraceEvent[0];
    case kUseSpaceFieldNumber:
      return &kFields_MdpPerfSetWmLevelsFtraceEvent[1];
    case kPriorityBytesFieldNumber:
      return &kFields_MdpPerfSetWmLevelsFtraceEvent[2];
    case kWm0FieldNumber:
      return &kFields_MdpPerfSetWmLevelsFtraceEvent[3];
    case kWm1FieldNumber:
      return &kFields_MdpPerfSetWmLevelsFtraceEvent[4];
    case kWm2FieldNumber:
      return &kFields_MdpPerfSetWmLevelsFtraceEvent[5];
    case kMbCntFieldNumber:
      return &kFields_MdpPerfSetWmLevelsFtraceEvent[6];
    case kMbSizeFieldNumber:
      return &kFields_MdpPerfSetWmLevelsFtraceEvent[7];
    default:
      return &kInvalidField;
  }
}

} // Namespace.
} // Namespace.
} // Namespace.
