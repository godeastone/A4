// Autogenerated by the ProtoZero compiler plugin. DO NOT EDIT.

#include "perfetto/trace/ftrace/cgroup_release.pbzero.h"

namespace {
  static const ::protozero::ProtoFieldDescriptor kInvalidField = {"", ::protozero::ProtoFieldDescriptor::Type::TYPE_INVALID, 0, false};
}

namespace perfetto {
namespace protos {
namespace pbzero {

static const ::protozero::ProtoFieldDescriptor kFields_CgroupReleaseFtraceEvent[] = {
  {"root", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT32, 1, 0},
  {"id", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT32, 2, 0},
  {"cname", ::protozero::ProtoFieldDescriptor::Type::TYPE_STRING, 3, 0},
};

const ::protozero::ProtoFieldDescriptor* CgroupReleaseFtraceEvent::GetFieldDescriptor(uint32_t field_id) {
  switch (field_id) {
    case kRootFieldNumber:
      return &kFields_CgroupReleaseFtraceEvent[0];
    case kIdFieldNumber:
      return &kFields_CgroupReleaseFtraceEvent[1];
    case kCnameFieldNumber:
      return &kFields_CgroupReleaseFtraceEvent[2];
    default:
      return &kInvalidField;
  }
}

} // Namespace.
} // Namespace.
} // Namespace.
