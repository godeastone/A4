// Autogenerated by the ProtoZero compiler plugin. DO NOT EDIT.

#include "perfetto/trace/ftrace/f2fs_sync_file_enter.pbzero.h"

namespace {
  static const ::protozero::ProtoFieldDescriptor kInvalidField = {"", ::protozero::ProtoFieldDescriptor::Type::TYPE_INVALID, 0, false};
}

namespace perfetto {
namespace protos {
namespace pbzero {

static const ::protozero::ProtoFieldDescriptor kFields_F2fsSyncFileEnterFtraceEvent[] = {
  {"dev", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT64, 1, 0},
  {"ino", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT64, 2, 0},
  {"pino", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT64, 3, 0},
  {"mode", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 4, 0},
  {"size", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT64, 5, 0},
  {"nlink", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 6, 0},
  {"blocks", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT64, 7, 0},
  {"advise", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 8, 0},
};

const ::protozero::ProtoFieldDescriptor* F2fsSyncFileEnterFtraceEvent::GetFieldDescriptor(uint32_t field_id) {
  switch (field_id) {
    case kDevFieldNumber:
      return &kFields_F2fsSyncFileEnterFtraceEvent[0];
    case kInoFieldNumber:
      return &kFields_F2fsSyncFileEnterFtraceEvent[1];
    case kPinoFieldNumber:
      return &kFields_F2fsSyncFileEnterFtraceEvent[2];
    case kModeFieldNumber:
      return &kFields_F2fsSyncFileEnterFtraceEvent[3];
    case kSizeFieldNumber:
      return &kFields_F2fsSyncFileEnterFtraceEvent[4];
    case kNlinkFieldNumber:
      return &kFields_F2fsSyncFileEnterFtraceEvent[5];
    case kBlocksFieldNumber:
      return &kFields_F2fsSyncFileEnterFtraceEvent[6];
    case kAdviseFieldNumber:
      return &kFields_F2fsSyncFileEnterFtraceEvent[7];
    default:
      return &kInvalidField;
  }
}

} // Namespace.
} // Namespace.
} // Namespace.
