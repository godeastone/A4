// Autogenerated by the ProtoZero compiler plugin. DO NOT EDIT.

#include "perfetto/trace/ftrace/mm_compaction_finished.pbzero.h"

namespace {
  static const ::protozero::ProtoFieldDescriptor kInvalidField = {"", ::protozero::ProtoFieldDescriptor::Type::TYPE_INVALID, 0, false};
}

namespace perfetto {
namespace protos {
namespace pbzero {

static const ::protozero::ProtoFieldDescriptor kFields_MmCompactionFinishedFtraceEvent[] = {
  {"nid", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT32, 1, 0},
  {"idx", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 2, 0},
  {"order", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT32, 3, 0},
  {"ret", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT32, 4, 0},
};

const ::protozero::ProtoFieldDescriptor* MmCompactionFinishedFtraceEvent::GetFieldDescriptor(uint32_t field_id) {
  switch (field_id) {
    case kNidFieldNumber:
      return &kFields_MmCompactionFinishedFtraceEvent[0];
    case kIdxFieldNumber:
      return &kFields_MmCompactionFinishedFtraceEvent[1];
    case kOrderFieldNumber:
      return &kFields_MmCompactionFinishedFtraceEvent[2];
    case kRetFieldNumber:
      return &kFields_MmCompactionFinishedFtraceEvent[3];
    default:
      return &kInvalidField;
  }
}

} // Namespace.
} // Namespace.
} // Namespace.
