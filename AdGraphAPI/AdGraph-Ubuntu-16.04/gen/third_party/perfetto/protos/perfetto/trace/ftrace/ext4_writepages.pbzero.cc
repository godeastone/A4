// Autogenerated by the ProtoZero compiler plugin. DO NOT EDIT.

#include "perfetto/trace/ftrace/ext4_writepages.pbzero.h"

namespace {
  static const ::protozero::ProtoFieldDescriptor kInvalidField = {"", ::protozero::ProtoFieldDescriptor::Type::TYPE_INVALID, 0, false};
}

namespace perfetto {
namespace protos {
namespace pbzero {

static const ::protozero::ProtoFieldDescriptor kFields_Ext4WritepagesFtraceEvent[] = {
  {"dev", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT64, 1, 0},
  {"ino", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT64, 2, 0},
  {"nr_to_write", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT64, 3, 0},
  {"pages_skipped", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT64, 4, 0},
  {"range_start", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT64, 5, 0},
  {"range_end", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT64, 6, 0},
  {"writeback_index", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT64, 7, 0},
  {"sync_mode", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT32, 8, 0},
  {"for_kupdate", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 9, 0},
  {"range_cyclic", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 10, 0},
};

const ::protozero::ProtoFieldDescriptor* Ext4WritepagesFtraceEvent::GetFieldDescriptor(uint32_t field_id) {
  switch (field_id) {
    case kDevFieldNumber:
      return &kFields_Ext4WritepagesFtraceEvent[0];
    case kInoFieldNumber:
      return &kFields_Ext4WritepagesFtraceEvent[1];
    case kNrToWriteFieldNumber:
      return &kFields_Ext4WritepagesFtraceEvent[2];
    case kPagesSkippedFieldNumber:
      return &kFields_Ext4WritepagesFtraceEvent[3];
    case kRangeStartFieldNumber:
      return &kFields_Ext4WritepagesFtraceEvent[4];
    case kRangeEndFieldNumber:
      return &kFields_Ext4WritepagesFtraceEvent[5];
    case kWritebackIndexFieldNumber:
      return &kFields_Ext4WritepagesFtraceEvent[6];
    case kSyncModeFieldNumber:
      return &kFields_Ext4WritepagesFtraceEvent[7];
    case kForKupdateFieldNumber:
      return &kFields_Ext4WritepagesFtraceEvent[8];
    case kRangeCyclicFieldNumber:
      return &kFields_Ext4WritepagesFtraceEvent[9];
    default:
      return &kInvalidField;
  }
}

} // Namespace.
} // Namespace.
} // Namespace.
