// Autogenerated by the ProtoZero compiler plugin. DO NOT EDIT.

#include "perfetto/trace/ftrace/f2fs_get_victim.pbzero.h"

namespace {
  static const ::protozero::ProtoFieldDescriptor kInvalidField = {"", ::protozero::ProtoFieldDescriptor::Type::TYPE_INVALID, 0, false};
}

namespace perfetto {
namespace protos {
namespace pbzero {

static const ::protozero::ProtoFieldDescriptor kFields_F2fsGetVictimFtraceEvent[] = {
  {"dev", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT64, 1, 0},
  {"type", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT32, 2, 0},
  {"gc_type", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT32, 3, 0},
  {"alloc_mode", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT32, 4, 0},
  {"gc_mode", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT32, 5, 0},
  {"victim", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 6, 0},
  {"ofs_unit", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 7, 0},
  {"pre_victim", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 8, 0},
  {"prefree", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 9, 0},
  {"free", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 10, 0},
};

const ::protozero::ProtoFieldDescriptor* F2fsGetVictimFtraceEvent::GetFieldDescriptor(uint32_t field_id) {
  switch (field_id) {
    case kDevFieldNumber:
      return &kFields_F2fsGetVictimFtraceEvent[0];
    case kTypeFieldNumber:
      return &kFields_F2fsGetVictimFtraceEvent[1];
    case kGcTypeFieldNumber:
      return &kFields_F2fsGetVictimFtraceEvent[2];
    case kAllocModeFieldNumber:
      return &kFields_F2fsGetVictimFtraceEvent[3];
    case kGcModeFieldNumber:
      return &kFields_F2fsGetVictimFtraceEvent[4];
    case kVictimFieldNumber:
      return &kFields_F2fsGetVictimFtraceEvent[5];
    case kOfsUnitFieldNumber:
      return &kFields_F2fsGetVictimFtraceEvent[6];
    case kPreVictimFieldNumber:
      return &kFields_F2fsGetVictimFtraceEvent[7];
    case kPrefreeFieldNumber:
      return &kFields_F2fsGetVictimFtraceEvent[8];
    case kFreeFieldNumber:
      return &kFields_F2fsGetVictimFtraceEvent[9];
    default:
      return &kInvalidField;
  }
}

} // Namespace.
} // Namespace.
} // Namespace.
