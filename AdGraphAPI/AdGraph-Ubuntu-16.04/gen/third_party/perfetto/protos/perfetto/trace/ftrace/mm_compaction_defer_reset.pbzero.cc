// Autogenerated by the ProtoZero compiler plugin. DO NOT EDIT.

#include "perfetto/trace/ftrace/mm_compaction_defer_reset.pbzero.h"

namespace {
  static const ::protozero::ProtoFieldDescriptor kInvalidField = {"", ::protozero::ProtoFieldDescriptor::Type::TYPE_INVALID, 0, false};
}

namespace perfetto {
namespace protos {
namespace pbzero {

static const ::protozero::ProtoFieldDescriptor kFields_MmCompactionDeferResetFtraceEvent[] = {
  {"nid", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT32, 1, 0},
  {"idx", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 2, 0},
  {"order", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT32, 3, 0},
  {"considered", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 4, 0},
  {"defer_shift", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 5, 0},
  {"order_failed", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT32, 6, 0},
};

const ::protozero::ProtoFieldDescriptor* MmCompactionDeferResetFtraceEvent::GetFieldDescriptor(uint32_t field_id) {
  switch (field_id) {
    case kNidFieldNumber:
      return &kFields_MmCompactionDeferResetFtraceEvent[0];
    case kIdxFieldNumber:
      return &kFields_MmCompactionDeferResetFtraceEvent[1];
    case kOrderFieldNumber:
      return &kFields_MmCompactionDeferResetFtraceEvent[2];
    case kConsideredFieldNumber:
      return &kFields_MmCompactionDeferResetFtraceEvent[3];
    case kDeferShiftFieldNumber:
      return &kFields_MmCompactionDeferResetFtraceEvent[4];
    case kOrderFailedFieldNumber:
      return &kFields_MmCompactionDeferResetFtraceEvent[5];
    default:
      return &kInvalidField;
  }
}

} // Namespace.
} // Namespace.
} // Namespace.
