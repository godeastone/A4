// Autogenerated by the ProtoZero compiler plugin. DO NOT EDIT.

#include "perfetto/trace/ftrace/mdp_cmd_pingpong_done.pbzero.h"

namespace {
  static const ::protozero::ProtoFieldDescriptor kInvalidField = {"", ::protozero::ProtoFieldDescriptor::Type::TYPE_INVALID, 0, false};
}

namespace perfetto {
namespace protos {
namespace pbzero {

static const ::protozero::ProtoFieldDescriptor kFields_MdpCmdPingpongDoneFtraceEvent[] = {
  {"ctl_num", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 1, 0},
  {"intf_num", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 2, 0},
  {"pp_num", ::protozero::ProtoFieldDescriptor::Type::TYPE_UINT32, 3, 0},
  {"koff_cnt", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT32, 4, 0},
};

const ::protozero::ProtoFieldDescriptor* MdpCmdPingpongDoneFtraceEvent::GetFieldDescriptor(uint32_t field_id) {
  switch (field_id) {
    case kCtlNumFieldNumber:
      return &kFields_MdpCmdPingpongDoneFtraceEvent[0];
    case kIntfNumFieldNumber:
      return &kFields_MdpCmdPingpongDoneFtraceEvent[1];
    case kPpNumFieldNumber:
      return &kFields_MdpCmdPingpongDoneFtraceEvent[2];
    case kKoffCntFieldNumber:
      return &kFields_MdpCmdPingpongDoneFtraceEvent[3];
    default:
      return &kInvalidField;
  }
}

} // Namespace.
} // Namespace.
} // Namespace.
