// Autogenerated by the ProtoZero compiler plugin. DO NOT EDIT.

#include "perfetto/trace/ftrace/sched_process_fork.pbzero.h"

namespace {
  static const ::protozero::ProtoFieldDescriptor kInvalidField = {"", ::protozero::ProtoFieldDescriptor::Type::TYPE_INVALID, 0, false};
}

namespace perfetto {
namespace protos {
namespace pbzero {

static const ::protozero::ProtoFieldDescriptor kFields_SchedProcessForkFtraceEvent[] = {
  {"parent_comm", ::protozero::ProtoFieldDescriptor::Type::TYPE_STRING, 1, 0},
  {"parent_pid", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT32, 2, 0},
  {"child_comm", ::protozero::ProtoFieldDescriptor::Type::TYPE_STRING, 3, 0},
  {"child_pid", ::protozero::ProtoFieldDescriptor::Type::TYPE_INT32, 4, 0},
};

const ::protozero::ProtoFieldDescriptor* SchedProcessForkFtraceEvent::GetFieldDescriptor(uint32_t field_id) {
  switch (field_id) {
    case kParentCommFieldNumber:
      return &kFields_SchedProcessForkFtraceEvent[0];
    case kParentPidFieldNumber:
      return &kFields_SchedProcessForkFtraceEvent[1];
    case kChildCommFieldNumber:
      return &kFields_SchedProcessForkFtraceEvent[2];
    case kChildPidFieldNumber:
      return &kFields_SchedProcessForkFtraceEvent[3];
    default:
      return &kInvalidField;
  }
}

} // Namespace.
} // Namespace.
} // Namespace.
