// Generated by third_party/WebKit/Source/build/scripts/gperf.py
/* C++ code produced by gperf version 3.0.4 */
/* Command-line: gperf --key-positions='*' -P -n -m 50 -D -Q CSSValueStringPool  */

#if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
      && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
      && (')' == 41) && ('*' == 42) && ('+' == 43) && (',' == 44) \
      && ('-' == 45) && ('.' == 46) && ('/' == 47) && ('0' == 48) \
      && ('1' == 49) && ('2' == 50) && ('3' == 51) && ('4' == 52) \
      && ('5' == 53) && ('6' == 54) && ('7' == 55) && ('8' == 56) \
      && ('9' == 57) && (':' == 58) && (';' == 59) && ('<' == 60) \
      && ('=' == 61) && ('>' == 62) && ('?' == 63) && ('A' == 65) \
      && ('B' == 66) && ('C' == 67) && ('D' == 68) && ('E' == 69) \
      && ('F' == 70) && ('G' == 71) && ('H' == 72) && ('I' == 73) \
      && ('J' == 74) && ('K' == 75) && ('L' == 76) && ('M' == 77) \
      && ('N' == 78) && ('O' == 79) && ('P' == 80) && ('Q' == 81) \
      && ('R' == 82) && ('S' == 83) && ('T' == 84) && ('U' == 85) \
      && ('V' == 86) && ('W' == 87) && ('X' == 88) && ('Y' == 89) \
      && ('Z' == 90) && ('[' == 91) && ('\\' == 92) && (']' == 93) \
      && ('^' == 94) && ('_' == 95) && ('a' == 97) && ('b' == 98) \
      && ('c' == 99) && ('d' == 100) && ('e' == 101) && ('f' == 102) \
      && ('g' == 103) && ('h' == 104) && ('i' == 105) && ('j' == 106) \
      && ('k' == 107) && ('l' == 108) && ('m' == 109) && ('n' == 110) \
      && ('o' == 111) && ('p' == 112) && ('q' == 113) && ('r' == 114) \
      && ('s' == 115) && ('t' == 116) && ('u' == 117) && ('v' == 118) \
      && ('w' == 119) && ('x' == 120) && ('y' == 121) && ('z' == 122) \
      && ('{' == 123) && ('|' == 124) && ('}' == 125) && ('~' == 126))
/* The character set is not based on ISO-646.  */
#error "gperf generated tables don't work with this execution character set. Please report a bug to <bug-gnu-gperf@gnu.org>."
#endif


// Copyright (c) 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "third_party/blink/renderer/core/css_value_keywords.h"

#include <string.h>
#include "third_party/blink/renderer/core/css/hash_tools.h"

#ifdef _MSC_VER
// Disable the warnings from casting a 64-bit pointer to 32-bit long
// warning C4302: 'type cast': truncation from 'char (*)[28]' to 'long'
// warning C4311: 'type cast': pointer truncation from 'char (*)[18]' to 'long'
#pragma warning(disable : 4302 4311)
#endif

namespace blink {
static const char valueListStringPool[] = {
  "inherit\0"
  "initial\0"
  "none\0"
  "hidden\0"
  "inset\0"
  "groove\0"
  "outset\0"
  "ridge\0"
  "dotted\0"
  "dashed\0"
  "solid\0"
  "double\0"
  "caption\0"
  "icon\0"
  "menu\0"
  "message-box\0"
  "small-caption\0"
  "-webkit-mini-control\0"
  "-webkit-small-control\0"
  "-webkit-control\0"
  "status-bar\0"
  "italic\0"
  "oblique\0"
  "all\0"
  "common-ligatures\0"
  "no-common-ligatures\0"
  "discretionary-ligatures\0"
  "no-discretionary-ligatures\0"
  "historical-ligatures\0"
  "no-historical-ligatures\0"
  "contextual\0"
  "no-contextual\0"
  "small-caps\0"
  "all-small-caps\0"
  "petite-caps\0"
  "all-petite-caps\0"
  "unicase\0"
  "titling-caps\0"
  "jis78\0"
  "jis83\0"
  "jis90\0"
  "jis04\0"
  "simplified\0"
  "traditional\0"
  "full-width\0"
  "proportional-width\0"
  "ruby\0"
  "lining-nums\0"
  "oldstyle-nums\0"
  "proportional-nums\0"
  "tabular-nums\0"
  "diagonal-fractions\0"
  "stacked-fractions\0"
  "ordinal\0"
  "slashed-zero\0"
  "normal\0"
  "bold\0"
  "bolder\0"
  "lighter\0"
  "ultra-condensed\0"
  "extra-condensed\0"
  "condensed\0"
  "semi-condensed\0"
  "semi-expanded\0"
  "expanded\0"
  "extra-expanded\0"
  "ultra-expanded\0"
  "xx-small\0"
  "x-small\0"
  "small\0"
  "medium\0"
  "large\0"
  "x-large\0"
  "xx-large\0"
  "-webkit-xxx-large\0"
  "smaller\0"
  "larger\0"
  "serif\0"
  "sans-serif\0"
  "cursive\0"
  "fantasy\0"
  "monospace\0"
  "-webkit-body\0"
  "-webkit-pictograph\0"
  "swap\0"
  "fallback\0"
  "optional\0"
  "aqua\0"
  "black\0"
  "blue\0"
  "fuchsia\0"
  "gray\0"
  "green\0"
  "lime\0"
  "maroon\0"
  "navy\0"
  "olive\0"
  "orange\0"
  "purple\0"
  "red\0"
  "silver\0"
  "teal\0"
  "white\0"
  "yellow\0"
  "transparent\0"
  "-webkit-link\0"
  "-webkit-activelink\0"
  "activeborder\0"
  "activecaption\0"
  "appworkspace\0"
  "background\0"
  "buttonface\0"
  "buttonhighlight\0"
  "buttonshadow\0"
  "buttontext\0"
  "captiontext\0"
  "graytext\0"
  "highlight\0"
  "highlighttext\0"
  "inactiveborder\0"
  "inactivecaption\0"
  "inactivecaptiontext\0"
  "infobackground\0"
  "infotext\0"
  "menutext\0"
  "scrollbar\0"
  "threeddarkshadow\0"
  "threedface\0"
  "threedhighlight\0"
  "threedlightshadow\0"
  "threedshadow\0"
  "window\0"
  "windowframe\0"
  "windowtext\0"
  "-internal-active-list-box-selection\0"
  "-internal-active-list-box-selection-text\0"
  "-internal-inactive-list-box-selection\0"
  "-internal-inactive-list-box-selection-text\0"
  "-webkit-focus-ring-color\0"
  "currentcolor\0"
  "grey\0"
  "-internal-quirk-inherit\0"
  "repeat\0"
  "repeat-x\0"
  "repeat-y\0"
  "no-repeat\0"
  "clear\0"
  "copy\0"
  "source-over\0"
  "source-in\0"
  "source-out\0"
  "source-atop\0"
  "destination-over\0"
  "destination-in\0"
  "destination-out\0"
  "destination-atop\0"
  "xor\0"
  "plus-lighter\0"
  "baseline\0"
  "middle\0"
  "sub\0"
  "super\0"
  "text-top\0"
  "text-bottom\0"
  "top\0"
  "bottom\0"
  "-webkit-baseline-middle\0"
  "-webkit-auto\0"
  "left\0"
  "right\0"
  "center\0"
  "justify\0"
  "-webkit-left\0"
  "-webkit-right\0"
  "-webkit-center\0"
  "-webkit-match-parent\0"
  "-internal-center\0"
  "inter-word\0"
  "distribute\0"
  "outside\0"
  "inside\0"
  "disc\0"
  "circle\0"
  "square\0"
  "decimal\0"
  "decimal-leading-zero\0"
  "arabic-indic\0"
  "bengali\0"
  "cambodian\0"
  "khmer\0"
  "devanagari\0"
  "gujarati\0"
  "gurmukhi\0"
  "kannada\0"
  "lao\0"
  "malayalam\0"
  "mongolian\0"
  "myanmar\0"
  "oriya\0"
  "persian\0"
  "urdu\0"
  "telugu\0"
  "tibetan\0"
  "thai\0"
  "lower-roman\0"
  "upper-roman\0"
  "lower-greek\0"
  "lower-alpha\0"
  "lower-latin\0"
  "upper-alpha\0"
  "upper-latin\0"
  "cjk-earthly-branch\0"
  "cjk-heavenly-stem\0"
  "ethiopic-halehame\0"
  "ethiopic-halehame-am\0"
  "ethiopic-halehame-ti-er\0"
  "ethiopic-halehame-ti-et\0"
  "hangul\0"
  "hangul-consonant\0"
  "korean-hangul-formal\0"
  "korean-hanja-formal\0"
  "korean-hanja-informal\0"
  "hebrew\0"
  "armenian\0"
  "lower-armenian\0"
  "upper-armenian\0"
  "georgian\0"
  "cjk-ideographic\0"
  "simp-chinese-formal\0"
  "simp-chinese-informal\0"
  "trad-chinese-formal\0"
  "trad-chinese-informal\0"
  "hiragana\0"
  "katakana\0"
  "hiragana-iroha\0"
  "katakana-iroha\0"
  "inline\0"
  "block\0"
  "flow-root\0"
  "list-item\0"
  "inline-block\0"
  "table\0"
  "inline-table\0"
  "table-row-group\0"
  "table-header-group\0"
  "table-footer-group\0"
  "table-row\0"
  "table-column-group\0"
  "table-column\0"
  "table-cell\0"
  "table-caption\0"
  "-webkit-box\0"
  "-webkit-inline-box\0"
  "flex\0"
  "inline-flex\0"
  "grid\0"
  "inline-grid\0"
  "contents\0"
  "-webkit-flex\0"
  "-webkit-inline-flex\0"
  "layout\0"
  "inline-layout\0"
  "auto\0"
  "crosshair\0"
  "default\0"
  "pointer\0"
  "move\0"
  "vertical-text\0"
  "cell\0"
  "context-menu\0"
  "alias\0"
  "progress\0"
  "no-drop\0"
  "not-allowed\0"
  "zoom-in\0"
  "zoom-out\0"
  "e-resize\0"
  "ne-resize\0"
  "nw-resize\0"
  "n-resize\0"
  "se-resize\0"
  "sw-resize\0"
  "s-resize\0"
  "w-resize\0"
  "ew-resize\0"
  "ns-resize\0"
  "nesw-resize\0"
  "nwse-resize\0"
  "col-resize\0"
  "row-resize\0"
  "text\0"
  "wait\0"
  "help\0"
  "all-scroll\0"
  "grab\0"
  "grabbing\0"
  "-webkit-grab\0"
  "-webkit-grabbing\0"
  "-webkit-zoom-in\0"
  "-webkit-zoom-out\0"
  "ltr\0"
  "rtl\0"
  "capitalize\0"
  "uppercase\0"
  "lowercase\0"
  "visible\0"
  "collapse\0"
  "a3\0"
  "a4\0"
  "a5\0"
  "above\0"
  "absolute\0"
  "always\0"
  "avoid\0"
  "b4\0"
  "b5\0"
  "below\0"
  "bidi-override\0"
  "blink\0"
  "both\0"
  "close-quote\0"
  "embed\0"
  "fixed\0"
  "hand\0"
  "hide\0"
  "isolate\0"
  "isolate-override\0"
  "plaintext\0"
  "-webkit-isolate\0"
  "-webkit-isolate-override\0"
  "-webkit-plaintext\0"
  "landscape\0"
  "ledger\0"
  "legal\0"
  "letter\0"
  "line-through\0"
  "local\0"
  "no-close-quote\0"
  "no-open-quote\0"
  "nowrap\0"
  "open-quote\0"
  "overlay\0"
  "overline\0"
  "portrait\0"
  "pre\0"
  "pre-line\0"
  "pre-wrap\0"
  "relative\0"
  "scroll\0"
  "separate\0"
  "show\0"
  "static\0"
  "thick\0"
  "thin\0"
  "underline\0"
  "wavy\0"
  "-webkit-nowrap\0"
  "stretch\0"
  "start\0"
  "end\0"
  "clone\0"
  "slice\0"
  "reverse\0"
  "horizontal\0"
  "vertical\0"
  "inline-axis\0"
  "block-axis\0"
  "flex-start\0"
  "flex-end\0"
  "space-between\0"
  "space-around\0"
  "space-evenly\0"
  "unsafe\0"
  "safe\0"
  "row\0"
  "row-reverse\0"
  "column\0"
  "column-reverse\0"
  "wrap\0"
  "wrap-reverse\0"
  "auto-flow\0"
  "dense\0"
  "read-only\0"
  "read-write\0"
  "read-write-plaintext-only\0"
  "element\0"
  "-webkit-min-content\0"
  "-webkit-max-content\0"
  "-webkit-fill-available\0"
  "-webkit-fit-content\0"
  "min-content\0"
  "max-content\0"
  "fit-content\0"
  "clip\0"
  "ellipsis\0"
  "discard\0"
  "break-all\0"
  "keep-all\0"
  "break-word\0"
  "space\0"
  "loose\0"
  "strict\0"
  "after-white-space\0"
  "manual\0"
  "checkbox\0"
  "radio\0"
  "push-button\0"
  "square-button\0"
  "button\0"
  "button-bevel\0"
  "inner-spin-button\0"
  "listbox\0"
  "listitem\0"
  "media-enter-fullscreen-button\0"
  "media-exit-fullscreen-button\0"
  "media-mute-button\0"
  "media-play-button\0"
  "media-overlay-play-button\0"
  "media-toggle-closed-captions-button\0"
  "media-slider\0"
  "media-sliderthumb\0"
  "media-volume-slider-container\0"
  "media-volume-slider\0"
  "media-volume-sliderthumb\0"
  "media-controls-background\0"
  "media-controls-fullscreen-background\0"
  "media-current-time-display\0"
  "media-time-remaining-display\0"
  "-internal-media-cast-off-button\0"
  "-internal-media-overlay-cast-off-button\0"
  "-internal-media-track-selection-checkmark\0"
  "-internal-media-closed-captions-icon\0"
  "-internal-media-subtitles-icon\0"
  "-internal-media-overflow-button\0"
  "-internal-media-download-button\0"
  "-internal-media-remoting-cast-icon\0"
  "-internal-media-control\0"
  "menulist\0"
  "menulist-button\0"
  "menulist-text\0"
  "menulist-textfield\0"
  "meter\0"
  "progress-bar\0"
  "progress-bar-value\0"
  "slider-horizontal\0"
  "slider-vertical\0"
  "sliderthumb-horizontal\0"
  "sliderthumb-vertical\0"
  "caret\0"
  "searchfield\0"
  "searchfield-cancel-button\0"
  "textfield\0"
  "textarea\0"
  "caps-lock-indicator\0"
  "round\0"
  "border\0"
  "border-box\0"
  "content\0"
  "content-box\0"
  "padding\0"
  "padding-box\0"
  "margin-box\0"
  "contain\0"
  "cover\0"
  "logical\0"
  "visual\0"
  "alternate\0"
  "alternate-reverse\0"
  "forwards\0"
  "backwards\0"
  "infinite\0"
  "running\0"
  "paused\0"
  "flat\0"
  "preserve-3d\0"
  "fill-box\0"
  "view-box\0"
  "ease\0"
  "linear\0"
  "ease-in\0"
  "ease-out\0"
  "ease-in-out\0"
  "step-start\0"
  "step-middle\0"
  "step-end\0"
  "steps\0"
  "frames\0"
  "cubic-bezier\0"
  "document\0"
  "reset\0"
  "zoom\0"
  "visiblePainted\0"
  "visibleFill\0"
  "visibleStroke\0"
  "painted\0"
  "fill\0"
  "stroke\0"
  "bounding-box\0"
  "spell-out\0"
  "digits\0"
  "literal-punctuation\0"
  "no-punctuation\0"
  "antialiased\0"
  "subpixel-antialiased\0"
  "optimizeSpeed\0"
  "optimizeLegibility\0"
  "geometricPrecision\0"
  "economy\0"
  "exact\0"
  "lr\0"
  "rl\0"
  "tb\0"
  "lr-tb\0"
  "rl-tb\0"
  "tb-rl\0"
  "horizontal-tb\0"
  "vertical-rl\0"
  "vertical-lr\0"
  "after\0"
  "before\0"
  "over\0"
  "under\0"
  "filled\0"
  "open\0"
  "dot\0"
  "double-circle\0"
  "triangle\0"
  "sesame\0"
  "ellipse\0"
  "closest-side\0"
  "closest-corner\0"
  "farthest-side\0"
  "farthest-corner\0"
  "mixed\0"
  "sideways\0"
  "sideways-right\0"
  "upright\0"
  "vertical-right\0"
  "on\0"
  "off\0"
  "optimizeQuality\0"
  "pixelated\0"
  "-webkit-optimize-contrast\0"
  "from-image\0"
  "nonzero\0"
  "evenodd\0"
  "at\0"
  "alphabetic\0"
  "fullscreen\0"
  "standalone\0"
  "minimal-ui\0"
  "browser\0"
  "sticky\0"
  "coarse\0"
  "fine\0"
  "on-demand\0"
  "hover\0"
  "multiply\0"
  "screen\0"
  "darken\0"
  "lighten\0"
  "color-dodge\0"
  "color-burn\0"
  "hard-light\0"
  "soft-light\0"
  "difference\0"
  "exclusion\0"
  "hue\0"
  "saturation\0"
  "color\0"
  "luminosity\0"
  "scale-down\0"
  "balance\0"
  "-webkit-paged-x\0"
  "-webkit-paged-y\0"
  "drag\0"
  "no-drag\0"
  "span\0"
  "minmax\0"
  "each-line\0"
  "progressive\0"
  "interlace\0"
  "markers\0"
  "-internal-extend-to-zoom\0"
  "pan-x\0"
  "pan-y\0"
  "pan-left\0"
  "pan-right\0"
  "pan-up\0"
  "pan-down\0"
  "manipulation\0"
  "pinch-zoom\0"
  "last-baseline\0"
  "first-baseline\0"
  "first\0"
  "last\0"
  "self-start\0"
  "self-end\0"
  "legacy\0"
  "smooth\0"
  "scroll-position\0"
  "revert\0"
  "unset\0"
  "linear-gradient\0"
  "radial-gradient\0"
  "conic-gradient\0"
  "repeating-linear-gradient\0"
  "repeating-radial-gradient\0"
  "repeating-conic-gradient\0"
  "paint\0"
  "-webkit-cross-fade\0"
  "-webkit-gradient\0"
  "-webkit-linear-gradient\0"
  "-webkit-radial-gradient\0"
  "-webkit-repeating-linear-gradient\0"
  "-webkit-repeating-radial-gradient\0"
  "-webkit-image-set\0"
  "from\0"
  "to\0"
  "color-stop\0"
  "radial\0"
  "attr\0"
  "counter\0"
  "counters\0"
  "rect\0"
  "polygon\0"
  "format\0"
  "invert\0"
  "grayscale\0"
  "sepia\0"
  "saturate\0"
  "hue-rotate\0"
  "opacity\0"
  "brightness\0"
  "contrast\0"
  "blur\0"
  "drop-shadow\0"
  "url\0"
  "rgb\0"
  "rgba\0"
  "hsl\0"
  "hsla\0"
  "matrix\0"
  "matrix3d\0"
  "perspective\0"
  "rotate\0"
  "rotateX\0"
  "rotateY\0"
  "rotateZ\0"
  "rotate3d\0"
  "scale\0"
  "scaleX\0"
  "scaleY\0"
  "scaleZ\0"
  "scale3d\0"
  "skew\0"
  "skewX\0"
  "skewY\0"
  "translate\0"
  "translateX\0"
  "translateY\0"
  "translateZ\0"
  "translate3d\0"
  "x\0"
  "y\0"
  "z\0"
  "path\0"
  "ray\0"
  "sides\0"
  "calc\0"
  "-webkit-calc\0"
  "mandatory\0"
  "proximity\0"
  "style\0"
  "size\0"
  "auto-fill\0"
  "auto-fit\0"
  "var\0"
  "-internal-variable-value\0"
  "avoid-page\0"
  "page\0"
  "recto\0"
  "verso\0"
  "avoid-column\0"
  "p3\0"
  "rec2020\0"
  "aliceblue\0"
  "antiquewhite\0"
  "aquamarine\0"
  "azure\0"
  "beige\0"
  "bisque\0"
  "blanchedalmond\0"
  "blueviolet\0"
  "brown\0"
  "burlywood\0"
  "cadetblue\0"
  "chartreuse\0"
  "chocolate\0"
  "coral\0"
  "cornflowerblue\0"
  "cornsilk\0"
  "crimson\0"
  "cyan\0"
  "darkblue\0"
  "darkcyan\0"
  "darkgoldenrod\0"
  "darkgray\0"
  "darkgreen\0"
  "darkgrey\0"
  "darkkhaki\0"
  "darkmagenta\0"
  "darkolivegreen\0"
  "darkorange\0"
  "darkorchid\0"
  "darkred\0"
  "darksalmon\0"
  "darkseagreen\0"
  "darkslateblue\0"
  "darkslategray\0"
  "darkslategrey\0"
  "darkturquoise\0"
  "darkviolet\0"
  "deeppink\0"
  "deepskyblue\0"
  "dimgray\0"
  "dimgrey\0"
  "dodgerblue\0"
  "firebrick\0"
  "floralwhite\0"
  "forestgreen\0"
  "gainsboro\0"
  "ghostwhite\0"
  "gold\0"
  "goldenrod\0"
  "greenyellow\0"
  "honeydew\0"
  "hotpink\0"
  "indianred\0"
  "indigo\0"
  "ivory\0"
  "khaki\0"
  "lavender\0"
  "lavenderblush\0"
  "lawngreen\0"
  "lemonchiffon\0"
  "lightblue\0"
  "lightcoral\0"
  "lightcyan\0"
  "lightgoldenrodyellow\0"
  "lightgray\0"
  "lightgreen\0"
  "lightgrey\0"
  "lightpink\0"
  "lightsalmon\0"
  "lightseagreen\0"
  "lightskyblue\0"
  "lightslategray\0"
  "lightslategrey\0"
  "lightsteelblue\0"
  "lightyellow\0"
  "limegreen\0"
  "linen\0"
  "magenta\0"
  "mediumaquamarine\0"
  "mediumblue\0"
  "mediumorchid\0"
  "mediumpurple\0"
  "mediumseagreen\0"
  "mediumslateblue\0"
  "mediumspringgreen\0"
  "mediumturquoise\0"
  "mediumvioletred\0"
  "midnightblue\0"
  "mintcream\0"
  "mistyrose\0"
  "moccasin\0"
  "navajowhite\0"
  "oldlace\0"
  "olivedrab\0"
  "orangered\0"
  "orchid\0"
  "palegoldenrod\0"
  "palegreen\0"
  "paleturquoise\0"
  "palevioletred\0"
  "papayawhip\0"
  "peachpuff\0"
  "peru\0"
  "pink\0"
  "plum\0"
  "powderblue\0"
  "rebeccapurple\0"
  "rosybrown\0"
  "royalblue\0"
  "saddlebrown\0"
  "salmon\0"
  "sandybrown\0"
  "seagreen\0"
  "seashell\0"
  "sienna\0"
  "skyblue\0"
  "slateblue\0"
  "slategray\0"
  "slategrey\0"
  "snow\0"
  "springgreen\0"
  "steelblue\0"
  "tan\0"
  "thistle\0"
  "tomato\0"
  "turquoise\0"
  "violet\0"
  "wheat\0"
  "whitesmoke\0"
  "yellowgreen\0"
  "alpha\0"
  "luminance\0"
  "accumulate\0"
  "new\0"
  "sRGB\0"
  "linearRGB\0"
  "crispEdges\0"
  "butt\0"
  "miter\0"
  "bevel\0"
  "before-edge\0"
  "after-edge\0"
  "central\0"
  "text-before-edge\0"
  "text-after-edge\0"
  "ideographic\0"
  "hanging\0"
  "mathematical\0"
  "use-script\0"
  "no-change\0"
  "reset-size\0"
  "dynamic\0"
  "non-scaling-stroke\0"
};

static const unsigned short valueListStringOffsets[] = {
  0,
  8,
  16,
  21,
  28,
  34,
  41,
  48,
  54,
  61,
  68,
  74,
  81,
  89,
  94,
  99,
  111,
  125,
  146,
  168,
  184,
  195,
  202,
  210,
  214,
  231,
  251,
  275,
  302,
  323,
  347,
  358,
  372,
  383,
  398,
  410,
  426,
  434,
  447,
  453,
  459,
  465,
  471,
  482,
  494,
  505,
  524,
  529,
  541,
  555,
  573,
  586,
  605,
  623,
  631,
  644,
  651,
  656,
  663,
  671,
  687,
  703,
  713,
  728,
  742,
  751,
  766,
  781,
  790,
  798,
  804,
  811,
  817,
  825,
  834,
  852,
  860,
  867,
  873,
  884,
  892,
  900,
  910,
  923,
  942,
  947,
  956,
  965,
  970,
  976,
  981,
  989,
  994,
  1000,
  1005,
  1012,
  1017,
  1023,
  1030,
  1037,
  1041,
  1048,
  1053,
  1059,
  1066,
  1078,
  1091,
  1110,
  1123,
  1137,
  1150,
  1161,
  1172,
  1188,
  1201,
  1212,
  1224,
  1233,
  1243,
  1257,
  1272,
  1288,
  1308,
  1323,
  1332,
  1341,
  1351,
  1368,
  1379,
  1395,
  1413,
  1426,
  1433,
  1445,
  1456,
  1492,
  1533,
  1571,
  1614,
  1639,
  1652,
  1657,
  1681,
  1688,
  1697,
  1706,
  1716,
  1722,
  1727,
  1739,
  1749,
  1760,
  1772,
  1789,
  1804,
  1820,
  1837,
  1841,
  1854,
  1863,
  1870,
  1874,
  1880,
  1889,
  1901,
  1905,
  1912,
  1936,
  1949,
  1954,
  1960,
  1967,
  1975,
  1988,
  2002,
  2017,
  2038,
  2055,
  2066,
  2077,
  2085,
  2092,
  2097,
  2104,
  2111,
  2119,
  2140,
  2153,
  2161,
  2171,
  2177,
  2188,
  2197,
  2206,
  2214,
  2218,
  2228,
  2238,
  2246,
  2252,
  2260,
  2265,
  2272,
  2280,
  2285,
  2297,
  2309,
  2321,
  2333,
  2345,
  2357,
  2369,
  2388,
  2406,
  2424,
  2445,
  2469,
  2493,
  2500,
  2517,
  2538,
  2558,
  2580,
  2587,
  2596,
  2611,
  2626,
  2635,
  2651,
  2671,
  2693,
  2713,
  2735,
  2744,
  2753,
  2768,
  2783,
  2790,
  2796,
  2806,
  2816,
  2829,
  2835,
  2848,
  2864,
  2883,
  2902,
  2912,
  2931,
  2944,
  2955,
  2969,
  2981,
  3000,
  3005,
  3017,
  3022,
  3034,
  3043,
  3056,
  3076,
  3083,
  3097,
  3102,
  3112,
  3120,
  3128,
  3133,
  3147,
  3152,
  3165,
  3171,
  3180,
  3188,
  3200,
  3208,
  3217,
  3226,
  3236,
  3246,
  3255,
  3265,
  3275,
  3284,
  3293,
  3303,
  3313,
  3325,
  3337,
  3348,
  3359,
  3364,
  3369,
  3374,
  3385,
  3390,
  3399,
  3412,
  3429,
  3445,
  3462,
  3466,
  3470,
  3481,
  3491,
  3501,
  3509,
  3518,
  3521,
  3524,
  3527,
  3533,
  3542,
  3549,
  3555,
  3558,
  3561,
  3567,
  3581,
  3587,
  3592,
  3604,
  3610,
  3616,
  3621,
  3626,
  3634,
  3651,
  3661,
  3677,
  3702,
  3720,
  3730,
  3737,
  3743,
  3750,
  3763,
  3769,
  3784,
  3798,
  3805,
  3816,
  3824,
  3833,
  3842,
  3846,
  3855,
  3864,
  3873,
  3880,
  3889,
  3894,
  3901,
  3907,
  3912,
  3922,
  3927,
  3942,
  3950,
  3956,
  3960,
  3966,
  3972,
  3980,
  3991,
  4000,
  4012,
  4023,
  4034,
  4043,
  4057,
  4070,
  4083,
  4090,
  4095,
  4099,
  4111,
  4118,
  4133,
  4138,
  4151,
  4161,
  4167,
  4177,
  4188,
  4214,
  4222,
  4242,
  4262,
  4285,
  4305,
  4317,
  4329,
  4341,
  4346,
  4355,
  4363,
  4373,
  4382,
  4393,
  4399,
  4405,
  4412,
  4430,
  4437,
  4446,
  4452,
  4464,
  4478,
  4485,
  4498,
  4516,
  4524,
  4533,
  4563,
  4592,
  4610,
  4628,
  4654,
  4690,
  4703,
  4721,
  4751,
  4771,
  4796,
  4822,
  4859,
  4886,
  4915,
  4947,
  4987,
  5029,
  5066,
  5097,
  5129,
  5161,
  5196,
  5220,
  5229,
  5245,
  5259,
  5278,
  5284,
  5297,
  5316,
  5334,
  5350,
  5373,
  5394,
  5400,
  5412,
  5438,
  5448,
  5457,
  5477,
  5483,
  5490,
  5501,
  5509,
  5521,
  5529,
  5541,
  5552,
  5560,
  5566,
  5574,
  5581,
  5591,
  5609,
  5618,
  5628,
  5637,
  5645,
  5652,
  5657,
  5669,
  5678,
  5687,
  5692,
  5699,
  5707,
  5716,
  5728,
  5739,
  5751,
  5760,
  5766,
  5773,
  5786,
  5795,
  5801,
  5806,
  5821,
  5833,
  5847,
  5855,
  5860,
  5867,
  5880,
  5890,
  5897,
  5917,
  5932,
  5944,
  5965,
  5979,
  5998,
  6017,
  6025,
  6031,
  6034,
  6037,
  6040,
  6046,
  6052,
  6058,
  6072,
  6084,
  6096,
  6102,
  6109,
  6114,
  6120,
  6127,
  6132,
  6136,
  6150,
  6159,
  6166,
  6174,
  6187,
  6202,
  6216,
  6232,
  6238,
  6247,
  6262,
  6270,
  6285,
  6288,
  6292,
  6308,
  6318,
  6344,
  6355,
  6363,
  6371,
  6374,
  6385,
  6396,
  6407,
  6418,
  6426,
  6433,
  6440,
  6445,
  6455,
  6461,
  6470,
  6477,
  6484,
  6492,
  6504,
  6515,
  6526,
  6537,
  6548,
  6558,
  6562,
  6573,
  6579,
  6590,
  6601,
  6609,
  6625,
  6641,
  6646,
  6654,
  6659,
  6666,
  6676,
  6688,
  6698,
  6706,
  6731,
  6737,
  6743,
  6752,
  6762,
  6769,
  6778,
  6791,
  6802,
  6816,
  6831,
  6837,
  6842,
  6853,
  6862,
  6869,
  6876,
  6892,
  6899,
  6905,
  6921,
  6937,
  6952,
  6978,
  7004,
  7029,
  7035,
  7054,
  7071,
  7095,
  7119,
  7153,
  7187,
  7205,
  7210,
  7213,
  7224,
  7231,
  7236,
  7244,
  7253,
  7258,
  7266,
  7273,
  7280,
  7290,
  7296,
  7305,
  7316,
  7324,
  7335,
  7344,
  7349,
  7361,
  7365,
  7369,
  7374,
  7378,
  7383,
  7390,
  7399,
  7411,
  7418,
  7426,
  7434,
  7442,
  7451,
  7457,
  7464,
  7471,
  7478,
  7486,
  7491,
  7497,
  7503,
  7513,
  7524,
  7535,
  7546,
  7558,
  7560,
  7562,
  7564,
  7569,
  7573,
  7579,
  7584,
  7597,
  7607,
  7617,
  7623,
  7628,
  7638,
  7647,
  7651,
  7676,
  7687,
  7692,
  7698,
  7704,
  7717,
  7720,
  7728,
  7738,
  7751,
  7762,
  7768,
  7774,
  7781,
  7796,
  7807,
  7813,
  7823,
  7833,
  7844,
  7854,
  7860,
  7875,
  7884,
  7892,
  7897,
  7906,
  7915,
  7929,
  7938,
  7948,
  7957,
  7967,
  7979,
  7994,
  8005,
  8016,
  8024,
  8035,
  8048,
  8062,
  8076,
  8090,
  8104,
  8115,
  8124,
  8136,
  8144,
  8152,
  8163,
  8173,
  8185,
  8197,
  8207,
  8218,
  8223,
  8233,
  8245,
  8254,
  8262,
  8272,
  8279,
  8285,
  8291,
  8300,
  8314,
  8324,
  8337,
  8347,
  8358,
  8368,
  8389,
  8399,
  8410,
  8420,
  8430,
  8442,
  8456,
  8469,
  8484,
  8499,
  8514,
  8526,
  8536,
  8542,
  8550,
  8567,
  8578,
  8591,
  8604,
  8619,
  8635,
  8653,
  8669,
  8685,
  8698,
  8708,
  8718,
  8727,
  8739,
  8747,
  8757,
  8767,
  8774,
  8788,
  8798,
  8812,
  8826,
  8837,
  8847,
  8852,
  8857,
  8862,
  8873,
  8887,
  8897,
  8907,
  8919,
  8926,
  8937,
  8946,
  8955,
  8962,
  8970,
  8980,
  8990,
  9000,
  9005,
  9017,
  9027,
  9031,
  9039,
  9046,
  9056,
  9063,
  9069,
  9080,
  9092,
  9098,
  9108,
  9119,
  9123,
  9128,
  9138,
  9149,
  9154,
  9160,
  9166,
  9178,
  9189,
  9197,
  9214,
  9230,
  9242,
  9250,
  9263,
  9274,
  9284,
  9295,
  9303,
};

/* maximum key range = 6534, duplicates = 0 */

class CSSValueKeywordsHash
{
private:
  static inline unsigned int value_hash_function (const char *str, unsigned int len);
public:
  static const struct Value *findValueImpl (const char *str, unsigned int len);
};

inline unsigned int
CSSValueKeywordsHash::value_hash_function (const char *str, unsigned int len)
{
  static const unsigned short asso_values[] =
    {
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539,  268,  145,  319,    1, 6539,
         1,    4,   22,    7, 6539, 6539,    4,    4,    1,    1,
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539, 6539, 6539,    4,  277,  187,
       121,    1,  856,   16,  517,    4, 1489,  502,   58,    1,
        10,   28,  295, 1288,    4,  106,    1,  229,   55, 1918,
       980, 1267, 1291,   37,    1, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539,
      6539, 6539, 6539, 6539, 6539, 6539, 6539, 6539
    };
  int hval = 0;

  switch (len)
    {
      default:
        hval += asso_values[(unsigned char)str[41]];
        FALLTHROUGH;
      case 41:
        hval += asso_values[(unsigned char)str[40]];
        FALLTHROUGH;
      case 40:
        hval += asso_values[(unsigned char)str[39]];
        FALLTHROUGH;
      case 39:
        hval += asso_values[(unsigned char)str[38]];
        FALLTHROUGH;
      case 38:
        hval += asso_values[(unsigned char)str[37]];
        FALLTHROUGH;
      case 37:
        hval += asso_values[(unsigned char)str[36]];
        FALLTHROUGH;
      case 36:
        hval += asso_values[(unsigned char)str[35]];
        FALLTHROUGH;
      case 35:
        hval += asso_values[(unsigned char)str[34]];
        FALLTHROUGH;
      case 34:
        hval += asso_values[(unsigned char)str[33]];
        FALLTHROUGH;
      case 33:
        hval += asso_values[(unsigned char)str[32]];
        FALLTHROUGH;
      case 32:
        hval += asso_values[(unsigned char)str[31]];
        FALLTHROUGH;
      case 31:
        hval += asso_values[(unsigned char)str[30]];
        FALLTHROUGH;
      case 30:
        hval += asso_values[(unsigned char)str[29]];
        FALLTHROUGH;
      case 29:
        hval += asso_values[(unsigned char)str[28]];
        FALLTHROUGH;
      case 28:
        hval += asso_values[(unsigned char)str[27]];
        FALLTHROUGH;
      case 27:
        hval += asso_values[(unsigned char)str[26]];
        FALLTHROUGH;
      case 26:
        hval += asso_values[(unsigned char)str[25]];
        FALLTHROUGH;
      case 25:
        hval += asso_values[(unsigned char)str[24]];
        FALLTHROUGH;
      case 24:
        hval += asso_values[(unsigned char)str[23]];
        FALLTHROUGH;
      case 23:
        hval += asso_values[(unsigned char)str[22]];
        FALLTHROUGH;
      case 22:
        hval += asso_values[(unsigned char)str[21]];
        FALLTHROUGH;
      case 21:
        hval += asso_values[(unsigned char)str[20]];
        FALLTHROUGH;
      case 20:
        hval += asso_values[(unsigned char)str[19]];
        FALLTHROUGH;
      case 19:
        hval += asso_values[(unsigned char)str[18]];
        FALLTHROUGH;
      case 18:
        hval += asso_values[(unsigned char)str[17]];
        FALLTHROUGH;
      case 17:
        hval += asso_values[(unsigned char)str[16]];
        FALLTHROUGH;
      case 16:
        hval += asso_values[(unsigned char)str[15]];
        FALLTHROUGH;
      case 15:
        hval += asso_values[(unsigned char)str[14]];
        FALLTHROUGH;
      case 14:
        hval += asso_values[(unsigned char)str[13]];
        FALLTHROUGH;
      case 13:
        hval += asso_values[(unsigned char)str[12]];
        FALLTHROUGH;
      case 12:
        hval += asso_values[(unsigned char)str[11]];
        FALLTHROUGH;
      case 11:
        hval += asso_values[(unsigned char)str[10]+1];
        FALLTHROUGH;
      case 10:
        hval += asso_values[(unsigned char)str[9]];
        FALLTHROUGH;
      case 9:
        hval += asso_values[(unsigned char)str[8]];
        FALLTHROUGH;
      case 8:
        hval += asso_values[(unsigned char)str[7]];
        FALLTHROUGH;
      case 7:
        hval += asso_values[(unsigned char)str[6]];
        FALLTHROUGH;
      case 6:
        hval += asso_values[(unsigned char)str[5]];
        FALLTHROUGH;
      case 5:
        hval += asso_values[(unsigned char)str[4]];
        FALLTHROUGH;
      case 4:
        hval += asso_values[(unsigned char)str[3]+2];
        FALLTHROUGH;
      case 3:
        hval += asso_values[(unsigned char)str[2]];
        FALLTHROUGH;
      case 2:
        hval += asso_values[(unsigned char)str[1]];
        FALLTHROUGH;
      case 1:
        hval += asso_values[(unsigned char)str[0]+1];
        break;
    }
  return hval;
}

struct CSSValueStringPool_t
  {
    char CSSValueStringPool_str0[sizeof("lr")];
    char CSSValueStringPool_str1[sizeof("ltr")];
    char CSSValueStringPool_str2[sizeof("start")];
    char CSSValueStringPool_str3[sizeof("drag")];
    char CSSValueStringPool_str4[sizeof("large")];
    char CSSValueStringPool_str5[sizeof("larger")];
    char CSSValueStringPool_str6[sizeof("darken")];
    char CSSValueStringPool_str7[sizeof("lime")];
    char CSSValueStringPool_str8[sizeof("seagreen")];
    char CSSValueStringPool_str9[sizeof("dot")];
    char CSSValueStringPool_str10[sizeof("meter")];
    char CSSValueStringPool_str11[sizeof("lao")];
    char CSSValueStringPool_str12[sizeof("miter")];
    char CSSValueStringPool_str13[sizeof("z")];
    char CSSValueStringPool_str14[sizeof("linear")];
    char CSSValueStringPool_str15[sizeof("linen")];
    char CSSValueStringPool_str16[sizeof("darkgreen")];
    char CSSValueStringPool_str17[sizeof("fine")];
    char CSSValueStringPool_str18[sizeof("hanging")];
    char CSSValueStringPool_str19[sizeof("limegreen")];
    char CSSValueStringPool_str20[sizeof("magenta")];
    char CSSValueStringPool_str21[sizeof("letter")];
    char CSSValueStringPool_str22[sizeof("slice")];
    char CSSValueStringPool_str23[sizeof("help")];
    char CSSValueStringPool_str24[sizeof("darkorange")];
    char CSSValueStringPool_str25[sizeof("small")];
    char CSSValueStringPool_str26[sizeof("from")];
    char CSSValueStringPool_str27[sizeof("smaller")];
    char CSSValueStringPool_str28[sizeof("format")];
    char CSSValueStringPool_str29[sizeof("none")];
    char CSSValueStringPool_str30[sizeof("fill")];
    char CSSValueStringPool_str31[sizeof("nonzero")];
    char CSSValueStringPool_str32[sizeof("hover")];
    char CSSValueStringPool_str33[sizeof("move")];
    char CSSValueStringPool_str34[sizeof("disc")];
    char CSSValueStringPool_str35[sizeof("steps")];
    char CSSValueStringPool_str36[sizeof("url")];
    char CSSValueStringPool_str37[sizeof("zoom")];
    char CSSValueStringPool_str38[sizeof("navy")];
    char CSSValueStringPool_str39[sizeof("salmon")];
    char CSSValueStringPool_str40[sizeof("markers")];
    char CSSValueStringPool_str41[sizeof("ledger")];
    char CSSValueStringPool_str42[sizeof("flat")];
    char CSSValueStringPool_str43[sizeof("darkred")];
    char CSSValueStringPool_str44[sizeof("srgb")];
    char CSSValueStringPool_str45[sizeof("hide")];
    char CSSValueStringPool_str46[sizeof("caret")];
    char CSSValueStringPool_str47[sizeof("normal")];
    char CSSValueStringPool_str48[sizeof("mongolian")];
    char CSSValueStringPool_str49[sizeof("darkviolet")];
    char CSSValueStringPool_str50[sizeof("frames")];
    char CSSValueStringPool_str51[sizeof("rl")];
    char CSSValueStringPool_str52[sizeof("rtl")];
    char CSSValueStringPool_str53[sizeof("last")];
    char CSSValueStringPool_str54[sizeof("hsl")];
    char CSSValueStringPool_str55[sizeof("listitem")];
    char CSSValueStringPool_str56[sizeof("unicase")];
    char CSSValueStringPool_str57[sizeof("revert")];
    char CSSValueStringPool_str58[sizeof("calc")];
    char CSSValueStringPool_str59[sizeof("clip")];
    char CSSValueStringPool_str60[sizeof("unset")];
    char CSSValueStringPool_str61[sizeof("circle")];
    char CSSValueStringPool_str62[sizeof("cell")];
    char CSSValueStringPool_str63[sizeof("center")];
    char CSSValueStringPool_str64[sizeof("b5")];
    char CSSValueStringPool_str65[sizeof("beige")];
    char CSSValueStringPool_str66[sizeof("scale")];
    char CSSValueStringPool_str67[sizeof("under")];
    char CSSValueStringPool_str68[sizeof("dotted")];
    char CSSValueStringPool_str69[sizeof("b4")];
    char CSSValueStringPool_str70[sizeof("filled")];
    char CSSValueStringPool_str71[sizeof("lavender")];
    char CSSValueStringPool_str72[sizeof("darksalmon")];
    char CSSValueStringPool_str73[sizeof("screen")];
    char CSSValueStringPool_str74[sizeof("forestgreen")];
    char CSSValueStringPool_str75[sizeof("cover")];
    char CSSValueStringPool_str76[sizeof("content")];
    char CSSValueStringPool_str77[sizeof("red")];
    char CSSValueStringPool_str78[sizeof("reset")];
    char CSSValueStringPool_str79[sizeof("contain")];
    char CSSValueStringPool_str80[sizeof("hiragana")];
    char CSSValueStringPool_str81[sizeof("hue")];
    char CSSValueStringPool_str82[sizeof("ridge")];
    char CSSValueStringPool_str83[sizeof("discard")];
    char CSSValueStringPool_str84[sizeof("dense")];
    char CSSValueStringPool_str85[sizeof("tan")];
    char CSSValueStringPool_str86[sizeof("teal")];
    char CSSValueStringPool_str87[sizeof("sides")];
    char CSSValueStringPool_str88[sizeof("static")];
    char CSSValueStringPool_str89[sizeof("central")];
    char CSSValueStringPool_str90[sizeof("first")];
    char CSSValueStringPool_str91[sizeof("to")];
    char CSSValueStringPool_str92[sizeof("coarse")];
    char CSSValueStringPool_str93[sizeof("legal")];
    char CSSValueStringPool_str94[sizeof("bengali")];
    char CSSValueStringPool_str95[sizeof("mintcream")];
    char CSSValueStringPool_str96[sizeof("at")];
    char CSSValueStringPool_str97[sizeof("underline")];
    char CSSValueStringPool_str98[sizeof("attr")];
    char CSSValueStringPool_str99[sizeof("a3")];
    char CSSValueStringPool_str100[sizeof("a5")];
    char CSSValueStringPool_str101[sizeof("devanagari")];
    char CSSValueStringPool_str102[sizeof("loose")];
    char CSSValueStringPool_str103[sizeof("reverse")];
    char CSSValueStringPool_str104[sizeof("darkolivegreen")];
    char CSSValueStringPool_str105[sizeof("sesame")];
    char CSSValueStringPool_str106[sizeof("a4")];
    char CSSValueStringPool_str107[sizeof("bottom")];
    char CSSValueStringPool_str108[sizeof("crimson")];
    char CSSValueStringPool_str109[sizeof("space")];
    char CSSValueStringPool_str110[sizeof("on")];
    char CSSValueStringPool_str111[sizeof("hangul")];
    char CSSValueStringPool_str112[sizeof("sienna")];
    char CSSValueStringPool_str113[sizeof("bevel")];
    char CSSValueStringPool_str114[sizeof("rec2020")];
    char CSSValueStringPool_str115[sizeof("darkmagenta")];
    char CSSValueStringPool_str116[sizeof("rotate")];
    char CSSValueStringPool_str117[sizeof("armenian")];
    char CSSValueStringPool_str118[sizeof("scale3d")];
    char CSSValueStringPool_str119[sizeof("contrast")];
    char CSSValueStringPool_str120[sizeof("contents")];
    char CSSValueStringPool_str121[sizeof("linearrgb")];
    char CSSValueStringPool_str122[sizeof("oriya")];
    char CSSValueStringPool_str123[sizeof("linear-gradient")];
    char CSSValueStringPool_str124[sizeof("rect")];
    char CSSValueStringPool_str125[sizeof("moccasin")];
    char CSSValueStringPool_str126[sizeof("over")];
    char CSSValueStringPool_str127[sizeof("hsla")];
    char CSSValueStringPool_str128[sizeof("from-image")];
    char CSSValueStringPool_str129[sizeof("clear")];
    char CSSValueStringPool_str130[sizeof("alternate")];
    char CSSValueStringPool_str131[sizeof("recto")];
    char CSSValueStringPool_str132[sizeof("baseline")];
    char CSSValueStringPool_str133[sizeof("step-start")];
    char CSSValueStringPool_str134[sizeof("all")];
    char CSSValueStringPool_str135[sizeof("coral")];
    char CSSValueStringPool_str136[sizeof("rgb")];
    char CSSValueStringPool_str137[sizeof("zoom-in")];
    char CSSValueStringPool_str138[sizeof("step-end")];
    char CSSValueStringPool_str139[sizeof("relative")];
    char CSSValueStringPool_str140[sizeof("cambodian")];
    char CSSValueStringPool_str141[sizeof("repeat")];
    char CSSValueStringPool_str142[sizeof("overline")];
    char CSSValueStringPool_str143[sizeof("double")];
    char CSSValueStringPool_str144[sizeof("list-item")];
    char CSSValueStringPool_str145[sizeof("rotate3d")];
    char CSSValueStringPool_str146[sizeof("keep-all")];
    char CSSValueStringPool_str147[sizeof("local")];
    char CSSValueStringPool_str148[sizeof("butt")];
    char CSSValueStringPool_str149[sizeof("tomato")];
    char CSSValueStringPool_str150[sizeof("blur")];
    char CSSValueStringPool_str151[sizeof("copy")];
    char CSSValueStringPool_str152[sizeof("blue")];
    char CSSValueStringPool_str153[sizeof("separate")];
    char CSSValueStringPool_str154[sizeof("kannada")];
    char CSSValueStringPool_str155[sizeof("darkgoldenrod")];
    char CSSValueStringPool_str156[sizeof("clone")];
    char CSSValueStringPool_str157[sizeof("tb")];
    char CSSValueStringPool_str158[sizeof("sub")];
    char CSSValueStringPool_str159[sizeof("triangle")];
    char CSSValueStringPool_str160[sizeof("button")];
    char CSSValueStringPool_str161[sizeof("caption")];
    char CSSValueStringPool_str162[sizeof("table")];
    char CSSValueStringPool_str163[sizeof("standalone")];
    char CSSValueStringPool_str164[sizeof("destination-in")];
    char CSSValueStringPool_str165[sizeof("tibetan")];
    char CSSValueStringPool_str166[sizeof("super")];
    char CSSValueStringPool_str167[sizeof("green")];
    char CSSValueStringPool_str168[sizeof("top")];
    char CSSValueStringPool_str169[sizeof("hotpink")];
    char CSSValueStringPool_str170[sizeof("grey")];
    char CSSValueStringPool_str171[sizeof("gray")];
    char CSSValueStringPool_str172[sizeof("darkblue")];
    char CSSValueStringPool_str173[sizeof("georgian")];
    char CSSValueStringPool_str174[sizeof("khaki")];
    char CSSValueStringPool_str175[sizeof("rgba")];
    char CSSValueStringPool_str176[sizeof("hue-rotate")];
    char CSSValueStringPool_str177[sizeof("span")];
    char CSSValueStringPool_str178[sizeof("khmer")];
    char CSSValueStringPool_str179[sizeof("destination-over")];
    char CSSValueStringPool_str180[sizeof("lr-tb")];
    char CSSValueStringPool_str181[sizeof("jis90")];
    char CSSValueStringPool_str182[sizeof("orange")];
    char CSSValueStringPool_str183[sizeof("jis83")];
    char CSSValueStringPool_str184[sizeof("jis78")];
    char CSSValueStringPool_str185[sizeof("fullscreen")];
    char CSSValueStringPool_str186[sizeof("collapse")];
    char CSSValueStringPool_str187[sizeof("no-repeat")];
    char CSSValueStringPool_str188[sizeof("digits")];
    char CSSValueStringPool_str189[sizeof("alias")];
    char CSSValueStringPool_str190[sizeof("bisque")];
    char CSSValueStringPool_str191[sizeof("balance")];
    char CSSValueStringPool_str192[sizeof("jis04")];
    char CSSValueStringPool_str193[sizeof("blueviolet")];
    char CSSValueStringPool_str194[sizeof("steelblue")];
    char CSSValueStringPool_str195[sizeof("cursive")];
    char CSSValueStringPool_str196[sizeof("grab")];
    char CSSValueStringPool_str197[sizeof("zoom-out")];
    char CSSValueStringPool_str198[sizeof("ruby")];
    char CSSValueStringPool_str199[sizeof("running")];
    char CSSValueStringPool_str200[sizeof("oldlace")];
    char CSSValueStringPool_str201[sizeof("counter")];
    char CSSValueStringPool_str202[sizeof("distribute")];
    char CSSValueStringPool_str203[sizeof("slateblue")];
    char CSSValueStringPool_str204[sizeof("darkslateblue")];
    char CSSValueStringPool_str205[sizeof("strict")];
    char CSSValueStringPool_str206[sizeof("-internal-center")];
    char CSSValueStringPool_str207[sizeof("translate")];
    char CSSValueStringPool_str208[sizeof("translate3d")];
    char CSSValueStringPool_str209[sizeof("solid")];
    char CSSValueStringPool_str210[sizeof("dodgerblue")];
    char CSSValueStringPool_str211[sizeof("stretch")];
    char CSSValueStringPool_str212[sizeof("source-in")];
    char CSSValueStringPool_str213[sizeof("orangered")];
    char CSSValueStringPool_str214[sizeof("black")];
    char CSSValueStringPool_str215[sizeof("decimal")];
    char CSSValueStringPool_str216[sizeof("outset")];
    char CSSValueStringPool_str217[sizeof("chocolate")];
    char CSSValueStringPool_str218[sizeof("radio")];
    char CSSValueStringPool_str219[sizeof("rl-tb")];
    char CSSValueStringPool_str220[sizeof("destination-out")];
    char CSSValueStringPool_str221[sizeof("katakana")];
    char CSSValueStringPool_str222[sizeof("block")];
    char CSSValueStringPool_str223[sizeof("round")];
    char CSSValueStringPool_str224[sizeof("counters")];
    char CSSValueStringPool_str225[sizeof("background")];
    char CSSValueStringPool_str226[sizeof("radial")];
    char CSSValueStringPool_str227[sizeof("logical")];
    char CSSValueStringPool_str228[sizeof("sepia")];
    char CSSValueStringPool_str229[sizeof("fit-content")];
    char CSSValueStringPool_str230[sizeof("min-content")];
    char CSSValueStringPool_str231[sizeof("deeppink")];
    char CSSValueStringPool_str232[sizeof("cadetblue")];
    char CSSValueStringPool_str233[sizeof("tb-rl")];
    char CSSValueStringPool_str234[sizeof("destination-atop")];
    char CSSValueStringPool_str235[sizeof("hangul-consonant")];
    char CSSValueStringPool_str236[sizeof("medium")];
    char CSSValueStringPool_str237[sizeof("seashell")];
    char CSSValueStringPool_str238[sizeof("darkorchid")];
    char CSSValueStringPool_str239[sizeof("no-change")];
    char CSSValueStringPool_str240[sizeof("hand")];
    char CSSValueStringPool_str241[sizeof("safe")];
    char CSSValueStringPool_str242[sizeof("springgreen")];
    char CSSValueStringPool_str243[sizeof("outside")];
    char CSSValueStringPool_str244[sizeof("open")];
    char CSSValueStringPool_str245[sizeof("spell-out")];
    char CSSValueStringPool_str246[sizeof("crispedges")];
    char CSSValueStringPool_str247[sizeof("source-over")];
    char CSSValueStringPool_str248[sizeof("aliceblue")];
    char CSSValueStringPool_str249[sizeof("left")];
    char CSSValueStringPool_str250[sizeof("alternate-reverse")];
    char CSSValueStringPool_str251[sizeof("grayscale")];
    char CSSValueStringPool_str252[sizeof("closest-side")];
    char CSSValueStringPool_str253[sizeof("first-baseline")];
    char CSSValueStringPool_str254[sizeof("small-caps")];
    char CSSValueStringPool_str255[sizeof("turquoise")];
    char CSSValueStringPool_str256[sizeof("currentcolor")];
    char CSSValueStringPool_str257[sizeof("brightness")];
    char CSSValueStringPool_str258[sizeof("luminance")];
    char CSSValueStringPool_str259[sizeof("status-bar")];
    char CSSValueStringPool_str260[sizeof("grabbing")];
    char CSSValueStringPool_str261[sizeof("element")];
    char CSSValueStringPool_str262[sizeof("self-start")];
    char CSSValueStringPool_str263[sizeof("uppercase")];
    char CSSValueStringPool_str264[sizeof("antialiased")];
    char CSSValueStringPool_str265[sizeof("source-out")];
    char CSSValueStringPool_str266[sizeof("self-end")];
    char CSSValueStringPool_str267[sizeof("ease")];
    char CSSValueStringPool_str268[sizeof("avoid")];
    char CSSValueStringPool_str269[sizeof("space-around")];
    char CSSValueStringPool_str270[sizeof("chartreuse")];
    char CSSValueStringPool_str271[sizeof("end")];
    char CSSValueStringPool_str272[sizeof("upper-armenian")];
    char CSSValueStringPool_str273[sizeof("wrap")];
    char CSSValueStringPool_str274[sizeof("ordinal")];
    char CSSValueStringPool_str275[sizeof("hidden")];
    char CSSValueStringPool_str276[sizeof("upper-roman")];
    char CSSValueStringPool_str277[sizeof("matrix")];
    char CSSValueStringPool_str278[sizeof("darkseagreen")];
    char CSSValueStringPool_str279[sizeof("firebrick")];
    char CSSValueStringPool_str280[sizeof("crosshair")];
    char CSSValueStringPool_str281[sizeof("historical-ligatures")];
    char CSSValueStringPool_str282[sizeof("no-common-ligatures")];
    char CSSValueStringPool_str283[sizeof("upper-latin")];
    char CSSValueStringPool_str284[sizeof("minmax")];
    char CSSValueStringPool_str285[sizeof("thistle")];
    char CSSValueStringPool_str286[sizeof("wait")];
    char CSSValueStringPool_str287[sizeof("thin")];
    char CSSValueStringPool_str288[sizeof("blink")];
    char CSSValueStringPool_str289[sizeof("silver")];
    char CSSValueStringPool_str290[sizeof("middle")];
    char CSSValueStringPool_str291[sizeof("lining-nums")];
    char CSSValueStringPool_str292[sizeof("simplified")];
    char CSSValueStringPool_str293[sizeof("fallback")];
    char CSSValueStringPool_str294[sizeof("wavy")];
    char CSSValueStringPool_str295[sizeof("use-script")];
    char CSSValueStringPool_str296[sizeof("border")];
    char CSSValueStringPool_str297[sizeof("double-circle")];
    char CSSValueStringPool_str298[sizeof("minimal-ui")];
    char CSSValueStringPool_str299[sizeof("table-cell")];
    char CSSValueStringPool_str300[sizeof("radial-gradient")];
    char CSSValueStringPool_str301[sizeof("mediumseagreen")];
    char CSSValueStringPool_str302[sizeof("cornsilk")];
    char CSSValueStringPool_str303[sizeof("matrix3d")];
    char CSSValueStringPool_str304[sizeof("bold")];
    char CSSValueStringPool_str305[sizeof("mixed")];
    char CSSValueStringPool_str306[sizeof("bolder")];
    char CSSValueStringPool_str307[sizeof("fixed")];
    char CSSValueStringPool_str308[sizeof("traditional")];
    char CSSValueStringPool_str309[sizeof("closest-corner")];
    char CSSValueStringPool_str310[sizeof("all-scroll")];
    char CSSValueStringPool_str311[sizeof("after")];
    char CSSValueStringPool_str312[sizeof("hiragana-iroha")];
    char CSSValueStringPool_str313[sizeof("repeating-linear-gradient")];
    char CSSValueStringPool_str314[sizeof("common-ligatures")];
    char CSSValueStringPool_str315[sizeof("transparent")];
    char CSSValueStringPool_str316[sizeof("scalex")];
    char CSSValueStringPool_str317[sizeof("optional")];
    char CSSValueStringPool_str318[sizeof("no-drag")];
    char CSSValueStringPool_str319[sizeof("unsafe")];
    char CSSValueStringPool_str320[sizeof("lavenderblush")];
    char CSSValueStringPool_str321[sizeof("thai")];
    char CSSValueStringPool_str322[sizeof("thick")];
    char CSSValueStringPool_str323[sizeof("condensed")];
    char CSSValueStringPool_str324[sizeof("no-punctuation")];
    char CSSValueStringPool_str325[sizeof("gainsboro")];
    char CSSValueStringPool_str326[sizeof("ease-in")];
    char CSSValueStringPool_str327[sizeof("text")];
    char CSSValueStringPool_str328[sizeof("x")];
    char CSSValueStringPool_str329[sizeof("break-all")];
    char CSSValueStringPool_str330[sizeof("embed")];
    char CSSValueStringPool_str331[sizeof("textarea")];
    char CSSValueStringPool_str332[sizeof("style")];
    char CSSValueStringPool_str333[sizeof("dimgrey")];
    char CSSValueStringPool_str334[sizeof("-internal-media-control")];
    char CSSValueStringPool_str335[sizeof("dimgray")];
    char CSSValueStringPool_str336[sizeof("y")];
    char CSSValueStringPool_str337[sizeof("p3")];
    char CSSValueStringPool_str338[sizeof("pre")];
    char CSSValueStringPool_str339[sizeof("darkgrey")];
    char CSSValueStringPool_str340[sizeof("xor")];
    char CSSValueStringPool_str341[sizeof("darkgray")];
    char CSSValueStringPool_str342[sizeof("pink")];
    char CSSValueStringPool_str343[sizeof("rotatex")];
    char CSSValueStringPool_str344[sizeof("snow")];
    char CSSValueStringPool_str345[sizeof("table-column")];
    char CSSValueStringPool_str346[sizeof("size")];
    char CSSValueStringPool_str347[sizeof("page")];
    char CSSValueStringPool_str348[sizeof("wrap-reverse")];
    char CSSValueStringPool_str349[sizeof("default")];
    char CSSValueStringPool_str350[sizeof("olive")];
    char CSSValueStringPool_str351[sizeof("maroon")];
    char CSSValueStringPool_str352[sizeof("mediumspringgreen")];
    char CSSValueStringPool_str353[sizeof("midnightblue")];
    char CSSValueStringPool_str354[sizeof("serif")];
    char CSSValueStringPool_str355[sizeof("flex")];
    char CSSValueStringPool_str356[sizeof("literal-punctuation")];
    char CSSValueStringPool_str357[sizeof("semi-condensed")];
    char CSSValueStringPool_str358[sizeof("ray")];
    char CSSValueStringPool_str359[sizeof("grid")];
    char CSSValueStringPool_str360[sizeof("portrait")];
    char CSSValueStringPool_str361[sizeof("upright")];
    char CSSValueStringPool_str362[sizeof("palegreen")];
    char CSSValueStringPool_str363[sizeof("slategrey")];
    char CSSValueStringPool_str364[sizeof("slategray")];
    char CSSValueStringPool_str365[sizeof("manipulation")];
    char CSSValueStringPool_str366[sizeof("mediumblue")];
    char CSSValueStringPool_str367[sizeof("step-middle")];
    char CSSValueStringPool_str368[sizeof("repeating-radial-gradient")];
    char CSSValueStringPool_str369[sizeof("listbox")];
    char CSSValueStringPool_str370[sizeof("gold")];
    char CSSValueStringPool_str371[sizeof("fantasy")];
    char CSSValueStringPool_str372[sizeof("no-contextual")];
    char CSSValueStringPool_str373[sizeof("landscape")];
    char CSSValueStringPool_str374[sizeof("polygon")];
    char CSSValueStringPool_str375[sizeof("scaley")];
    char CSSValueStringPool_str376[sizeof("farthest-corner")];
    char CSSValueStringPool_str377[sizeof("evenodd")];
    char CSSValueStringPool_str378[sizeof("darkcyan")];
    char CSSValueStringPool_str379[sizeof("sans-serif")];
    char CSSValueStringPool_str380[sizeof("contextual")];
    char CSSValueStringPool_str381[sizeof("buttontext")];
    char CSSValueStringPool_str382[sizeof("scalez")];
    char CSSValueStringPool_str383[sizeof("brown")];
    char CSSValueStringPool_str384[sizeof("color")];
    char CSSValueStringPool_str385[sizeof("repeating-conic-gradient")];
    char CSSValueStringPool_str386[sizeof("no-drop")];
    char CSSValueStringPool_str387[sizeof("ease-out")];
    char CSSValueStringPool_str388[sizeof("geometricprecision")];
    char CSSValueStringPool_str389[sizeof("lighter")];
    char CSSValueStringPool_str390[sizeof("lighten")];
    char CSSValueStringPool_str391[sizeof("darkkhaki")];
    char CSSValueStringPool_str392[sizeof("persian")];
    char CSSValueStringPool_str393[sizeof("progress")];
    char CSSValueStringPool_str394[sizeof("lightgreen")];
    char CSSValueStringPool_str395[sizeof("graytext")];
    char CSSValueStringPool_str396[sizeof("forwards")];
    char CSSValueStringPool_str397[sizeof("white")];
    char CSSValueStringPool_str398[sizeof("buttonface")];
    char CSSValueStringPool_str399[sizeof("after-edge")];
    char CSSValueStringPool_str400[sizeof("above")];
    char CSSValueStringPool_str401[sizeof("on-demand")];
    char CSSValueStringPool_str402[sizeof("avoid-page")];
    char CSSValueStringPool_str403[sizeof("darkslategrey")];
    char CSSValueStringPool_str404[sizeof("darkslategray")];
    char CSSValueStringPool_str405[sizeof("invert")];
    char CSSValueStringPool_str406[sizeof("mistyrose")];
    char CSSValueStringPool_str407[sizeof("difference")];
    char CSSValueStringPool_str408[sizeof("purple")];
    char CSSValueStringPool_str409[sizeof("myanmar")];
    char CSSValueStringPool_str410[sizeof("margin-box")];
    char CSSValueStringPool_str411[sizeof("rotatey")];
    char CSSValueStringPool_str412[sizeof("paint")];
    char CSSValueStringPool_str413[sizeof("malayalam")];
    char CSSValueStringPool_str414[sizeof("scroll")];
    char CSSValueStringPool_str415[sizeof("browser")];
    char CSSValueStringPool_str416[sizeof("blanchedalmond")];
    char CSSValueStringPool_str417[sizeof("plum")];
    char CSSValueStringPool_str418[sizeof("rotatez")];
    char CSSValueStringPool_str419[sizeof("right")];
    char CSSValueStringPool_str420[sizeof("pointer")];
    char CSSValueStringPool_str421[sizeof("inset")];
    char CSSValueStringPool_str422[sizeof("goldenrod")];
    char CSSValueStringPool_str423[sizeof("initial")];
    char CSSValueStringPool_str424[sizeof("searchfield")];
    char CSSValueStringPool_str425[sizeof("isolate")];
    char CSSValueStringPool_str426[sizeof("fill-box")];
    char CSSValueStringPool_str427[sizeof("dynamic")];
    char CSSValueStringPool_str428[sizeof("legacy")];
    char CSSValueStringPool_str429[sizeof("repeat-x")];
    char CSSValueStringPool_str430[sizeof("se-resize")];
    char CSSValueStringPool_str431[sizeof("overlay")];
    char CSSValueStringPool_str432[sizeof("translatex")];
    char CSSValueStringPool_str433[sizeof("diagonal-fractions")];
    char CSSValueStringPool_str434[sizeof("pre-line")];
    char CSSValueStringPool_str435[sizeof("wheat")];
    char CSSValueStringPool_str436[sizeof("cyan")];
    char CSSValueStringPool_str437[sizeof("mediumpurple")];
    char CSSValueStringPool_str438[sizeof("s-resize")];
    char CSSValueStringPool_str439[sizeof("italic")];
    char CSSValueStringPool_str440[sizeof("katakana-iroha")];
    char CSSValueStringPool_str441[sizeof("flow-root")];
    char CSSValueStringPool_str442[sizeof("ne-resize")];
    char CSSValueStringPool_str443[sizeof("both")];
    char CSSValueStringPool_str444[sizeof("square")];
    char CSSValueStringPool_str445[sizeof("painted")];
    char CSSValueStringPool_str446[sizeof("n-resize")];
    char CSSValueStringPool_str447[sizeof("dashed")];
    char CSSValueStringPool_str448[sizeof("context-menu")];
    char CSSValueStringPool_str449[sizeof("captiontext")];
    char CSSValueStringPool_str450[sizeof("hard-light")];
    char CSSValueStringPool_str451[sizeof("all-small-caps")];
    char CSSValueStringPool_str452[sizeof("slider-vertical")];
    char CSSValueStringPool_str453[sizeof("lightsalmon")];
    char CSSValueStringPool_str454[sizeof("palevioletred")];
    char CSSValueStringPool_str455[sizeof("olivedrab")];
    char CSSValueStringPool_str456[sizeof("flex-start")];
    char CSSValueStringPool_str457[sizeof("all-petite-caps")];
    char CSSValueStringPool_str458[sizeof("flex-end")];
    char CSSValueStringPool_str459[sizeof("interlace")];
    char CSSValueStringPool_str460[sizeof("skew")];
    char CSSValueStringPool_str461[sizeof("avoid-column")];
    char CSSValueStringPool_str462[sizeof("sticky")];
    char CSSValueStringPool_str463[sizeof("max-content")];
    char CSSValueStringPool_str464[sizeof("x-small")];
    char CSSValueStringPool_str465[sizeof("lightcoral")];
    char CSSValueStringPool_str466[sizeof("auto")];
    char CSSValueStringPool_str467[sizeof("stroke")];
    char CSSValueStringPool_str468[sizeof("azure")];
    char CSSValueStringPool_str469[sizeof("x-large")];
    char CSSValueStringPool_str470[sizeof("soft-light")];
    char CSSValueStringPool_str471[sizeof("ns-resize")];
    char CSSValueStringPool_str472[sizeof("show")];
    char CSSValueStringPool_str473[sizeof("ultra-condensed")];
    char CSSValueStringPool_str474[sizeof("media-mute-button")];
    char CSSValueStringPool_str475[sizeof("smooth")];
    char CSSValueStringPool_str476[sizeof("exact")];
    char CSSValueStringPool_str477[sizeof("media-volume-slider")];
    char CSSValueStringPool_str478[sizeof("palegoldenrod")];
    char CSSValueStringPool_str479[sizeof("preserve-3d")];
    char CSSValueStringPool_str480[sizeof("text-top")];
    char CSSValueStringPool_str481[sizeof("opacity")];
    char CSSValueStringPool_str482[sizeof("paused")];
    char CSSValueStringPool_str483[sizeof("ellipse")];
    char CSSValueStringPool_str484[sizeof("text-bottom")];
    char CSSValueStringPool_str485[sizeof("scrollbar")];
    char CSSValueStringPool_str486[sizeof("groove")];
    char CSSValueStringPool_str487[sizeof("reset-size")];
    char CSSValueStringPool_str488[sizeof("space-evenly")];
    char CSSValueStringPool_str489[sizeof("var")];
    char CSSValueStringPool_str490[sizeof("swap")];
    char CSSValueStringPool_str491[sizeof("monospace")];
    char CSSValueStringPool_str492[sizeof("horizontal")];
    char CSSValueStringPool_str493[sizeof("col-resize")];
    char CSSValueStringPool_str494[sizeof("saturate")];
    char CSSValueStringPool_str495[sizeof("threedface")];
    char CSSValueStringPool_str496[sizeof("ultra-expanded")];
    char CSSValueStringPool_str497[sizeof("menu")];
    char CSSValueStringPool_str498[sizeof("new")];
    char CSSValueStringPool_str499[sizeof("repeat-y")];
    char CSSValueStringPool_str500[sizeof("violet")];
    char CSSValueStringPool_str501[sizeof("translatey")];
    char CSSValueStringPool_str502[sizeof("saturation")];
    char CSSValueStringPool_str503[sizeof("multiply")];
    char CSSValueStringPool_str504[sizeof("aqua")];
    char CSSValueStringPool_str505[sizeof("ellipsis")];
    char CSSValueStringPool_str506[sizeof("mediumvioletred")];
    char CSSValueStringPool_str507[sizeof("translatez")];
    char CSSValueStringPool_str508[sizeof("icon")];
    char CSSValueStringPool_str509[sizeof("manual")];
    char CSSValueStringPool_str510[sizeof("aquamarine")];
    char CSSValueStringPool_str511[sizeof("off")];
    char CSSValueStringPool_str512[sizeof("ease-in-out")];
    char CSSValueStringPool_str513[sizeof("button-bevel")];
    char CSSValueStringPool_str514[sizeof("gurmukhi")];
    char CSSValueStringPool_str515[sizeof("fuchsia")];
    char CSSValueStringPool_str516[sizeof("source-atop")];
    char CSSValueStringPool_str517[sizeof("mathematical")];
    char CSSValueStringPool_str518[sizeof("inherit")];
    char CSSValueStringPool_str519[sizeof("row")];
    char CSSValueStringPool_str520[sizeof("media-slider")];
    char CSSValueStringPool_str521[sizeof("drop-shadow")];
    char CSSValueStringPool_str522[sizeof("content-box")];
    char CSSValueStringPool_str523[sizeof("inline")];
    char CSSValueStringPool_str524[sizeof("lightblue")];
    char CSSValueStringPool_str525[sizeof("upper-alpha")];
    char CSSValueStringPool_str526[sizeof("-internal-media-remoting-cast-icon")];
    char CSSValueStringPool_str527[sizeof("urdu")];
    char CSSValueStringPool_str528[sizeof("orchid")];
    char CSSValueStringPool_str529[sizeof("inactiveborder")];
    char CSSValueStringPool_str530[sizeof("buttonhighlight")];
    char CSSValueStringPool_str531[sizeof("menulist")];
    char CSSValueStringPool_str532[sizeof("highlight")];
    char CSSValueStringPool_str533[sizeof("-internal-quirk-inherit")];
    char CSSValueStringPool_str534[sizeof("line-through")];
    char CSSValueStringPool_str535[sizeof("alpha")];
    char CSSValueStringPool_str536[sizeof("titling-caps")];
    char CSSValueStringPool_str537[sizeof("column")];
    char CSSValueStringPool_str538[sizeof("block-axis")];
    char CSSValueStringPool_str539[sizeof("pan-up")];
    char CSSValueStringPool_str540[sizeof("document")];
    char CSSValueStringPool_str541[sizeof("luminosity")];
    char CSSValueStringPool_str542[sizeof("table-column-group")];
    char CSSValueStringPool_str543[sizeof("lightsteelblue")];
    char CSSValueStringPool_str544[sizeof("subpixel-antialiased")];
    char CSSValueStringPool_str545[sizeof("no-close-quote")];
    char CSSValueStringPool_str546[sizeof("pan-right")];
    char CSSValueStringPool_str547[sizeof("indigo")];
    char CSSValueStringPool_str548[sizeof("skyblue")];
    char CSSValueStringPool_str549[sizeof("verso")];
    char CSSValueStringPool_str550[sizeof("non-scaling-stroke")];
    char CSSValueStringPool_str551[sizeof("mandatory")];
    char CSSValueStringPool_str552[sizeof("semi-expanded")];
    char CSSValueStringPool_str553[sizeof("whitesmoke")];
    char CSSValueStringPool_str554[sizeof("color-stop")];
    char CSSValueStringPool_str555[sizeof("hebrew")];
    char CSSValueStringPool_str556[sizeof("message-box")];
    char CSSValueStringPool_str557[sizeof("royalblue")];
    char CSSValueStringPool_str558[sizeof("simp-chinese-formal")];
    char CSSValueStringPool_str559[sizeof("inside")];
    char CSSValueStringPool_str560[sizeof("vertical")];
    char CSSValueStringPool_str561[sizeof("simp-chinese-informal")];
    char CSSValueStringPool_str562[sizeof("absolute")];
    char CSSValueStringPool_str563[sizeof("-internal-media-subtitles-icon")];
    char CSSValueStringPool_str564[sizeof("lawngreen")];
    char CSSValueStringPool_str565[sizeof("indianred")];
    char CSSValueStringPool_str566[sizeof("lowercase")];
    char CSSValueStringPool_str567[sizeof("nowrap")];
    char CSSValueStringPool_str568[sizeof("capitalize")];
    char CSSValueStringPool_str569[sizeof("color-burn")];
    char CSSValueStringPool_str570[sizeof("lower-armenian")];
    char CSSValueStringPool_str571[sizeof("padding")];
    char CSSValueStringPool_str572[sizeof("lower-roman")];
    char CSSValueStringPool_str573[sizeof("textfield")];
    char CSSValueStringPool_str574[sizeof("activeborder")];
    char CSSValueStringPool_str575[sizeof("lower-greek")];
    char CSSValueStringPool_str576[sizeof("lightpink")];
    char CSSValueStringPool_str577[sizeof("lower-latin")];
    char CSSValueStringPool_str578[sizeof("before")];
    char CSSValueStringPool_str579[sizeof("proportional-nums")];
    char CSSValueStringPool_str580[sizeof("horizontal-tb")];
    char CSSValueStringPool_str581[sizeof("small-caption")];
    char CSSValueStringPool_str582[sizeof("inline-grid")];
    char CSSValueStringPool_str583[sizeof("media-volume-slider-container")];
    char CSSValueStringPool_str584[sizeof("progress-bar")];
    char CSSValueStringPool_str585[sizeof("stacked-fractions")];
    char CSSValueStringPool_str586[sizeof("last-baseline")];
    char CSSValueStringPool_str587[sizeof("discretionary-ligatures")];
    char CSSValueStringPool_str588[sizeof("exclusion")];
    char CSSValueStringPool_str589[sizeof("mediumaquamarine")];
    char CSSValueStringPool_str590[sizeof("checkbox")];
    char CSSValueStringPool_str591[sizeof("gujarati")];
    char CSSValueStringPool_str592[sizeof("sliderthumb-vertical")];
    char CSSValueStringPool_str593[sizeof("not-allowed")];
    char CSSValueStringPool_str594[sizeof("telugu")];
    char CSSValueStringPool_str595[sizeof("mediumslateblue")];
    char CSSValueStringPool_str596[sizeof("progressive")];
    char CSSValueStringPool_str597[sizeof("oldstyle-nums")];
    char CSSValueStringPool_str598[sizeof("pixelated")];
    char CSSValueStringPool_str599[sizeof("threedhighlight")];
    char CSSValueStringPool_str600[sizeof("vertical-rl")];
    char CSSValueStringPool_str601[sizeof("lightseagreen")];
    char CSSValueStringPool_str602[sizeof("rosybrown")];
    char CSSValueStringPool_str603[sizeof("backwards")];
    char CSSValueStringPool_str604[sizeof("pan-left")];
    char CSSValueStringPool_str605[sizeof("e-resize")];
    char CSSValueStringPool_str606[sizeof("scale-down")];
    char CSSValueStringPool_str607[sizeof("petite-caps")];
    char CSSValueStringPool_str608[sizeof("xx-large")];
    char CSSValueStringPool_str609[sizeof("expanded")];
    char CSSValueStringPool_str610[sizeof("mediumturquoise")];
    char CSSValueStringPool_str611[sizeof("alphabetic")];
    char CSSValueStringPool_str612[sizeof("read-only")];
    char CSSValueStringPool_str613[sizeof("pan-x")];
    char CSSValueStringPool_str614[sizeof("inline-table")];
    char CSSValueStringPool_str615[sizeof("slashed-zero")];
    char CSSValueStringPool_str616[sizeof("border-box")];
    char CSSValueStringPool_str617[sizeof("korean-hanja-formal")];
    char CSSValueStringPool_str618[sizeof("oblique")];
    char CSSValueStringPool_str619[sizeof("rebeccapurple")];
    char CSSValueStringPool_str620[sizeof("korean-hanja-informal")];
    char CSSValueStringPool_str621[sizeof("economy")];
    char CSSValueStringPool_str622[sizeof("vertical-lr")];
    char CSSValueStringPool_str623[sizeof("w-resize")];
    char CSSValueStringPool_str624[sizeof("arabic-indic")];
    char CSSValueStringPool_str625[sizeof("text-after-edge")];
    char CSSValueStringPool_str626[sizeof("farthest-side")];
    char CSSValueStringPool_str627[sizeof("open-quote")];
    char CSSValueStringPool_str628[sizeof("bounding-box")];
    char CSSValueStringPool_str629[sizeof("table-row")];
    char CSSValueStringPool_str630[sizeof("menulist-button")];
    char CSSValueStringPool_str631[sizeof("skewx")];
    char CSSValueStringPool_str632[sizeof("square-button")];
    char CSSValueStringPool_str633[sizeof("conic-gradient")];
    char CSSValueStringPool_str634[sizeof("path")];
    char CSSValueStringPool_str635[sizeof("bidi-override")];
    char CSSValueStringPool_str636[sizeof("layout")];
    char CSSValueStringPool_str637[sizeof("lightgrey")];
    char CSSValueStringPool_str638[sizeof("lightgray")];
    char CSSValueStringPool_str639[sizeof("table-caption")];
    char CSSValueStringPool_str640[sizeof("no-historical-ligatures")];
    char CSSValueStringPool_str641[sizeof("ivory")];
    char CSSValueStringPool_str642[sizeof("plaintext")];
    char CSSValueStringPool_str643[sizeof("accumulate")];
    char CSSValueStringPool_str644[sizeof("xx-small")];
    char CSSValueStringPool_str645[sizeof("visible")];
    char CSSValueStringPool_str646[sizeof("-internal-media-closed-captions-icon")];
    char CSSValueStringPool_str647[sizeof("infinite")];
    char CSSValueStringPool_str648[sizeof("media-volume-sliderthumb")];
    char CSSValueStringPool_str649[sizeof("each-line")];
    char CSSValueStringPool_str650[sizeof("pan-y")];
    char CSSValueStringPool_str651[sizeof("inner-spin-button")];
    char CSSValueStringPool_str652[sizeof("color-dodge")];
    char CSSValueStringPool_str653[sizeof("perspective")];
    char CSSValueStringPool_str654[sizeof("menutext")];
    char CSSValueStringPool_str655[sizeof("auto-fit")];
    char CSSValueStringPool_str656[sizeof("greenyellow")];
    char CSSValueStringPool_str657[sizeof("korean-hangul-formal")];
    char CSSValueStringPool_str658[sizeof("lightcyan")];
    char CSSValueStringPool_str659[sizeof("isolate-override")];
    char CSSValueStringPool_str660[sizeof("progress-bar-value")];
    char CSSValueStringPool_str661[sizeof("justify")];
    char CSSValueStringPool_str662[sizeof("-webkit-left")];
    char CSSValueStringPool_str663[sizeof("activecaption")];
    char CSSValueStringPool_str664[sizeof("skewy")];
    char CSSValueStringPool_str665[sizeof("auto-fill")];
    char CSSValueStringPool_str666[sizeof("media-controls-background")];
    char CSSValueStringPool_str667[sizeof("media-sliderthumb")];
    char CSSValueStringPool_str668[sizeof("inactivecaption")];
    char CSSValueStringPool_str669[sizeof("decimal-leading-zero")];
    char CSSValueStringPool_str670[sizeof("close-quote")];
    char CSSValueStringPool_str671[sizeof("tabular-nums")];
    char CSSValueStringPool_str672[sizeof("table-header-group")];
    char CSSValueStringPool_str673[sizeof("full-width")];
    char CSSValueStringPool_str674[sizeof("searchfield-cancel-button")];
    char CSSValueStringPool_str675[sizeof("read-write")];
    char CSSValueStringPool_str676[sizeof("-webkit-center")];
    char CSSValueStringPool_str677[sizeof("appworkspace")];
    char CSSValueStringPool_str678[sizeof("mediumorchid")];
    char CSSValueStringPool_str679[sizeof("peru")];
    char CSSValueStringPool_str680[sizeof("break-word")];
    char CSSValueStringPool_str681[sizeof("media-play-button")];
    char CSSValueStringPool_str682[sizeof("media-time-remaining-display")];
    char CSSValueStringPool_str683[sizeof("-webkit-control")];
    char CSSValueStringPool_str684[sizeof("saddlebrown")];
    char CSSValueStringPool_str685[sizeof("trad-chinese-formal")];
    char CSSValueStringPool_str686[sizeof("deepskyblue")];
    char CSSValueStringPool_str687[sizeof("yellow")];
    char CSSValueStringPool_str688[sizeof("trad-chinese-informal")];
    char CSSValueStringPool_str689[sizeof("visiblepainted")];
    char CSSValueStringPool_str690[sizeof("inline-block")];
    char CSSValueStringPool_str691[sizeof("inline-axis")];
    char CSSValueStringPool_str692[sizeof("-webkit-calc")];
    char CSSValueStringPool_str693[sizeof("yellowgreen")];
    char CSSValueStringPool_str694[sizeof("honeydew")];
    char CSSValueStringPool_str695[sizeof("darkturquoise")];
    char CSSValueStringPool_str696[sizeof("lower-alpha")];
    char CSSValueStringPool_str697[sizeof("-webkit-gradient")];
    char CSSValueStringPool_str698[sizeof("row-reverse")];
    char CSSValueStringPool_str699[sizeof("table-footer-group")];
    char CSSValueStringPool_str700[sizeof("-webkit-isolate")];
    char CSSValueStringPool_str701[sizeof("column-reverse")];
    char CSSValueStringPool_str702[sizeof("pinch-zoom")];
    char CSSValueStringPool_str703[sizeof("sideways")];
    char CSSValueStringPool_str704[sizeof("-internal-variable-value")];
    char CSSValueStringPool_str705[sizeof("-webkit-auto")];
    char CSSValueStringPool_str706[sizeof("below")];
    char CSSValueStringPool_str707[sizeof("media-toggle-closed-captions-button")];
    char CSSValueStringPool_str708[sizeof("floralwhite")];
    char CSSValueStringPool_str709[sizeof("-webkit-radial-gradient")];
    char CSSValueStringPool_str710[sizeof("lightslategrey")];
    char CSSValueStringPool_str711[sizeof("buttonshadow")];
    char CSSValueStringPool_str712[sizeof("lightslategray")];
    char CSSValueStringPool_str713[sizeof("-webkit-linear-gradient")];
    char CSSValueStringPool_str714[sizeof("-webkit-min-content")];
    char CSSValueStringPool_str715[sizeof("plus-lighter")];
    char CSSValueStringPool_str716[sizeof("-webkit-grab")];
    char CSSValueStringPool_str717[sizeof("extra-condensed")];
    char CSSValueStringPool_str718[sizeof("-webkit-link")];
    char CSSValueStringPool_str719[sizeof("-webkit-mini-control")];
    char CSSValueStringPool_str720[sizeof("sw-resize")];
    char CSSValueStringPool_str721[sizeof("before-edge")];
    char CSSValueStringPool_str722[sizeof("media-enter-fullscreen-button")];
    char CSSValueStringPool_str723[sizeof("nw-resize")];
    char CSSValueStringPool_str724[sizeof("space-between")];
    char CSSValueStringPool_str725[sizeof("-webkit-image-set")];
    char CSSValueStringPool_str726[sizeof("extra-expanded")];
    char CSSValueStringPool_str727[sizeof("pan-down")];
    char CSSValueStringPool_str728[sizeof("ghostwhite")];
    char CSSValueStringPool_str729[sizeof("-internal-active-list-box-selection")];
    char CSSValueStringPool_str730[sizeof("optimizespeed")];
    char CSSValueStringPool_str731[sizeof("visiblestroke")];
    char CSSValueStringPool_str732[sizeof("lightskyblue")];
    char CSSValueStringPool_str733[sizeof("row-resize")];
    char CSSValueStringPool_str734[sizeof("visiblefill")];
    char CSSValueStringPool_str735[sizeof("cornflowerblue")];
    char CSSValueStringPool_str736[sizeof("burlywood")];
    char CSSValueStringPool_str737[sizeof("window")];
    char CSSValueStringPool_str738[sizeof("caps-lock-indicator")];
    char CSSValueStringPool_str739[sizeof("always")];
    char CSSValueStringPool_str740[sizeof("scroll-position")];
    char CSSValueStringPool_str741[sizeof("pre-wrap")];
    char CSSValueStringPool_str742[sizeof("-webkit-grabbing")];
    char CSSValueStringPool_str743[sizeof("threedshadow")];
    char CSSValueStringPool_str744[sizeof("inter-word")];
    char CSSValueStringPool_str745[sizeof("ideographic")];
    char CSSValueStringPool_str746[sizeof("cjk-ideographic")];
    char CSSValueStringPool_str747[sizeof("proximity")];
    char CSSValueStringPool_str748[sizeof("-webkit-baseline-middle")];
    char CSSValueStringPool_str749[sizeof("lightyellow")];
    char CSSValueStringPool_str750[sizeof("-webkit-isolate-override")];
    char CSSValueStringPool_str751[sizeof("nesw-resize")];
    char CSSValueStringPool_str752[sizeof("push-button")];
    char CSSValueStringPool_str753[sizeof("highlighttext")];
    char CSSValueStringPool_str754[sizeof("text-before-edge")];
    char CSSValueStringPool_str755[sizeof("no-open-quote")];
    char CSSValueStringPool_str756[sizeof("-webkit-right")];
    char CSSValueStringPool_str757[sizeof("visual")];
    char CSSValueStringPool_str758[sizeof("-webkit-activelink")];
    char CSSValueStringPool_str759[sizeof("cubic-bezier")];
    char CSSValueStringPool_str760[sizeof("lemonchiffon")];
    char CSSValueStringPool_str761[sizeof("ethiopic-halehame")];
    char CSSValueStringPool_str762[sizeof("-webkit-small-control")];
    char CSSValueStringPool_str763[sizeof("peachpuff")];
    char CSSValueStringPool_str764[sizeof("-internal-media-download-button")];
    char CSSValueStringPool_str765[sizeof("inactivecaptiontext")];
    char CSSValueStringPool_str766[sizeof("sliderthumb-horizontal")];
    char CSSValueStringPool_str767[sizeof("table-row-group")];
    char CSSValueStringPool_str768[sizeof("-internal-media-cast-off-button")];
    char CSSValueStringPool_str769[sizeof("threeddarkshadow")];
    char CSSValueStringPool_str770[sizeof("padding-box")];
    char CSSValueStringPool_str771[sizeof("inline-layout")];
    char CSSValueStringPool_str772[sizeof("menulist-text")];
    char CSSValueStringPool_str773[sizeof("-webkit-pictograph")];
    char CSSValueStringPool_str774[sizeof("-webkit-nowrap")];
    char CSSValueStringPool_str775[sizeof("ethiopic-halehame-am")];
    char CSSValueStringPool_str776[sizeof("vertical-text")];
    char CSSValueStringPool_str777[sizeof("media-exit-fullscreen-button")];
    char CSSValueStringPool_str778[sizeof("sandybrown")];
    char CSSValueStringPool_str779[sizeof("threedlightshadow")];
    char CSSValueStringPool_str780[sizeof("-internal-extend-to-zoom")];
    char CSSValueStringPool_str781[sizeof("ew-resize")];
    char CSSValueStringPool_str782[sizeof("-webkit-match-parent")];
    char CSSValueStringPool_str783[sizeof("-internal-media-track-selection-checkmark")];
    char CSSValueStringPool_str784[sizeof("inline-flex")];
    char CSSValueStringPool_str785[sizeof("vertical-right")];
    char CSSValueStringPool_str786[sizeof("-webkit-box")];
    char CSSValueStringPool_str787[sizeof("-webkit-body")];
    char CSSValueStringPool_str788[sizeof("-webkit-inline-box")];
    char CSSValueStringPool_str789[sizeof("-webkit-fit-content")];
    char CSSValueStringPool_str790[sizeof("proportional-width")];
    char CSSValueStringPool_str791[sizeof("ethiopic-halehame-ti-et")];
    char CSSValueStringPool_str792[sizeof("ethiopic-halehame-ti-er")];
    char CSSValueStringPool_str793[sizeof("optimizelegibility")];
    char CSSValueStringPool_str794[sizeof("-webkit-plaintext")];
    char CSSValueStringPool_str795[sizeof("media-current-time-display")];
    char CSSValueStringPool_str796[sizeof("nwse-resize")];
    char CSSValueStringPool_str797[sizeof("-webkit-fill-available")];
    char CSSValueStringPool_str798[sizeof("slider-horizontal")];
    char CSSValueStringPool_str799[sizeof("infotext")];
    char CSSValueStringPool_str800[sizeof("powderblue")];
    char CSSValueStringPool_str801[sizeof("cjk-heavenly-stem")];
    char CSSValueStringPool_str802[sizeof("-internal-media-overflow-button")];
    char CSSValueStringPool_str803[sizeof("-webkit-max-content")];
    char CSSValueStringPool_str804[sizeof("paleturquoise")];
    char CSSValueStringPool_str805[sizeof("view-box")];
    char CSSValueStringPool_str806[sizeof("windowtext")];
    char CSSValueStringPool_str807[sizeof("media-controls-fullscreen-background")];
    char CSSValueStringPool_str808[sizeof("-webkit-zoom-in")];
    char CSSValueStringPool_str809[sizeof("-webkit-cross-fade")];
    char CSSValueStringPool_str810[sizeof("auto-flow")];
    char CSSValueStringPool_str811[sizeof("-internal-inactive-list-box-selection")];
    char CSSValueStringPool_str812[sizeof("media-overlay-play-button")];
    char CSSValueStringPool_str813[sizeof("no-discretionary-ligatures")];
    char CSSValueStringPool_str814[sizeof("antiquewhite")];
    char CSSValueStringPool_str815[sizeof("-internal-active-list-box-selection-text")];
    char CSSValueStringPool_str816[sizeof("-webkit-repeating-linear-gradient")];
    char CSSValueStringPool_str817[sizeof("navajowhite")];
    char CSSValueStringPool_str818[sizeof("-webkit-zoom-out")];
    char CSSValueStringPool_str819[sizeof("-webkit-paged-x")];
    char CSSValueStringPool_str820[sizeof("-webkit-inline-flex")];
    char CSSValueStringPool_str821[sizeof("-webkit-focus-ring-color")];
    char CSSValueStringPool_str822[sizeof("-webkit-repeating-radial-gradient")];
    char CSSValueStringPool_str823[sizeof("lightgoldenrodyellow")];
    char CSSValueStringPool_str824[sizeof("menulist-textfield")];
    char CSSValueStringPool_str825[sizeof("infobackground")];
    char CSSValueStringPool_str826[sizeof("-webkit-optimize-contrast")];
    char CSSValueStringPool_str827[sizeof("-webkit-paged-y")];
    char CSSValueStringPool_str828[sizeof("optimizequality")];
    char CSSValueStringPool_str829[sizeof("windowframe")];
    char CSSValueStringPool_str830[sizeof("cjk-earthly-branch")];
    char CSSValueStringPool_str831[sizeof("after-white-space")];
    char CSSValueStringPool_str832[sizeof("-webkit-flex")];
    char CSSValueStringPool_str833[sizeof("sideways-right")];
    char CSSValueStringPool_str834[sizeof("-internal-media-overlay-cast-off-button")];
    char CSSValueStringPool_str835[sizeof("papayawhip")];
    char CSSValueStringPool_str836[sizeof("-internal-inactive-list-box-selection-text")];
    char CSSValueStringPool_str837[sizeof("read-write-plaintext-only")];
    char CSSValueStringPool_str838[sizeof("-webkit-xxx-large")];
  };
static const struct CSSValueStringPool_t CSSValueStringPool_contents =
  {
    "lr",
    "ltr",
    "start",
    "drag",
    "large",
    "larger",
    "darken",
    "lime",
    "seagreen",
    "dot",
    "meter",
    "lao",
    "miter",
    "z",
    "linear",
    "linen",
    "darkgreen",
    "fine",
    "hanging",
    "limegreen",
    "magenta",
    "letter",
    "slice",
    "help",
    "darkorange",
    "small",
    "from",
    "smaller",
    "format",
    "none",
    "fill",
    "nonzero",
    "hover",
    "move",
    "disc",
    "steps",
    "url",
    "zoom",
    "navy",
    "salmon",
    "markers",
    "ledger",
    "flat",
    "darkred",
    "srgb",
    "hide",
    "caret",
    "normal",
    "mongolian",
    "darkviolet",
    "frames",
    "rl",
    "rtl",
    "last",
    "hsl",
    "listitem",
    "unicase",
    "revert",
    "calc",
    "clip",
    "unset",
    "circle",
    "cell",
    "center",
    "b5",
    "beige",
    "scale",
    "under",
    "dotted",
    "b4",
    "filled",
    "lavender",
    "darksalmon",
    "screen",
    "forestgreen",
    "cover",
    "content",
    "red",
    "reset",
    "contain",
    "hiragana",
    "hue",
    "ridge",
    "discard",
    "dense",
    "tan",
    "teal",
    "sides",
    "static",
    "central",
    "first",
    "to",
    "coarse",
    "legal",
    "bengali",
    "mintcream",
    "at",
    "underline",
    "attr",
    "a3",
    "a5",
    "devanagari",
    "loose",
    "reverse",
    "darkolivegreen",
    "sesame",
    "a4",
    "bottom",
    "crimson",
    "space",
    "on",
    "hangul",
    "sienna",
    "bevel",
    "rec2020",
    "darkmagenta",
    "rotate",
    "armenian",
    "scale3d",
    "contrast",
    "contents",
    "linearrgb",
    "oriya",
    "linear-gradient",
    "rect",
    "moccasin",
    "over",
    "hsla",
    "from-image",
    "clear",
    "alternate",
    "recto",
    "baseline",
    "step-start",
    "all",
    "coral",
    "rgb",
    "zoom-in",
    "step-end",
    "relative",
    "cambodian",
    "repeat",
    "overline",
    "double",
    "list-item",
    "rotate3d",
    "keep-all",
    "local",
    "butt",
    "tomato",
    "blur",
    "copy",
    "blue",
    "separate",
    "kannada",
    "darkgoldenrod",
    "clone",
    "tb",
    "sub",
    "triangle",
    "button",
    "caption",
    "table",
    "standalone",
    "destination-in",
    "tibetan",
    "super",
    "green",
    "top",
    "hotpink",
    "grey",
    "gray",
    "darkblue",
    "georgian",
    "khaki",
    "rgba",
    "hue-rotate",
    "span",
    "khmer",
    "destination-over",
    "lr-tb",
    "jis90",
    "orange",
    "jis83",
    "jis78",
    "fullscreen",
    "collapse",
    "no-repeat",
    "digits",
    "alias",
    "bisque",
    "balance",
    "jis04",
    "blueviolet",
    "steelblue",
    "cursive",
    "grab",
    "zoom-out",
    "ruby",
    "running",
    "oldlace",
    "counter",
    "distribute",
    "slateblue",
    "darkslateblue",
    "strict",
    "-internal-center",
    "translate",
    "translate3d",
    "solid",
    "dodgerblue",
    "stretch",
    "source-in",
    "orangered",
    "black",
    "decimal",
    "outset",
    "chocolate",
    "radio",
    "rl-tb",
    "destination-out",
    "katakana",
    "block",
    "round",
    "counters",
    "background",
    "radial",
    "logical",
    "sepia",
    "fit-content",
    "min-content",
    "deeppink",
    "cadetblue",
    "tb-rl",
    "destination-atop",
    "hangul-consonant",
    "medium",
    "seashell",
    "darkorchid",
    "no-change",
    "hand",
    "safe",
    "springgreen",
    "outside",
    "open",
    "spell-out",
    "crispedges",
    "source-over",
    "aliceblue",
    "left",
    "alternate-reverse",
    "grayscale",
    "closest-side",
    "first-baseline",
    "small-caps",
    "turquoise",
    "currentcolor",
    "brightness",
    "luminance",
    "status-bar",
    "grabbing",
    "element",
    "self-start",
    "uppercase",
    "antialiased",
    "source-out",
    "self-end",
    "ease",
    "avoid",
    "space-around",
    "chartreuse",
    "end",
    "upper-armenian",
    "wrap",
    "ordinal",
    "hidden",
    "upper-roman",
    "matrix",
    "darkseagreen",
    "firebrick",
    "crosshair",
    "historical-ligatures",
    "no-common-ligatures",
    "upper-latin",
    "minmax",
    "thistle",
    "wait",
    "thin",
    "blink",
    "silver",
    "middle",
    "lining-nums",
    "simplified",
    "fallback",
    "wavy",
    "use-script",
    "border",
    "double-circle",
    "minimal-ui",
    "table-cell",
    "radial-gradient",
    "mediumseagreen",
    "cornsilk",
    "matrix3d",
    "bold",
    "mixed",
    "bolder",
    "fixed",
    "traditional",
    "closest-corner",
    "all-scroll",
    "after",
    "hiragana-iroha",
    "repeating-linear-gradient",
    "common-ligatures",
    "transparent",
    "scalex",
    "optional",
    "no-drag",
    "unsafe",
    "lavenderblush",
    "thai",
    "thick",
    "condensed",
    "no-punctuation",
    "gainsboro",
    "ease-in",
    "text",
    "x",
    "break-all",
    "embed",
    "textarea",
    "style",
    "dimgrey",
    "-internal-media-control",
    "dimgray",
    "y",
    "p3",
    "pre",
    "darkgrey",
    "xor",
    "darkgray",
    "pink",
    "rotatex",
    "snow",
    "table-column",
    "size",
    "page",
    "wrap-reverse",
    "default",
    "olive",
    "maroon",
    "mediumspringgreen",
    "midnightblue",
    "serif",
    "flex",
    "literal-punctuation",
    "semi-condensed",
    "ray",
    "grid",
    "portrait",
    "upright",
    "palegreen",
    "slategrey",
    "slategray",
    "manipulation",
    "mediumblue",
    "step-middle",
    "repeating-radial-gradient",
    "listbox",
    "gold",
    "fantasy",
    "no-contextual",
    "landscape",
    "polygon",
    "scaley",
    "farthest-corner",
    "evenodd",
    "darkcyan",
    "sans-serif",
    "contextual",
    "buttontext",
    "scalez",
    "brown",
    "color",
    "repeating-conic-gradient",
    "no-drop",
    "ease-out",
    "geometricprecision",
    "lighter",
    "lighten",
    "darkkhaki",
    "persian",
    "progress",
    "lightgreen",
    "graytext",
    "forwards",
    "white",
    "buttonface",
    "after-edge",
    "above",
    "on-demand",
    "avoid-page",
    "darkslategrey",
    "darkslategray",
    "invert",
    "mistyrose",
    "difference",
    "purple",
    "myanmar",
    "margin-box",
    "rotatey",
    "paint",
    "malayalam",
    "scroll",
    "browser",
    "blanchedalmond",
    "plum",
    "rotatez",
    "right",
    "pointer",
    "inset",
    "goldenrod",
    "initial",
    "searchfield",
    "isolate",
    "fill-box",
    "dynamic",
    "legacy",
    "repeat-x",
    "se-resize",
    "overlay",
    "translatex",
    "diagonal-fractions",
    "pre-line",
    "wheat",
    "cyan",
    "mediumpurple",
    "s-resize",
    "italic",
    "katakana-iroha",
    "flow-root",
    "ne-resize",
    "both",
    "square",
    "painted",
    "n-resize",
    "dashed",
    "context-menu",
    "captiontext",
    "hard-light",
    "all-small-caps",
    "slider-vertical",
    "lightsalmon",
    "palevioletred",
    "olivedrab",
    "flex-start",
    "all-petite-caps",
    "flex-end",
    "interlace",
    "skew",
    "avoid-column",
    "sticky",
    "max-content",
    "x-small",
    "lightcoral",
    "auto",
    "stroke",
    "azure",
    "x-large",
    "soft-light",
    "ns-resize",
    "show",
    "ultra-condensed",
    "media-mute-button",
    "smooth",
    "exact",
    "media-volume-slider",
    "palegoldenrod",
    "preserve-3d",
    "text-top",
    "opacity",
    "paused",
    "ellipse",
    "text-bottom",
    "scrollbar",
    "groove",
    "reset-size",
    "space-evenly",
    "var",
    "swap",
    "monospace",
    "horizontal",
    "col-resize",
    "saturate",
    "threedface",
    "ultra-expanded",
    "menu",
    "new",
    "repeat-y",
    "violet",
    "translatey",
    "saturation",
    "multiply",
    "aqua",
    "ellipsis",
    "mediumvioletred",
    "translatez",
    "icon",
    "manual",
    "aquamarine",
    "off",
    "ease-in-out",
    "button-bevel",
    "gurmukhi",
    "fuchsia",
    "source-atop",
    "mathematical",
    "inherit",
    "row",
    "media-slider",
    "drop-shadow",
    "content-box",
    "inline",
    "lightblue",
    "upper-alpha",
    "-internal-media-remoting-cast-icon",
    "urdu",
    "orchid",
    "inactiveborder",
    "buttonhighlight",
    "menulist",
    "highlight",
    "-internal-quirk-inherit",
    "line-through",
    "alpha",
    "titling-caps",
    "column",
    "block-axis",
    "pan-up",
    "document",
    "luminosity",
    "table-column-group",
    "lightsteelblue",
    "subpixel-antialiased",
    "no-close-quote",
    "pan-right",
    "indigo",
    "skyblue",
    "verso",
    "non-scaling-stroke",
    "mandatory",
    "semi-expanded",
    "whitesmoke",
    "color-stop",
    "hebrew",
    "message-box",
    "royalblue",
    "simp-chinese-formal",
    "inside",
    "vertical",
    "simp-chinese-informal",
    "absolute",
    "-internal-media-subtitles-icon",
    "lawngreen",
    "indianred",
    "lowercase",
    "nowrap",
    "capitalize",
    "color-burn",
    "lower-armenian",
    "padding",
    "lower-roman",
    "textfield",
    "activeborder",
    "lower-greek",
    "lightpink",
    "lower-latin",
    "before",
    "proportional-nums",
    "horizontal-tb",
    "small-caption",
    "inline-grid",
    "media-volume-slider-container",
    "progress-bar",
    "stacked-fractions",
    "last-baseline",
    "discretionary-ligatures",
    "exclusion",
    "mediumaquamarine",
    "checkbox",
    "gujarati",
    "sliderthumb-vertical",
    "not-allowed",
    "telugu",
    "mediumslateblue",
    "progressive",
    "oldstyle-nums",
    "pixelated",
    "threedhighlight",
    "vertical-rl",
    "lightseagreen",
    "rosybrown",
    "backwards",
    "pan-left",
    "e-resize",
    "scale-down",
    "petite-caps",
    "xx-large",
    "expanded",
    "mediumturquoise",
    "alphabetic",
    "read-only",
    "pan-x",
    "inline-table",
    "slashed-zero",
    "border-box",
    "korean-hanja-formal",
    "oblique",
    "rebeccapurple",
    "korean-hanja-informal",
    "economy",
    "vertical-lr",
    "w-resize",
    "arabic-indic",
    "text-after-edge",
    "farthest-side",
    "open-quote",
    "bounding-box",
    "table-row",
    "menulist-button",
    "skewx",
    "square-button",
    "conic-gradient",
    "path",
    "bidi-override",
    "layout",
    "lightgrey",
    "lightgray",
    "table-caption",
    "no-historical-ligatures",
    "ivory",
    "plaintext",
    "accumulate",
    "xx-small",
    "visible",
    "-internal-media-closed-captions-icon",
    "infinite",
    "media-volume-sliderthumb",
    "each-line",
    "pan-y",
    "inner-spin-button",
    "color-dodge",
    "perspective",
    "menutext",
    "auto-fit",
    "greenyellow",
    "korean-hangul-formal",
    "lightcyan",
    "isolate-override",
    "progress-bar-value",
    "justify",
    "-webkit-left",
    "activecaption",
    "skewy",
    "auto-fill",
    "media-controls-background",
    "media-sliderthumb",
    "inactivecaption",
    "decimal-leading-zero",
    "close-quote",
    "tabular-nums",
    "table-header-group",
    "full-width",
    "searchfield-cancel-button",
    "read-write",
    "-webkit-center",
    "appworkspace",
    "mediumorchid",
    "peru",
    "break-word",
    "media-play-button",
    "media-time-remaining-display",
    "-webkit-control",
    "saddlebrown",
    "trad-chinese-formal",
    "deepskyblue",
    "yellow",
    "trad-chinese-informal",
    "visiblepainted",
    "inline-block",
    "inline-axis",
    "-webkit-calc",
    "yellowgreen",
    "honeydew",
    "darkturquoise",
    "lower-alpha",
    "-webkit-gradient",
    "row-reverse",
    "table-footer-group",
    "-webkit-isolate",
    "column-reverse",
    "pinch-zoom",
    "sideways",
    "-internal-variable-value",
    "-webkit-auto",
    "below",
    "media-toggle-closed-captions-button",
    "floralwhite",
    "-webkit-radial-gradient",
    "lightslategrey",
    "buttonshadow",
    "lightslategray",
    "-webkit-linear-gradient",
    "-webkit-min-content",
    "plus-lighter",
    "-webkit-grab",
    "extra-condensed",
    "-webkit-link",
    "-webkit-mini-control",
    "sw-resize",
    "before-edge",
    "media-enter-fullscreen-button",
    "nw-resize",
    "space-between",
    "-webkit-image-set",
    "extra-expanded",
    "pan-down",
    "ghostwhite",
    "-internal-active-list-box-selection",
    "optimizespeed",
    "visiblestroke",
    "lightskyblue",
    "row-resize",
    "visiblefill",
    "cornflowerblue",
    "burlywood",
    "window",
    "caps-lock-indicator",
    "always",
    "scroll-position",
    "pre-wrap",
    "-webkit-grabbing",
    "threedshadow",
    "inter-word",
    "ideographic",
    "cjk-ideographic",
    "proximity",
    "-webkit-baseline-middle",
    "lightyellow",
    "-webkit-isolate-override",
    "nesw-resize",
    "push-button",
    "highlighttext",
    "text-before-edge",
    "no-open-quote",
    "-webkit-right",
    "visual",
    "-webkit-activelink",
    "cubic-bezier",
    "lemonchiffon",
    "ethiopic-halehame",
    "-webkit-small-control",
    "peachpuff",
    "-internal-media-download-button",
    "inactivecaptiontext",
    "sliderthumb-horizontal",
    "table-row-group",
    "-internal-media-cast-off-button",
    "threeddarkshadow",
    "padding-box",
    "inline-layout",
    "menulist-text",
    "-webkit-pictograph",
    "-webkit-nowrap",
    "ethiopic-halehame-am",
    "vertical-text",
    "media-exit-fullscreen-button",
    "sandybrown",
    "threedlightshadow",
    "-internal-extend-to-zoom",
    "ew-resize",
    "-webkit-match-parent",
    "-internal-media-track-selection-checkmark",
    "inline-flex",
    "vertical-right",
    "-webkit-box",
    "-webkit-body",
    "-webkit-inline-box",
    "-webkit-fit-content",
    "proportional-width",
    "ethiopic-halehame-ti-et",
    "ethiopic-halehame-ti-er",
    "optimizelegibility",
    "-webkit-plaintext",
    "media-current-time-display",
    "nwse-resize",
    "-webkit-fill-available",
    "slider-horizontal",
    "infotext",
    "powderblue",
    "cjk-heavenly-stem",
    "-internal-media-overflow-button",
    "-webkit-max-content",
    "paleturquoise",
    "view-box",
    "windowtext",
    "media-controls-fullscreen-background",
    "-webkit-zoom-in",
    "-webkit-cross-fade",
    "auto-flow",
    "-internal-inactive-list-box-selection",
    "media-overlay-play-button",
    "no-discretionary-ligatures",
    "antiquewhite",
    "-internal-active-list-box-selection-text",
    "-webkit-repeating-linear-gradient",
    "navajowhite",
    "-webkit-zoom-out",
    "-webkit-paged-x",
    "-webkit-inline-flex",
    "-webkit-focus-ring-color",
    "-webkit-repeating-radial-gradient",
    "lightgoldenrodyellow",
    "menulist-textfield",
    "infobackground",
    "-webkit-optimize-contrast",
    "-webkit-paged-y",
    "optimizequality",
    "windowframe",
    "cjk-earthly-branch",
    "after-white-space",
    "-webkit-flex",
    "sideways-right",
    "-internal-media-overlay-cast-off-button",
    "papayawhip",
    "-internal-inactive-list-box-selection-text",
    "read-write-plaintext-only",
    "-webkit-xxx-large"
  };
#define CSSValueStringPool ((const char *) &CSSValueStringPool_contents)
const struct Value *
CSSValueKeywordsHash::findValueImpl (const char *str, unsigned int len)
{
  enum
    {
      TOTAL_KEYWORDS = 839,
      MIN_WORD_LENGTH = 1,
      MAX_WORD_LENGTH = 42,
      MIN_HASH_VALUE = 5,
      MAX_HASH_VALUE = 6538
    };

  static const struct Value value_word_list[] =
    {
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str0, CSSValueLr},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str1, CSSValueLtr},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str2, CSSValueStart},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str3, CSSValueDrag},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str4, CSSValueLarge},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str5, CSSValueLarger},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str6, CSSValueDarken},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str7, CSSValueLime},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str8, CSSValueSeagreen},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str9, CSSValueDot},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str10, CSSValueMeter},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str11, CSSValueLao},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str12, CSSValueMiter},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str13, CSSValueZ},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str14, CSSValueLinear},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str15, CSSValueLinen},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str16, CSSValueDarkgreen},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str17, CSSValueFine},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str18, CSSValueHanging},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str19, CSSValueLimegreen},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str20, CSSValueMagenta},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str21, CSSValueLetter},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str22, CSSValueSlice},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str23, CSSValueHelp},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str24, CSSValueDarkorange},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str25, CSSValueSmall},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str26, CSSValueFrom},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str27, CSSValueSmaller},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str28, CSSValueFormat},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str29, CSSValueNone},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str30, CSSValueFill},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str31, CSSValueNonzero},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str32, CSSValueHover},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str33, CSSValueMove},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str34, CSSValueDisc},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str35, CSSValueSteps},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str36, CSSValueUrl},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str37, CSSValueZoom},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str38, CSSValueNavy},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str39, CSSValueSalmon},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str40, CSSValueMarkers},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str41, CSSValueLedger},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str42, CSSValueFlat},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str43, CSSValueDarkred},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str44, CSSValueSRGB},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str45, CSSValueHide},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str46, CSSValueCaret},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str47, CSSValueNormal},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str48, CSSValueMongolian},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str49, CSSValueDarkviolet},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str50, CSSValueFrames},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str51, CSSValueRl},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str52, CSSValueRtl},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str53, CSSValueLast},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str54, CSSValueHsl},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str55, CSSValueListitem},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str56, CSSValueUnicase},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str57, CSSValueRevert},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str58, CSSValueCalc},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str59, CSSValueClip},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str60, CSSValueUnset},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str61, CSSValueCircle},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str62, CSSValueCell},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str63, CSSValueCenter},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str64, CSSValueB5},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str65, CSSValueBeige},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str66, CSSValueScale},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str67, CSSValueUnder},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str68, CSSValueDotted},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str69, CSSValueB4},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str70, CSSValueFilled},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str71, CSSValueLavender},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str72, CSSValueDarksalmon},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str73, CSSValueScreen},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str74, CSSValueForestgreen},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str75, CSSValueCover},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str76, CSSValueContent},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str77, CSSValueRed},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str78, CSSValueReset},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str79, CSSValueContain},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str80, CSSValueHiragana},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str81, CSSValueHue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str82, CSSValueRidge},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str83, CSSValueDiscard},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str84, CSSValueDense},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str85, CSSValueTan},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str86, CSSValueTeal},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str87, CSSValueSides},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str88, CSSValueStatic},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str89, CSSValueCentral},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str90, CSSValueFirst},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str91, CSSValueTo},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str92, CSSValueCoarse},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str93, CSSValueLegal},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str94, CSSValueBengali},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str95, CSSValueMintcream},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str96, CSSValueAt},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str97, CSSValueUnderline},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str98, CSSValueAttr},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str99, CSSValueA3},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str100, CSSValueA5},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str101, CSSValueDevanagari},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str102, CSSValueLoose},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str103, CSSValueReverse},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str104, CSSValueDarkolivegreen},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str105, CSSValueSesame},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str106, CSSValueA4},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str107, CSSValueBottom},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str108, CSSValueCrimson},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str109, CSSValueSpace},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str110, CSSValueOn},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str111, CSSValueHangul},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str112, CSSValueSienna},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str113, CSSValueBevel},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str114, CSSValueRec2020},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str115, CSSValueDarkmagenta},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str116, CSSValueRotate},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str117, CSSValueArmenian},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str118, CSSValueScale3d},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str119, CSSValueContrast},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str120, CSSValueContents},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str121, CSSValueLinearRGB},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str122, CSSValueOriya},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str123, CSSValueLinearGradient},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str124, CSSValueRect},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str125, CSSValueMoccasin},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str126, CSSValueOver},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str127, CSSValueHsla},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str128, CSSValueFromImage},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str129, CSSValueClear},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str130, CSSValueAlternate},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str131, CSSValueRecto},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str132, CSSValueBaseline},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str133, CSSValueStepStart},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str134, CSSValueAll},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str135, CSSValueCoral},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str136, CSSValueRgb},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str137, CSSValueZoomIn},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str138, CSSValueStepEnd},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str139, CSSValueRelative},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str140, CSSValueCambodian},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str141, CSSValueRepeat},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str142, CSSValueOverline},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str143, CSSValueDouble},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str144, CSSValueListItem},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str145, CSSValueRotate3d},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str146, CSSValueKeepAll},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str147, CSSValueLocal},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str148, CSSValueButt},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str149, CSSValueTomato},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str150, CSSValueBlur},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str151, CSSValueCopy},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str152, CSSValueBlue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str153, CSSValueSeparate},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str154, CSSValueKannada},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str155, CSSValueDarkgoldenrod},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str156, CSSValueClone},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str157, CSSValueTb},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str158, CSSValueSub},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str159, CSSValueTriangle},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str160, CSSValueButton},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str161, CSSValueCaption},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str162, CSSValueTable},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str163, CSSValueStandalone},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str164, CSSValueDestinationIn},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str165, CSSValueTibetan},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str166, CSSValueSuper},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str167, CSSValueGreen},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str168, CSSValueTop},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str169, CSSValueHotpink},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str170, CSSValueGrey},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str171, CSSValueGray},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str172, CSSValueDarkblue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str173, CSSValueGeorgian},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str174, CSSValueKhaki},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str175, CSSValueRgba},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str176, CSSValueHueRotate},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str177, CSSValueSpan},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str178, CSSValueKhmer},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str179, CSSValueDestinationOver},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str180, CSSValueLrTb},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str181, CSSValueJis90},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str182, CSSValueOrange},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str183, CSSValueJis83},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str184, CSSValueJis78},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str185, CSSValueFullscreen},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str186, CSSValueCollapse},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str187, CSSValueNoRepeat},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str188, CSSValueDigits},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str189, CSSValueAlias},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str190, CSSValueBisque},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str191, CSSValueBalance},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str192, CSSValueJis04},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str193, CSSValueBlueviolet},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str194, CSSValueSteelblue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str195, CSSValueCursive},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str196, CSSValueGrab},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str197, CSSValueZoomOut},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str198, CSSValueRuby},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str199, CSSValueRunning},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str200, CSSValueOldlace},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str201, CSSValueCounter},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str202, CSSValueDistribute},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str203, CSSValueSlateblue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str204, CSSValueDarkslateblue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str205, CSSValueStrict},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str206, CSSValueInternalCenter},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str207, CSSValueTranslate},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str208, CSSValueTranslate3d},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str209, CSSValueSolid},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str210, CSSValueDodgerblue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str211, CSSValueStretch},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str212, CSSValueSourceIn},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str213, CSSValueOrangered},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str214, CSSValueBlack},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str215, CSSValueDecimal},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str216, CSSValueOutset},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str217, CSSValueChocolate},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str218, CSSValueRadio},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str219, CSSValueRlTb},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str220, CSSValueDestinationOut},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str221, CSSValueKatakana},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str222, CSSValueBlock},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str223, CSSValueRound},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str224, CSSValueCounters},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str225, CSSValueBackground},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str226, CSSValueRadial},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str227, CSSValueLogical},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str228, CSSValueSepia},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str229, CSSValueFitContent},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str230, CSSValueMinContent},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str231, CSSValueDeeppink},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str232, CSSValueCadetblue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str233, CSSValueTbRl},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str234, CSSValueDestinationAtop},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str235, CSSValueHangulConsonant},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str236, CSSValueMedium},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str237, CSSValueSeashell},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str238, CSSValueDarkorchid},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str239, CSSValueNoChange},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str240, CSSValueHand},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str241, CSSValueSafe},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str242, CSSValueSpringgreen},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str243, CSSValueOutside},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str244, CSSValueOpen},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str245, CSSValueSpellOut},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str246, CSSValueCrispEdges},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str247, CSSValueSourceOver},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str248, CSSValueAliceblue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str249, CSSValueLeft},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str250, CSSValueAlternateReverse},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str251, CSSValueGrayscale},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str252, CSSValueClosestSide},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str253, CSSValueFirstBaseline},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str254, CSSValueSmallCaps},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str255, CSSValueTurquoise},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str256, CSSValueCurrentcolor},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str257, CSSValueBrightness},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str258, CSSValueLuminance},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str259, CSSValueStatusBar},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str260, CSSValueGrabbing},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str261, CSSValueElement},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str262, CSSValueSelfStart},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str263, CSSValueUppercase},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str264, CSSValueAntialiased},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str265, CSSValueSourceOut},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str266, CSSValueSelfEnd},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str267, CSSValueEase},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str268, CSSValueAvoid},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str269, CSSValueSpaceAround},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str270, CSSValueChartreuse},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str271, CSSValueEnd},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str272, CSSValueUpperArmenian},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str273, CSSValueWrap},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str274, CSSValueOrdinal},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str275, CSSValueHidden},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str276, CSSValueUpperRoman},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str277, CSSValueMatrix},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str278, CSSValueDarkseagreen},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str279, CSSValueFirebrick},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str280, CSSValueCrosshair},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str281, CSSValueHistoricalLigatures},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str282, CSSValueNoCommonLigatures},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str283, CSSValueUpperLatin},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str284, CSSValueMinmax},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str285, CSSValueThistle},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str286, CSSValueWait},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str287, CSSValueThin},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str288, CSSValueBlink},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str289, CSSValueSilver},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str290, CSSValueMiddle},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str291, CSSValueLiningNums},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str292, CSSValueSimplified},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str293, CSSValueFallback},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str294, CSSValueWavy},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str295, CSSValueUseScript},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str296, CSSValueBorder},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str297, CSSValueDoubleCircle},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str298, CSSValueMinimalUi},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str299, CSSValueTableCell},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str300, CSSValueRadialGradient},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str301, CSSValueMediumseagreen},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str302, CSSValueCornsilk},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str303, CSSValueMatrix3d},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str304, CSSValueBold},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str305, CSSValueMixed},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str306, CSSValueBolder},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str307, CSSValueFixed},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str308, CSSValueTraditional},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str309, CSSValueClosestCorner},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str310, CSSValueAllScroll},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str311, CSSValueAfter},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str312, CSSValueHiraganaIroha},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str313, CSSValueRepeatingLinearGradient},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str314, CSSValueCommonLigatures},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str315, CSSValueTransparent},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str316, CSSValueScaleX},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str317, CSSValueOptional},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str318, CSSValueNoDrag},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str319, CSSValueUnsafe},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str320, CSSValueLavenderblush},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str321, CSSValueThai},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str322, CSSValueThick},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str323, CSSValueCondensed},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str324, CSSValueNoPunctuation},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str325, CSSValueGainsboro},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str326, CSSValueEaseIn},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str327, CSSValueText},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str328, CSSValueX},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str329, CSSValueBreakAll},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str330, CSSValueEmbed},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str331, CSSValueTextarea},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str332, CSSValueStyle},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str333, CSSValueDimgrey},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str334, CSSValueInternalMediaControl},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str335, CSSValueDimgray},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str336, CSSValueY},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str337, CSSValueP3},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str338, CSSValuePre},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str339, CSSValueDarkgrey},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str340, CSSValueXor},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str341, CSSValueDarkgray},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str342, CSSValuePink},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str343, CSSValueRotateX},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str344, CSSValueSnow},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str345, CSSValueTableColumn},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str346, CSSValueSize},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str347, CSSValuePage},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str348, CSSValueWrapReverse},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str349, CSSValueDefault},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str350, CSSValueOlive},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str351, CSSValueMaroon},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str352, CSSValueMediumspringgreen},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str353, CSSValueMidnightblue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str354, CSSValueSerif},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str355, CSSValueFlex},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str356, CSSValueLiteralPunctuation},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str357, CSSValueSemiCondensed},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str358, CSSValueRay},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str359, CSSValueGrid},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str360, CSSValuePortrait},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str361, CSSValueUpright},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str362, CSSValuePalegreen},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str363, CSSValueSlategrey},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str364, CSSValueSlategray},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str365, CSSValueManipulation},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str366, CSSValueMediumblue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str367, CSSValueStepMiddle},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str368, CSSValueRepeatingRadialGradient},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str369, CSSValueListbox},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str370, CSSValueGold},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str371, CSSValueFantasy},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str372, CSSValueNoContextual},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str373, CSSValueLandscape},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str374, CSSValuePolygon},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str375, CSSValueScaleY},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str376, CSSValueFarthestCorner},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str377, CSSValueEvenodd},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str378, CSSValueDarkcyan},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str379, CSSValueSansSerif},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str380, CSSValueContextual},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str381, CSSValueButtontext},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str382, CSSValueScaleZ},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str383, CSSValueBrown},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str384, CSSValueColor},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str385, CSSValueRepeatingConicGradient},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str386, CSSValueNoDrop},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str387, CSSValueEaseOut},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str388, CSSValueGeometricPrecision},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str389, CSSValueLighter},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str390, CSSValueLighten},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str391, CSSValueDarkkhaki},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str392, CSSValuePersian},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str393, CSSValueProgress},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str394, CSSValueLightgreen},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str395, CSSValueGraytext},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str396, CSSValueForwards},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str397, CSSValueWhite},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str398, CSSValueButtonface},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str399, CSSValueAfterEdge},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str400, CSSValueAbove},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str401, CSSValueOnDemand},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str402, CSSValueAvoidPage},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str403, CSSValueDarkslategrey},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str404, CSSValueDarkslategray},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str405, CSSValueInvert},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str406, CSSValueMistyrose},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str407, CSSValueDifference},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str408, CSSValuePurple},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str409, CSSValueMyanmar},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str410, CSSValueMarginBox},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str411, CSSValueRotateY},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str412, CSSValuePaint},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str413, CSSValueMalayalam},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str414, CSSValueScroll},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str415, CSSValueBrowser},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str416, CSSValueBlanchedalmond},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str417, CSSValuePlum},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str418, CSSValueRotateZ},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str419, CSSValueRight},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str420, CSSValuePointer},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str421, CSSValueInset},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str422, CSSValueGoldenrod},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str423, CSSValueInitial},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str424, CSSValueSearchfield},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str425, CSSValueIsolate},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str426, CSSValueFillBox},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str427, CSSValueDynamic},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str428, CSSValueLegacy},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str429, CSSValueRepeatX},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str430, CSSValueSeResize},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str431, CSSValueOverlay},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str432, CSSValueTranslateX},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str433, CSSValueDiagonalFractions},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str434, CSSValuePreLine},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str435, CSSValueWheat},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str436, CSSValueCyan},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str437, CSSValueMediumpurple},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str438, CSSValueSResize},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str439, CSSValueItalic},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str440, CSSValueKatakanaIroha},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str441, CSSValueFlowRoot},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str442, CSSValueNeResize},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str443, CSSValueBoth},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str444, CSSValueSquare},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str445, CSSValuePainted},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str446, CSSValueNResize},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str447, CSSValueDashed},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str448, CSSValueContextMenu},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str449, CSSValueCaptiontext},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str450, CSSValueHardLight},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str451, CSSValueAllSmallCaps},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str452, CSSValueSliderVertical},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str453, CSSValueLightsalmon},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str454, CSSValuePalevioletred},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str455, CSSValueOlivedrab},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str456, CSSValueFlexStart},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str457, CSSValueAllPetiteCaps},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str458, CSSValueFlexEnd},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str459, CSSValueInterlace},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str460, CSSValueSkew},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str461, CSSValueAvoidColumn},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str462, CSSValueSticky},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str463, CSSValueMaxContent},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str464, CSSValueXSmall},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str465, CSSValueLightcoral},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str466, CSSValueAuto},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str467, CSSValueStroke},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str468, CSSValueAzure},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str469, CSSValueXLarge},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str470, CSSValueSoftLight},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str471, CSSValueNsResize},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str472, CSSValueShow},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str473, CSSValueUltraCondensed},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str474, CSSValueMediaMuteButton},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str475, CSSValueSmooth},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str476, CSSValueExact},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str477, CSSValueMediaVolumeSlider},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str478, CSSValuePalegoldenrod},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str479, CSSValuePreserve3d},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str480, CSSValueTextTop},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str481, CSSValueOpacity},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str482, CSSValuePaused},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str483, CSSValueEllipse},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str484, CSSValueTextBottom},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str485, CSSValueScrollbar},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str486, CSSValueGroove},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str487, CSSValueResetSize},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str488, CSSValueSpaceEvenly},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str489, CSSValueVar},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str490, CSSValueSwap},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str491, CSSValueMonospace},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str492, CSSValueHorizontal},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str493, CSSValueColResize},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str494, CSSValueSaturate},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str495, CSSValueThreedface},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str496, CSSValueUltraExpanded},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str497, CSSValueMenu},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str498, CSSValueNew},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str499, CSSValueRepeatY},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str500, CSSValueViolet},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str501, CSSValueTranslateY},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str502, CSSValueSaturation},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str503, CSSValueMultiply},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str504, CSSValueAqua},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str505, CSSValueEllipsis},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str506, CSSValueMediumvioletred},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str507, CSSValueTranslateZ},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str508, CSSValueIcon},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str509, CSSValueManual},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str510, CSSValueAquamarine},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str511, CSSValueOff},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str512, CSSValueEaseInOut},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str513, CSSValueButtonBevel},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str514, CSSValueGurmukhi},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str515, CSSValueFuchsia},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str516, CSSValueSourceAtop},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str517, CSSValueMathematical},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str518, CSSValueInherit},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str519, CSSValueRow},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str520, CSSValueMediaSlider},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str521, CSSValueDropShadow},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str522, CSSValueContentBox},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str523, CSSValueInline},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str524, CSSValueLightblue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str525, CSSValueUpperAlpha},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str526, CSSValueInternalMediaRemotingCastIcon},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str527, CSSValueUrdu},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str528, CSSValueOrchid},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str529, CSSValueInactiveborder},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str530, CSSValueButtonhighlight},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str531, CSSValueMenulist},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str532, CSSValueHighlight},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str533, CSSValueInternalQuirkInherit},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str534, CSSValueLineThrough},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str535, CSSValueAlpha},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str536, CSSValueTitlingCaps},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str537, CSSValueColumn},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str538, CSSValueBlockAxis},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str539, CSSValuePanUp},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str540, CSSValueDocument},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str541, CSSValueLuminosity},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str542, CSSValueTableColumnGroup},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str543, CSSValueLightsteelblue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str544, CSSValueSubpixelAntialiased},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str545, CSSValueNoCloseQuote},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str546, CSSValuePanRight},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str547, CSSValueIndigo},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str548, CSSValueSkyblue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str549, CSSValueVerso},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str550, CSSValueNonScalingStroke},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str551, CSSValueMandatory},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str552, CSSValueSemiExpanded},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str553, CSSValueWhitesmoke},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str554, CSSValueColorStop},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str555, CSSValueHebrew},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str556, CSSValueMessageBox},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str557, CSSValueRoyalblue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str558, CSSValueSimpChineseFormal},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str559, CSSValueInside},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str560, CSSValueVertical},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str561, CSSValueSimpChineseInformal},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str562, CSSValueAbsolute},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str563, CSSValueInternalMediaSubtitlesIcon},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str564, CSSValueLawngreen},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str565, CSSValueIndianred},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str566, CSSValueLowercase},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str567, CSSValueNowrap},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str568, CSSValueCapitalize},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str569, CSSValueColorBurn},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str570, CSSValueLowerArmenian},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str571, CSSValuePadding},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str572, CSSValueLowerRoman},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str573, CSSValueTextfield},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str574, CSSValueActiveborder},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str575, CSSValueLowerGreek},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str576, CSSValueLightpink},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str577, CSSValueLowerLatin},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str578, CSSValueBefore},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str579, CSSValueProportionalNums},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str580, CSSValueHorizontalTb},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str581, CSSValueSmallCaption},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str582, CSSValueInlineGrid},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str583, CSSValueMediaVolumeSliderContainer},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str584, CSSValueProgressBar},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str585, CSSValueStackedFractions},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str586, CSSValueLastBaseline},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str587, CSSValueDiscretionaryLigatures},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str588, CSSValueExclusion},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str589, CSSValueMediumaquamarine},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str590, CSSValueCheckbox},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str591, CSSValueGujarati},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str592, CSSValueSliderthumbVertical},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str593, CSSValueNotAllowed},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str594, CSSValueTelugu},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str595, CSSValueMediumslateblue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str596, CSSValueProgressive},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str597, CSSValueOldstyleNums},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str598, CSSValuePixelated},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str599, CSSValueThreedhighlight},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str600, CSSValueVerticalRl},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str601, CSSValueLightseagreen},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str602, CSSValueRosybrown},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str603, CSSValueBackwards},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str604, CSSValuePanLeft},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str605, CSSValueEResize},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str606, CSSValueScaleDown},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str607, CSSValuePetiteCaps},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str608, CSSValueXxLarge},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str609, CSSValueExpanded},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str610, CSSValueMediumturquoise},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str611, CSSValueAlphabetic},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str612, CSSValueReadOnly},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str613, CSSValuePanX},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str614, CSSValueInlineTable},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str615, CSSValueSlashedZero},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str616, CSSValueBorderBox},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str617, CSSValueKoreanHanjaFormal},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str618, CSSValueOblique},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str619, CSSValueRebeccapurple},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str620, CSSValueKoreanHanjaInformal},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str621, CSSValueEconomy},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str622, CSSValueVerticalLr},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str623, CSSValueWResize},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str624, CSSValueArabicIndic},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str625, CSSValueTextAfterEdge},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str626, CSSValueFarthestSide},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str627, CSSValueOpenQuote},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str628, CSSValueBoundingBox},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str629, CSSValueTableRow},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str630, CSSValueMenulistButton},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str631, CSSValueSkewX},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str632, CSSValueSquareButton},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str633, CSSValueConicGradient},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str634, CSSValuePath},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str635, CSSValueBidiOverride},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str636, CSSValueLayout},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str637, CSSValueLightgrey},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str638, CSSValueLightgray},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str639, CSSValueTableCaption},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str640, CSSValueNoHistoricalLigatures},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str641, CSSValueIvory},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str642, CSSValuePlaintext},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str643, CSSValueAccumulate},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str644, CSSValueXxSmall},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str645, CSSValueVisible},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str646, CSSValueInternalMediaClosedCaptionsIcon},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str647, CSSValueInfinite},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str648, CSSValueMediaVolumeSliderthumb},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str649, CSSValueEachLine},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str650, CSSValuePanY},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str651, CSSValueInnerSpinButton},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str652, CSSValueColorDodge},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str653, CSSValuePerspective},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str654, CSSValueMenutext},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str655, CSSValueAutoFit},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str656, CSSValueGreenyellow},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str657, CSSValueKoreanHangulFormal},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str658, CSSValueLightcyan},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str659, CSSValueIsolateOverride},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str660, CSSValueProgressBarValue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str661, CSSValueJustify},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str662, CSSValueWebkitLeft},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str663, CSSValueActivecaption},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str664, CSSValueSkewY},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str665, CSSValueAutoFill},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str666, CSSValueMediaControlsBackground},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str667, CSSValueMediaSliderthumb},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str668, CSSValueInactivecaption},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str669, CSSValueDecimalLeadingZero},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str670, CSSValueCloseQuote},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str671, CSSValueTabularNums},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str672, CSSValueTableHeaderGroup},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str673, CSSValueFullWidth},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str674, CSSValueSearchfieldCancelButton},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str675, CSSValueReadWrite},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str676, CSSValueWebkitCenter},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str677, CSSValueAppworkspace},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str678, CSSValueMediumorchid},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str679, CSSValuePeru},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str680, CSSValueBreakWord},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str681, CSSValueMediaPlayButton},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str682, CSSValueMediaTimeRemainingDisplay},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str683, CSSValueWebkitControl},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str684, CSSValueSaddlebrown},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str685, CSSValueTradChineseFormal},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str686, CSSValueDeepskyblue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str687, CSSValueYellow},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str688, CSSValueTradChineseInformal},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str689, CSSValueVisiblePainted},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str690, CSSValueInlineBlock},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str691, CSSValueInlineAxis},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str692, CSSValueWebkitCalc},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str693, CSSValueYellowgreen},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str694, CSSValueHoneydew},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str695, CSSValueDarkturquoise},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str696, CSSValueLowerAlpha},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str697, CSSValueWebkitGradient},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str698, CSSValueRowReverse},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str699, CSSValueTableFooterGroup},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str700, CSSValueWebkitIsolate},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str701, CSSValueColumnReverse},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str702, CSSValuePinchZoom},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str703, CSSValueSideways},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str704, CSSValueInternalVariableValue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str705, CSSValueWebkitAuto},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str706, CSSValueBelow},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str707, CSSValueMediaToggleClosedCaptionsButton},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str708, CSSValueFloralwhite},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str709, CSSValueWebkitRadialGradient},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str710, CSSValueLightslategrey},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str711, CSSValueButtonshadow},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str712, CSSValueLightslategray},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str713, CSSValueWebkitLinearGradient},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str714, CSSValueWebkitMinContent},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str715, CSSValuePlusLighter},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str716, CSSValueWebkitGrab},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str717, CSSValueExtraCondensed},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str718, CSSValueWebkitLink},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str719, CSSValueWebkitMiniControl},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str720, CSSValueSwResize},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str721, CSSValueBeforeEdge},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str722, CSSValueMediaEnterFullscreenButton},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str723, CSSValueNwResize},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str724, CSSValueSpaceBetween},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str725, CSSValueWebkitImageSet},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str726, CSSValueExtraExpanded},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str727, CSSValuePanDown},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str728, CSSValueGhostwhite},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str729, CSSValueInternalActiveListBoxSelection},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str730, CSSValueOptimizeSpeed},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str731, CSSValueVisibleStroke},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str732, CSSValueLightskyblue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str733, CSSValueRowResize},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str734, CSSValueVisibleFill},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str735, CSSValueCornflowerblue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str736, CSSValueBurlywood},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str737, CSSValueWindow},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str738, CSSValueCapsLockIndicator},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str739, CSSValueAlways},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str740, CSSValueScrollPosition},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str741, CSSValuePreWrap},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str742, CSSValueWebkitGrabbing},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str743, CSSValueThreedshadow},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str744, CSSValueInterWord},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str745, CSSValueIdeographic},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str746, CSSValueCjkIdeographic},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str747, CSSValueProximity},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str748, CSSValueWebkitBaselineMiddle},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str749, CSSValueLightyellow},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str750, CSSValueWebkitIsolateOverride},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str751, CSSValueNeswResize},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str752, CSSValuePushButton},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str753, CSSValueHighlighttext},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str754, CSSValueTextBeforeEdge},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str755, CSSValueNoOpenQuote},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str756, CSSValueWebkitRight},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str757, CSSValueVisual},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str758, CSSValueWebkitActivelink},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str759, CSSValueCubicBezier},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str760, CSSValueLemonchiffon},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str761, CSSValueEthiopicHalehame},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str762, CSSValueWebkitSmallControl},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str763, CSSValuePeachpuff},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str764, CSSValueInternalMediaDownloadButton},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str765, CSSValueInactivecaptiontext},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str766, CSSValueSliderthumbHorizontal},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str767, CSSValueTableRowGroup},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str768, CSSValueInternalMediaCastOffButton},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str769, CSSValueThreeddarkshadow},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str770, CSSValuePaddingBox},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str771, CSSValueInlineLayout},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str772, CSSValueMenulistText},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str773, CSSValueWebkitPictograph},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str774, CSSValueWebkitNowrap},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str775, CSSValueEthiopicHalehameAm},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str776, CSSValueVerticalText},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str777, CSSValueMediaExitFullscreenButton},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str778, CSSValueSandybrown},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str779, CSSValueThreedlightshadow},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str780, CSSValueInternalExtendToZoom},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str781, CSSValueEwResize},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str782, CSSValueWebkitMatchParent},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str783, CSSValueInternalMediaTrackSelectionCheckmark},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str784, CSSValueInlineFlex},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str785, CSSValueVerticalRight},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str786, CSSValueWebkitBox},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str787, CSSValueWebkitBody},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str788, CSSValueWebkitInlineBox},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str789, CSSValueWebkitFitContent},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str790, CSSValueProportionalWidth},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str791, CSSValueEthiopicHalehameTiEt},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str792, CSSValueEthiopicHalehameTiEr},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str793, CSSValueOptimizeLegibility},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str794, CSSValueWebkitPlaintext},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str795, CSSValueMediaCurrentTimeDisplay},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str796, CSSValueNwseResize},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str797, CSSValueWebkitFillAvailable},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str798, CSSValueSliderHorizontal},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str799, CSSValueInfotext},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str800, CSSValuePowderblue},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str801, CSSValueCjkHeavenlyStem},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str802, CSSValueInternalMediaOverflowButton},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str803, CSSValueWebkitMaxContent},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str804, CSSValuePaleturquoise},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str805, CSSValueViewBox},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str806, CSSValueWindowtext},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str807, CSSValueMediaControlsFullscreenBackground},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str808, CSSValueWebkitZoomIn},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str809, CSSValueWebkitCrossFade},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str810, CSSValueAutoFlow},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str811, CSSValueInternalInactiveListBoxSelection},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str812, CSSValueMediaOverlayPlayButton},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str813, CSSValueNoDiscretionaryLigatures},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str814, CSSValueAntiquewhite},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str815, CSSValueInternalActiveListBoxSelectionText},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str816, CSSValueWebkitRepeatingLinearGradient},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str817, CSSValueNavajowhite},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str818, CSSValueWebkitZoomOut},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str819, CSSValueWebkitPagedX},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str820, CSSValueWebkitInlineFlex},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str821, CSSValueWebkitFocusRingColor},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str822, CSSValueWebkitRepeatingRadialGradient},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str823, CSSValueLightgoldenrodyellow},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str824, CSSValueMenulistTextfield},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str825, CSSValueInfobackground},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str826, CSSValueWebkitOptimizeContrast},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str827, CSSValueWebkitPagedY},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str828, CSSValueOptimizeQuality},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str829, CSSValueWindowframe},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str830, CSSValueCjkEarthlyBranch},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str831, CSSValueAfterWhiteSpace},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str832, CSSValueWebkitFlex},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str833, CSSValueSidewaysRight},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str834, CSSValueInternalMediaOverlayCastOffButton},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str835, CSSValuePapayawhip},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str836, CSSValueInternalInactiveListBoxSelectionText},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str837, CSSValueReadWritePlaintextOnly},
      {(int)(long)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str838, CSSValueWebkitXxxLarge}
    };

  static const short lookup[] =
    {
       -1,  -1,  -1,  -1,  -1,   0,   1,  -1,   2,  -1,
       -1,  -1,  -1,   3,   4,  -1,  -1,  -1,   5,  -1,
       -1,   6,   7,  -1,  -1,  -1,   8,  -1,  -1,  -1,
        9,  -1,  10,  11,  -1,  12,  -1,  13,  -1,  14,
       -1,  15,  16,  -1,  -1,  -1,  17,  -1,  -1,  -1,
       -1,  -1,  18,  -1,  19,  -1,  -1,  -1,  -1,  -1,
       -1,  20,  -1,  21,  -1,  22,  -1,  23,  -1,  -1,
       -1,  -1,  -1,  24,  25,  -1,  26,  -1,  -1,  27,
       -1,  28,  29,  -1,  -1,  -1,  -1,  -1,  30,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       31,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  33,
       -1,  -1,  34,  35,  -1,  -1,  -1,  36,  -1,  -1,
       -1,  37,  -1,  -1,  38,  -1,  -1,  -1,  -1,  39,
       40,  -1,  41,  42,  -1,  -1,  43,  -1,  -1,  -1,
       -1,  -1,  44,  -1,  -1,  45,  46,  -1,  -1,  -1,
       47,  -1,  -1,  -1,  -1,  -1,  48,  49,  -1,  50,
       -1,  -1,  -1,  -1,  51,  52,  53,  -1,  54,  -1,
       -1,  -1,  -1,  55,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  56,  -1,  57,  58,  -1,  -1,  59,  60,  61,
       62,  -1,  63,  -1,  64,  -1,  -1,  65,  -1,  -1,
       -1,  -1,  -1,  66,  -1,  -1,  67,  68,  -1,  69,
       70,  -1,  71,  -1,  -1,  -1,  -1,  72,  -1,  73,
       -1,  74,  -1,  -1,  75,  -1,  76,  -1,  77,  -1,
       78,  -1,  79,  80,  81,  -1,  82,  -1,  -1,  -1,
       -1,  83,  84,  85,  86,  -1,  -1,  -1,  87,  -1,
       -1,  -1,  88,  89,  90,  -1,  -1,  91,  -1,  -1,
       -1,  92,  -1,  93,  -1,  -1,  -1,  -1,  94,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  95,  -1,  96,  97,
       98,  99,  -1,  -1, 100,  -1, 101, 102,  -1, 103,
      104,  -1,  -1,  -1,  -1,  -1,  -1, 105,  -1, 106,
      107, 108, 109,  -1,  -1, 110,  -1,  -1,  -1, 111,
       -1,  -1,  -1,  -1,  -1, 112,  -1, 113,  -1, 114,
      115,  -1,  -1,  -1, 116,  -1, 117,  -1, 118, 119,
       -1,  -1, 120,  -1,  -1,  -1, 121,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 122,  -1,  -1,  -1, 123, 124,
      125,  -1, 126,  -1,  -1, 127,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      128, 129, 130,  -1,  -1,  -1,  -1, 131,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 132,  -1,  -1,  -1,
       -1, 133,  -1, 134,  -1,  -1,  -1,  -1, 135, 136,
       -1,  -1,  -1, 137,  -1,  -1,  -1, 138,  -1,  -1,
       -1,  -1,  -1, 139, 140,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 141,  -1, 142,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 143,  -1,
       -1, 144,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 145,
       -1,  -1, 146,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 147,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 148,  -1, 149, 150,  -1,  -1,  -1,  -1,
       -1, 151,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      152,  -1,  -1,  -1, 153,  -1, 154,  -1,  -1, 155,
       -1,  -1,  -1, 156,  -1,  -1, 157, 158,  -1, 159,
      160,  -1,  -1,  -1,  -1,  -1,  -1, 161,  -1,  -1,
       -1, 162,  -1, 163, 164,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 165,  -1,  -1,  -1, 166,  -1,  -1, 167,  -1,
       -1,  -1, 168, 169,  -1,  -1,  -1,  -1,  -1, 170,
       -1,  -1, 171,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 172,  -1,  -1,  -1,  -1,
       -1, 173,  -1,  -1, 174,  -1, 175,  -1,  -1,  -1,
       -1,  -1, 176,  -1,  -1, 177, 178,  -1, 179,  -1,
       -1,  -1,  -1,  -1,  -1, 180,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 181, 182,  -1, 183,  -1,  -1,
      184,  -1, 185, 186,  -1,  -1,  -1, 187,  -1,  -1,
      188,  -1, 189, 190, 191, 192,  -1, 193,  -1,  -1,
       -1,  -1, 194, 195,  -1,  -1, 196, 197,  -1, 198,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      199,  -1,  -1,  -1,  -1,  -1, 200,  -1,  -1, 201,
       -1,  -1, 202,  -1, 203,  -1,  -1,  -1, 204,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 205, 206,  -1,  -1,
       -1,  -1, 207,  -1,  -1,  -1,  -1, 208,  -1,  -1,
      209,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 210,  -1,  -1, 211,  -1, 212,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 213,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 214,  -1, 215,  -1, 216,  -1,  -1, 217,
       -1, 218,  -1,  -1, 219,  -1,  -1,  -1, 220,  -1,
      221,  -1,  -1,  -1,  -1,  -1, 222,  -1,  -1, 223,
       -1,  -1,  -1,  -1,  -1, 224,  -1, 225,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 226, 227,  -1,  -1,  -1,
       -1,  -1,  -1, 228,  -1,  -1, 229,  -1,  -1, 230,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 231,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 232,  -1,
       -1,  -1,  -1, 233,  -1,  -1,  -1,  -1, 234,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 235,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 236,  -1,  -1,  -1,  -1, 237,
       -1, 238,  -1, 239, 240,  -1,  -1, 241, 242,  -1,
      243,  -1,  -1,  -1,  -1,  -1, 244,  -1,  -1,  -1,
       -1, 245,  -1,  -1,  -1,  -1,  -1,  -1, 246,  -1,
       -1,  -1,  -1,  -1,  -1, 247, 248,  -1,  -1,  -1,
       -1,  -1,  -1, 249, 250,  -1,  -1,  -1, 251,  -1,
       -1,  -1,  -1,  -1, 252,  -1, 253,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 254,  -1, 255,  -1,  -1, 256,
      257,  -1,  -1,  -1,  -1, 258,  -1,  -1,  -1, 259,
       -1,  -1,  -1, 260,  -1, 261,  -1,  -1,  -1,  -1,
       -1, 262,  -1, 263,  -1,  -1,  -1,  -1, 264,  -1,
       -1,  -1,  -1, 265,  -1,  -1,  -1, 266,  -1,  -1,
       -1,  -1, 267, 268, 269, 270,  -1, 271,  -1, 272,
       -1,  -1, 273,  -1, 274,  -1, 275,  -1, 276,  -1,
      277,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 278,  -1,
       -1,  -1,  -1,  -1, 279,  -1,  -1, 280,  -1,  -1,
       -1,  -1, 281,  -1,  -1,  -1,  -1, 282, 283,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 284,  -1,  -1, 285,
       -1,  -1,  -1, 286,  -1, 287, 288,  -1, 289,  -1,
      290,  -1, 291,  -1, 292,  -1,  -1,  -1, 293,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 294,  -1, 295,  -1,
      296, 297,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      298,  -1,  -1, 299,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 300,  -1,  -1,  -1,  -1, 301,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 302,  -1,
       -1,  -1,  -1,  -1,  -1, 303,  -1,  -1,  -1, 304,
       -1, 305,  -1,  -1, 306,  -1,  -1, 307,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 308,  -1,  -1, 309,  -1,
       -1,  -1,  -1, 310, 311,  -1,  -1,  -1,  -1,  -1,
      312,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 313,  -1,  -1,  -1,  -1,  -1,
      314, 315,  -1, 316,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 317,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 318,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 319,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 320,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 321, 322, 323,  -1,  -1,  -1,  -1, 324,
       -1,  -1,  -1, 325, 326, 327,  -1, 328,  -1, 329,
       -1, 330,  -1,  -1,  -1,  -1,  -1,  -1, 331,  -1,
      332,  -1, 333, 334,  -1, 335,  -1,  -1,  -1,  -1,
       -1, 336, 337, 338,  -1,  -1,  -1,  -1, 339, 340,
       -1, 341,  -1, 342, 343,  -1, 344,  -1,  -1,  -1,
       -1, 345, 346,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 347,  -1,  -1, 348,  -1,  -1,
       -1,  -1,  -1, 349,  -1,  -1,  -1,  -1, 350,  -1,
       -1,  -1,  -1,  -1, 351,  -1,  -1,  -1,  -1, 352,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 353,
       -1,  -1,  -1,  -1, 354,  -1, 355,  -1,  -1,  -1,
       -1,  -1, 356,  -1,  -1,  -1, 357, 358,  -1,  -1,
       -1, 359,  -1,  -1,  -1,  -1,  -1,  -1, 360,  -1,
      361,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 362,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 363,  -1,  -1,
      364,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 365,  -1,  -1,  -1,  -1,  -1,  -1, 366,
       -1,  -1,  -1,  -1,  -1,  -1, 367,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 368,  -1,  -1,
       -1, 369,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 370,
       -1,  -1, 371, 372, 373, 374,  -1,  -1,  -1,  -1,
      375,  -1,  -1, 376,  -1,  -1,  -1, 377, 378,  -1,
       -1,  -1,  -1, 379,  -1,  -1,  -1, 380,  -1,  -1,
       -1,  -1,  -1, 381, 382,  -1, 383,  -1,  -1, 384,
      385,  -1,  -1,  -1,  -1,  -1,  -1, 386, 387,  -1,
       -1,  -1, 388,  -1,  -1,  -1, 389,  -1,  -1,  -1,
       -1,  -1, 390,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 391,
      392, 393,  -1, 394,  -1, 395,  -1,  -1,  -1,  -1,
      396,  -1,  -1,  -1,  -1,  -1,  -1, 397, 398,  -1,
       -1, 399,  -1, 400,  -1,  -1, 401, 402,  -1,  -1,
      403,  -1,  -1, 404,  -1, 405,  -1,  -1,  -1,  -1,
       -1, 406, 407,  -1, 408, 409,  -1,  -1,  -1, 410,
       -1, 411, 412, 413,  -1,  -1, 414, 415,  -1,  -1,
       -1, 416,  -1, 417,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 418, 419,  -1,  -1,  -1,
       -1, 420, 421, 422, 423,  -1,  -1,  -1,  -1,  -1,
       -1, 424,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 425,
       -1, 426,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 427,  -1, 428,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 429,  -1,  -1, 430,  -1,  -1,  -1,  -1,  -1,
       -1, 431, 432, 433,  -1, 434, 435, 436,  -1, 437,
       -1, 438,  -1,  -1,  -1, 439,  -1, 440, 441,  -1,
       -1, 442,  -1,  -1,  -1, 443,  -1,  -1,  -1,  -1,
      444,  -1,  -1,  -1, 445,  -1,  -1,  -1, 446,  -1,
       -1,  -1, 447, 448,  -1,  -1,  -1,  -1, 449,  -1,
       -1,  -1, 450, 451, 452,  -1, 453,  -1,  -1,  -1,
       -1, 454,  -1,  -1, 455,  -1,  -1,  -1,  -1,  -1,
      456,  -1, 457,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 458,  -1,  -1,  -1,
      459, 460,  -1, 461,  -1,  -1, 462,  -1,  -1, 463,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 464,
       -1,  -1, 465,  -1,  -1, 466,  -1, 467,  -1, 468,
       -1, 469,  -1,  -1, 470,  -1, 471,  -1,  -1,  -1,
       -1,  -1,  -1, 472,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 473,  -1, 474,
       -1,  -1,  -1,  -1,  -1,  -1, 475,  -1,  -1,  -1,
       -1,  -1, 476,  -1,  -1,  -1,  -1,  -1,  -1, 477,
       -1,  -1,  -1,  -1,  -1, 478, 479, 480,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 481,  -1,  -1,
       -1,  -1, 482,  -1,  -1,  -1, 483,  -1, 484,  -1,
       -1, 485,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 486,  -1,  -1,  -1,  -1,  -1,  -1,
      487,  -1,  -1,  -1,  -1, 488,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 489, 490,  -1, 491,
      492,  -1,  -1, 493, 494,  -1, 495,  -1, 496, 497,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 498,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 499,  -1,
       -1,  -1, 500,  -1,  -1,  -1,  -1,  -1,  -1, 501,
       -1,  -1,  -1,  -1,  -1, 502, 503,  -1,  -1,  -1,
       -1, 504,  -1,  -1,  -1, 505,  -1,  -1,  -1,  -1,
       -1,  -1, 506, 507,  -1,  -1,  -1,  -1,  -1, 508,
       -1,  -1,  -1,  -1, 509, 510,  -1, 511,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 512,  -1,
       -1,  -1,  -1,  -1,  -1, 513,  -1,  -1,  -1,  -1,
      514,  -1,  -1,  -1,  -1, 515, 516, 517,  -1,  -1,
       -1, 518,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 519,  -1,  -1, 520,  -1,  -1,  -1,  -1,
       -1, 521,  -1,  -1,  -1,  -1, 522,  -1,  -1,  -1,
      523,  -1,  -1,  -1,  -1,  -1, 524,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 525,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 526,  -1,  -1, 527,  -1,
      528,  -1, 529, 530,  -1,  -1,  -1,  -1, 531, 532,
       -1, 533, 534,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 535,  -1,  -1,  -1, 536,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 537,  -1, 538,  -1,
       -1,  -1,  -1,  -1,  -1, 539,  -1, 540,  -1, 541,
       -1, 542,  -1, 543,  -1,  -1,  -1, 544,  -1, 545,
       -1,  -1,  -1, 546,  -1,  -1, 547,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 548,
      549, 550,  -1,  -1, 551,  -1, 552,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 553,  -1, 554,  -1,  -1,
       -1,  -1, 555,  -1,  -1,  -1,  -1, 556,  -1,  -1,
       -1, 557,  -1,  -1,  -1,  -1,  -1,  -1, 558,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 559,
       -1, 560, 561,  -1,  -1,  -1,  -1, 562,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 563,  -1,  -1,
      564,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 565,  -1,  -1, 566,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 567,  -1,  -1,  -1,  -1,  -1,
       -1, 568,  -1,  -1,  -1,  -1,  -1, 569,  -1,  -1,
       -1, 570,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 571,
      572,  -1,  -1,  -1,  -1, 573,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 574,  -1, 575,  -1,  -1,  -1,  -1,
       -1,  -1, 576,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      577,  -1,  -1,  -1,  -1,  -1,  -1, 578,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 579,  -1,
       -1,  -1,  -1, 580,  -1,  -1, 581,  -1,  -1,  -1,
       -1,  -1,  -1, 582,  -1,  -1, 583, 584,  -1,  -1,
       -1,  -1, 585,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      586,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 587,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      588,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 589,  -1,  -1,  -1,  -1, 590,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 591,  -1,  -1,  -1,  -1,
       -1, 592,  -1,  -1, 593,  -1,  -1,  -1,  -1,  -1,
       -1, 594,  -1,  -1, 595,  -1, 596,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      597,  -1,  -1, 598,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 599,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 600,  -1,  -1,  -1,  -1, 601,
       -1,  -1,  -1,  -1, 602,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 603,  -1,  -1,  -1,  -1, 604,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 605,  -1, 606, 607,
      608,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 609,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      610,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 611,  -1,  -1,  -1,  -1, 612,  -1,
       -1, 613,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 614,  -1,  -1, 615,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 616,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 617,  -1,  -1,  -1,  -1,  -1,
      618,  -1,  -1, 619,  -1,  -1,  -1,  -1, 620,  -1,
       -1,  -1, 621, 622,  -1,  -1,  -1,  -1,  -1,  -1,
      623,  -1,  -1,  -1,  -1,  -1, 624,  -1,  -1,  -1,
       -1,  -1,  -1, 625,  -1,  -1,  -1,  -1,  -1, 626,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 627,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      628,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 629,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 630,  -1,
       -1, 631, 632,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 633,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 634,  -1,  -1, 635,  -1,  -1,  -1,  -1,
      636,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 637,
       -1,  -1, 638, 639,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 640,  -1,  -1,  -1,  -1,  -1,
      641,  -1,  -1,  -1,  -1, 642,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 643,  -1, 644, 645,  -1, 646,  -1,
       -1,  -1,  -1, 647, 648,  -1,  -1, 649,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 650,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 651,  -1,  -1,  -1,  -1,  -1, 652,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 653, 654,  -1, 655,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      656,  -1, 657,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 658,
      659,  -1, 660,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 661,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 662, 663, 664, 665,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 666,  -1,  -1,  -1,
      667,  -1,  -1,  -1,  -1,  -1,  -1, 668,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 669,  -1,  -1,  -1,  -1,  -1, 670,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 671,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 672,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 673,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      674,  -1,  -1, 675,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 676,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 677,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      678, 679,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      680, 681,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 682,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 683,  -1, 684,  -1,  -1,  -1,
       -1, 685, 686,  -1,  -1,  -1, 687,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 688,  -1,  -1,  -1,  -1,
      689,  -1,  -1,  -1, 690,  -1,  -1, 691,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 692,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 693,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 694,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 695, 696,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 697,  -1,  -1,  -1, 698,  -1,
       -1,  -1, 699,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 700,
       -1, 701,  -1,  -1,  -1,  -1, 702, 703,  -1,  -1,
       -1,  -1,  -1,  -1, 704,  -1,  -1,  -1,  -1,  -1,
      705,  -1, 706,  -1,  -1, 707,  -1,  -1,  -1,  -1,
       -1, 708,  -1,  -1, 709,  -1,  -1,  -1,  -1,  -1,
      710, 711,  -1, 712,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 713,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 714,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 715,  -1,
       -1,  -1,  -1,  -1, 716,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      717,  -1, 718,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 719,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 720,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 721,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 722, 723,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 724, 725,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 726,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 727,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 728,  -1,  -1,  -1,  -1, 729,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 730,
       -1,  -1,  -1,  -1,  -1, 731,  -1, 732, 733,  -1,
       -1,  -1,  -1,  -1,  -1, 734,  -1,  -1, 735,  -1,
       -1,  -1, 736,  -1,  -1,  -1, 737,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 738,  -1,
       -1,  -1,  -1, 739,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 740,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 741,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 742,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 743,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 744,
      745,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 746,  -1,  -1, 747,  -1,
      748,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 749,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 750,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 751,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 752,  -1,  -1, 753,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 754,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      755,  -1,  -1, 756,  -1,  -1,  -1,  -1, 757,  -1,
       -1,  -1,  -1,  -1, 758,  -1,  -1, 759,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 760,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 761,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 762,  -1,  -1, 763,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 764,
      765,  -1, 766,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      767,  -1,  -1,  -1,  -1,  -1,  -1, 768,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 769,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 770,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 771,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 772,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 773,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 774,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 775,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 776,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 777,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 778,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 779,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 780,  -1,  -1,  -1,  -1, 781,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 782,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 783,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      784,  -1,  -1,  -1,  -1,  -1, 785,  -1,  -1,  -1,
       -1,  -1, 786, 787,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 788,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 789,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 790,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 791,  -1,  -1,
      792, 793,  -1,  -1,  -1,  -1,  -1, 794,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 795,  -1,  -1, 796,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 797,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 798,  -1,  -1,  -1, 799,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      800,  -1,  -1,  -1, 801,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 802,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 803,  -1,
       -1, 804,  -1, 805,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 806,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 807,  -1,  -1, 808,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 809,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 810,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 811,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 812,  -1,  -1,  -1, 813, 814,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 815,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 816,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 817,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 818,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 819,  -1,  -1,  -1,
       -1,  -1,  -1, 820,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 821,  -1,  -1,  -1,  -1,
       -1, 822,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 823,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 824,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 825,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 826,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 827,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 828,  -1,  -1, 829,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 830,  -1,  -1,  -1,  -1, 831,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      832,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 833,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 834,  -1,  -1,  -1,  -1,  -1,  -1, 835,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 836,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 837,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 838
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      int key = value_hash_function (str, len);

      if (key <= MAX_HASH_VALUE && key >= 0)
        {
          int index = lookup[key];

          if (index >= 0)
            {
              const char *s = value_word_list[index].name_offset + CSSValueStringPool;

              if (*str == *s && !strncmp (str + 1, s + 1, len - 1) && s[len] == '\0')
                return &value_word_list[index];
            }
        }
    }
  return 0;
}


const Value* FindValue(const char* str, unsigned int len) {
  return CSSValueKeywordsHash::findValueImpl(str, len);
}

const char* getValueName(CSSValueID id) {
  DCHECK_GT(id, 0);
  DCHECK_LT(id, numCSSValueKeywords);
  return valueListStringPool + valueListStringOffsets[id - 1];
}

bool isValueAllowedInMode(unsigned short id, CSSParserMode mode) {
  switch (id) {
    case CSSValueInternalActiveListBoxSelection:
    case CSSValueInternalActiveListBoxSelectionText:
    case CSSValueInternalInactiveListBoxSelection:
    case CSSValueInternalInactiveListBoxSelectionText:
    case CSSValueInternalQuirkInherit:
    case CSSValueInternalCenter:
    case CSSValueInternalMediaCastOffButton:
    case CSSValueInternalMediaOverlayCastOffButton:
    case CSSValueInternalMediaTrackSelectionCheckmark:
    case CSSValueInternalMediaClosedCaptionsIcon:
    case CSSValueInternalMediaSubtitlesIcon:
    case CSSValueInternalMediaOverflowButton:
    case CSSValueInternalMediaDownloadButton:
    case CSSValueInternalMediaRemotingCastIcon:
    case CSSValueInternalMediaControl:
    case CSSValueInternalExtendToZoom:
    case CSSValueInternalVariableValue:
      return IsUASheetBehavior(mode);
    case CSSValueWebkitFocusRingColor:
      return IsUASheetBehavior(mode) || IsQuirksModeBehavior(mode);
    default:
      return true;
  }
}

} // namespace blink
