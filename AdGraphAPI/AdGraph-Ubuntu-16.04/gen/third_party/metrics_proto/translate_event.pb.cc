// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: translate_event.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "translate_event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace metrics {
class TranslateEventProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TranslateEventProto> {
} _TranslateEventProto_default_instance_;

namespace protobuf_translate_5fevent_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _TranslateEventProto_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _TranslateEventProto_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_translate_5fevent_2eproto

bool TranslateEventProto_RankerResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TranslateEventProto_RankerResponse TranslateEventProto::SHOW;
const TranslateEventProto_RankerResponse TranslateEventProto::DONT_SHOW;
const TranslateEventProto_RankerResponse TranslateEventProto::NOT_QUERIED;
const TranslateEventProto_RankerResponse TranslateEventProto::RankerResponse_MIN;
const TranslateEventProto_RankerResponse TranslateEventProto::RankerResponse_MAX;
const int TranslateEventProto::RankerResponse_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool TranslateEventProto_EventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TranslateEventProto_EventType TranslateEventProto::UNKNOWN;
const TranslateEventProto_EventType TranslateEventProto::USER_DECLINE;
const TranslateEventProto_EventType TranslateEventProto::USER_ACCEPT;
const TranslateEventProto_EventType TranslateEventProto::USER_DISMISS;
const TranslateEventProto_EventType TranslateEventProto::USER_IGNORE;
const TranslateEventProto_EventType TranslateEventProto::USER_NEVER_TRANSLATE_LANGUAGE;
const TranslateEventProto_EventType TranslateEventProto::USER_NEVER_TRANSLATE_SITE;
const TranslateEventProto_EventType TranslateEventProto::USER_ALWAYS_TRANSLATE_LANGUAGE;
const TranslateEventProto_EventType TranslateEventProto::USER_CONTEXT_MENU_TRANSLATE;
const TranslateEventProto_EventType TranslateEventProto::USER_REVERT;
const TranslateEventProto_EventType TranslateEventProto::AUTOMATICALLY_TRANSLATED;
const TranslateEventProto_EventType TranslateEventProto::AUTO_TRANSLATION_BY_PREF;
const TranslateEventProto_EventType TranslateEventProto::AUTO_TRANSLATION_BY_LINK;
const TranslateEventProto_EventType TranslateEventProto::DISABLED_BY_PREF;
const TranslateEventProto_EventType TranslateEventProto::LANGUAGE_DISABLED_BY_USER_CONFIG;
const TranslateEventProto_EventType TranslateEventProto::URL_DISABLED_BY_USER_CONFIG;
const TranslateEventProto_EventType TranslateEventProto::LANGUAGE_DISABLED_BY_AUTO_BLACKLIST;
const TranslateEventProto_EventType TranslateEventProto::DISABLED_BY_RANKER;
const TranslateEventProto_EventType TranslateEventProto::UNSUPPORTED_LANGUAGE;
const TranslateEventProto_EventType TranslateEventProto::UNSUPPORTED_URL;
const TranslateEventProto_EventType TranslateEventProto::MATCHES_PREVIOUS_LANGUAGE;
const TranslateEventProto_EventType TranslateEventProto::BROWSER_WINDOW_IS_INVALID;
const TranslateEventProto_EventType TranslateEventProto::BROWSER_WINDOW_NOT_ACTIVE;
const TranslateEventProto_EventType TranslateEventProto::BROWSER_WINDOW_IS_MINIMIZED;
const TranslateEventProto_EventType TranslateEventProto::WEB_CONTENTS_NOT_ACTIVE;
const TranslateEventProto_EventType TranslateEventProto::EDITABLE_FIELD_IS_ACTIVE;
const TranslateEventProto_EventType TranslateEventProto::LANGUAGE_IN_ULP;
const TranslateEventProto_EventType TranslateEventProto::INITIALIZATION_ERROR;
const TranslateEventProto_EventType TranslateEventProto::EventType_MIN;
const TranslateEventProto_EventType TranslateEventProto::EventType_MAX;
const int TranslateEventProto::EventType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TranslateEventProto::kSourceLanguageFieldNumber;
const int TranslateEventProto::kTargetLanguageFieldNumber;
const int TranslateEventProto::kCountryFieldNumber;
const int TranslateEventProto::kAcceptCountFieldNumber;
const int TranslateEventProto::kDeclineCountFieldNumber;
const int TranslateEventProto::kIgnoreCountFieldNumber;
const int TranslateEventProto::kLanguageListFieldNumber;
const int TranslateEventProto::kRankerVersionFieldNumber;
const int TranslateEventProto::kRankerRequestTimestampSecFieldNumber;
const int TranslateEventProto::kRankerResponseFieldNumber;
const int TranslateEventProto::kEventTypeFieldNumber;
const int TranslateEventProto::kDecisionOverridesFieldNumber;
const int TranslateEventProto::kEventTimestampSecFieldNumber;
const int TranslateEventProto::kModifiedSourceLanguageFieldNumber;
const int TranslateEventProto::kModifiedTargetLanguageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TranslateEventProto::TranslateEventProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_translate_5fevent_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.TranslateEventProto)
}
TranslateEventProto::TranslateEventProto(const TranslateEventProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      language_list_(from.language_list_),
      decision_overrides_(from.decision_overrides_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_language()) {
    source_language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_language_);
  }
  target_language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_target_language()) {
    target_language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_language_);
  }
  modified_source_language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_modified_source_language()) {
    modified_source_language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modified_source_language_);
  }
  modified_target_language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_modified_target_language()) {
    modified_target_language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modified_target_language_);
  }
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_country()) {
    country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
  }
  ::memcpy(&accept_count_, &from.accept_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&ranker_response_) -
    reinterpret_cast<char*>(&accept_count_)) + sizeof(ranker_response_));
  // @@protoc_insertion_point(copy_constructor:metrics.TranslateEventProto)
}

void TranslateEventProto::SharedCtor() {
  _cached_size_ = 0;
  source_language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modified_source_language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modified_target_language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accept_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&event_type_) -
      reinterpret_cast<char*>(&accept_count_)) + sizeof(event_type_));
  ranker_response_ = 2;
}

TranslateEventProto::~TranslateEventProto() {
  // @@protoc_insertion_point(destructor:metrics.TranslateEventProto)
  SharedDtor();
}

void TranslateEventProto::SharedDtor() {
  source_language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modified_source_language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modified_target_language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TranslateEventProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TranslateEventProto& TranslateEventProto::default_instance() {
  protobuf_translate_5fevent_2eproto::InitDefaults();
  return *internal_default_instance();
}

TranslateEventProto* TranslateEventProto::New(::google::protobuf::Arena* arena) const {
  TranslateEventProto* n = new TranslateEventProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TranslateEventProto::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.TranslateEventProto)
  language_list_.Clear();
  decision_overrides_.Clear();
  if (_has_bits_[0 / 32] & 31u) {
    if (has_source_language()) {
      GOOGLE_DCHECK(!source_language_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*source_language_.UnsafeRawStringPointer())->clear();
    }
    if (has_target_language()) {
      GOOGLE_DCHECK(!target_language_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*target_language_.UnsafeRawStringPointer())->clear();
    }
    if (has_modified_source_language()) {
      GOOGLE_DCHECK(!modified_source_language_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*modified_source_language_.UnsafeRawStringPointer())->clear();
    }
    if (has_modified_target_language()) {
      GOOGLE_DCHECK(!modified_target_language_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*modified_target_language_.UnsafeRawStringPointer())->clear();
    }
    if (has_country()) {
      GOOGLE_DCHECK(!country_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*country_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 224u) {
    ::memset(&accept_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ignore_count_) -
        reinterpret_cast<char*>(&accept_count_)) + sizeof(ignore_count_));
  }
  if (_has_bits_[8 / 32] & 7936u) {
    ::memset(&ranker_version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&event_type_) -
        reinterpret_cast<char*>(&ranker_version_)) + sizeof(event_type_));
    ranker_response_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TranslateEventProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:metrics.TranslateEventProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string source_language = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string target_language = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 accept_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_accept_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &accept_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 decline_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_decline_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &decline_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ignore_count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_ignore_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ignore_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string language_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_language_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ranker_version = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_ranker_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ranker_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 ranker_request_timestamp_sec = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_ranker_request_timestamp_sec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ranker_request_timestamp_sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .metrics.TranslateEventProto.RankerResponse ranker_response = 9 [default = NOT_QUERIED];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::metrics::TranslateEventProto_RankerResponse_IsValid(value)) {
            set_ranker_response(static_cast< ::metrics::TranslateEventProto_RankerResponse >(value));
          } else {
            unknown_fields_stream.WriteVarint32(72u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .metrics.TranslateEventProto.EventType event_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::metrics::TranslateEventProto_EventType_IsValid(value)) {
            set_event_type(static_cast< ::metrics::TranslateEventProto_EventType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(80u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 event_timestamp_sec = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_event_timestamp_sec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &event_timestamp_sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string modified_source_language = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modified_source_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string modified_target_language = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modified_target_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string country = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metrics.TranslateEventProto.EventType decision_overrides = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::metrics::TranslateEventProto_EventType_IsValid(value)) {
            add_decision_overrides(static_cast< ::metrics::TranslateEventProto_EventType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(122u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumPreserveUnknowns(
                 input,
                 15,
                 ::metrics::TranslateEventProto_EventType_IsValid,
                 &unknown_fields_stream,
                 this->mutable_decision_overrides())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.TranslateEventProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.TranslateEventProto)
  return false;
#undef DO_
}

void TranslateEventProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.TranslateEventProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_language = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->source_language(), output);
  }

  // optional string target_language = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->target_language(), output);
  }

  // optional int32 accept_count = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->accept_count(), output);
  }

  // optional int32 decline_count = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->decline_count(), output);
  }

  // optional int32 ignore_count = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ignore_count(), output);
  }

  // repeated string language_list = 6;
  for (int i = 0, n = this->language_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->language_list(i), output);
  }

  // optional uint32 ranker_version = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->ranker_version(), output);
  }

  // optional int64 ranker_request_timestamp_sec = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->ranker_request_timestamp_sec(), output);
  }

  // optional .metrics.TranslateEventProto.RankerResponse ranker_response = 9 [default = NOT_QUERIED];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->ranker_response(), output);
  }

  // optional .metrics.TranslateEventProto.EventType event_type = 10;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->event_type(), output);
  }

  // optional int64 event_timestamp_sec = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->event_timestamp_sec(), output);
  }

  // optional string modified_source_language = 12;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->modified_source_language(), output);
  }

  // optional string modified_target_language = 13;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->modified_target_language(), output);
  }

  // optional string country = 14;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->country(), output);
  }

  // repeated .metrics.TranslateEventProto.EventType decision_overrides = 15;
  for (int i = 0, n = this->decision_overrides_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->decision_overrides(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:metrics.TranslateEventProto)
}

size_t TranslateEventProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.TranslateEventProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated string language_list = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->language_list_size());
  for (int i = 0, n = this->language_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->language_list(i));
  }

  // repeated .metrics.TranslateEventProto.EventType decision_overrides = 15;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->decision_overrides_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->decision_overrides(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string source_language = 1;
    if (has_source_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_language());
    }

    // optional string target_language = 2;
    if (has_target_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->target_language());
    }

    // optional string modified_source_language = 12;
    if (has_modified_source_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->modified_source_language());
    }

    // optional string modified_target_language = 13;
    if (has_modified_target_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->modified_target_language());
    }

    // optional string country = 14;
    if (has_country()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country());
    }

    // optional int32 accept_count = 3;
    if (has_accept_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->accept_count());
    }

    // optional int32 decline_count = 4;
    if (has_decline_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->decline_count());
    }

    // optional int32 ignore_count = 5;
    if (has_ignore_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ignore_count());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional uint32 ranker_version = 7;
    if (has_ranker_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ranker_version());
    }

    // optional int64 ranker_request_timestamp_sec = 8;
    if (has_ranker_request_timestamp_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ranker_request_timestamp_sec());
    }

    // optional int64 event_timestamp_sec = 11;
    if (has_event_timestamp_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->event_timestamp_sec());
    }

    // optional .metrics.TranslateEventProto.EventType event_type = 10;
    if (has_event_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->event_type());
    }

    // optional .metrics.TranslateEventProto.RankerResponse ranker_response = 9 [default = NOT_QUERIED];
    if (has_ranker_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ranker_response());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TranslateEventProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TranslateEventProto*>(&from));
}

void TranslateEventProto::MergeFrom(const TranslateEventProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.TranslateEventProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  language_list_.MergeFrom(from.language_list_);
  decision_overrides_.MergeFrom(from.decision_overrides_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_source_language();
      source_language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_language_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_target_language();
      target_language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_language_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_modified_source_language();
      modified_source_language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modified_source_language_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_modified_target_language();
      modified_target_language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modified_target_language_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_country();
      country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
    }
    if (cached_has_bits & 0x00000020u) {
      accept_count_ = from.accept_count_;
    }
    if (cached_has_bits & 0x00000040u) {
      decline_count_ = from.decline_count_;
    }
    if (cached_has_bits & 0x00000080u) {
      ignore_count_ = from.ignore_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      ranker_version_ = from.ranker_version_;
    }
    if (cached_has_bits & 0x00000200u) {
      ranker_request_timestamp_sec_ = from.ranker_request_timestamp_sec_;
    }
    if (cached_has_bits & 0x00000400u) {
      event_timestamp_sec_ = from.event_timestamp_sec_;
    }
    if (cached_has_bits & 0x00000800u) {
      event_type_ = from.event_type_;
    }
    if (cached_has_bits & 0x00001000u) {
      ranker_response_ = from.ranker_response_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TranslateEventProto::CopyFrom(const TranslateEventProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.TranslateEventProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TranslateEventProto::IsInitialized() const {
  return true;
}

void TranslateEventProto::Swap(TranslateEventProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TranslateEventProto::InternalSwap(TranslateEventProto* other) {
  language_list_.InternalSwap(&other->language_list_);
  decision_overrides_.InternalSwap(&other->decision_overrides_);
  source_language_.Swap(&other->source_language_);
  target_language_.Swap(&other->target_language_);
  modified_source_language_.Swap(&other->modified_source_language_);
  modified_target_language_.Swap(&other->modified_target_language_);
  country_.Swap(&other->country_);
  std::swap(accept_count_, other->accept_count_);
  std::swap(decline_count_, other->decline_count_);
  std::swap(ignore_count_, other->ignore_count_);
  std::swap(ranker_version_, other->ranker_version_);
  std::swap(ranker_request_timestamp_sec_, other->ranker_request_timestamp_sec_);
  std::swap(event_timestamp_sec_, other->event_timestamp_sec_);
  std::swap(event_type_, other->event_type_);
  std::swap(ranker_response_, other->ranker_response_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TranslateEventProto::GetTypeName() const {
  return "metrics.TranslateEventProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TranslateEventProto

// optional string source_language = 1;
bool TranslateEventProto::has_source_language() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TranslateEventProto::set_has_source_language() {
  _has_bits_[0] |= 0x00000001u;
}
void TranslateEventProto::clear_has_source_language() {
  _has_bits_[0] &= ~0x00000001u;
}
void TranslateEventProto::clear_source_language() {
  source_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source_language();
}
const ::std::string& TranslateEventProto::source_language() const {
  // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.source_language)
  return source_language_.GetNoArena();
}
void TranslateEventProto::set_source_language(const ::std::string& value) {
  set_has_source_language();
  source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.source_language)
}
#if LANG_CXX11
void TranslateEventProto::set_source_language(::std::string&& value) {
  set_has_source_language();
  source_language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.TranslateEventProto.source_language)
}
#endif
void TranslateEventProto::set_source_language(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_source_language();
  source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.TranslateEventProto.source_language)
}
void TranslateEventProto::set_source_language(const char* value, size_t size) {
  set_has_source_language();
  source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.TranslateEventProto.source_language)
}
::std::string* TranslateEventProto::mutable_source_language() {
  set_has_source_language();
  // @@protoc_insertion_point(field_mutable:metrics.TranslateEventProto.source_language)
  return source_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TranslateEventProto::release_source_language() {
  // @@protoc_insertion_point(field_release:metrics.TranslateEventProto.source_language)
  clear_has_source_language();
  return source_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TranslateEventProto::set_allocated_source_language(::std::string* source_language) {
  if (source_language != NULL) {
    set_has_source_language();
  } else {
    clear_has_source_language();
  }
  source_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_language);
  // @@protoc_insertion_point(field_set_allocated:metrics.TranslateEventProto.source_language)
}

// optional string target_language = 2;
bool TranslateEventProto::has_target_language() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TranslateEventProto::set_has_target_language() {
  _has_bits_[0] |= 0x00000002u;
}
void TranslateEventProto::clear_has_target_language() {
  _has_bits_[0] &= ~0x00000002u;
}
void TranslateEventProto::clear_target_language() {
  target_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target_language();
}
const ::std::string& TranslateEventProto::target_language() const {
  // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.target_language)
  return target_language_.GetNoArena();
}
void TranslateEventProto::set_target_language(const ::std::string& value) {
  set_has_target_language();
  target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.target_language)
}
#if LANG_CXX11
void TranslateEventProto::set_target_language(::std::string&& value) {
  set_has_target_language();
  target_language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.TranslateEventProto.target_language)
}
#endif
void TranslateEventProto::set_target_language(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_target_language();
  target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.TranslateEventProto.target_language)
}
void TranslateEventProto::set_target_language(const char* value, size_t size) {
  set_has_target_language();
  target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.TranslateEventProto.target_language)
}
::std::string* TranslateEventProto::mutable_target_language() {
  set_has_target_language();
  // @@protoc_insertion_point(field_mutable:metrics.TranslateEventProto.target_language)
  return target_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TranslateEventProto::release_target_language() {
  // @@protoc_insertion_point(field_release:metrics.TranslateEventProto.target_language)
  clear_has_target_language();
  return target_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TranslateEventProto::set_allocated_target_language(::std::string* target_language) {
  if (target_language != NULL) {
    set_has_target_language();
  } else {
    clear_has_target_language();
  }
  target_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_language);
  // @@protoc_insertion_point(field_set_allocated:metrics.TranslateEventProto.target_language)
}

// optional string country = 14;
bool TranslateEventProto::has_country() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TranslateEventProto::set_has_country() {
  _has_bits_[0] |= 0x00000010u;
}
void TranslateEventProto::clear_has_country() {
  _has_bits_[0] &= ~0x00000010u;
}
void TranslateEventProto::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
const ::std::string& TranslateEventProto::country() const {
  // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.country)
  return country_.GetNoArena();
}
void TranslateEventProto::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.country)
}
#if LANG_CXX11
void TranslateEventProto::set_country(::std::string&& value) {
  set_has_country();
  country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.TranslateEventProto.country)
}
#endif
void TranslateEventProto::set_country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.TranslateEventProto.country)
}
void TranslateEventProto::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.TranslateEventProto.country)
}
::std::string* TranslateEventProto::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:metrics.TranslateEventProto.country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TranslateEventProto::release_country() {
  // @@protoc_insertion_point(field_release:metrics.TranslateEventProto.country)
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TranslateEventProto::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:metrics.TranslateEventProto.country)
}

// optional int32 accept_count = 3;
bool TranslateEventProto::has_accept_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TranslateEventProto::set_has_accept_count() {
  _has_bits_[0] |= 0x00000020u;
}
void TranslateEventProto::clear_has_accept_count() {
  _has_bits_[0] &= ~0x00000020u;
}
void TranslateEventProto::clear_accept_count() {
  accept_count_ = 0;
  clear_has_accept_count();
}
::google::protobuf::int32 TranslateEventProto::accept_count() const {
  // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.accept_count)
  return accept_count_;
}
void TranslateEventProto::set_accept_count(::google::protobuf::int32 value) {
  set_has_accept_count();
  accept_count_ = value;
  // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.accept_count)
}

// optional int32 decline_count = 4;
bool TranslateEventProto::has_decline_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void TranslateEventProto::set_has_decline_count() {
  _has_bits_[0] |= 0x00000040u;
}
void TranslateEventProto::clear_has_decline_count() {
  _has_bits_[0] &= ~0x00000040u;
}
void TranslateEventProto::clear_decline_count() {
  decline_count_ = 0;
  clear_has_decline_count();
}
::google::protobuf::int32 TranslateEventProto::decline_count() const {
  // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.decline_count)
  return decline_count_;
}
void TranslateEventProto::set_decline_count(::google::protobuf::int32 value) {
  set_has_decline_count();
  decline_count_ = value;
  // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.decline_count)
}

// optional int32 ignore_count = 5;
bool TranslateEventProto::has_ignore_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void TranslateEventProto::set_has_ignore_count() {
  _has_bits_[0] |= 0x00000080u;
}
void TranslateEventProto::clear_has_ignore_count() {
  _has_bits_[0] &= ~0x00000080u;
}
void TranslateEventProto::clear_ignore_count() {
  ignore_count_ = 0;
  clear_has_ignore_count();
}
::google::protobuf::int32 TranslateEventProto::ignore_count() const {
  // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.ignore_count)
  return ignore_count_;
}
void TranslateEventProto::set_ignore_count(::google::protobuf::int32 value) {
  set_has_ignore_count();
  ignore_count_ = value;
  // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.ignore_count)
}

// repeated string language_list = 6;
int TranslateEventProto::language_list_size() const {
  return language_list_.size();
}
void TranslateEventProto::clear_language_list() {
  language_list_.Clear();
}
const ::std::string& TranslateEventProto::language_list(int index) const {
  // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.language_list)
  return language_list_.Get(index);
}
::std::string* TranslateEventProto::mutable_language_list(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.TranslateEventProto.language_list)
  return language_list_.Mutable(index);
}
void TranslateEventProto::set_language_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.language_list)
  language_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void TranslateEventProto::set_language_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.language_list)
  language_list_.Mutable(index)->assign(std::move(value));
}
#endif
void TranslateEventProto::set_language_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  language_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:metrics.TranslateEventProto.language_list)
}
void TranslateEventProto::set_language_list(int index, const char* value, size_t size) {
  language_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:metrics.TranslateEventProto.language_list)
}
::std::string* TranslateEventProto::add_language_list() {
  // @@protoc_insertion_point(field_add_mutable:metrics.TranslateEventProto.language_list)
  return language_list_.Add();
}
void TranslateEventProto::add_language_list(const ::std::string& value) {
  language_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:metrics.TranslateEventProto.language_list)
}
#if LANG_CXX11
void TranslateEventProto::add_language_list(::std::string&& value) {
  language_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:metrics.TranslateEventProto.language_list)
}
#endif
void TranslateEventProto::add_language_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  language_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:metrics.TranslateEventProto.language_list)
}
void TranslateEventProto::add_language_list(const char* value, size_t size) {
  language_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:metrics.TranslateEventProto.language_list)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TranslateEventProto::language_list() const {
  // @@protoc_insertion_point(field_list:metrics.TranslateEventProto.language_list)
  return language_list_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TranslateEventProto::mutable_language_list() {
  // @@protoc_insertion_point(field_mutable_list:metrics.TranslateEventProto.language_list)
  return &language_list_;
}

// optional uint32 ranker_version = 7;
bool TranslateEventProto::has_ranker_version() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void TranslateEventProto::set_has_ranker_version() {
  _has_bits_[0] |= 0x00000100u;
}
void TranslateEventProto::clear_has_ranker_version() {
  _has_bits_[0] &= ~0x00000100u;
}
void TranslateEventProto::clear_ranker_version() {
  ranker_version_ = 0u;
  clear_has_ranker_version();
}
::google::protobuf::uint32 TranslateEventProto::ranker_version() const {
  // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.ranker_version)
  return ranker_version_;
}
void TranslateEventProto::set_ranker_version(::google::protobuf::uint32 value) {
  set_has_ranker_version();
  ranker_version_ = value;
  // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.ranker_version)
}

// optional int64 ranker_request_timestamp_sec = 8;
bool TranslateEventProto::has_ranker_request_timestamp_sec() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void TranslateEventProto::set_has_ranker_request_timestamp_sec() {
  _has_bits_[0] |= 0x00000200u;
}
void TranslateEventProto::clear_has_ranker_request_timestamp_sec() {
  _has_bits_[0] &= ~0x00000200u;
}
void TranslateEventProto::clear_ranker_request_timestamp_sec() {
  ranker_request_timestamp_sec_ = GOOGLE_LONGLONG(0);
  clear_has_ranker_request_timestamp_sec();
}
::google::protobuf::int64 TranslateEventProto::ranker_request_timestamp_sec() const {
  // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.ranker_request_timestamp_sec)
  return ranker_request_timestamp_sec_;
}
void TranslateEventProto::set_ranker_request_timestamp_sec(::google::protobuf::int64 value) {
  set_has_ranker_request_timestamp_sec();
  ranker_request_timestamp_sec_ = value;
  // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.ranker_request_timestamp_sec)
}

// optional .metrics.TranslateEventProto.RankerResponse ranker_response = 9 [default = NOT_QUERIED];
bool TranslateEventProto::has_ranker_response() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void TranslateEventProto::set_has_ranker_response() {
  _has_bits_[0] |= 0x00001000u;
}
void TranslateEventProto::clear_has_ranker_response() {
  _has_bits_[0] &= ~0x00001000u;
}
void TranslateEventProto::clear_ranker_response() {
  ranker_response_ = 2;
  clear_has_ranker_response();
}
::metrics::TranslateEventProto_RankerResponse TranslateEventProto::ranker_response() const {
  // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.ranker_response)
  return static_cast< ::metrics::TranslateEventProto_RankerResponse >(ranker_response_);
}
void TranslateEventProto::set_ranker_response(::metrics::TranslateEventProto_RankerResponse value) {
  assert(::metrics::TranslateEventProto_RankerResponse_IsValid(value));
  set_has_ranker_response();
  ranker_response_ = value;
  // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.ranker_response)
}

// optional .metrics.TranslateEventProto.EventType event_type = 10;
bool TranslateEventProto::has_event_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void TranslateEventProto::set_has_event_type() {
  _has_bits_[0] |= 0x00000800u;
}
void TranslateEventProto::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000800u;
}
void TranslateEventProto::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
::metrics::TranslateEventProto_EventType TranslateEventProto::event_type() const {
  // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.event_type)
  return static_cast< ::metrics::TranslateEventProto_EventType >(event_type_);
}
void TranslateEventProto::set_event_type(::metrics::TranslateEventProto_EventType value) {
  assert(::metrics::TranslateEventProto_EventType_IsValid(value));
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.event_type)
}

// repeated .metrics.TranslateEventProto.EventType decision_overrides = 15;
int TranslateEventProto::decision_overrides_size() const {
  return decision_overrides_.size();
}
void TranslateEventProto::clear_decision_overrides() {
  decision_overrides_.Clear();
}
::metrics::TranslateEventProto_EventType TranslateEventProto::decision_overrides(int index) const {
  // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.decision_overrides)
  return static_cast< ::metrics::TranslateEventProto_EventType >(decision_overrides_.Get(index));
}
void TranslateEventProto::set_decision_overrides(int index, ::metrics::TranslateEventProto_EventType value) {
  assert(::metrics::TranslateEventProto_EventType_IsValid(value));
  decision_overrides_.Set(index, value);
  // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.decision_overrides)
}
void TranslateEventProto::add_decision_overrides(::metrics::TranslateEventProto_EventType value) {
  assert(::metrics::TranslateEventProto_EventType_IsValid(value));
  decision_overrides_.Add(value);
  // @@protoc_insertion_point(field_add:metrics.TranslateEventProto.decision_overrides)
}
const ::google::protobuf::RepeatedField<int>&
TranslateEventProto::decision_overrides() const {
  // @@protoc_insertion_point(field_list:metrics.TranslateEventProto.decision_overrides)
  return decision_overrides_;
}
::google::protobuf::RepeatedField<int>*
TranslateEventProto::mutable_decision_overrides() {
  // @@protoc_insertion_point(field_mutable_list:metrics.TranslateEventProto.decision_overrides)
  return &decision_overrides_;
}

// optional int64 event_timestamp_sec = 11;
bool TranslateEventProto::has_event_timestamp_sec() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void TranslateEventProto::set_has_event_timestamp_sec() {
  _has_bits_[0] |= 0x00000400u;
}
void TranslateEventProto::clear_has_event_timestamp_sec() {
  _has_bits_[0] &= ~0x00000400u;
}
void TranslateEventProto::clear_event_timestamp_sec() {
  event_timestamp_sec_ = GOOGLE_LONGLONG(0);
  clear_has_event_timestamp_sec();
}
::google::protobuf::int64 TranslateEventProto::event_timestamp_sec() const {
  // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.event_timestamp_sec)
  return event_timestamp_sec_;
}
void TranslateEventProto::set_event_timestamp_sec(::google::protobuf::int64 value) {
  set_has_event_timestamp_sec();
  event_timestamp_sec_ = value;
  // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.event_timestamp_sec)
}

// optional string modified_source_language = 12;
bool TranslateEventProto::has_modified_source_language() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TranslateEventProto::set_has_modified_source_language() {
  _has_bits_[0] |= 0x00000004u;
}
void TranslateEventProto::clear_has_modified_source_language() {
  _has_bits_[0] &= ~0x00000004u;
}
void TranslateEventProto::clear_modified_source_language() {
  modified_source_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_modified_source_language();
}
const ::std::string& TranslateEventProto::modified_source_language() const {
  // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.modified_source_language)
  return modified_source_language_.GetNoArena();
}
void TranslateEventProto::set_modified_source_language(const ::std::string& value) {
  set_has_modified_source_language();
  modified_source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.modified_source_language)
}
#if LANG_CXX11
void TranslateEventProto::set_modified_source_language(::std::string&& value) {
  set_has_modified_source_language();
  modified_source_language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.TranslateEventProto.modified_source_language)
}
#endif
void TranslateEventProto::set_modified_source_language(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_modified_source_language();
  modified_source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.TranslateEventProto.modified_source_language)
}
void TranslateEventProto::set_modified_source_language(const char* value, size_t size) {
  set_has_modified_source_language();
  modified_source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.TranslateEventProto.modified_source_language)
}
::std::string* TranslateEventProto::mutable_modified_source_language() {
  set_has_modified_source_language();
  // @@protoc_insertion_point(field_mutable:metrics.TranslateEventProto.modified_source_language)
  return modified_source_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TranslateEventProto::release_modified_source_language() {
  // @@protoc_insertion_point(field_release:metrics.TranslateEventProto.modified_source_language)
  clear_has_modified_source_language();
  return modified_source_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TranslateEventProto::set_allocated_modified_source_language(::std::string* modified_source_language) {
  if (modified_source_language != NULL) {
    set_has_modified_source_language();
  } else {
    clear_has_modified_source_language();
  }
  modified_source_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modified_source_language);
  // @@protoc_insertion_point(field_set_allocated:metrics.TranslateEventProto.modified_source_language)
}

// optional string modified_target_language = 13;
bool TranslateEventProto::has_modified_target_language() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TranslateEventProto::set_has_modified_target_language() {
  _has_bits_[0] |= 0x00000008u;
}
void TranslateEventProto::clear_has_modified_target_language() {
  _has_bits_[0] &= ~0x00000008u;
}
void TranslateEventProto::clear_modified_target_language() {
  modified_target_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_modified_target_language();
}
const ::std::string& TranslateEventProto::modified_target_language() const {
  // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.modified_target_language)
  return modified_target_language_.GetNoArena();
}
void TranslateEventProto::set_modified_target_language(const ::std::string& value) {
  set_has_modified_target_language();
  modified_target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.modified_target_language)
}
#if LANG_CXX11
void TranslateEventProto::set_modified_target_language(::std::string&& value) {
  set_has_modified_target_language();
  modified_target_language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.TranslateEventProto.modified_target_language)
}
#endif
void TranslateEventProto::set_modified_target_language(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_modified_target_language();
  modified_target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.TranslateEventProto.modified_target_language)
}
void TranslateEventProto::set_modified_target_language(const char* value, size_t size) {
  set_has_modified_target_language();
  modified_target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.TranslateEventProto.modified_target_language)
}
::std::string* TranslateEventProto::mutable_modified_target_language() {
  set_has_modified_target_language();
  // @@protoc_insertion_point(field_mutable:metrics.TranslateEventProto.modified_target_language)
  return modified_target_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TranslateEventProto::release_modified_target_language() {
  // @@protoc_insertion_point(field_release:metrics.TranslateEventProto.modified_target_language)
  clear_has_modified_target_language();
  return modified_target_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TranslateEventProto::set_allocated_modified_target_language(::std::string* modified_target_language) {
  if (modified_target_language != NULL) {
    set_has_modified_target_language();
  } else {
    clear_has_modified_target_language();
  }
  modified_target_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modified_target_language);
  // @@protoc_insertion_point(field_set_allocated:metrics.TranslateEventProto.modified_target_language)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace metrics

// @@protoc_insertion_point(global_scope)
