// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: channel_common.proto

#ifndef PROTOBUF_channel_5fcommon_2eproto__INCLUDED
#define PROTOBUF_channel_5fcommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
namespace ipc {
namespace invalidation {
class ChannelMessageEncoding;
class ChannelMessageEncodingDefaultTypeInternal;
extern ChannelMessageEncodingDefaultTypeInternal _ChannelMessageEncoding_default_instance_;
class NetworkEndpointId;
class NetworkEndpointIdDefaultTypeInternal;
extern NetworkEndpointIdDefaultTypeInternal _NetworkEndpointId_default_instance_;
}  // namespace invalidation
}  // namespace ipc

namespace ipc {
namespace invalidation {

namespace protobuf_channel_5fcommon_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_channel_5fcommon_2eproto

enum ChannelMessageEncoding_MessageEncoding {
  ChannelMessageEncoding_MessageEncoding_PROTOBUF_BINARY_FORMAT = 1,
  ChannelMessageEncoding_MessageEncoding_PROTOBUF_JSON_FORMAT = 2
};
bool ChannelMessageEncoding_MessageEncoding_IsValid(int value);
const ChannelMessageEncoding_MessageEncoding ChannelMessageEncoding_MessageEncoding_MessageEncoding_MIN = ChannelMessageEncoding_MessageEncoding_PROTOBUF_BINARY_FORMAT;
const ChannelMessageEncoding_MessageEncoding ChannelMessageEncoding_MessageEncoding_MessageEncoding_MAX = ChannelMessageEncoding_MessageEncoding_PROTOBUF_JSON_FORMAT;
const int ChannelMessageEncoding_MessageEncoding_MessageEncoding_ARRAYSIZE = ChannelMessageEncoding_MessageEncoding_MessageEncoding_MAX + 1;

enum NetworkEndpointId_NetworkAddress {
  NetworkEndpointId_NetworkAddress_TEST = 1,
  NetworkEndpointId_NetworkAddress_ANDROID = 113
};
bool NetworkEndpointId_NetworkAddress_IsValid(int value);
const NetworkEndpointId_NetworkAddress NetworkEndpointId_NetworkAddress_NetworkAddress_MIN = NetworkEndpointId_NetworkAddress_TEST;
const NetworkEndpointId_NetworkAddress NetworkEndpointId_NetworkAddress_NetworkAddress_MAX = NetworkEndpointId_NetworkAddress_ANDROID;
const int NetworkEndpointId_NetworkAddress_NetworkAddress_ARRAYSIZE = NetworkEndpointId_NetworkAddress_NetworkAddress_MAX + 1;

// ===================================================================

class ChannelMessageEncoding : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:ipc.invalidation.ChannelMessageEncoding) */ {
 public:
  ChannelMessageEncoding();
  virtual ~ChannelMessageEncoding();

  ChannelMessageEncoding(const ChannelMessageEncoding& from);

  inline ChannelMessageEncoding& operator=(const ChannelMessageEncoding& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ChannelMessageEncoding& default_instance();

  static inline const ChannelMessageEncoding* internal_default_instance() {
    return reinterpret_cast<const ChannelMessageEncoding*>(
               &_ChannelMessageEncoding_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(ChannelMessageEncoding* other);

  // implements Message ----------------------------------------------

  inline ChannelMessageEncoding* New() const PROTOBUF_FINAL { return New(NULL); }

  ChannelMessageEncoding* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ChannelMessageEncoding& from);
  void MergeFrom(const ChannelMessageEncoding& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChannelMessageEncoding* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChannelMessageEncoding_MessageEncoding MessageEncoding;
  static const MessageEncoding PROTOBUF_BINARY_FORMAT =
    ChannelMessageEncoding_MessageEncoding_PROTOBUF_BINARY_FORMAT;
  static const MessageEncoding PROTOBUF_JSON_FORMAT =
    ChannelMessageEncoding_MessageEncoding_PROTOBUF_JSON_FORMAT;
  static inline bool MessageEncoding_IsValid(int value) {
    return ChannelMessageEncoding_MessageEncoding_IsValid(value);
  }
  static const MessageEncoding MessageEncoding_MIN =
    ChannelMessageEncoding_MessageEncoding_MessageEncoding_MIN;
  static const MessageEncoding MessageEncoding_MAX =
    ChannelMessageEncoding_MessageEncoding_MessageEncoding_MAX;
  static const int MessageEncoding_ARRAYSIZE =
    ChannelMessageEncoding_MessageEncoding_MessageEncoding_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ipc.invalidation.ChannelMessageEncoding)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_channel_5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NetworkEndpointId : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:ipc.invalidation.NetworkEndpointId) */ {
 public:
  NetworkEndpointId();
  virtual ~NetworkEndpointId();

  NetworkEndpointId(const NetworkEndpointId& from);

  inline NetworkEndpointId& operator=(const NetworkEndpointId& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const NetworkEndpointId& default_instance();

  static inline const NetworkEndpointId* internal_default_instance() {
    return reinterpret_cast<const NetworkEndpointId*>(
               &_NetworkEndpointId_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(NetworkEndpointId* other);

  // implements Message ----------------------------------------------

  inline NetworkEndpointId* New() const PROTOBUF_FINAL { return New(NULL); }

  NetworkEndpointId* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const NetworkEndpointId& from);
  void MergeFrom(const NetworkEndpointId& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NetworkEndpointId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef NetworkEndpointId_NetworkAddress NetworkAddress;
  static const NetworkAddress TEST =
    NetworkEndpointId_NetworkAddress_TEST;
  static const NetworkAddress ANDROID =
    NetworkEndpointId_NetworkAddress_ANDROID;
  static inline bool NetworkAddress_IsValid(int value) {
    return NetworkEndpointId_NetworkAddress_IsValid(value);
  }
  static const NetworkAddress NetworkAddress_MIN =
    NetworkEndpointId_NetworkAddress_NetworkAddress_MIN;
  static const NetworkAddress NetworkAddress_MAX =
    NetworkEndpointId_NetworkAddress_NetworkAddress_MAX;
  static const int NetworkAddress_ARRAYSIZE =
    NetworkEndpointId_NetworkAddress_NetworkAddress_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional bytes client_address = 2;
  bool has_client_address() const;
  void clear_client_address();
  static const int kClientAddressFieldNumber = 2;
  const ::std::string& client_address() const;
  void set_client_address(const ::std::string& value);
  #if LANG_CXX11
  void set_client_address(::std::string&& value);
  #endif
  void set_client_address(const char* value);
  void set_client_address(const void* value, size_t size);
  ::std::string* mutable_client_address();
  ::std::string* release_client_address();
  void set_allocated_client_address(::std::string* client_address);

  // optional bool is_offline = 3;
  bool has_is_offline() const;
  void clear_is_offline();
  static const int kIsOfflineFieldNumber = 3;
  bool is_offline() const;
  void set_is_offline(bool value);

  // optional .ipc.invalidation.NetworkEndpointId.NetworkAddress network_address = 1;
  bool has_network_address() const;
  void clear_network_address();
  static const int kNetworkAddressFieldNumber = 1;
  ::ipc::invalidation::NetworkEndpointId_NetworkAddress network_address() const;
  void set_network_address(::ipc::invalidation::NetworkEndpointId_NetworkAddress value);

  // @@protoc_insertion_point(class_scope:ipc.invalidation.NetworkEndpointId)
 private:
  void set_has_network_address();
  void clear_has_network_address();
  void set_has_client_address();
  void clear_has_client_address();
  void set_has_is_offline();
  void clear_has_is_offline();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr client_address_;
  bool is_offline_;
  int network_address_;
  friend struct protobuf_channel_5fcommon_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ChannelMessageEncoding

// -------------------------------------------------------------------

// NetworkEndpointId

// optional .ipc.invalidation.NetworkEndpointId.NetworkAddress network_address = 1;
inline bool NetworkEndpointId::has_network_address() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NetworkEndpointId::set_has_network_address() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NetworkEndpointId::clear_has_network_address() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NetworkEndpointId::clear_network_address() {
  network_address_ = 1;
  clear_has_network_address();
}
inline ::ipc::invalidation::NetworkEndpointId_NetworkAddress NetworkEndpointId::network_address() const {
  // @@protoc_insertion_point(field_get:ipc.invalidation.NetworkEndpointId.network_address)
  return static_cast< ::ipc::invalidation::NetworkEndpointId_NetworkAddress >(network_address_);
}
inline void NetworkEndpointId::set_network_address(::ipc::invalidation::NetworkEndpointId_NetworkAddress value) {
  assert(::ipc::invalidation::NetworkEndpointId_NetworkAddress_IsValid(value));
  set_has_network_address();
  network_address_ = value;
  // @@protoc_insertion_point(field_set:ipc.invalidation.NetworkEndpointId.network_address)
}

// optional bytes client_address = 2;
inline bool NetworkEndpointId::has_client_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetworkEndpointId::set_has_client_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NetworkEndpointId::clear_has_client_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NetworkEndpointId::clear_client_address() {
  client_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_client_address();
}
inline const ::std::string& NetworkEndpointId::client_address() const {
  // @@protoc_insertion_point(field_get:ipc.invalidation.NetworkEndpointId.client_address)
  return client_address_.GetNoArena();
}
inline void NetworkEndpointId::set_client_address(const ::std::string& value) {
  set_has_client_address();
  client_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ipc.invalidation.NetworkEndpointId.client_address)
}
#if LANG_CXX11
inline void NetworkEndpointId::set_client_address(::std::string&& value) {
  set_has_client_address();
  client_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ipc.invalidation.NetworkEndpointId.client_address)
}
#endif
inline void NetworkEndpointId::set_client_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_client_address();
  client_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ipc.invalidation.NetworkEndpointId.client_address)
}
inline void NetworkEndpointId::set_client_address(const void* value, size_t size) {
  set_has_client_address();
  client_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ipc.invalidation.NetworkEndpointId.client_address)
}
inline ::std::string* NetworkEndpointId::mutable_client_address() {
  set_has_client_address();
  // @@protoc_insertion_point(field_mutable:ipc.invalidation.NetworkEndpointId.client_address)
  return client_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NetworkEndpointId::release_client_address() {
  // @@protoc_insertion_point(field_release:ipc.invalidation.NetworkEndpointId.client_address)
  clear_has_client_address();
  return client_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NetworkEndpointId::set_allocated_client_address(::std::string* client_address) {
  if (client_address != NULL) {
    set_has_client_address();
  } else {
    clear_has_client_address();
  }
  client_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_address);
  // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.NetworkEndpointId.client_address)
}

// optional bool is_offline = 3;
inline bool NetworkEndpointId::has_is_offline() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetworkEndpointId::set_has_is_offline() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NetworkEndpointId::clear_has_is_offline() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NetworkEndpointId::clear_is_offline() {
  is_offline_ = false;
  clear_has_is_offline();
}
inline bool NetworkEndpointId::is_offline() const {
  // @@protoc_insertion_point(field_get:ipc.invalidation.NetworkEndpointId.is_offline)
  return is_offline_;
}
inline void NetworkEndpointId::set_is_offline(bool value) {
  set_has_is_offline();
  is_offline_ = value;
  // @@protoc_insertion_point(field_set:ipc.invalidation.NetworkEndpointId.is_offline)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace invalidation
}  // namespace ipc

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ipc::invalidation::ChannelMessageEncoding_MessageEncoding> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::ipc::invalidation::NetworkEndpointId_NetworkAddress> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_channel_5fcommon_2eproto__INCLUDED
