// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: android_channel.proto

#ifndef PROTOBUF_android_5fchannel_2eproto__INCLUDED
#define PROTOBUF_android_5fchannel_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
#include "client_protocol.pb.h"
// @@protoc_insertion_point(includes)
namespace ipc {
namespace invalidation {
class AddressedAndroidMessage;
class AddressedAndroidMessageDefaultTypeInternal;
extern AddressedAndroidMessageDefaultTypeInternal _AddressedAndroidMessage_default_instance_;
class AddressedAndroidMessageBatch;
class AddressedAndroidMessageBatchDefaultTypeInternal;
extern AddressedAndroidMessageBatchDefaultTypeInternal _AddressedAndroidMessageBatch_default_instance_;
class EndpointId;
class EndpointIdDefaultTypeInternal;
extern EndpointIdDefaultTypeInternal _EndpointId_default_instance_;
}  // namespace invalidation
}  // namespace ipc

namespace ipc {
namespace invalidation {

namespace protobuf_android_5fchannel_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_android_5fchannel_2eproto

enum MajorVersion {
  INITIAL = 0,
  BATCH = 1,
  DEFAULT = 0,
  MIN_SUPPORTED = 0,
  MAX_SUPPORTED = 1
};
bool MajorVersion_IsValid(int value);
const MajorVersion MajorVersion_MIN = INITIAL;
const MajorVersion MajorVersion_MAX = BATCH;
const int MajorVersion_ARRAYSIZE = MajorVersion_MAX + 1;

// ===================================================================

class EndpointId : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:ipc.invalidation.EndpointId) */ {
 public:
  EndpointId();
  virtual ~EndpointId();

  EndpointId(const EndpointId& from);

  inline EndpointId& operator=(const EndpointId& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EndpointId& default_instance();

  static inline const EndpointId* internal_default_instance() {
    return reinterpret_cast<const EndpointId*>(
               &_EndpointId_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(EndpointId* other);

  // implements Message ----------------------------------------------

  inline EndpointId* New() const PROTOBUF_FINAL { return New(NULL); }

  EndpointId* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EndpointId& from);
  void MergeFrom(const EndpointId& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EndpointId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string c2dm_registration_id = 2;
  bool has_c2dm_registration_id() const;
  void clear_c2dm_registration_id();
  static const int kC2DmRegistrationIdFieldNumber = 2;
  const ::std::string& c2dm_registration_id() const;
  void set_c2dm_registration_id(const ::std::string& value);
  #if LANG_CXX11
  void set_c2dm_registration_id(::std::string&& value);
  #endif
  void set_c2dm_registration_id(const char* value);
  void set_c2dm_registration_id(const char* value, size_t size);
  ::std::string* mutable_c2dm_registration_id();
  ::std::string* release_c2dm_registration_id();
  void set_allocated_c2dm_registration_id(::std::string* c2dm_registration_id);

  // optional string client_key = 3;
  bool has_client_key() const;
  void clear_client_key();
  static const int kClientKeyFieldNumber = 3;
  const ::std::string& client_key() const;
  void set_client_key(const ::std::string& value);
  #if LANG_CXX11
  void set_client_key(::std::string&& value);
  #endif
  void set_client_key(const char* value);
  void set_client_key(const char* value, size_t size);
  ::std::string* mutable_client_key();
  ::std::string* release_client_key();
  void set_allocated_client_key(::std::string* client_key);

  // optional string sender_id = 4 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_sender_id() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_sender_id();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kSenderIdFieldNumber = 4;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::std::string& sender_id() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_sender_id(const ::std::string& value);
  #if LANG_CXX11
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_sender_id(::std::string&& value);
  #endif
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_sender_id(const char* value);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_sender_id(const char* value, size_t size);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* mutable_sender_id();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* release_sender_id();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_sender_id(::std::string* sender_id);

  // optional string package_name = 6;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 6;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // optional .ipc.invalidation.Version channel_version = 5;
  bool has_channel_version() const;
  void clear_channel_version();
  static const int kChannelVersionFieldNumber = 5;
  const ::ipc::invalidation::Version& channel_version() const;
  ::ipc::invalidation::Version* mutable_channel_version();
  ::ipc::invalidation::Version* release_channel_version();
  void set_allocated_channel_version(::ipc::invalidation::Version* channel_version);

  // @@protoc_insertion_point(class_scope:ipc.invalidation.EndpointId)
 private:
  void set_has_c2dm_registration_id();
  void clear_has_c2dm_registration_id();
  void set_has_client_key();
  void clear_has_client_key();
  void set_has_sender_id();
  void clear_has_sender_id();
  void set_has_channel_version();
  void clear_has_channel_version();
  void set_has_package_name();
  void clear_has_package_name();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr c2dm_registration_id_;
  ::google::protobuf::internal::ArenaStringPtr client_key_;
  ::google::protobuf::internal::ArenaStringPtr sender_id_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::ipc::invalidation::Version* channel_version_;
  friend struct protobuf_android_5fchannel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddressedAndroidMessage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:ipc.invalidation.AddressedAndroidMessage) */ {
 public:
  AddressedAndroidMessage();
  virtual ~AddressedAndroidMessage();

  AddressedAndroidMessage(const AddressedAndroidMessage& from);

  inline AddressedAndroidMessage& operator=(const AddressedAndroidMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AddressedAndroidMessage& default_instance();

  static inline const AddressedAndroidMessage* internal_default_instance() {
    return reinterpret_cast<const AddressedAndroidMessage*>(
               &_AddressedAndroidMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(AddressedAndroidMessage* other);

  // implements Message ----------------------------------------------

  inline AddressedAndroidMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  AddressedAndroidMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AddressedAndroidMessage& from);
  void MergeFrom(const AddressedAndroidMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddressedAndroidMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string client_key = 1;
  bool has_client_key() const;
  void clear_client_key();
  static const int kClientKeyFieldNumber = 1;
  const ::std::string& client_key() const;
  void set_client_key(const ::std::string& value);
  #if LANG_CXX11
  void set_client_key(::std::string&& value);
  #endif
  void set_client_key(const char* value);
  void set_client_key(const char* value, size_t size);
  ::std::string* mutable_client_key();
  ::std::string* release_client_key();
  void set_allocated_client_key(::std::string* client_key);

  // optional bytes message = 2;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const void* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:ipc.invalidation.AddressedAndroidMessage)
 private:
  void set_has_client_key();
  void clear_has_client_key();
  void set_has_message();
  void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr client_key_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  friend struct protobuf_android_5fchannel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddressedAndroidMessageBatch : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:ipc.invalidation.AddressedAndroidMessageBatch) */ {
 public:
  AddressedAndroidMessageBatch();
  virtual ~AddressedAndroidMessageBatch();

  AddressedAndroidMessageBatch(const AddressedAndroidMessageBatch& from);

  inline AddressedAndroidMessageBatch& operator=(const AddressedAndroidMessageBatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AddressedAndroidMessageBatch& default_instance();

  static inline const AddressedAndroidMessageBatch* internal_default_instance() {
    return reinterpret_cast<const AddressedAndroidMessageBatch*>(
               &_AddressedAndroidMessageBatch_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(AddressedAndroidMessageBatch* other);

  // implements Message ----------------------------------------------

  inline AddressedAndroidMessageBatch* New() const PROTOBUF_FINAL { return New(NULL); }

  AddressedAndroidMessageBatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AddressedAndroidMessageBatch& from);
  void MergeFrom(const AddressedAndroidMessageBatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddressedAndroidMessageBatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ipc.invalidation.AddressedAndroidMessage addressed_message = 1;
  int addressed_message_size() const;
  void clear_addressed_message();
  static const int kAddressedMessageFieldNumber = 1;
  const ::ipc::invalidation::AddressedAndroidMessage& addressed_message(int index) const;
  ::ipc::invalidation::AddressedAndroidMessage* mutable_addressed_message(int index);
  ::ipc::invalidation::AddressedAndroidMessage* add_addressed_message();
  ::google::protobuf::RepeatedPtrField< ::ipc::invalidation::AddressedAndroidMessage >*
      mutable_addressed_message();
  const ::google::protobuf::RepeatedPtrField< ::ipc::invalidation::AddressedAndroidMessage >&
      addressed_message() const;

  // @@protoc_insertion_point(class_scope:ipc.invalidation.AddressedAndroidMessageBatch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ipc::invalidation::AddressedAndroidMessage > addressed_message_;
  friend struct protobuf_android_5fchannel_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// EndpointId

// optional string c2dm_registration_id = 2;
inline bool EndpointId::has_c2dm_registration_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EndpointId::set_has_c2dm_registration_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EndpointId::clear_has_c2dm_registration_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EndpointId::clear_c2dm_registration_id() {
  c2dm_registration_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_c2dm_registration_id();
}
inline const ::std::string& EndpointId::c2dm_registration_id() const {
  // @@protoc_insertion_point(field_get:ipc.invalidation.EndpointId.c2dm_registration_id)
  return c2dm_registration_id_.GetNoArena();
}
inline void EndpointId::set_c2dm_registration_id(const ::std::string& value) {
  set_has_c2dm_registration_id();
  c2dm_registration_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ipc.invalidation.EndpointId.c2dm_registration_id)
}
#if LANG_CXX11
inline void EndpointId::set_c2dm_registration_id(::std::string&& value) {
  set_has_c2dm_registration_id();
  c2dm_registration_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ipc.invalidation.EndpointId.c2dm_registration_id)
}
#endif
inline void EndpointId::set_c2dm_registration_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_c2dm_registration_id();
  c2dm_registration_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ipc.invalidation.EndpointId.c2dm_registration_id)
}
inline void EndpointId::set_c2dm_registration_id(const char* value, size_t size) {
  set_has_c2dm_registration_id();
  c2dm_registration_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ipc.invalidation.EndpointId.c2dm_registration_id)
}
inline ::std::string* EndpointId::mutable_c2dm_registration_id() {
  set_has_c2dm_registration_id();
  // @@protoc_insertion_point(field_mutable:ipc.invalidation.EndpointId.c2dm_registration_id)
  return c2dm_registration_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EndpointId::release_c2dm_registration_id() {
  // @@protoc_insertion_point(field_release:ipc.invalidation.EndpointId.c2dm_registration_id)
  clear_has_c2dm_registration_id();
  return c2dm_registration_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EndpointId::set_allocated_c2dm_registration_id(::std::string* c2dm_registration_id) {
  if (c2dm_registration_id != NULL) {
    set_has_c2dm_registration_id();
  } else {
    clear_has_c2dm_registration_id();
  }
  c2dm_registration_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), c2dm_registration_id);
  // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.EndpointId.c2dm_registration_id)
}

// optional string client_key = 3;
inline bool EndpointId::has_client_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EndpointId::set_has_client_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EndpointId::clear_has_client_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EndpointId::clear_client_key() {
  client_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_client_key();
}
inline const ::std::string& EndpointId::client_key() const {
  // @@protoc_insertion_point(field_get:ipc.invalidation.EndpointId.client_key)
  return client_key_.GetNoArena();
}
inline void EndpointId::set_client_key(const ::std::string& value) {
  set_has_client_key();
  client_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ipc.invalidation.EndpointId.client_key)
}
#if LANG_CXX11
inline void EndpointId::set_client_key(::std::string&& value) {
  set_has_client_key();
  client_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ipc.invalidation.EndpointId.client_key)
}
#endif
inline void EndpointId::set_client_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_client_key();
  client_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ipc.invalidation.EndpointId.client_key)
}
inline void EndpointId::set_client_key(const char* value, size_t size) {
  set_has_client_key();
  client_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ipc.invalidation.EndpointId.client_key)
}
inline ::std::string* EndpointId::mutable_client_key() {
  set_has_client_key();
  // @@protoc_insertion_point(field_mutable:ipc.invalidation.EndpointId.client_key)
  return client_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EndpointId::release_client_key() {
  // @@protoc_insertion_point(field_release:ipc.invalidation.EndpointId.client_key)
  clear_has_client_key();
  return client_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EndpointId::set_allocated_client_key(::std::string* client_key) {
  if (client_key != NULL) {
    set_has_client_key();
  } else {
    clear_has_client_key();
  }
  client_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_key);
  // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.EndpointId.client_key)
}

// optional string sender_id = 4 [deprecated = true];
inline bool EndpointId::has_sender_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EndpointId::set_has_sender_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EndpointId::clear_has_sender_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EndpointId::clear_sender_id() {
  sender_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sender_id();
}
inline const ::std::string& EndpointId::sender_id() const {
  // @@protoc_insertion_point(field_get:ipc.invalidation.EndpointId.sender_id)
  return sender_id_.GetNoArena();
}
inline void EndpointId::set_sender_id(const ::std::string& value) {
  set_has_sender_id();
  sender_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ipc.invalidation.EndpointId.sender_id)
}
#if LANG_CXX11
inline void EndpointId::set_sender_id(::std::string&& value) {
  set_has_sender_id();
  sender_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ipc.invalidation.EndpointId.sender_id)
}
#endif
inline void EndpointId::set_sender_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sender_id();
  sender_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ipc.invalidation.EndpointId.sender_id)
}
inline void EndpointId::set_sender_id(const char* value, size_t size) {
  set_has_sender_id();
  sender_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ipc.invalidation.EndpointId.sender_id)
}
inline ::std::string* EndpointId::mutable_sender_id() {
  set_has_sender_id();
  // @@protoc_insertion_point(field_mutable:ipc.invalidation.EndpointId.sender_id)
  return sender_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EndpointId::release_sender_id() {
  // @@protoc_insertion_point(field_release:ipc.invalidation.EndpointId.sender_id)
  clear_has_sender_id();
  return sender_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EndpointId::set_allocated_sender_id(::std::string* sender_id) {
  if (sender_id != NULL) {
    set_has_sender_id();
  } else {
    clear_has_sender_id();
  }
  sender_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender_id);
  // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.EndpointId.sender_id)
}

// optional .ipc.invalidation.Version channel_version = 5;
inline bool EndpointId::has_channel_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EndpointId::set_has_channel_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EndpointId::clear_has_channel_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EndpointId::clear_channel_version() {
  if (channel_version_ != NULL) channel_version_->::ipc::invalidation::Version::Clear();
  clear_has_channel_version();
}
inline const ::ipc::invalidation::Version& EndpointId::channel_version() const {
  // @@protoc_insertion_point(field_get:ipc.invalidation.EndpointId.channel_version)
  return channel_version_ != NULL ? *channel_version_
                         : *::ipc::invalidation::Version::internal_default_instance();
}
inline ::ipc::invalidation::Version* EndpointId::mutable_channel_version() {
  set_has_channel_version();
  if (channel_version_ == NULL) {
    channel_version_ = new ::ipc::invalidation::Version;
  }
  // @@protoc_insertion_point(field_mutable:ipc.invalidation.EndpointId.channel_version)
  return channel_version_;
}
inline ::ipc::invalidation::Version* EndpointId::release_channel_version() {
  // @@protoc_insertion_point(field_release:ipc.invalidation.EndpointId.channel_version)
  clear_has_channel_version();
  ::ipc::invalidation::Version* temp = channel_version_;
  channel_version_ = NULL;
  return temp;
}
inline void EndpointId::set_allocated_channel_version(::ipc::invalidation::Version* channel_version) {
  delete channel_version_;
  channel_version_ = channel_version;
  if (channel_version) {
    set_has_channel_version();
  } else {
    clear_has_channel_version();
  }
  // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.EndpointId.channel_version)
}

// optional string package_name = 6;
inline bool EndpointId::has_package_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EndpointId::set_has_package_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EndpointId::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EndpointId::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& EndpointId::package_name() const {
  // @@protoc_insertion_point(field_get:ipc.invalidation.EndpointId.package_name)
  return package_name_.GetNoArena();
}
inline void EndpointId::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ipc.invalidation.EndpointId.package_name)
}
#if LANG_CXX11
inline void EndpointId::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ipc.invalidation.EndpointId.package_name)
}
#endif
inline void EndpointId::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ipc.invalidation.EndpointId.package_name)
}
inline void EndpointId::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ipc.invalidation.EndpointId.package_name)
}
inline ::std::string* EndpointId::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:ipc.invalidation.EndpointId.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EndpointId::release_package_name() {
  // @@protoc_insertion_point(field_release:ipc.invalidation.EndpointId.package_name)
  clear_has_package_name();
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EndpointId::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.EndpointId.package_name)
}

// -------------------------------------------------------------------

// AddressedAndroidMessage

// optional string client_key = 1;
inline bool AddressedAndroidMessage::has_client_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddressedAndroidMessage::set_has_client_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddressedAndroidMessage::clear_has_client_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddressedAndroidMessage::clear_client_key() {
  client_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_client_key();
}
inline const ::std::string& AddressedAndroidMessage::client_key() const {
  // @@protoc_insertion_point(field_get:ipc.invalidation.AddressedAndroidMessage.client_key)
  return client_key_.GetNoArena();
}
inline void AddressedAndroidMessage::set_client_key(const ::std::string& value) {
  set_has_client_key();
  client_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ipc.invalidation.AddressedAndroidMessage.client_key)
}
#if LANG_CXX11
inline void AddressedAndroidMessage::set_client_key(::std::string&& value) {
  set_has_client_key();
  client_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ipc.invalidation.AddressedAndroidMessage.client_key)
}
#endif
inline void AddressedAndroidMessage::set_client_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_client_key();
  client_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ipc.invalidation.AddressedAndroidMessage.client_key)
}
inline void AddressedAndroidMessage::set_client_key(const char* value, size_t size) {
  set_has_client_key();
  client_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ipc.invalidation.AddressedAndroidMessage.client_key)
}
inline ::std::string* AddressedAndroidMessage::mutable_client_key() {
  set_has_client_key();
  // @@protoc_insertion_point(field_mutable:ipc.invalidation.AddressedAndroidMessage.client_key)
  return client_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddressedAndroidMessage::release_client_key() {
  // @@protoc_insertion_point(field_release:ipc.invalidation.AddressedAndroidMessage.client_key)
  clear_has_client_key();
  return client_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddressedAndroidMessage::set_allocated_client_key(::std::string* client_key) {
  if (client_key != NULL) {
    set_has_client_key();
  } else {
    clear_has_client_key();
  }
  client_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_key);
  // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.AddressedAndroidMessage.client_key)
}

// optional bytes message = 2;
inline bool AddressedAndroidMessage::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddressedAndroidMessage::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddressedAndroidMessage::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddressedAndroidMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& AddressedAndroidMessage::message() const {
  // @@protoc_insertion_point(field_get:ipc.invalidation.AddressedAndroidMessage.message)
  return message_.GetNoArena();
}
inline void AddressedAndroidMessage::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ipc.invalidation.AddressedAndroidMessage.message)
}
#if LANG_CXX11
inline void AddressedAndroidMessage::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ipc.invalidation.AddressedAndroidMessage.message)
}
#endif
inline void AddressedAndroidMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ipc.invalidation.AddressedAndroidMessage.message)
}
inline void AddressedAndroidMessage::set_message(const void* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ipc.invalidation.AddressedAndroidMessage.message)
}
inline ::std::string* AddressedAndroidMessage::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:ipc.invalidation.AddressedAndroidMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddressedAndroidMessage::release_message() {
  // @@protoc_insertion_point(field_release:ipc.invalidation.AddressedAndroidMessage.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddressedAndroidMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.AddressedAndroidMessage.message)
}

// -------------------------------------------------------------------

// AddressedAndroidMessageBatch

// repeated .ipc.invalidation.AddressedAndroidMessage addressed_message = 1;
inline int AddressedAndroidMessageBatch::addressed_message_size() const {
  return addressed_message_.size();
}
inline void AddressedAndroidMessageBatch::clear_addressed_message() {
  addressed_message_.Clear();
}
inline const ::ipc::invalidation::AddressedAndroidMessage& AddressedAndroidMessageBatch::addressed_message(int index) const {
  // @@protoc_insertion_point(field_get:ipc.invalidation.AddressedAndroidMessageBatch.addressed_message)
  return addressed_message_.Get(index);
}
inline ::ipc::invalidation::AddressedAndroidMessage* AddressedAndroidMessageBatch::mutable_addressed_message(int index) {
  // @@protoc_insertion_point(field_mutable:ipc.invalidation.AddressedAndroidMessageBatch.addressed_message)
  return addressed_message_.Mutable(index);
}
inline ::ipc::invalidation::AddressedAndroidMessage* AddressedAndroidMessageBatch::add_addressed_message() {
  // @@protoc_insertion_point(field_add:ipc.invalidation.AddressedAndroidMessageBatch.addressed_message)
  return addressed_message_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ipc::invalidation::AddressedAndroidMessage >*
AddressedAndroidMessageBatch::mutable_addressed_message() {
  // @@protoc_insertion_point(field_mutable_list:ipc.invalidation.AddressedAndroidMessageBatch.addressed_message)
  return &addressed_message_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ipc::invalidation::AddressedAndroidMessage >&
AddressedAndroidMessageBatch::addressed_message() const {
  // @@protoc_insertion_point(field_list:ipc.invalidation.AddressedAndroidMessageBatch.addressed_message)
  return addressed_message_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace invalidation
}  // namespace ipc

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ipc::invalidation::MajorVersion> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_android_5fchannel_2eproto__INCLUDED
