// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: android_channel.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "android_channel.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace ipc {
namespace invalidation {
class EndpointIdDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EndpointId> {
} _EndpointId_default_instance_;
class AddressedAndroidMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddressedAndroidMessage> {
} _AddressedAndroidMessage_default_instance_;
class AddressedAndroidMessageBatchDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddressedAndroidMessageBatch> {
} _AddressedAndroidMessageBatch_default_instance_;

namespace protobuf_android_5fchannel_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _EndpointId_default_instance_.Shutdown();
  _AddressedAndroidMessage_default_instance_.Shutdown();
  _AddressedAndroidMessageBatch_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::ipc::invalidation::protobuf_client_5fprotocol_2eproto::InitDefaults();
  _EndpointId_default_instance_.DefaultConstruct();
  _AddressedAndroidMessage_default_instance_.DefaultConstruct();
  _AddressedAndroidMessageBatch_default_instance_.DefaultConstruct();
  _EndpointId_default_instance_.get_mutable()->channel_version_ = const_cast< ::ipc::invalidation::Version*>(
      ::ipc::invalidation::Version::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::ipc::invalidation::protobuf_client_5fprotocol_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_android_5fchannel_2eproto

bool MajorVersion_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EndpointId::kC2DmRegistrationIdFieldNumber;
const int EndpointId::kClientKeyFieldNumber;
const int EndpointId::kSenderIdFieldNumber;
const int EndpointId::kChannelVersionFieldNumber;
const int EndpointId::kPackageNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EndpointId::EndpointId()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_android_5fchannel_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ipc.invalidation.EndpointId)
}
EndpointId::EndpointId(const EndpointId& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  c2dm_registration_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_c2dm_registration_id()) {
    c2dm_registration_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.c2dm_registration_id_);
  }
  client_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_client_key()) {
    client_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_key_);
  }
  sender_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sender_id()) {
    sender_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_id_);
  }
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_package_name()) {
    package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  if (from.has_channel_version()) {
    channel_version_ = new ::ipc::invalidation::Version(*from.channel_version_);
  } else {
    channel_version_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ipc.invalidation.EndpointId)
}

void EndpointId::SharedCtor() {
  _cached_size_ = 0;
  c2dm_registration_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_version_ = NULL;
}

EndpointId::~EndpointId() {
  // @@protoc_insertion_point(destructor:ipc.invalidation.EndpointId)
  SharedDtor();
}

void EndpointId::SharedDtor() {
  c2dm_registration_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete channel_version_;
  }
}

void EndpointId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EndpointId& EndpointId::default_instance() {
  protobuf_android_5fchannel_2eproto::InitDefaults();
  return *internal_default_instance();
}

EndpointId* EndpointId::New(::google::protobuf::Arena* arena) const {
  EndpointId* n = new EndpointId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EndpointId::Clear() {
// @@protoc_insertion_point(message_clear_start:ipc.invalidation.EndpointId)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_c2dm_registration_id()) {
      GOOGLE_DCHECK(!c2dm_registration_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*c2dm_registration_id_.UnsafeRawStringPointer())->clear();
    }
    if (has_client_key()) {
      GOOGLE_DCHECK(!client_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*client_key_.UnsafeRawStringPointer())->clear();
    }
    if (has_sender_id()) {
      GOOGLE_DCHECK(!sender_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sender_id_.UnsafeRawStringPointer())->clear();
    }
    if (has_package_name()) {
      GOOGLE_DCHECK(!package_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*package_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_channel_version()) {
      GOOGLE_DCHECK(channel_version_ != NULL);
      channel_version_->::ipc::invalidation::Version::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EndpointId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:ipc.invalidation.EndpointId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string c2dm_registration_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_c2dm_registration_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string client_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sender_id = 4 [deprecated = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ipc.invalidation.Version channel_version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_channel_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string package_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ipc.invalidation.EndpointId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ipc.invalidation.EndpointId)
  return false;
#undef DO_
}

void EndpointId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ipc.invalidation.EndpointId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string c2dm_registration_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->c2dm_registration_id(), output);
  }

  // optional string client_key = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->client_key(), output);
  }

  // optional string sender_id = 4 [deprecated = true];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sender_id(), output);
  }

  // optional .ipc.invalidation.Version channel_version = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, *this->channel_version_, output);
  }

  // optional string package_name = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->package_name(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:ipc.invalidation.EndpointId)
}

size_t EndpointId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ipc.invalidation.EndpointId)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 31u) {
    // optional string c2dm_registration_id = 2;
    if (has_c2dm_registration_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->c2dm_registration_id());
    }

    // optional string client_key = 3;
    if (has_client_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->client_key());
    }

    // optional string sender_id = 4 [deprecated = true];
    if (has_sender_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sender_id());
    }

    // optional string package_name = 6;
    if (has_package_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->package_name());
    }

    // optional .ipc.invalidation.Version channel_version = 5;
    if (has_channel_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->channel_version_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EndpointId::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EndpointId*>(&from));
}

void EndpointId::MergeFrom(const EndpointId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ipc.invalidation.EndpointId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_c2dm_registration_id();
      c2dm_registration_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.c2dm_registration_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_client_key();
      client_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_key_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_sender_id();
      sender_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_id_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_package_name();
      package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_channel_version()->::ipc::invalidation::Version::MergeFrom(from.channel_version());
    }
  }
}

void EndpointId::CopyFrom(const EndpointId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipc.invalidation.EndpointId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndpointId::IsInitialized() const {
  return true;
}

void EndpointId::Swap(EndpointId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EndpointId::InternalSwap(EndpointId* other) {
  c2dm_registration_id_.Swap(&other->c2dm_registration_id_);
  client_key_.Swap(&other->client_key_);
  sender_id_.Swap(&other->sender_id_);
  package_name_.Swap(&other->package_name_);
  std::swap(channel_version_, other->channel_version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string EndpointId::GetTypeName() const {
  return "ipc.invalidation.EndpointId";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EndpointId

// optional string c2dm_registration_id = 2;
bool EndpointId::has_c2dm_registration_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EndpointId::set_has_c2dm_registration_id() {
  _has_bits_[0] |= 0x00000001u;
}
void EndpointId::clear_has_c2dm_registration_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void EndpointId::clear_c2dm_registration_id() {
  c2dm_registration_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_c2dm_registration_id();
}
const ::std::string& EndpointId::c2dm_registration_id() const {
  // @@protoc_insertion_point(field_get:ipc.invalidation.EndpointId.c2dm_registration_id)
  return c2dm_registration_id_.GetNoArena();
}
void EndpointId::set_c2dm_registration_id(const ::std::string& value) {
  set_has_c2dm_registration_id();
  c2dm_registration_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ipc.invalidation.EndpointId.c2dm_registration_id)
}
#if LANG_CXX11
void EndpointId::set_c2dm_registration_id(::std::string&& value) {
  set_has_c2dm_registration_id();
  c2dm_registration_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ipc.invalidation.EndpointId.c2dm_registration_id)
}
#endif
void EndpointId::set_c2dm_registration_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_c2dm_registration_id();
  c2dm_registration_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ipc.invalidation.EndpointId.c2dm_registration_id)
}
void EndpointId::set_c2dm_registration_id(const char* value, size_t size) {
  set_has_c2dm_registration_id();
  c2dm_registration_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ipc.invalidation.EndpointId.c2dm_registration_id)
}
::std::string* EndpointId::mutable_c2dm_registration_id() {
  set_has_c2dm_registration_id();
  // @@protoc_insertion_point(field_mutable:ipc.invalidation.EndpointId.c2dm_registration_id)
  return c2dm_registration_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EndpointId::release_c2dm_registration_id() {
  // @@protoc_insertion_point(field_release:ipc.invalidation.EndpointId.c2dm_registration_id)
  clear_has_c2dm_registration_id();
  return c2dm_registration_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EndpointId::set_allocated_c2dm_registration_id(::std::string* c2dm_registration_id) {
  if (c2dm_registration_id != NULL) {
    set_has_c2dm_registration_id();
  } else {
    clear_has_c2dm_registration_id();
  }
  c2dm_registration_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), c2dm_registration_id);
  // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.EndpointId.c2dm_registration_id)
}

// optional string client_key = 3;
bool EndpointId::has_client_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EndpointId::set_has_client_key() {
  _has_bits_[0] |= 0x00000002u;
}
void EndpointId::clear_has_client_key() {
  _has_bits_[0] &= ~0x00000002u;
}
void EndpointId::clear_client_key() {
  client_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_client_key();
}
const ::std::string& EndpointId::client_key() const {
  // @@protoc_insertion_point(field_get:ipc.invalidation.EndpointId.client_key)
  return client_key_.GetNoArena();
}
void EndpointId::set_client_key(const ::std::string& value) {
  set_has_client_key();
  client_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ipc.invalidation.EndpointId.client_key)
}
#if LANG_CXX11
void EndpointId::set_client_key(::std::string&& value) {
  set_has_client_key();
  client_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ipc.invalidation.EndpointId.client_key)
}
#endif
void EndpointId::set_client_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_client_key();
  client_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ipc.invalidation.EndpointId.client_key)
}
void EndpointId::set_client_key(const char* value, size_t size) {
  set_has_client_key();
  client_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ipc.invalidation.EndpointId.client_key)
}
::std::string* EndpointId::mutable_client_key() {
  set_has_client_key();
  // @@protoc_insertion_point(field_mutable:ipc.invalidation.EndpointId.client_key)
  return client_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EndpointId::release_client_key() {
  // @@protoc_insertion_point(field_release:ipc.invalidation.EndpointId.client_key)
  clear_has_client_key();
  return client_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EndpointId::set_allocated_client_key(::std::string* client_key) {
  if (client_key != NULL) {
    set_has_client_key();
  } else {
    clear_has_client_key();
  }
  client_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_key);
  // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.EndpointId.client_key)
}

// optional string sender_id = 4 [deprecated = true];
bool EndpointId::has_sender_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void EndpointId::set_has_sender_id() {
  _has_bits_[0] |= 0x00000004u;
}
void EndpointId::clear_has_sender_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void EndpointId::clear_sender_id() {
  sender_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sender_id();
}
const ::std::string& EndpointId::sender_id() const {
  // @@protoc_insertion_point(field_get:ipc.invalidation.EndpointId.sender_id)
  return sender_id_.GetNoArena();
}
void EndpointId::set_sender_id(const ::std::string& value) {
  set_has_sender_id();
  sender_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ipc.invalidation.EndpointId.sender_id)
}
#if LANG_CXX11
void EndpointId::set_sender_id(::std::string&& value) {
  set_has_sender_id();
  sender_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ipc.invalidation.EndpointId.sender_id)
}
#endif
void EndpointId::set_sender_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sender_id();
  sender_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ipc.invalidation.EndpointId.sender_id)
}
void EndpointId::set_sender_id(const char* value, size_t size) {
  set_has_sender_id();
  sender_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ipc.invalidation.EndpointId.sender_id)
}
::std::string* EndpointId::mutable_sender_id() {
  set_has_sender_id();
  // @@protoc_insertion_point(field_mutable:ipc.invalidation.EndpointId.sender_id)
  return sender_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EndpointId::release_sender_id() {
  // @@protoc_insertion_point(field_release:ipc.invalidation.EndpointId.sender_id)
  clear_has_sender_id();
  return sender_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EndpointId::set_allocated_sender_id(::std::string* sender_id) {
  if (sender_id != NULL) {
    set_has_sender_id();
  } else {
    clear_has_sender_id();
  }
  sender_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender_id);
  // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.EndpointId.sender_id)
}

// optional .ipc.invalidation.Version channel_version = 5;
bool EndpointId::has_channel_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void EndpointId::set_has_channel_version() {
  _has_bits_[0] |= 0x00000010u;
}
void EndpointId::clear_has_channel_version() {
  _has_bits_[0] &= ~0x00000010u;
}
void EndpointId::clear_channel_version() {
  if (channel_version_ != NULL) channel_version_->::ipc::invalidation::Version::Clear();
  clear_has_channel_version();
}
const ::ipc::invalidation::Version& EndpointId::channel_version() const {
  // @@protoc_insertion_point(field_get:ipc.invalidation.EndpointId.channel_version)
  return channel_version_ != NULL ? *channel_version_
                         : *::ipc::invalidation::Version::internal_default_instance();
}
::ipc::invalidation::Version* EndpointId::mutable_channel_version() {
  set_has_channel_version();
  if (channel_version_ == NULL) {
    channel_version_ = new ::ipc::invalidation::Version;
  }
  // @@protoc_insertion_point(field_mutable:ipc.invalidation.EndpointId.channel_version)
  return channel_version_;
}
::ipc::invalidation::Version* EndpointId::release_channel_version() {
  // @@protoc_insertion_point(field_release:ipc.invalidation.EndpointId.channel_version)
  clear_has_channel_version();
  ::ipc::invalidation::Version* temp = channel_version_;
  channel_version_ = NULL;
  return temp;
}
void EndpointId::set_allocated_channel_version(::ipc::invalidation::Version* channel_version) {
  delete channel_version_;
  channel_version_ = channel_version;
  if (channel_version) {
    set_has_channel_version();
  } else {
    clear_has_channel_version();
  }
  // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.EndpointId.channel_version)
}

// optional string package_name = 6;
bool EndpointId::has_package_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void EndpointId::set_has_package_name() {
  _has_bits_[0] |= 0x00000008u;
}
void EndpointId::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void EndpointId::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
const ::std::string& EndpointId::package_name() const {
  // @@protoc_insertion_point(field_get:ipc.invalidation.EndpointId.package_name)
  return package_name_.GetNoArena();
}
void EndpointId::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ipc.invalidation.EndpointId.package_name)
}
#if LANG_CXX11
void EndpointId::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ipc.invalidation.EndpointId.package_name)
}
#endif
void EndpointId::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ipc.invalidation.EndpointId.package_name)
}
void EndpointId::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ipc.invalidation.EndpointId.package_name)
}
::std::string* EndpointId::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:ipc.invalidation.EndpointId.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EndpointId::release_package_name() {
  // @@protoc_insertion_point(field_release:ipc.invalidation.EndpointId.package_name)
  clear_has_package_name();
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EndpointId::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.EndpointId.package_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddressedAndroidMessage::kClientKeyFieldNumber;
const int AddressedAndroidMessage::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddressedAndroidMessage::AddressedAndroidMessage()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_android_5fchannel_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ipc.invalidation.AddressedAndroidMessage)
}
AddressedAndroidMessage::AddressedAndroidMessage(const AddressedAndroidMessage& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_client_key()) {
    client_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_key_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:ipc.invalidation.AddressedAndroidMessage)
}

void AddressedAndroidMessage::SharedCtor() {
  _cached_size_ = 0;
  client_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AddressedAndroidMessage::~AddressedAndroidMessage() {
  // @@protoc_insertion_point(destructor:ipc.invalidation.AddressedAndroidMessage)
  SharedDtor();
}

void AddressedAndroidMessage::SharedDtor() {
  client_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddressedAndroidMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AddressedAndroidMessage& AddressedAndroidMessage::default_instance() {
  protobuf_android_5fchannel_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddressedAndroidMessage* AddressedAndroidMessage::New(::google::protobuf::Arena* arena) const {
  AddressedAndroidMessage* n = new AddressedAndroidMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddressedAndroidMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ipc.invalidation.AddressedAndroidMessage)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_client_key()) {
      GOOGLE_DCHECK(!client_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*client_key_.UnsafeRawStringPointer())->clear();
    }
    if (has_message()) {
      GOOGLE_DCHECK(!message_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*message_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddressedAndroidMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:ipc.invalidation.AddressedAndroidMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string client_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ipc.invalidation.AddressedAndroidMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ipc.invalidation.AddressedAndroidMessage)
  return false;
#undef DO_
}

void AddressedAndroidMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ipc.invalidation.AddressedAndroidMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string client_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->client_key(), output);
  }

  // optional bytes message = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->message(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:ipc.invalidation.AddressedAndroidMessage)
}

size_t AddressedAndroidMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ipc.invalidation.AddressedAndroidMessage)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string client_key = 1;
    if (has_client_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->client_key());
    }

    // optional bytes message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->message());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddressedAndroidMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AddressedAndroidMessage*>(&from));
}

void AddressedAndroidMessage::MergeFrom(const AddressedAndroidMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ipc.invalidation.AddressedAndroidMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_client_key();
      client_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
  }
}

void AddressedAndroidMessage::CopyFrom(const AddressedAndroidMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipc.invalidation.AddressedAndroidMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddressedAndroidMessage::IsInitialized() const {
  return true;
}

void AddressedAndroidMessage::Swap(AddressedAndroidMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddressedAndroidMessage::InternalSwap(AddressedAndroidMessage* other) {
  client_key_.Swap(&other->client_key_);
  message_.Swap(&other->message_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string AddressedAndroidMessage::GetTypeName() const {
  return "ipc.invalidation.AddressedAndroidMessage";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddressedAndroidMessage

// optional string client_key = 1;
bool AddressedAndroidMessage::has_client_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AddressedAndroidMessage::set_has_client_key() {
  _has_bits_[0] |= 0x00000001u;
}
void AddressedAndroidMessage::clear_has_client_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void AddressedAndroidMessage::clear_client_key() {
  client_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_client_key();
}
const ::std::string& AddressedAndroidMessage::client_key() const {
  // @@protoc_insertion_point(field_get:ipc.invalidation.AddressedAndroidMessage.client_key)
  return client_key_.GetNoArena();
}
void AddressedAndroidMessage::set_client_key(const ::std::string& value) {
  set_has_client_key();
  client_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ipc.invalidation.AddressedAndroidMessage.client_key)
}
#if LANG_CXX11
void AddressedAndroidMessage::set_client_key(::std::string&& value) {
  set_has_client_key();
  client_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ipc.invalidation.AddressedAndroidMessage.client_key)
}
#endif
void AddressedAndroidMessage::set_client_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_client_key();
  client_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ipc.invalidation.AddressedAndroidMessage.client_key)
}
void AddressedAndroidMessage::set_client_key(const char* value, size_t size) {
  set_has_client_key();
  client_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ipc.invalidation.AddressedAndroidMessage.client_key)
}
::std::string* AddressedAndroidMessage::mutable_client_key() {
  set_has_client_key();
  // @@protoc_insertion_point(field_mutable:ipc.invalidation.AddressedAndroidMessage.client_key)
  return client_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddressedAndroidMessage::release_client_key() {
  // @@protoc_insertion_point(field_release:ipc.invalidation.AddressedAndroidMessage.client_key)
  clear_has_client_key();
  return client_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddressedAndroidMessage::set_allocated_client_key(::std::string* client_key) {
  if (client_key != NULL) {
    set_has_client_key();
  } else {
    clear_has_client_key();
  }
  client_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_key);
  // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.AddressedAndroidMessage.client_key)
}

// optional bytes message = 2;
bool AddressedAndroidMessage::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AddressedAndroidMessage::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
void AddressedAndroidMessage::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
void AddressedAndroidMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
const ::std::string& AddressedAndroidMessage::message() const {
  // @@protoc_insertion_point(field_get:ipc.invalidation.AddressedAndroidMessage.message)
  return message_.GetNoArena();
}
void AddressedAndroidMessage::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ipc.invalidation.AddressedAndroidMessage.message)
}
#if LANG_CXX11
void AddressedAndroidMessage::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ipc.invalidation.AddressedAndroidMessage.message)
}
#endif
void AddressedAndroidMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ipc.invalidation.AddressedAndroidMessage.message)
}
void AddressedAndroidMessage::set_message(const void* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ipc.invalidation.AddressedAndroidMessage.message)
}
::std::string* AddressedAndroidMessage::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:ipc.invalidation.AddressedAndroidMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddressedAndroidMessage::release_message() {
  // @@protoc_insertion_point(field_release:ipc.invalidation.AddressedAndroidMessage.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddressedAndroidMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.AddressedAndroidMessage.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddressedAndroidMessageBatch::kAddressedMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddressedAndroidMessageBatch::AddressedAndroidMessageBatch()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_android_5fchannel_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ipc.invalidation.AddressedAndroidMessageBatch)
}
AddressedAndroidMessageBatch::AddressedAndroidMessageBatch(const AddressedAndroidMessageBatch& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      addressed_message_(from.addressed_message_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ipc.invalidation.AddressedAndroidMessageBatch)
}

void AddressedAndroidMessageBatch::SharedCtor() {
  _cached_size_ = 0;
}

AddressedAndroidMessageBatch::~AddressedAndroidMessageBatch() {
  // @@protoc_insertion_point(destructor:ipc.invalidation.AddressedAndroidMessageBatch)
  SharedDtor();
}

void AddressedAndroidMessageBatch::SharedDtor() {
}

void AddressedAndroidMessageBatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AddressedAndroidMessageBatch& AddressedAndroidMessageBatch::default_instance() {
  protobuf_android_5fchannel_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddressedAndroidMessageBatch* AddressedAndroidMessageBatch::New(::google::protobuf::Arena* arena) const {
  AddressedAndroidMessageBatch* n = new AddressedAndroidMessageBatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddressedAndroidMessageBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:ipc.invalidation.AddressedAndroidMessageBatch)
  addressed_message_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddressedAndroidMessageBatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:ipc.invalidation.AddressedAndroidMessageBatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ipc.invalidation.AddressedAndroidMessage addressed_message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_addressed_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ipc.invalidation.AddressedAndroidMessageBatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ipc.invalidation.AddressedAndroidMessageBatch)
  return false;
#undef DO_
}

void AddressedAndroidMessageBatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ipc.invalidation.AddressedAndroidMessageBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ipc.invalidation.AddressedAndroidMessage addressed_message = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->addressed_message_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->addressed_message(static_cast<int>(i)), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:ipc.invalidation.AddressedAndroidMessageBatch)
}

size_t AddressedAndroidMessageBatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ipc.invalidation.AddressedAndroidMessageBatch)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated .ipc.invalidation.AddressedAndroidMessage addressed_message = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->addressed_message_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->addressed_message(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddressedAndroidMessageBatch::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AddressedAndroidMessageBatch*>(&from));
}

void AddressedAndroidMessageBatch::MergeFrom(const AddressedAndroidMessageBatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ipc.invalidation.AddressedAndroidMessageBatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  addressed_message_.MergeFrom(from.addressed_message_);
}

void AddressedAndroidMessageBatch::CopyFrom(const AddressedAndroidMessageBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipc.invalidation.AddressedAndroidMessageBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddressedAndroidMessageBatch::IsInitialized() const {
  return true;
}

void AddressedAndroidMessageBatch::Swap(AddressedAndroidMessageBatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddressedAndroidMessageBatch::InternalSwap(AddressedAndroidMessageBatch* other) {
  addressed_message_.InternalSwap(&other->addressed_message_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string AddressedAndroidMessageBatch::GetTypeName() const {
  return "ipc.invalidation.AddressedAndroidMessageBatch";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddressedAndroidMessageBatch

// repeated .ipc.invalidation.AddressedAndroidMessage addressed_message = 1;
int AddressedAndroidMessageBatch::addressed_message_size() const {
  return addressed_message_.size();
}
void AddressedAndroidMessageBatch::clear_addressed_message() {
  addressed_message_.Clear();
}
const ::ipc::invalidation::AddressedAndroidMessage& AddressedAndroidMessageBatch::addressed_message(int index) const {
  // @@protoc_insertion_point(field_get:ipc.invalidation.AddressedAndroidMessageBatch.addressed_message)
  return addressed_message_.Get(index);
}
::ipc::invalidation::AddressedAndroidMessage* AddressedAndroidMessageBatch::mutable_addressed_message(int index) {
  // @@protoc_insertion_point(field_mutable:ipc.invalidation.AddressedAndroidMessageBatch.addressed_message)
  return addressed_message_.Mutable(index);
}
::ipc::invalidation::AddressedAndroidMessage* AddressedAndroidMessageBatch::add_addressed_message() {
  // @@protoc_insertion_point(field_add:ipc.invalidation.AddressedAndroidMessageBatch.addressed_message)
  return addressed_message_.Add();
}
::google::protobuf::RepeatedPtrField< ::ipc::invalidation::AddressedAndroidMessage >*
AddressedAndroidMessageBatch::mutable_addressed_message() {
  // @@protoc_insertion_point(field_mutable_list:ipc.invalidation.AddressedAndroidMessageBatch.addressed_message)
  return &addressed_message_;
}
const ::google::protobuf::RepeatedPtrField< ::ipc::invalidation::AddressedAndroidMessage >&
AddressedAndroidMessageBatch::addressed_message() const {
  // @@protoc_insertion_point(field_list:ipc.invalidation.AddressedAndroidMessageBatch.addressed_message)
  return addressed_message_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace invalidation
}  // namespace ipc

// @@protoc_insertion_point(global_scope)
