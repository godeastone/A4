// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: disk_cache_proto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "disk_cache_proto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
class ShaderVariableProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShaderVariableProto> {
} _ShaderVariableProto_default_instance_;
class ShaderAttributeProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShaderAttributeProto> {
} _ShaderAttributeProto_default_instance_;
class ShaderUniformProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShaderUniformProto> {
} _ShaderUniformProto_default_instance_;
class ShaderVaryingProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShaderVaryingProto> {
} _ShaderVaryingProto_default_instance_;
class ShaderOutputVariableProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShaderOutputVariableProto> {
} _ShaderOutputVariableProto_default_instance_;
class ShaderInterfaceBlockFieldProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShaderInterfaceBlockFieldProto> {
} _ShaderInterfaceBlockFieldProto_default_instance_;
class ShaderInterfaceBlockProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShaderInterfaceBlockProto> {
} _ShaderInterfaceBlockProto_default_instance_;
class ShaderProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShaderProto> {
} _ShaderProto_default_instance_;
class GpuProgramProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GpuProgramProto> {
} _GpuProgramProto_default_instance_;

namespace protobuf_disk_5fcache_5fproto_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _ShaderVariableProto_default_instance_.Shutdown();
  _ShaderAttributeProto_default_instance_.Shutdown();
  _ShaderUniformProto_default_instance_.Shutdown();
  _ShaderVaryingProto_default_instance_.Shutdown();
  _ShaderOutputVariableProto_default_instance_.Shutdown();
  _ShaderInterfaceBlockFieldProto_default_instance_.Shutdown();
  _ShaderInterfaceBlockProto_default_instance_.Shutdown();
  _ShaderProto_default_instance_.Shutdown();
  _GpuProgramProto_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ShaderVariableProto_default_instance_.DefaultConstruct();
  _ShaderAttributeProto_default_instance_.DefaultConstruct();
  _ShaderUniformProto_default_instance_.DefaultConstruct();
  _ShaderVaryingProto_default_instance_.DefaultConstruct();
  _ShaderOutputVariableProto_default_instance_.DefaultConstruct();
  _ShaderInterfaceBlockFieldProto_default_instance_.DefaultConstruct();
  _ShaderInterfaceBlockProto_default_instance_.DefaultConstruct();
  _ShaderProto_default_instance_.DefaultConstruct();
  _GpuProgramProto_default_instance_.DefaultConstruct();
  _ShaderAttributeProto_default_instance_.get_mutable()->basic_ = const_cast< ::ShaderVariableProto*>(
      ::ShaderVariableProto::internal_default_instance());
  _ShaderUniformProto_default_instance_.get_mutable()->basic_ = const_cast< ::ShaderVariableProto*>(
      ::ShaderVariableProto::internal_default_instance());
  _ShaderVaryingProto_default_instance_.get_mutable()->basic_ = const_cast< ::ShaderVariableProto*>(
      ::ShaderVariableProto::internal_default_instance());
  _ShaderOutputVariableProto_default_instance_.get_mutable()->basic_ = const_cast< ::ShaderVariableProto*>(
      ::ShaderVariableProto::internal_default_instance());
  _ShaderInterfaceBlockFieldProto_default_instance_.get_mutable()->basic_ = const_cast< ::ShaderVariableProto*>(
      ::ShaderVariableProto::internal_default_instance());
  _GpuProgramProto_default_instance_.get_mutable()->vertex_shader_ = const_cast< ::ShaderProto*>(
      ::ShaderProto::internal_default_instance());
  _GpuProgramProto_default_instance_.get_mutable()->fragment_shader_ = const_cast< ::ShaderProto*>(
      ::ShaderProto::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_disk_5fcache_5fproto_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShaderVariableProto::kTypeFieldNumber;
const int ShaderVariableProto::kPrecisionFieldNumber;
const int ShaderVariableProto::kNameFieldNumber;
const int ShaderVariableProto::kMappedNameFieldNumber;
const int ShaderVariableProto::kArraySizeFieldNumber;
const int ShaderVariableProto::kStaticUseFieldNumber;
const int ShaderVariableProto::kFieldsFieldNumber;
const int ShaderVariableProto::kStructNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShaderVariableProto::ShaderVariableProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_disk_5fcache_5fproto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShaderVariableProto)
}
ShaderVariableProto::ShaderVariableProto(const ShaderVariableProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  mapped_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mapped_name()) {
    mapped_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mapped_name_);
  }
  struct_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_struct_name()) {
    struct_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struct_name_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&static_use_) -
    reinterpret_cast<char*>(&type_)) + sizeof(static_use_));
  // @@protoc_insertion_point(copy_constructor:ShaderVariableProto)
}

void ShaderVariableProto::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mapped_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struct_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&static_use_) -
      reinterpret_cast<char*>(&type_)) + sizeof(static_use_));
}

ShaderVariableProto::~ShaderVariableProto() {
  // @@protoc_insertion_point(destructor:ShaderVariableProto)
  SharedDtor();
}

void ShaderVariableProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mapped_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struct_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShaderVariableProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ShaderVariableProto& ShaderVariableProto::default_instance() {
  protobuf_disk_5fcache_5fproto_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShaderVariableProto* ShaderVariableProto::New(::google::protobuf::Arena* arena) const {
  ShaderVariableProto* n = new ShaderVariableProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShaderVariableProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ShaderVariableProto)
  fields_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_mapped_name()) {
      GOOGLE_DCHECK(!mapped_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mapped_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_struct_name()) {
      GOOGLE_DCHECK(!struct_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*struct_name_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 120u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&static_use_) -
        reinterpret_cast<char*>(&type_)) + sizeof(static_use_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShaderVariableProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:ShaderVariableProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 precision = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_precision();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mapped_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mapped_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 array_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_array_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &array_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool static_use = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_static_use();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &static_use_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShaderVariableProto fields = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string struct_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struct_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShaderVariableProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShaderVariableProto)
  return false;
#undef DO_
}

void ShaderVariableProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShaderVariableProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 type = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional uint32 precision = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->precision(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string mapped_name = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mapped_name(), output);
  }

  // optional uint32 array_size = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->array_size(), output);
  }

  // optional bool static_use = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->static_use(), output);
  }

  // repeated .ShaderVariableProto fields = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7, this->fields(static_cast<int>(i)), output);
  }

  // optional string struct_name = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->struct_name(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:ShaderVariableProto)
}

size_t ShaderVariableProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShaderVariableProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated .ShaderVariableProto fields = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fields(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string mapped_name = 4;
    if (has_mapped_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mapped_name());
    }

    // optional string struct_name = 8;
    if (has_struct_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->struct_name());
    }

    // optional uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional uint32 precision = 2;
    if (has_precision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->precision());
    }

    // optional uint32 array_size = 5;
    if (has_array_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->array_size());
    }

    // optional bool static_use = 6;
    if (has_static_use()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShaderVariableProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShaderVariableProto*>(&from));
}

void ShaderVariableProto::MergeFrom(const ShaderVariableProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShaderVariableProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_mapped_name();
      mapped_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mapped_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_struct_name();
      struct_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struct_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000010u) {
      precision_ = from.precision_;
    }
    if (cached_has_bits & 0x00000020u) {
      array_size_ = from.array_size_;
    }
    if (cached_has_bits & 0x00000040u) {
      static_use_ = from.static_use_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShaderVariableProto::CopyFrom(const ShaderVariableProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShaderVariableProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShaderVariableProto::IsInitialized() const {
  return true;
}

void ShaderVariableProto::Swap(ShaderVariableProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShaderVariableProto::InternalSwap(ShaderVariableProto* other) {
  fields_.InternalSwap(&other->fields_);
  name_.Swap(&other->name_);
  mapped_name_.Swap(&other->mapped_name_);
  struct_name_.Swap(&other->struct_name_);
  std::swap(type_, other->type_);
  std::swap(precision_, other->precision_);
  std::swap(array_size_, other->array_size_);
  std::swap(static_use_, other->static_use_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ShaderVariableProto::GetTypeName() const {
  return "ShaderVariableProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShaderVariableProto

// optional uint32 type = 1;
bool ShaderVariableProto::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ShaderVariableProto::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
void ShaderVariableProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void ShaderVariableProto::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 ShaderVariableProto::type() const {
  // @@protoc_insertion_point(field_get:ShaderVariableProto.type)
  return type_;
}
void ShaderVariableProto::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ShaderVariableProto.type)
}

// optional uint32 precision = 2;
bool ShaderVariableProto::has_precision() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ShaderVariableProto::set_has_precision() {
  _has_bits_[0] |= 0x00000010u;
}
void ShaderVariableProto::clear_has_precision() {
  _has_bits_[0] &= ~0x00000010u;
}
void ShaderVariableProto::clear_precision() {
  precision_ = 0u;
  clear_has_precision();
}
::google::protobuf::uint32 ShaderVariableProto::precision() const {
  // @@protoc_insertion_point(field_get:ShaderVariableProto.precision)
  return precision_;
}
void ShaderVariableProto::set_precision(::google::protobuf::uint32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:ShaderVariableProto.precision)
}

// optional string name = 3;
bool ShaderVariableProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShaderVariableProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ShaderVariableProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShaderVariableProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ShaderVariableProto::name() const {
  // @@protoc_insertion_point(field_get:ShaderVariableProto.name)
  return name_.GetNoArena();
}
void ShaderVariableProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ShaderVariableProto.name)
}
#if LANG_CXX11
void ShaderVariableProto::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ShaderVariableProto.name)
}
#endif
void ShaderVariableProto::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ShaderVariableProto.name)
}
void ShaderVariableProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ShaderVariableProto.name)
}
::std::string* ShaderVariableProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ShaderVariableProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShaderVariableProto::release_name() {
  // @@protoc_insertion_point(field_release:ShaderVariableProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShaderVariableProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ShaderVariableProto.name)
}

// optional string mapped_name = 4;
bool ShaderVariableProto::has_mapped_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShaderVariableProto::set_has_mapped_name() {
  _has_bits_[0] |= 0x00000002u;
}
void ShaderVariableProto::clear_has_mapped_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShaderVariableProto::clear_mapped_name() {
  mapped_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mapped_name();
}
const ::std::string& ShaderVariableProto::mapped_name() const {
  // @@protoc_insertion_point(field_get:ShaderVariableProto.mapped_name)
  return mapped_name_.GetNoArena();
}
void ShaderVariableProto::set_mapped_name(const ::std::string& value) {
  set_has_mapped_name();
  mapped_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ShaderVariableProto.mapped_name)
}
#if LANG_CXX11
void ShaderVariableProto::set_mapped_name(::std::string&& value) {
  set_has_mapped_name();
  mapped_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ShaderVariableProto.mapped_name)
}
#endif
void ShaderVariableProto::set_mapped_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mapped_name();
  mapped_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ShaderVariableProto.mapped_name)
}
void ShaderVariableProto::set_mapped_name(const char* value, size_t size) {
  set_has_mapped_name();
  mapped_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ShaderVariableProto.mapped_name)
}
::std::string* ShaderVariableProto::mutable_mapped_name() {
  set_has_mapped_name();
  // @@protoc_insertion_point(field_mutable:ShaderVariableProto.mapped_name)
  return mapped_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShaderVariableProto::release_mapped_name() {
  // @@protoc_insertion_point(field_release:ShaderVariableProto.mapped_name)
  clear_has_mapped_name();
  return mapped_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShaderVariableProto::set_allocated_mapped_name(::std::string* mapped_name) {
  if (mapped_name != NULL) {
    set_has_mapped_name();
  } else {
    clear_has_mapped_name();
  }
  mapped_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mapped_name);
  // @@protoc_insertion_point(field_set_allocated:ShaderVariableProto.mapped_name)
}

// optional uint32 array_size = 5;
bool ShaderVariableProto::has_array_size() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ShaderVariableProto::set_has_array_size() {
  _has_bits_[0] |= 0x00000020u;
}
void ShaderVariableProto::clear_has_array_size() {
  _has_bits_[0] &= ~0x00000020u;
}
void ShaderVariableProto::clear_array_size() {
  array_size_ = 0u;
  clear_has_array_size();
}
::google::protobuf::uint32 ShaderVariableProto::array_size() const {
  // @@protoc_insertion_point(field_get:ShaderVariableProto.array_size)
  return array_size_;
}
void ShaderVariableProto::set_array_size(::google::protobuf::uint32 value) {
  set_has_array_size();
  array_size_ = value;
  // @@protoc_insertion_point(field_set:ShaderVariableProto.array_size)
}

// optional bool static_use = 6;
bool ShaderVariableProto::has_static_use() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ShaderVariableProto::set_has_static_use() {
  _has_bits_[0] |= 0x00000040u;
}
void ShaderVariableProto::clear_has_static_use() {
  _has_bits_[0] &= ~0x00000040u;
}
void ShaderVariableProto::clear_static_use() {
  static_use_ = false;
  clear_has_static_use();
}
bool ShaderVariableProto::static_use() const {
  // @@protoc_insertion_point(field_get:ShaderVariableProto.static_use)
  return static_use_;
}
void ShaderVariableProto::set_static_use(bool value) {
  set_has_static_use();
  static_use_ = value;
  // @@protoc_insertion_point(field_set:ShaderVariableProto.static_use)
}

// repeated .ShaderVariableProto fields = 7;
int ShaderVariableProto::fields_size() const {
  return fields_.size();
}
void ShaderVariableProto::clear_fields() {
  fields_.Clear();
}
const ::ShaderVariableProto& ShaderVariableProto::fields(int index) const {
  // @@protoc_insertion_point(field_get:ShaderVariableProto.fields)
  return fields_.Get(index);
}
::ShaderVariableProto* ShaderVariableProto::mutable_fields(int index) {
  // @@protoc_insertion_point(field_mutable:ShaderVariableProto.fields)
  return fields_.Mutable(index);
}
::ShaderVariableProto* ShaderVariableProto::add_fields() {
  // @@protoc_insertion_point(field_add:ShaderVariableProto.fields)
  return fields_.Add();
}
::google::protobuf::RepeatedPtrField< ::ShaderVariableProto >*
ShaderVariableProto::mutable_fields() {
  // @@protoc_insertion_point(field_mutable_list:ShaderVariableProto.fields)
  return &fields_;
}
const ::google::protobuf::RepeatedPtrField< ::ShaderVariableProto >&
ShaderVariableProto::fields() const {
  // @@protoc_insertion_point(field_list:ShaderVariableProto.fields)
  return fields_;
}

// optional string struct_name = 8;
bool ShaderVariableProto::has_struct_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ShaderVariableProto::set_has_struct_name() {
  _has_bits_[0] |= 0x00000004u;
}
void ShaderVariableProto::clear_has_struct_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void ShaderVariableProto::clear_struct_name() {
  struct_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_struct_name();
}
const ::std::string& ShaderVariableProto::struct_name() const {
  // @@protoc_insertion_point(field_get:ShaderVariableProto.struct_name)
  return struct_name_.GetNoArena();
}
void ShaderVariableProto::set_struct_name(const ::std::string& value) {
  set_has_struct_name();
  struct_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ShaderVariableProto.struct_name)
}
#if LANG_CXX11
void ShaderVariableProto::set_struct_name(::std::string&& value) {
  set_has_struct_name();
  struct_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ShaderVariableProto.struct_name)
}
#endif
void ShaderVariableProto::set_struct_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_struct_name();
  struct_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ShaderVariableProto.struct_name)
}
void ShaderVariableProto::set_struct_name(const char* value, size_t size) {
  set_has_struct_name();
  struct_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ShaderVariableProto.struct_name)
}
::std::string* ShaderVariableProto::mutable_struct_name() {
  set_has_struct_name();
  // @@protoc_insertion_point(field_mutable:ShaderVariableProto.struct_name)
  return struct_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShaderVariableProto::release_struct_name() {
  // @@protoc_insertion_point(field_release:ShaderVariableProto.struct_name)
  clear_has_struct_name();
  return struct_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShaderVariableProto::set_allocated_struct_name(::std::string* struct_name) {
  if (struct_name != NULL) {
    set_has_struct_name();
  } else {
    clear_has_struct_name();
  }
  struct_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struct_name);
  // @@protoc_insertion_point(field_set_allocated:ShaderVariableProto.struct_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShaderAttributeProto::kBasicFieldNumber;
const int ShaderAttributeProto::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShaderAttributeProto::ShaderAttributeProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_disk_5fcache_5fproto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShaderAttributeProto)
}
ShaderAttributeProto::ShaderAttributeProto(const ShaderAttributeProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    basic_ = new ::ShaderVariableProto(*from.basic_);
  } else {
    basic_ = NULL;
  }
  location_ = from.location_;
  // @@protoc_insertion_point(copy_constructor:ShaderAttributeProto)
}

void ShaderAttributeProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&basic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&location_) -
      reinterpret_cast<char*>(&basic_)) + sizeof(location_));
}

ShaderAttributeProto::~ShaderAttributeProto() {
  // @@protoc_insertion_point(destructor:ShaderAttributeProto)
  SharedDtor();
}

void ShaderAttributeProto::SharedDtor() {
  if (this != internal_default_instance()) {
    delete basic_;
  }
}

void ShaderAttributeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ShaderAttributeProto& ShaderAttributeProto::default_instance() {
  protobuf_disk_5fcache_5fproto_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShaderAttributeProto* ShaderAttributeProto::New(::google::protobuf::Arena* arena) const {
  ShaderAttributeProto* n = new ShaderAttributeProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShaderAttributeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ShaderAttributeProto)
  if (has_basic()) {
    GOOGLE_DCHECK(basic_ != NULL);
    basic_->::ShaderVariableProto::Clear();
  }
  location_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShaderAttributeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:ShaderAttributeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ShaderVariableProto basic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_location();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &location_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShaderAttributeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShaderAttributeProto)
  return false;
#undef DO_
}

void ShaderAttributeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShaderAttributeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ShaderVariableProto basic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->basic_, output);
  }

  // optional int32 location = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->location(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:ShaderAttributeProto)
}

size_t ShaderAttributeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShaderAttributeProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional .ShaderVariableProto basic = 1;
    if (has_basic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_);
    }

    // optional int32 location = 2;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->location());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShaderAttributeProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShaderAttributeProto*>(&from));
}

void ShaderAttributeProto::MergeFrom(const ShaderAttributeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShaderAttributeProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_basic()->::ShaderVariableProto::MergeFrom(from.basic());
    }
    if (cached_has_bits & 0x00000002u) {
      location_ = from.location_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShaderAttributeProto::CopyFrom(const ShaderAttributeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShaderAttributeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShaderAttributeProto::IsInitialized() const {
  return true;
}

void ShaderAttributeProto::Swap(ShaderAttributeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShaderAttributeProto::InternalSwap(ShaderAttributeProto* other) {
  std::swap(basic_, other->basic_);
  std::swap(location_, other->location_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ShaderAttributeProto::GetTypeName() const {
  return "ShaderAttributeProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShaderAttributeProto

// optional .ShaderVariableProto basic = 1;
bool ShaderAttributeProto::has_basic() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShaderAttributeProto::set_has_basic() {
  _has_bits_[0] |= 0x00000001u;
}
void ShaderAttributeProto::clear_has_basic() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShaderAttributeProto::clear_basic() {
  if (basic_ != NULL) basic_->::ShaderVariableProto::Clear();
  clear_has_basic();
}
const ::ShaderVariableProto& ShaderAttributeProto::basic() const {
  // @@protoc_insertion_point(field_get:ShaderAttributeProto.basic)
  return basic_ != NULL ? *basic_
                         : *::ShaderVariableProto::internal_default_instance();
}
::ShaderVariableProto* ShaderAttributeProto::mutable_basic() {
  set_has_basic();
  if (basic_ == NULL) {
    basic_ = new ::ShaderVariableProto;
  }
  // @@protoc_insertion_point(field_mutable:ShaderAttributeProto.basic)
  return basic_;
}
::ShaderVariableProto* ShaderAttributeProto::release_basic() {
  // @@protoc_insertion_point(field_release:ShaderAttributeProto.basic)
  clear_has_basic();
  ::ShaderVariableProto* temp = basic_;
  basic_ = NULL;
  return temp;
}
void ShaderAttributeProto::set_allocated_basic(::ShaderVariableProto* basic) {
  delete basic_;
  basic_ = basic;
  if (basic) {
    set_has_basic();
  } else {
    clear_has_basic();
  }
  // @@protoc_insertion_point(field_set_allocated:ShaderAttributeProto.basic)
}

// optional int32 location = 2;
bool ShaderAttributeProto::has_location() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShaderAttributeProto::set_has_location() {
  _has_bits_[0] |= 0x00000002u;
}
void ShaderAttributeProto::clear_has_location() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShaderAttributeProto::clear_location() {
  location_ = 0;
  clear_has_location();
}
::google::protobuf::int32 ShaderAttributeProto::location() const {
  // @@protoc_insertion_point(field_get:ShaderAttributeProto.location)
  return location_;
}
void ShaderAttributeProto::set_location(::google::protobuf::int32 value) {
  set_has_location();
  location_ = value;
  // @@protoc_insertion_point(field_set:ShaderAttributeProto.location)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShaderUniformProto::kBasicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShaderUniformProto::ShaderUniformProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_disk_5fcache_5fproto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShaderUniformProto)
}
ShaderUniformProto::ShaderUniformProto(const ShaderUniformProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    basic_ = new ::ShaderVariableProto(*from.basic_);
  } else {
    basic_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ShaderUniformProto)
}

void ShaderUniformProto::SharedCtor() {
  _cached_size_ = 0;
  basic_ = NULL;
}

ShaderUniformProto::~ShaderUniformProto() {
  // @@protoc_insertion_point(destructor:ShaderUniformProto)
  SharedDtor();
}

void ShaderUniformProto::SharedDtor() {
  if (this != internal_default_instance()) {
    delete basic_;
  }
}

void ShaderUniformProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ShaderUniformProto& ShaderUniformProto::default_instance() {
  protobuf_disk_5fcache_5fproto_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShaderUniformProto* ShaderUniformProto::New(::google::protobuf::Arena* arena) const {
  ShaderUniformProto* n = new ShaderUniformProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShaderUniformProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ShaderUniformProto)
  if (has_basic()) {
    GOOGLE_DCHECK(basic_ != NULL);
    basic_->::ShaderVariableProto::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShaderUniformProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:ShaderUniformProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ShaderVariableProto basic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShaderUniformProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShaderUniformProto)
  return false;
#undef DO_
}

void ShaderUniformProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShaderUniformProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ShaderVariableProto basic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->basic_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:ShaderUniformProto)
}

size_t ShaderUniformProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShaderUniformProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // optional .ShaderVariableProto basic = 1;
  if (has_basic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->basic_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShaderUniformProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShaderUniformProto*>(&from));
}

void ShaderUniformProto::MergeFrom(const ShaderUniformProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShaderUniformProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_basic()) {
    mutable_basic()->::ShaderVariableProto::MergeFrom(from.basic());
  }
}

void ShaderUniformProto::CopyFrom(const ShaderUniformProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShaderUniformProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShaderUniformProto::IsInitialized() const {
  return true;
}

void ShaderUniformProto::Swap(ShaderUniformProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShaderUniformProto::InternalSwap(ShaderUniformProto* other) {
  std::swap(basic_, other->basic_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ShaderUniformProto::GetTypeName() const {
  return "ShaderUniformProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShaderUniformProto

// optional .ShaderVariableProto basic = 1;
bool ShaderUniformProto::has_basic() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShaderUniformProto::set_has_basic() {
  _has_bits_[0] |= 0x00000001u;
}
void ShaderUniformProto::clear_has_basic() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShaderUniformProto::clear_basic() {
  if (basic_ != NULL) basic_->::ShaderVariableProto::Clear();
  clear_has_basic();
}
const ::ShaderVariableProto& ShaderUniformProto::basic() const {
  // @@protoc_insertion_point(field_get:ShaderUniformProto.basic)
  return basic_ != NULL ? *basic_
                         : *::ShaderVariableProto::internal_default_instance();
}
::ShaderVariableProto* ShaderUniformProto::mutable_basic() {
  set_has_basic();
  if (basic_ == NULL) {
    basic_ = new ::ShaderVariableProto;
  }
  // @@protoc_insertion_point(field_mutable:ShaderUniformProto.basic)
  return basic_;
}
::ShaderVariableProto* ShaderUniformProto::release_basic() {
  // @@protoc_insertion_point(field_release:ShaderUniformProto.basic)
  clear_has_basic();
  ::ShaderVariableProto* temp = basic_;
  basic_ = NULL;
  return temp;
}
void ShaderUniformProto::set_allocated_basic(::ShaderVariableProto* basic) {
  delete basic_;
  basic_ = basic;
  if (basic) {
    set_has_basic();
  } else {
    clear_has_basic();
  }
  // @@protoc_insertion_point(field_set_allocated:ShaderUniformProto.basic)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShaderVaryingProto::kBasicFieldNumber;
const int ShaderVaryingProto::kInterpolationFieldNumber;
const int ShaderVaryingProto::kIsInvariantFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShaderVaryingProto::ShaderVaryingProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_disk_5fcache_5fproto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShaderVaryingProto)
}
ShaderVaryingProto::ShaderVaryingProto(const ShaderVaryingProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    basic_ = new ::ShaderVariableProto(*from.basic_);
  } else {
    basic_ = NULL;
  }
  ::memcpy(&interpolation_, &from.interpolation_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_invariant_) -
    reinterpret_cast<char*>(&interpolation_)) + sizeof(is_invariant_));
  // @@protoc_insertion_point(copy_constructor:ShaderVaryingProto)
}

void ShaderVaryingProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&basic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_invariant_) -
      reinterpret_cast<char*>(&basic_)) + sizeof(is_invariant_));
}

ShaderVaryingProto::~ShaderVaryingProto() {
  // @@protoc_insertion_point(destructor:ShaderVaryingProto)
  SharedDtor();
}

void ShaderVaryingProto::SharedDtor() {
  if (this != internal_default_instance()) {
    delete basic_;
  }
}

void ShaderVaryingProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ShaderVaryingProto& ShaderVaryingProto::default_instance() {
  protobuf_disk_5fcache_5fproto_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShaderVaryingProto* ShaderVaryingProto::New(::google::protobuf::Arena* arena) const {
  ShaderVaryingProto* n = new ShaderVaryingProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShaderVaryingProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ShaderVaryingProto)
  if (has_basic()) {
    GOOGLE_DCHECK(basic_ != NULL);
    basic_->::ShaderVariableProto::Clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&interpolation_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_invariant_) -
        reinterpret_cast<char*>(&interpolation_)) + sizeof(is_invariant_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShaderVaryingProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:ShaderVaryingProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ShaderVariableProto basic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 interpolation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_interpolation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &interpolation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_invariant = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_is_invariant();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_invariant_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShaderVaryingProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShaderVaryingProto)
  return false;
#undef DO_
}

void ShaderVaryingProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShaderVaryingProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ShaderVariableProto basic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->basic_, output);
  }

  // optional int32 interpolation = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->interpolation(), output);
  }

  // optional bool is_invariant = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_invariant(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:ShaderVaryingProto)
}

size_t ShaderVaryingProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShaderVaryingProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 7u) {
    // optional .ShaderVariableProto basic = 1;
    if (has_basic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_);
    }

    // optional int32 interpolation = 2;
    if (has_interpolation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->interpolation());
    }

    // optional bool is_invariant = 3;
    if (has_is_invariant()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShaderVaryingProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShaderVaryingProto*>(&from));
}

void ShaderVaryingProto::MergeFrom(const ShaderVaryingProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShaderVaryingProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_basic()->::ShaderVariableProto::MergeFrom(from.basic());
    }
    if (cached_has_bits & 0x00000002u) {
      interpolation_ = from.interpolation_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_invariant_ = from.is_invariant_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShaderVaryingProto::CopyFrom(const ShaderVaryingProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShaderVaryingProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShaderVaryingProto::IsInitialized() const {
  return true;
}

void ShaderVaryingProto::Swap(ShaderVaryingProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShaderVaryingProto::InternalSwap(ShaderVaryingProto* other) {
  std::swap(basic_, other->basic_);
  std::swap(interpolation_, other->interpolation_);
  std::swap(is_invariant_, other->is_invariant_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ShaderVaryingProto::GetTypeName() const {
  return "ShaderVaryingProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShaderVaryingProto

// optional .ShaderVariableProto basic = 1;
bool ShaderVaryingProto::has_basic() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShaderVaryingProto::set_has_basic() {
  _has_bits_[0] |= 0x00000001u;
}
void ShaderVaryingProto::clear_has_basic() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShaderVaryingProto::clear_basic() {
  if (basic_ != NULL) basic_->::ShaderVariableProto::Clear();
  clear_has_basic();
}
const ::ShaderVariableProto& ShaderVaryingProto::basic() const {
  // @@protoc_insertion_point(field_get:ShaderVaryingProto.basic)
  return basic_ != NULL ? *basic_
                         : *::ShaderVariableProto::internal_default_instance();
}
::ShaderVariableProto* ShaderVaryingProto::mutable_basic() {
  set_has_basic();
  if (basic_ == NULL) {
    basic_ = new ::ShaderVariableProto;
  }
  // @@protoc_insertion_point(field_mutable:ShaderVaryingProto.basic)
  return basic_;
}
::ShaderVariableProto* ShaderVaryingProto::release_basic() {
  // @@protoc_insertion_point(field_release:ShaderVaryingProto.basic)
  clear_has_basic();
  ::ShaderVariableProto* temp = basic_;
  basic_ = NULL;
  return temp;
}
void ShaderVaryingProto::set_allocated_basic(::ShaderVariableProto* basic) {
  delete basic_;
  basic_ = basic;
  if (basic) {
    set_has_basic();
  } else {
    clear_has_basic();
  }
  // @@protoc_insertion_point(field_set_allocated:ShaderVaryingProto.basic)
}

// optional int32 interpolation = 2;
bool ShaderVaryingProto::has_interpolation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShaderVaryingProto::set_has_interpolation() {
  _has_bits_[0] |= 0x00000002u;
}
void ShaderVaryingProto::clear_has_interpolation() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShaderVaryingProto::clear_interpolation() {
  interpolation_ = 0;
  clear_has_interpolation();
}
::google::protobuf::int32 ShaderVaryingProto::interpolation() const {
  // @@protoc_insertion_point(field_get:ShaderVaryingProto.interpolation)
  return interpolation_;
}
void ShaderVaryingProto::set_interpolation(::google::protobuf::int32 value) {
  set_has_interpolation();
  interpolation_ = value;
  // @@protoc_insertion_point(field_set:ShaderVaryingProto.interpolation)
}

// optional bool is_invariant = 3;
bool ShaderVaryingProto::has_is_invariant() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ShaderVaryingProto::set_has_is_invariant() {
  _has_bits_[0] |= 0x00000004u;
}
void ShaderVaryingProto::clear_has_is_invariant() {
  _has_bits_[0] &= ~0x00000004u;
}
void ShaderVaryingProto::clear_is_invariant() {
  is_invariant_ = false;
  clear_has_is_invariant();
}
bool ShaderVaryingProto::is_invariant() const {
  // @@protoc_insertion_point(field_get:ShaderVaryingProto.is_invariant)
  return is_invariant_;
}
void ShaderVaryingProto::set_is_invariant(bool value) {
  set_has_is_invariant();
  is_invariant_ = value;
  // @@protoc_insertion_point(field_set:ShaderVaryingProto.is_invariant)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShaderOutputVariableProto::kBasicFieldNumber;
const int ShaderOutputVariableProto::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShaderOutputVariableProto::ShaderOutputVariableProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_disk_5fcache_5fproto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShaderOutputVariableProto)
}
ShaderOutputVariableProto::ShaderOutputVariableProto(const ShaderOutputVariableProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    basic_ = new ::ShaderVariableProto(*from.basic_);
  } else {
    basic_ = NULL;
  }
  location_ = from.location_;
  // @@protoc_insertion_point(copy_constructor:ShaderOutputVariableProto)
}

void ShaderOutputVariableProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&basic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&location_) -
      reinterpret_cast<char*>(&basic_)) + sizeof(location_));
}

ShaderOutputVariableProto::~ShaderOutputVariableProto() {
  // @@protoc_insertion_point(destructor:ShaderOutputVariableProto)
  SharedDtor();
}

void ShaderOutputVariableProto::SharedDtor() {
  if (this != internal_default_instance()) {
    delete basic_;
  }
}

void ShaderOutputVariableProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ShaderOutputVariableProto& ShaderOutputVariableProto::default_instance() {
  protobuf_disk_5fcache_5fproto_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShaderOutputVariableProto* ShaderOutputVariableProto::New(::google::protobuf::Arena* arena) const {
  ShaderOutputVariableProto* n = new ShaderOutputVariableProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShaderOutputVariableProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ShaderOutputVariableProto)
  if (has_basic()) {
    GOOGLE_DCHECK(basic_ != NULL);
    basic_->::ShaderVariableProto::Clear();
  }
  location_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShaderOutputVariableProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:ShaderOutputVariableProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ShaderVariableProto basic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_location();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &location_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShaderOutputVariableProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShaderOutputVariableProto)
  return false;
#undef DO_
}

void ShaderOutputVariableProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShaderOutputVariableProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ShaderVariableProto basic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->basic_, output);
  }

  // optional int32 location = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->location(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:ShaderOutputVariableProto)
}

size_t ShaderOutputVariableProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShaderOutputVariableProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional .ShaderVariableProto basic = 1;
    if (has_basic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_);
    }

    // optional int32 location = 2;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->location());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShaderOutputVariableProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShaderOutputVariableProto*>(&from));
}

void ShaderOutputVariableProto::MergeFrom(const ShaderOutputVariableProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShaderOutputVariableProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_basic()->::ShaderVariableProto::MergeFrom(from.basic());
    }
    if (cached_has_bits & 0x00000002u) {
      location_ = from.location_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShaderOutputVariableProto::CopyFrom(const ShaderOutputVariableProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShaderOutputVariableProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShaderOutputVariableProto::IsInitialized() const {
  return true;
}

void ShaderOutputVariableProto::Swap(ShaderOutputVariableProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShaderOutputVariableProto::InternalSwap(ShaderOutputVariableProto* other) {
  std::swap(basic_, other->basic_);
  std::swap(location_, other->location_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ShaderOutputVariableProto::GetTypeName() const {
  return "ShaderOutputVariableProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShaderOutputVariableProto

// optional .ShaderVariableProto basic = 1;
bool ShaderOutputVariableProto::has_basic() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShaderOutputVariableProto::set_has_basic() {
  _has_bits_[0] |= 0x00000001u;
}
void ShaderOutputVariableProto::clear_has_basic() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShaderOutputVariableProto::clear_basic() {
  if (basic_ != NULL) basic_->::ShaderVariableProto::Clear();
  clear_has_basic();
}
const ::ShaderVariableProto& ShaderOutputVariableProto::basic() const {
  // @@protoc_insertion_point(field_get:ShaderOutputVariableProto.basic)
  return basic_ != NULL ? *basic_
                         : *::ShaderVariableProto::internal_default_instance();
}
::ShaderVariableProto* ShaderOutputVariableProto::mutable_basic() {
  set_has_basic();
  if (basic_ == NULL) {
    basic_ = new ::ShaderVariableProto;
  }
  // @@protoc_insertion_point(field_mutable:ShaderOutputVariableProto.basic)
  return basic_;
}
::ShaderVariableProto* ShaderOutputVariableProto::release_basic() {
  // @@protoc_insertion_point(field_release:ShaderOutputVariableProto.basic)
  clear_has_basic();
  ::ShaderVariableProto* temp = basic_;
  basic_ = NULL;
  return temp;
}
void ShaderOutputVariableProto::set_allocated_basic(::ShaderVariableProto* basic) {
  delete basic_;
  basic_ = basic;
  if (basic) {
    set_has_basic();
  } else {
    clear_has_basic();
  }
  // @@protoc_insertion_point(field_set_allocated:ShaderOutputVariableProto.basic)
}

// optional int32 location = 2;
bool ShaderOutputVariableProto::has_location() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShaderOutputVariableProto::set_has_location() {
  _has_bits_[0] |= 0x00000002u;
}
void ShaderOutputVariableProto::clear_has_location() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShaderOutputVariableProto::clear_location() {
  location_ = 0;
  clear_has_location();
}
::google::protobuf::int32 ShaderOutputVariableProto::location() const {
  // @@protoc_insertion_point(field_get:ShaderOutputVariableProto.location)
  return location_;
}
void ShaderOutputVariableProto::set_location(::google::protobuf::int32 value) {
  set_has_location();
  location_ = value;
  // @@protoc_insertion_point(field_set:ShaderOutputVariableProto.location)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShaderInterfaceBlockFieldProto::kBasicFieldNumber;
const int ShaderInterfaceBlockFieldProto::kIsRowMajorLayoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShaderInterfaceBlockFieldProto::ShaderInterfaceBlockFieldProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_disk_5fcache_5fproto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShaderInterfaceBlockFieldProto)
}
ShaderInterfaceBlockFieldProto::ShaderInterfaceBlockFieldProto(const ShaderInterfaceBlockFieldProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    basic_ = new ::ShaderVariableProto(*from.basic_);
  } else {
    basic_ = NULL;
  }
  is_row_major_layout_ = from.is_row_major_layout_;
  // @@protoc_insertion_point(copy_constructor:ShaderInterfaceBlockFieldProto)
}

void ShaderInterfaceBlockFieldProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&basic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_row_major_layout_) -
      reinterpret_cast<char*>(&basic_)) + sizeof(is_row_major_layout_));
}

ShaderInterfaceBlockFieldProto::~ShaderInterfaceBlockFieldProto() {
  // @@protoc_insertion_point(destructor:ShaderInterfaceBlockFieldProto)
  SharedDtor();
}

void ShaderInterfaceBlockFieldProto::SharedDtor() {
  if (this != internal_default_instance()) {
    delete basic_;
  }
}

void ShaderInterfaceBlockFieldProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ShaderInterfaceBlockFieldProto& ShaderInterfaceBlockFieldProto::default_instance() {
  protobuf_disk_5fcache_5fproto_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShaderInterfaceBlockFieldProto* ShaderInterfaceBlockFieldProto::New(::google::protobuf::Arena* arena) const {
  ShaderInterfaceBlockFieldProto* n = new ShaderInterfaceBlockFieldProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShaderInterfaceBlockFieldProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ShaderInterfaceBlockFieldProto)
  if (has_basic()) {
    GOOGLE_DCHECK(basic_ != NULL);
    basic_->::ShaderVariableProto::Clear();
  }
  is_row_major_layout_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShaderInterfaceBlockFieldProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:ShaderInterfaceBlockFieldProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ShaderVariableProto basic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_row_major_layout = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_is_row_major_layout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_row_major_layout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShaderInterfaceBlockFieldProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShaderInterfaceBlockFieldProto)
  return false;
#undef DO_
}

void ShaderInterfaceBlockFieldProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShaderInterfaceBlockFieldProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ShaderVariableProto basic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->basic_, output);
  }

  // optional bool is_row_major_layout = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_row_major_layout(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:ShaderInterfaceBlockFieldProto)
}

size_t ShaderInterfaceBlockFieldProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShaderInterfaceBlockFieldProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional .ShaderVariableProto basic = 1;
    if (has_basic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_);
    }

    // optional bool is_row_major_layout = 2;
    if (has_is_row_major_layout()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShaderInterfaceBlockFieldProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShaderInterfaceBlockFieldProto*>(&from));
}

void ShaderInterfaceBlockFieldProto::MergeFrom(const ShaderInterfaceBlockFieldProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShaderInterfaceBlockFieldProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_basic()->::ShaderVariableProto::MergeFrom(from.basic());
    }
    if (cached_has_bits & 0x00000002u) {
      is_row_major_layout_ = from.is_row_major_layout_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShaderInterfaceBlockFieldProto::CopyFrom(const ShaderInterfaceBlockFieldProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShaderInterfaceBlockFieldProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShaderInterfaceBlockFieldProto::IsInitialized() const {
  return true;
}

void ShaderInterfaceBlockFieldProto::Swap(ShaderInterfaceBlockFieldProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShaderInterfaceBlockFieldProto::InternalSwap(ShaderInterfaceBlockFieldProto* other) {
  std::swap(basic_, other->basic_);
  std::swap(is_row_major_layout_, other->is_row_major_layout_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ShaderInterfaceBlockFieldProto::GetTypeName() const {
  return "ShaderInterfaceBlockFieldProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShaderInterfaceBlockFieldProto

// optional .ShaderVariableProto basic = 1;
bool ShaderInterfaceBlockFieldProto::has_basic() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShaderInterfaceBlockFieldProto::set_has_basic() {
  _has_bits_[0] |= 0x00000001u;
}
void ShaderInterfaceBlockFieldProto::clear_has_basic() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShaderInterfaceBlockFieldProto::clear_basic() {
  if (basic_ != NULL) basic_->::ShaderVariableProto::Clear();
  clear_has_basic();
}
const ::ShaderVariableProto& ShaderInterfaceBlockFieldProto::basic() const {
  // @@protoc_insertion_point(field_get:ShaderInterfaceBlockFieldProto.basic)
  return basic_ != NULL ? *basic_
                         : *::ShaderVariableProto::internal_default_instance();
}
::ShaderVariableProto* ShaderInterfaceBlockFieldProto::mutable_basic() {
  set_has_basic();
  if (basic_ == NULL) {
    basic_ = new ::ShaderVariableProto;
  }
  // @@protoc_insertion_point(field_mutable:ShaderInterfaceBlockFieldProto.basic)
  return basic_;
}
::ShaderVariableProto* ShaderInterfaceBlockFieldProto::release_basic() {
  // @@protoc_insertion_point(field_release:ShaderInterfaceBlockFieldProto.basic)
  clear_has_basic();
  ::ShaderVariableProto* temp = basic_;
  basic_ = NULL;
  return temp;
}
void ShaderInterfaceBlockFieldProto::set_allocated_basic(::ShaderVariableProto* basic) {
  delete basic_;
  basic_ = basic;
  if (basic) {
    set_has_basic();
  } else {
    clear_has_basic();
  }
  // @@protoc_insertion_point(field_set_allocated:ShaderInterfaceBlockFieldProto.basic)
}

// optional bool is_row_major_layout = 2;
bool ShaderInterfaceBlockFieldProto::has_is_row_major_layout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShaderInterfaceBlockFieldProto::set_has_is_row_major_layout() {
  _has_bits_[0] |= 0x00000002u;
}
void ShaderInterfaceBlockFieldProto::clear_has_is_row_major_layout() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShaderInterfaceBlockFieldProto::clear_is_row_major_layout() {
  is_row_major_layout_ = false;
  clear_has_is_row_major_layout();
}
bool ShaderInterfaceBlockFieldProto::is_row_major_layout() const {
  // @@protoc_insertion_point(field_get:ShaderInterfaceBlockFieldProto.is_row_major_layout)
  return is_row_major_layout_;
}
void ShaderInterfaceBlockFieldProto::set_is_row_major_layout(bool value) {
  set_has_is_row_major_layout();
  is_row_major_layout_ = value;
  // @@protoc_insertion_point(field_set:ShaderInterfaceBlockFieldProto.is_row_major_layout)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShaderInterfaceBlockProto::kNameFieldNumber;
const int ShaderInterfaceBlockProto::kMappedNameFieldNumber;
const int ShaderInterfaceBlockProto::kInstanceNameFieldNumber;
const int ShaderInterfaceBlockProto::kArraySizeFieldNumber;
const int ShaderInterfaceBlockProto::kLayoutFieldNumber;
const int ShaderInterfaceBlockProto::kIsRowMajorLayoutFieldNumber;
const int ShaderInterfaceBlockProto::kStaticUseFieldNumber;
const int ShaderInterfaceBlockProto::kFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShaderInterfaceBlockProto::ShaderInterfaceBlockProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_disk_5fcache_5fproto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShaderInterfaceBlockProto)
}
ShaderInterfaceBlockProto::ShaderInterfaceBlockProto(const ShaderInterfaceBlockProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  mapped_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mapped_name()) {
    mapped_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mapped_name_);
  }
  instance_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_instance_name()) {
    instance_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_name_);
  }
  ::memcpy(&array_size_, &from.array_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&static_use_) -
    reinterpret_cast<char*>(&array_size_)) + sizeof(static_use_));
  // @@protoc_insertion_point(copy_constructor:ShaderInterfaceBlockProto)
}

void ShaderInterfaceBlockProto::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mapped_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&array_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&static_use_) -
      reinterpret_cast<char*>(&array_size_)) + sizeof(static_use_));
}

ShaderInterfaceBlockProto::~ShaderInterfaceBlockProto() {
  // @@protoc_insertion_point(destructor:ShaderInterfaceBlockProto)
  SharedDtor();
}

void ShaderInterfaceBlockProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mapped_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShaderInterfaceBlockProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ShaderInterfaceBlockProto& ShaderInterfaceBlockProto::default_instance() {
  protobuf_disk_5fcache_5fproto_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShaderInterfaceBlockProto* ShaderInterfaceBlockProto::New(::google::protobuf::Arena* arena) const {
  ShaderInterfaceBlockProto* n = new ShaderInterfaceBlockProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShaderInterfaceBlockProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ShaderInterfaceBlockProto)
  fields_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_mapped_name()) {
      GOOGLE_DCHECK(!mapped_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mapped_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_instance_name()) {
      GOOGLE_DCHECK(!instance_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*instance_name_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 120u) {
    ::memset(&array_size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&static_use_) -
        reinterpret_cast<char*>(&array_size_)) + sizeof(static_use_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShaderInterfaceBlockProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:ShaderInterfaceBlockProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mapped_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mapped_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string instance_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 array_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_array_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &array_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 layout = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_layout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &layout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_row_major_layout = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_is_row_major_layout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_row_major_layout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool static_use = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_static_use();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &static_use_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShaderInterfaceBlockFieldProto fields = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShaderInterfaceBlockProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShaderInterfaceBlockProto)
  return false;
#undef DO_
}

void ShaderInterfaceBlockProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShaderInterfaceBlockProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string mapped_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mapped_name(), output);
  }

  // optional string instance_name = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->instance_name(), output);
  }

  // optional uint32 array_size = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->array_size(), output);
  }

  // optional int32 layout = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->layout(), output);
  }

  // optional bool is_row_major_layout = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_row_major_layout(), output);
  }

  // optional bool static_use = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->static_use(), output);
  }

  // repeated .ShaderInterfaceBlockFieldProto fields = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      8, this->fields(static_cast<int>(i)), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:ShaderInterfaceBlockProto)
}

size_t ShaderInterfaceBlockProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShaderInterfaceBlockProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated .ShaderInterfaceBlockFieldProto fields = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fields(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string mapped_name = 2;
    if (has_mapped_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mapped_name());
    }

    // optional string instance_name = 3;
    if (has_instance_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->instance_name());
    }

    // optional uint32 array_size = 4;
    if (has_array_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->array_size());
    }

    // optional int32 layout = 5;
    if (has_layout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->layout());
    }

    // optional bool is_row_major_layout = 6;
    if (has_is_row_major_layout()) {
      total_size += 1 + 1;
    }

    // optional bool static_use = 7;
    if (has_static_use()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShaderInterfaceBlockProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShaderInterfaceBlockProto*>(&from));
}

void ShaderInterfaceBlockProto::MergeFrom(const ShaderInterfaceBlockProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShaderInterfaceBlockProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_mapped_name();
      mapped_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mapped_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_instance_name();
      instance_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      array_size_ = from.array_size_;
    }
    if (cached_has_bits & 0x00000010u) {
      layout_ = from.layout_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_row_major_layout_ = from.is_row_major_layout_;
    }
    if (cached_has_bits & 0x00000040u) {
      static_use_ = from.static_use_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShaderInterfaceBlockProto::CopyFrom(const ShaderInterfaceBlockProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShaderInterfaceBlockProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShaderInterfaceBlockProto::IsInitialized() const {
  return true;
}

void ShaderInterfaceBlockProto::Swap(ShaderInterfaceBlockProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShaderInterfaceBlockProto::InternalSwap(ShaderInterfaceBlockProto* other) {
  fields_.InternalSwap(&other->fields_);
  name_.Swap(&other->name_);
  mapped_name_.Swap(&other->mapped_name_);
  instance_name_.Swap(&other->instance_name_);
  std::swap(array_size_, other->array_size_);
  std::swap(layout_, other->layout_);
  std::swap(is_row_major_layout_, other->is_row_major_layout_);
  std::swap(static_use_, other->static_use_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ShaderInterfaceBlockProto::GetTypeName() const {
  return "ShaderInterfaceBlockProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShaderInterfaceBlockProto

// optional string name = 1;
bool ShaderInterfaceBlockProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShaderInterfaceBlockProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ShaderInterfaceBlockProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShaderInterfaceBlockProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ShaderInterfaceBlockProto::name() const {
  // @@protoc_insertion_point(field_get:ShaderInterfaceBlockProto.name)
  return name_.GetNoArena();
}
void ShaderInterfaceBlockProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ShaderInterfaceBlockProto.name)
}
#if LANG_CXX11
void ShaderInterfaceBlockProto::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ShaderInterfaceBlockProto.name)
}
#endif
void ShaderInterfaceBlockProto::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ShaderInterfaceBlockProto.name)
}
void ShaderInterfaceBlockProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ShaderInterfaceBlockProto.name)
}
::std::string* ShaderInterfaceBlockProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ShaderInterfaceBlockProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShaderInterfaceBlockProto::release_name() {
  // @@protoc_insertion_point(field_release:ShaderInterfaceBlockProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShaderInterfaceBlockProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ShaderInterfaceBlockProto.name)
}

// optional string mapped_name = 2;
bool ShaderInterfaceBlockProto::has_mapped_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShaderInterfaceBlockProto::set_has_mapped_name() {
  _has_bits_[0] |= 0x00000002u;
}
void ShaderInterfaceBlockProto::clear_has_mapped_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShaderInterfaceBlockProto::clear_mapped_name() {
  mapped_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mapped_name();
}
const ::std::string& ShaderInterfaceBlockProto::mapped_name() const {
  // @@protoc_insertion_point(field_get:ShaderInterfaceBlockProto.mapped_name)
  return mapped_name_.GetNoArena();
}
void ShaderInterfaceBlockProto::set_mapped_name(const ::std::string& value) {
  set_has_mapped_name();
  mapped_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ShaderInterfaceBlockProto.mapped_name)
}
#if LANG_CXX11
void ShaderInterfaceBlockProto::set_mapped_name(::std::string&& value) {
  set_has_mapped_name();
  mapped_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ShaderInterfaceBlockProto.mapped_name)
}
#endif
void ShaderInterfaceBlockProto::set_mapped_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mapped_name();
  mapped_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ShaderInterfaceBlockProto.mapped_name)
}
void ShaderInterfaceBlockProto::set_mapped_name(const char* value, size_t size) {
  set_has_mapped_name();
  mapped_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ShaderInterfaceBlockProto.mapped_name)
}
::std::string* ShaderInterfaceBlockProto::mutable_mapped_name() {
  set_has_mapped_name();
  // @@protoc_insertion_point(field_mutable:ShaderInterfaceBlockProto.mapped_name)
  return mapped_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShaderInterfaceBlockProto::release_mapped_name() {
  // @@protoc_insertion_point(field_release:ShaderInterfaceBlockProto.mapped_name)
  clear_has_mapped_name();
  return mapped_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShaderInterfaceBlockProto::set_allocated_mapped_name(::std::string* mapped_name) {
  if (mapped_name != NULL) {
    set_has_mapped_name();
  } else {
    clear_has_mapped_name();
  }
  mapped_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mapped_name);
  // @@protoc_insertion_point(field_set_allocated:ShaderInterfaceBlockProto.mapped_name)
}

// optional string instance_name = 3;
bool ShaderInterfaceBlockProto::has_instance_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ShaderInterfaceBlockProto::set_has_instance_name() {
  _has_bits_[0] |= 0x00000004u;
}
void ShaderInterfaceBlockProto::clear_has_instance_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void ShaderInterfaceBlockProto::clear_instance_name() {
  instance_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instance_name();
}
const ::std::string& ShaderInterfaceBlockProto::instance_name() const {
  // @@protoc_insertion_point(field_get:ShaderInterfaceBlockProto.instance_name)
  return instance_name_.GetNoArena();
}
void ShaderInterfaceBlockProto::set_instance_name(const ::std::string& value) {
  set_has_instance_name();
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ShaderInterfaceBlockProto.instance_name)
}
#if LANG_CXX11
void ShaderInterfaceBlockProto::set_instance_name(::std::string&& value) {
  set_has_instance_name();
  instance_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ShaderInterfaceBlockProto.instance_name)
}
#endif
void ShaderInterfaceBlockProto::set_instance_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_instance_name();
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ShaderInterfaceBlockProto.instance_name)
}
void ShaderInterfaceBlockProto::set_instance_name(const char* value, size_t size) {
  set_has_instance_name();
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ShaderInterfaceBlockProto.instance_name)
}
::std::string* ShaderInterfaceBlockProto::mutable_instance_name() {
  set_has_instance_name();
  // @@protoc_insertion_point(field_mutable:ShaderInterfaceBlockProto.instance_name)
  return instance_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShaderInterfaceBlockProto::release_instance_name() {
  // @@protoc_insertion_point(field_release:ShaderInterfaceBlockProto.instance_name)
  clear_has_instance_name();
  return instance_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShaderInterfaceBlockProto::set_allocated_instance_name(::std::string* instance_name) {
  if (instance_name != NULL) {
    set_has_instance_name();
  } else {
    clear_has_instance_name();
  }
  instance_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_name);
  // @@protoc_insertion_point(field_set_allocated:ShaderInterfaceBlockProto.instance_name)
}

// optional uint32 array_size = 4;
bool ShaderInterfaceBlockProto::has_array_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ShaderInterfaceBlockProto::set_has_array_size() {
  _has_bits_[0] |= 0x00000008u;
}
void ShaderInterfaceBlockProto::clear_has_array_size() {
  _has_bits_[0] &= ~0x00000008u;
}
void ShaderInterfaceBlockProto::clear_array_size() {
  array_size_ = 0u;
  clear_has_array_size();
}
::google::protobuf::uint32 ShaderInterfaceBlockProto::array_size() const {
  // @@protoc_insertion_point(field_get:ShaderInterfaceBlockProto.array_size)
  return array_size_;
}
void ShaderInterfaceBlockProto::set_array_size(::google::protobuf::uint32 value) {
  set_has_array_size();
  array_size_ = value;
  // @@protoc_insertion_point(field_set:ShaderInterfaceBlockProto.array_size)
}

// optional int32 layout = 5;
bool ShaderInterfaceBlockProto::has_layout() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ShaderInterfaceBlockProto::set_has_layout() {
  _has_bits_[0] |= 0x00000010u;
}
void ShaderInterfaceBlockProto::clear_has_layout() {
  _has_bits_[0] &= ~0x00000010u;
}
void ShaderInterfaceBlockProto::clear_layout() {
  layout_ = 0;
  clear_has_layout();
}
::google::protobuf::int32 ShaderInterfaceBlockProto::layout() const {
  // @@protoc_insertion_point(field_get:ShaderInterfaceBlockProto.layout)
  return layout_;
}
void ShaderInterfaceBlockProto::set_layout(::google::protobuf::int32 value) {
  set_has_layout();
  layout_ = value;
  // @@protoc_insertion_point(field_set:ShaderInterfaceBlockProto.layout)
}

// optional bool is_row_major_layout = 6;
bool ShaderInterfaceBlockProto::has_is_row_major_layout() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ShaderInterfaceBlockProto::set_has_is_row_major_layout() {
  _has_bits_[0] |= 0x00000020u;
}
void ShaderInterfaceBlockProto::clear_has_is_row_major_layout() {
  _has_bits_[0] &= ~0x00000020u;
}
void ShaderInterfaceBlockProto::clear_is_row_major_layout() {
  is_row_major_layout_ = false;
  clear_has_is_row_major_layout();
}
bool ShaderInterfaceBlockProto::is_row_major_layout() const {
  // @@protoc_insertion_point(field_get:ShaderInterfaceBlockProto.is_row_major_layout)
  return is_row_major_layout_;
}
void ShaderInterfaceBlockProto::set_is_row_major_layout(bool value) {
  set_has_is_row_major_layout();
  is_row_major_layout_ = value;
  // @@protoc_insertion_point(field_set:ShaderInterfaceBlockProto.is_row_major_layout)
}

// optional bool static_use = 7;
bool ShaderInterfaceBlockProto::has_static_use() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ShaderInterfaceBlockProto::set_has_static_use() {
  _has_bits_[0] |= 0x00000040u;
}
void ShaderInterfaceBlockProto::clear_has_static_use() {
  _has_bits_[0] &= ~0x00000040u;
}
void ShaderInterfaceBlockProto::clear_static_use() {
  static_use_ = false;
  clear_has_static_use();
}
bool ShaderInterfaceBlockProto::static_use() const {
  // @@protoc_insertion_point(field_get:ShaderInterfaceBlockProto.static_use)
  return static_use_;
}
void ShaderInterfaceBlockProto::set_static_use(bool value) {
  set_has_static_use();
  static_use_ = value;
  // @@protoc_insertion_point(field_set:ShaderInterfaceBlockProto.static_use)
}

// repeated .ShaderInterfaceBlockFieldProto fields = 8;
int ShaderInterfaceBlockProto::fields_size() const {
  return fields_.size();
}
void ShaderInterfaceBlockProto::clear_fields() {
  fields_.Clear();
}
const ::ShaderInterfaceBlockFieldProto& ShaderInterfaceBlockProto::fields(int index) const {
  // @@protoc_insertion_point(field_get:ShaderInterfaceBlockProto.fields)
  return fields_.Get(index);
}
::ShaderInterfaceBlockFieldProto* ShaderInterfaceBlockProto::mutable_fields(int index) {
  // @@protoc_insertion_point(field_mutable:ShaderInterfaceBlockProto.fields)
  return fields_.Mutable(index);
}
::ShaderInterfaceBlockFieldProto* ShaderInterfaceBlockProto::add_fields() {
  // @@protoc_insertion_point(field_add:ShaderInterfaceBlockProto.fields)
  return fields_.Add();
}
::google::protobuf::RepeatedPtrField< ::ShaderInterfaceBlockFieldProto >*
ShaderInterfaceBlockProto::mutable_fields() {
  // @@protoc_insertion_point(field_mutable_list:ShaderInterfaceBlockProto.fields)
  return &fields_;
}
const ::google::protobuf::RepeatedPtrField< ::ShaderInterfaceBlockFieldProto >&
ShaderInterfaceBlockProto::fields() const {
  // @@protoc_insertion_point(field_list:ShaderInterfaceBlockProto.fields)
  return fields_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShaderProto::kShaFieldNumber;
const int ShaderProto::kAttribsFieldNumber;
const int ShaderProto::kUniformsFieldNumber;
const int ShaderProto::kVaryingsFieldNumber;
const int ShaderProto::kOutputVariablesFieldNumber;
const int ShaderProto::kInterfaceBlocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShaderProto::ShaderProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_disk_5fcache_5fproto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShaderProto)
}
ShaderProto::ShaderProto(const ShaderProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      attribs_(from.attribs_),
      uniforms_(from.uniforms_),
      varyings_(from.varyings_),
      output_variables_(from.output_variables_),
      interface_blocks_(from.interface_blocks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha()) {
    sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_);
  }
  // @@protoc_insertion_point(copy_constructor:ShaderProto)
}

void ShaderProto::SharedCtor() {
  _cached_size_ = 0;
  sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ShaderProto::~ShaderProto() {
  // @@protoc_insertion_point(destructor:ShaderProto)
  SharedDtor();
}

void ShaderProto::SharedDtor() {
  sha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShaderProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ShaderProto& ShaderProto::default_instance() {
  protobuf_disk_5fcache_5fproto_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShaderProto* ShaderProto::New(::google::protobuf::Arena* arena) const {
  ShaderProto* n = new ShaderProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShaderProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ShaderProto)
  attribs_.Clear();
  uniforms_.Clear();
  varyings_.Clear();
  output_variables_.Clear();
  interface_blocks_.Clear();
  if (has_sha()) {
    GOOGLE_DCHECK(!sha_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*sha_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShaderProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:ShaderProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sha = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShaderAttributeProto attribs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attribs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShaderUniformProto uniforms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_uniforms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShaderVaryingProto varyings = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_varyings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShaderOutputVariableProto output_variables = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_output_variables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShaderInterfaceBlockProto interface_blocks = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_interface_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShaderProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShaderProto)
  return false;
#undef DO_
}

void ShaderProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShaderProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sha = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sha(), output);
  }

  // repeated .ShaderAttributeProto attribs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attribs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->attribs(static_cast<int>(i)), output);
  }

  // repeated .ShaderUniformProto uniforms = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uniforms_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->uniforms(static_cast<int>(i)), output);
  }

  // repeated .ShaderVaryingProto varyings = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->varyings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->varyings(static_cast<int>(i)), output);
  }

  // repeated .ShaderOutputVariableProto output_variables = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_variables_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->output_variables(static_cast<int>(i)), output);
  }

  // repeated .ShaderInterfaceBlockProto interface_blocks = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interface_blocks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->interface_blocks(static_cast<int>(i)), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:ShaderProto)
}

size_t ShaderProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShaderProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated .ShaderAttributeProto attribs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->attribs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attribs(static_cast<int>(i)));
    }
  }

  // repeated .ShaderUniformProto uniforms = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->uniforms_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uniforms(static_cast<int>(i)));
    }
  }

  // repeated .ShaderVaryingProto varyings = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->varyings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->varyings(static_cast<int>(i)));
    }
  }

  // repeated .ShaderOutputVariableProto output_variables = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->output_variables_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->output_variables(static_cast<int>(i)));
    }
  }

  // repeated .ShaderInterfaceBlockProto interface_blocks = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->interface_blocks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->interface_blocks(static_cast<int>(i)));
    }
  }

  // optional bytes sha = 1;
  if (has_sha()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sha());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShaderProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShaderProto*>(&from));
}

void ShaderProto::MergeFrom(const ShaderProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShaderProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attribs_.MergeFrom(from.attribs_);
  uniforms_.MergeFrom(from.uniforms_);
  varyings_.MergeFrom(from.varyings_);
  output_variables_.MergeFrom(from.output_variables_);
  interface_blocks_.MergeFrom(from.interface_blocks_);
  if (from.has_sha()) {
    set_has_sha();
    sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_);
  }
}

void ShaderProto::CopyFrom(const ShaderProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShaderProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShaderProto::IsInitialized() const {
  return true;
}

void ShaderProto::Swap(ShaderProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShaderProto::InternalSwap(ShaderProto* other) {
  attribs_.InternalSwap(&other->attribs_);
  uniforms_.InternalSwap(&other->uniforms_);
  varyings_.InternalSwap(&other->varyings_);
  output_variables_.InternalSwap(&other->output_variables_);
  interface_blocks_.InternalSwap(&other->interface_blocks_);
  sha_.Swap(&other->sha_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ShaderProto::GetTypeName() const {
  return "ShaderProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShaderProto

// optional bytes sha = 1;
bool ShaderProto::has_sha() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShaderProto::set_has_sha() {
  _has_bits_[0] |= 0x00000001u;
}
void ShaderProto::clear_has_sha() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShaderProto::clear_sha() {
  sha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sha();
}
const ::std::string& ShaderProto::sha() const {
  // @@protoc_insertion_point(field_get:ShaderProto.sha)
  return sha_.GetNoArena();
}
void ShaderProto::set_sha(const ::std::string& value) {
  set_has_sha();
  sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ShaderProto.sha)
}
#if LANG_CXX11
void ShaderProto::set_sha(::std::string&& value) {
  set_has_sha();
  sha_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ShaderProto.sha)
}
#endif
void ShaderProto::set_sha(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sha();
  sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ShaderProto.sha)
}
void ShaderProto::set_sha(const void* value, size_t size) {
  set_has_sha();
  sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ShaderProto.sha)
}
::std::string* ShaderProto::mutable_sha() {
  set_has_sha();
  // @@protoc_insertion_point(field_mutable:ShaderProto.sha)
  return sha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShaderProto::release_sha() {
  // @@protoc_insertion_point(field_release:ShaderProto.sha)
  clear_has_sha();
  return sha_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShaderProto::set_allocated_sha(::std::string* sha) {
  if (sha != NULL) {
    set_has_sha();
  } else {
    clear_has_sha();
  }
  sha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha);
  // @@protoc_insertion_point(field_set_allocated:ShaderProto.sha)
}

// repeated .ShaderAttributeProto attribs = 2;
int ShaderProto::attribs_size() const {
  return attribs_.size();
}
void ShaderProto::clear_attribs() {
  attribs_.Clear();
}
const ::ShaderAttributeProto& ShaderProto::attribs(int index) const {
  // @@protoc_insertion_point(field_get:ShaderProto.attribs)
  return attribs_.Get(index);
}
::ShaderAttributeProto* ShaderProto::mutable_attribs(int index) {
  // @@protoc_insertion_point(field_mutable:ShaderProto.attribs)
  return attribs_.Mutable(index);
}
::ShaderAttributeProto* ShaderProto::add_attribs() {
  // @@protoc_insertion_point(field_add:ShaderProto.attribs)
  return attribs_.Add();
}
::google::protobuf::RepeatedPtrField< ::ShaderAttributeProto >*
ShaderProto::mutable_attribs() {
  // @@protoc_insertion_point(field_mutable_list:ShaderProto.attribs)
  return &attribs_;
}
const ::google::protobuf::RepeatedPtrField< ::ShaderAttributeProto >&
ShaderProto::attribs() const {
  // @@protoc_insertion_point(field_list:ShaderProto.attribs)
  return attribs_;
}

// repeated .ShaderUniformProto uniforms = 3;
int ShaderProto::uniforms_size() const {
  return uniforms_.size();
}
void ShaderProto::clear_uniforms() {
  uniforms_.Clear();
}
const ::ShaderUniformProto& ShaderProto::uniforms(int index) const {
  // @@protoc_insertion_point(field_get:ShaderProto.uniforms)
  return uniforms_.Get(index);
}
::ShaderUniformProto* ShaderProto::mutable_uniforms(int index) {
  // @@protoc_insertion_point(field_mutable:ShaderProto.uniforms)
  return uniforms_.Mutable(index);
}
::ShaderUniformProto* ShaderProto::add_uniforms() {
  // @@protoc_insertion_point(field_add:ShaderProto.uniforms)
  return uniforms_.Add();
}
::google::protobuf::RepeatedPtrField< ::ShaderUniformProto >*
ShaderProto::mutable_uniforms() {
  // @@protoc_insertion_point(field_mutable_list:ShaderProto.uniforms)
  return &uniforms_;
}
const ::google::protobuf::RepeatedPtrField< ::ShaderUniformProto >&
ShaderProto::uniforms() const {
  // @@protoc_insertion_point(field_list:ShaderProto.uniforms)
  return uniforms_;
}

// repeated .ShaderVaryingProto varyings = 4;
int ShaderProto::varyings_size() const {
  return varyings_.size();
}
void ShaderProto::clear_varyings() {
  varyings_.Clear();
}
const ::ShaderVaryingProto& ShaderProto::varyings(int index) const {
  // @@protoc_insertion_point(field_get:ShaderProto.varyings)
  return varyings_.Get(index);
}
::ShaderVaryingProto* ShaderProto::mutable_varyings(int index) {
  // @@protoc_insertion_point(field_mutable:ShaderProto.varyings)
  return varyings_.Mutable(index);
}
::ShaderVaryingProto* ShaderProto::add_varyings() {
  // @@protoc_insertion_point(field_add:ShaderProto.varyings)
  return varyings_.Add();
}
::google::protobuf::RepeatedPtrField< ::ShaderVaryingProto >*
ShaderProto::mutable_varyings() {
  // @@protoc_insertion_point(field_mutable_list:ShaderProto.varyings)
  return &varyings_;
}
const ::google::protobuf::RepeatedPtrField< ::ShaderVaryingProto >&
ShaderProto::varyings() const {
  // @@protoc_insertion_point(field_list:ShaderProto.varyings)
  return varyings_;
}

// repeated .ShaderOutputVariableProto output_variables = 5;
int ShaderProto::output_variables_size() const {
  return output_variables_.size();
}
void ShaderProto::clear_output_variables() {
  output_variables_.Clear();
}
const ::ShaderOutputVariableProto& ShaderProto::output_variables(int index) const {
  // @@protoc_insertion_point(field_get:ShaderProto.output_variables)
  return output_variables_.Get(index);
}
::ShaderOutputVariableProto* ShaderProto::mutable_output_variables(int index) {
  // @@protoc_insertion_point(field_mutable:ShaderProto.output_variables)
  return output_variables_.Mutable(index);
}
::ShaderOutputVariableProto* ShaderProto::add_output_variables() {
  // @@protoc_insertion_point(field_add:ShaderProto.output_variables)
  return output_variables_.Add();
}
::google::protobuf::RepeatedPtrField< ::ShaderOutputVariableProto >*
ShaderProto::mutable_output_variables() {
  // @@protoc_insertion_point(field_mutable_list:ShaderProto.output_variables)
  return &output_variables_;
}
const ::google::protobuf::RepeatedPtrField< ::ShaderOutputVariableProto >&
ShaderProto::output_variables() const {
  // @@protoc_insertion_point(field_list:ShaderProto.output_variables)
  return output_variables_;
}

// repeated .ShaderInterfaceBlockProto interface_blocks = 6;
int ShaderProto::interface_blocks_size() const {
  return interface_blocks_.size();
}
void ShaderProto::clear_interface_blocks() {
  interface_blocks_.Clear();
}
const ::ShaderInterfaceBlockProto& ShaderProto::interface_blocks(int index) const {
  // @@protoc_insertion_point(field_get:ShaderProto.interface_blocks)
  return interface_blocks_.Get(index);
}
::ShaderInterfaceBlockProto* ShaderProto::mutable_interface_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:ShaderProto.interface_blocks)
  return interface_blocks_.Mutable(index);
}
::ShaderInterfaceBlockProto* ShaderProto::add_interface_blocks() {
  // @@protoc_insertion_point(field_add:ShaderProto.interface_blocks)
  return interface_blocks_.Add();
}
::google::protobuf::RepeatedPtrField< ::ShaderInterfaceBlockProto >*
ShaderProto::mutable_interface_blocks() {
  // @@protoc_insertion_point(field_mutable_list:ShaderProto.interface_blocks)
  return &interface_blocks_;
}
const ::google::protobuf::RepeatedPtrField< ::ShaderInterfaceBlockProto >&
ShaderProto::interface_blocks() const {
  // @@protoc_insertion_point(field_list:ShaderProto.interface_blocks)
  return interface_blocks_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GpuProgramProto::kShaFieldNumber;
const int GpuProgramProto::kFormatFieldNumber;
const int GpuProgramProto::kProgramFieldNumber;
const int GpuProgramProto::kProgramIsCompressedFieldNumber;
const int GpuProgramProto::kProgramDecompressedLengthFieldNumber;
const int GpuProgramProto::kVertexShaderFieldNumber;
const int GpuProgramProto::kFragmentShaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GpuProgramProto::GpuProgramProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_disk_5fcache_5fproto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GpuProgramProto)
}
GpuProgramProto::GpuProgramProto(const GpuProgramProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha()) {
    sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_);
  }
  program_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_program()) {
    program_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.program_);
  }
  if (from.has_vertex_shader()) {
    vertex_shader_ = new ::ShaderProto(*from.vertex_shader_);
  } else {
    vertex_shader_ = NULL;
  }
  if (from.has_fragment_shader()) {
    fragment_shader_ = new ::ShaderProto(*from.fragment_shader_);
  } else {
    fragment_shader_ = NULL;
  }
  ::memcpy(&format_, &from.format_,
    static_cast<size_t>(reinterpret_cast<char*>(&program_decompressed_length_) -
    reinterpret_cast<char*>(&format_)) + sizeof(program_decompressed_length_));
  // @@protoc_insertion_point(copy_constructor:GpuProgramProto)
}

void GpuProgramProto::SharedCtor() {
  _cached_size_ = 0;
  sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&vertex_shader_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&program_decompressed_length_) -
      reinterpret_cast<char*>(&vertex_shader_)) + sizeof(program_decompressed_length_));
}

GpuProgramProto::~GpuProgramProto() {
  // @@protoc_insertion_point(destructor:GpuProgramProto)
  SharedDtor();
}

void GpuProgramProto::SharedDtor() {
  sha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete vertex_shader_;
  }
  if (this != internal_default_instance()) {
    delete fragment_shader_;
  }
}

void GpuProgramProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GpuProgramProto& GpuProgramProto::default_instance() {
  protobuf_disk_5fcache_5fproto_2eproto::InitDefaults();
  return *internal_default_instance();
}

GpuProgramProto* GpuProgramProto::New(::google::protobuf::Arena* arena) const {
  GpuProgramProto* n = new GpuProgramProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GpuProgramProto::Clear() {
// @@protoc_insertion_point(message_clear_start:GpuProgramProto)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_sha()) {
      GOOGLE_DCHECK(!sha_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sha_.UnsafeRawStringPointer())->clear();
    }
    if (has_program()) {
      GOOGLE_DCHECK(!program_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*program_.UnsafeRawStringPointer())->clear();
    }
    if (has_vertex_shader()) {
      GOOGLE_DCHECK(vertex_shader_ != NULL);
      vertex_shader_->::ShaderProto::Clear();
    }
    if (has_fragment_shader()) {
      GOOGLE_DCHECK(fragment_shader_ != NULL);
      fragment_shader_->::ShaderProto::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 112u) {
    ::memset(&format_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&program_decompressed_length_) -
        reinterpret_cast<char*>(&format_)) + sizeof(program_decompressed_length_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GpuProgramProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:GpuProgramProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sha = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 format = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_format();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &format_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes program = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_program()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ShaderProto vertex_shader = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vertex_shader()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ShaderProto fragment_shader = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fragment_shader()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool program_is_compressed = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_program_is_compressed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &program_is_compressed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 program_decompressed_length = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_program_decompressed_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &program_decompressed_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GpuProgramProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GpuProgramProto)
  return false;
#undef DO_
}

void GpuProgramProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GpuProgramProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sha = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sha(), output);
  }

  // optional uint32 format = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->format(), output);
  }

  // optional bytes program = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->program(), output);
  }

  // optional .ShaderProto vertex_shader = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, *this->vertex_shader_, output);
  }

  // optional .ShaderProto fragment_shader = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, *this->fragment_shader_, output);
  }

  // optional bool program_is_compressed = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->program_is_compressed(), output);
  }

  // optional uint32 program_decompressed_length = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->program_decompressed_length(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:GpuProgramProto)
}

size_t GpuProgramProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GpuProgramProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 127u) {
    // optional bytes sha = 1;
    if (has_sha()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha());
    }

    // optional bytes program = 3;
    if (has_program()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->program());
    }

    // optional .ShaderProto vertex_shader = 4;
    if (has_vertex_shader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->vertex_shader_);
    }

    // optional .ShaderProto fragment_shader = 5;
    if (has_fragment_shader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->fragment_shader_);
    }

    // optional uint32 format = 2;
    if (has_format()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->format());
    }

    // optional bool program_is_compressed = 6;
    if (has_program_is_compressed()) {
      total_size += 1 + 1;
    }

    // optional uint32 program_decompressed_length = 7;
    if (has_program_decompressed_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->program_decompressed_length());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GpuProgramProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GpuProgramProto*>(&from));
}

void GpuProgramProto::MergeFrom(const GpuProgramProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GpuProgramProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sha();
      sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_program();
      program_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.program_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_vertex_shader()->::ShaderProto::MergeFrom(from.vertex_shader());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_fragment_shader()->::ShaderProto::MergeFrom(from.fragment_shader());
    }
    if (cached_has_bits & 0x00000010u) {
      format_ = from.format_;
    }
    if (cached_has_bits & 0x00000020u) {
      program_is_compressed_ = from.program_is_compressed_;
    }
    if (cached_has_bits & 0x00000040u) {
      program_decompressed_length_ = from.program_decompressed_length_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GpuProgramProto::CopyFrom(const GpuProgramProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GpuProgramProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpuProgramProto::IsInitialized() const {
  return true;
}

void GpuProgramProto::Swap(GpuProgramProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GpuProgramProto::InternalSwap(GpuProgramProto* other) {
  sha_.Swap(&other->sha_);
  program_.Swap(&other->program_);
  std::swap(vertex_shader_, other->vertex_shader_);
  std::swap(fragment_shader_, other->fragment_shader_);
  std::swap(format_, other->format_);
  std::swap(program_is_compressed_, other->program_is_compressed_);
  std::swap(program_decompressed_length_, other->program_decompressed_length_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string GpuProgramProto::GetTypeName() const {
  return "GpuProgramProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GpuProgramProto

// optional bytes sha = 1;
bool GpuProgramProto::has_sha() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GpuProgramProto::set_has_sha() {
  _has_bits_[0] |= 0x00000001u;
}
void GpuProgramProto::clear_has_sha() {
  _has_bits_[0] &= ~0x00000001u;
}
void GpuProgramProto::clear_sha() {
  sha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sha();
}
const ::std::string& GpuProgramProto::sha() const {
  // @@protoc_insertion_point(field_get:GpuProgramProto.sha)
  return sha_.GetNoArena();
}
void GpuProgramProto::set_sha(const ::std::string& value) {
  set_has_sha();
  sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GpuProgramProto.sha)
}
#if LANG_CXX11
void GpuProgramProto::set_sha(::std::string&& value) {
  set_has_sha();
  sha_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GpuProgramProto.sha)
}
#endif
void GpuProgramProto::set_sha(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sha();
  sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GpuProgramProto.sha)
}
void GpuProgramProto::set_sha(const void* value, size_t size) {
  set_has_sha();
  sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GpuProgramProto.sha)
}
::std::string* GpuProgramProto::mutable_sha() {
  set_has_sha();
  // @@protoc_insertion_point(field_mutable:GpuProgramProto.sha)
  return sha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GpuProgramProto::release_sha() {
  // @@protoc_insertion_point(field_release:GpuProgramProto.sha)
  clear_has_sha();
  return sha_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GpuProgramProto::set_allocated_sha(::std::string* sha) {
  if (sha != NULL) {
    set_has_sha();
  } else {
    clear_has_sha();
  }
  sha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha);
  // @@protoc_insertion_point(field_set_allocated:GpuProgramProto.sha)
}

// optional uint32 format = 2;
bool GpuProgramProto::has_format() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GpuProgramProto::set_has_format() {
  _has_bits_[0] |= 0x00000010u;
}
void GpuProgramProto::clear_has_format() {
  _has_bits_[0] &= ~0x00000010u;
}
void GpuProgramProto::clear_format() {
  format_ = 0u;
  clear_has_format();
}
::google::protobuf::uint32 GpuProgramProto::format() const {
  // @@protoc_insertion_point(field_get:GpuProgramProto.format)
  return format_;
}
void GpuProgramProto::set_format(::google::protobuf::uint32 value) {
  set_has_format();
  format_ = value;
  // @@protoc_insertion_point(field_set:GpuProgramProto.format)
}

// optional bytes program = 3;
bool GpuProgramProto::has_program() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GpuProgramProto::set_has_program() {
  _has_bits_[0] |= 0x00000002u;
}
void GpuProgramProto::clear_has_program() {
  _has_bits_[0] &= ~0x00000002u;
}
void GpuProgramProto::clear_program() {
  program_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_program();
}
const ::std::string& GpuProgramProto::program() const {
  // @@protoc_insertion_point(field_get:GpuProgramProto.program)
  return program_.GetNoArena();
}
void GpuProgramProto::set_program(const ::std::string& value) {
  set_has_program();
  program_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GpuProgramProto.program)
}
#if LANG_CXX11
void GpuProgramProto::set_program(::std::string&& value) {
  set_has_program();
  program_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GpuProgramProto.program)
}
#endif
void GpuProgramProto::set_program(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_program();
  program_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GpuProgramProto.program)
}
void GpuProgramProto::set_program(const void* value, size_t size) {
  set_has_program();
  program_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GpuProgramProto.program)
}
::std::string* GpuProgramProto::mutable_program() {
  set_has_program();
  // @@protoc_insertion_point(field_mutable:GpuProgramProto.program)
  return program_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GpuProgramProto::release_program() {
  // @@protoc_insertion_point(field_release:GpuProgramProto.program)
  clear_has_program();
  return program_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GpuProgramProto::set_allocated_program(::std::string* program) {
  if (program != NULL) {
    set_has_program();
  } else {
    clear_has_program();
  }
  program_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), program);
  // @@protoc_insertion_point(field_set_allocated:GpuProgramProto.program)
}

// optional bool program_is_compressed = 6;
bool GpuProgramProto::has_program_is_compressed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GpuProgramProto::set_has_program_is_compressed() {
  _has_bits_[0] |= 0x00000020u;
}
void GpuProgramProto::clear_has_program_is_compressed() {
  _has_bits_[0] &= ~0x00000020u;
}
void GpuProgramProto::clear_program_is_compressed() {
  program_is_compressed_ = false;
  clear_has_program_is_compressed();
}
bool GpuProgramProto::program_is_compressed() const {
  // @@protoc_insertion_point(field_get:GpuProgramProto.program_is_compressed)
  return program_is_compressed_;
}
void GpuProgramProto::set_program_is_compressed(bool value) {
  set_has_program_is_compressed();
  program_is_compressed_ = value;
  // @@protoc_insertion_point(field_set:GpuProgramProto.program_is_compressed)
}

// optional uint32 program_decompressed_length = 7;
bool GpuProgramProto::has_program_decompressed_length() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void GpuProgramProto::set_has_program_decompressed_length() {
  _has_bits_[0] |= 0x00000040u;
}
void GpuProgramProto::clear_has_program_decompressed_length() {
  _has_bits_[0] &= ~0x00000040u;
}
void GpuProgramProto::clear_program_decompressed_length() {
  program_decompressed_length_ = 0u;
  clear_has_program_decompressed_length();
}
::google::protobuf::uint32 GpuProgramProto::program_decompressed_length() const {
  // @@protoc_insertion_point(field_get:GpuProgramProto.program_decompressed_length)
  return program_decompressed_length_;
}
void GpuProgramProto::set_program_decompressed_length(::google::protobuf::uint32 value) {
  set_has_program_decompressed_length();
  program_decompressed_length_ = value;
  // @@protoc_insertion_point(field_set:GpuProgramProto.program_decompressed_length)
}

// optional .ShaderProto vertex_shader = 4;
bool GpuProgramProto::has_vertex_shader() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GpuProgramProto::set_has_vertex_shader() {
  _has_bits_[0] |= 0x00000004u;
}
void GpuProgramProto::clear_has_vertex_shader() {
  _has_bits_[0] &= ~0x00000004u;
}
void GpuProgramProto::clear_vertex_shader() {
  if (vertex_shader_ != NULL) vertex_shader_->::ShaderProto::Clear();
  clear_has_vertex_shader();
}
const ::ShaderProto& GpuProgramProto::vertex_shader() const {
  // @@protoc_insertion_point(field_get:GpuProgramProto.vertex_shader)
  return vertex_shader_ != NULL ? *vertex_shader_
                         : *::ShaderProto::internal_default_instance();
}
::ShaderProto* GpuProgramProto::mutable_vertex_shader() {
  set_has_vertex_shader();
  if (vertex_shader_ == NULL) {
    vertex_shader_ = new ::ShaderProto;
  }
  // @@protoc_insertion_point(field_mutable:GpuProgramProto.vertex_shader)
  return vertex_shader_;
}
::ShaderProto* GpuProgramProto::release_vertex_shader() {
  // @@protoc_insertion_point(field_release:GpuProgramProto.vertex_shader)
  clear_has_vertex_shader();
  ::ShaderProto* temp = vertex_shader_;
  vertex_shader_ = NULL;
  return temp;
}
void GpuProgramProto::set_allocated_vertex_shader(::ShaderProto* vertex_shader) {
  delete vertex_shader_;
  vertex_shader_ = vertex_shader;
  if (vertex_shader) {
    set_has_vertex_shader();
  } else {
    clear_has_vertex_shader();
  }
  // @@protoc_insertion_point(field_set_allocated:GpuProgramProto.vertex_shader)
}

// optional .ShaderProto fragment_shader = 5;
bool GpuProgramProto::has_fragment_shader() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GpuProgramProto::set_has_fragment_shader() {
  _has_bits_[0] |= 0x00000008u;
}
void GpuProgramProto::clear_has_fragment_shader() {
  _has_bits_[0] &= ~0x00000008u;
}
void GpuProgramProto::clear_fragment_shader() {
  if (fragment_shader_ != NULL) fragment_shader_->::ShaderProto::Clear();
  clear_has_fragment_shader();
}
const ::ShaderProto& GpuProgramProto::fragment_shader() const {
  // @@protoc_insertion_point(field_get:GpuProgramProto.fragment_shader)
  return fragment_shader_ != NULL ? *fragment_shader_
                         : *::ShaderProto::internal_default_instance();
}
::ShaderProto* GpuProgramProto::mutable_fragment_shader() {
  set_has_fragment_shader();
  if (fragment_shader_ == NULL) {
    fragment_shader_ = new ::ShaderProto;
  }
  // @@protoc_insertion_point(field_mutable:GpuProgramProto.fragment_shader)
  return fragment_shader_;
}
::ShaderProto* GpuProgramProto::release_fragment_shader() {
  // @@protoc_insertion_point(field_release:GpuProgramProto.fragment_shader)
  clear_has_fragment_shader();
  ::ShaderProto* temp = fragment_shader_;
  fragment_shader_ = NULL;
  return temp;
}
void GpuProgramProto::set_allocated_fragment_shader(::ShaderProto* fragment_shader) {
  delete fragment_shader_;
  fragment_shader_ = fragment_shader;
  if (fragment_shader) {
    set_has_fragment_shader();
  } else {
    clear_has_fragment_shader();
  }
  // @@protoc_insertion_point(field_set_allocated:GpuProgramProto.fragment_shader)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
