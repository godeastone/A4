// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: payment_app.proto

#ifndef PROTOBUF_payment_5fapp_2eproto__INCLUDED
#define PROTOBUF_payment_5fapp_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
namespace content {
class ImageSizeProto;
class ImageSizeProtoDefaultTypeInternal;
extern ImageSizeProtoDefaultTypeInternal _ImageSizeProto_default_instance_;
class StoredPaymentAppProto;
class StoredPaymentAppProtoDefaultTypeInternal;
extern StoredPaymentAppProtoDefaultTypeInternal _StoredPaymentAppProto_default_instance_;
class StoredPaymentInstrumentImageObject;
class StoredPaymentInstrumentImageObjectDefaultTypeInternal;
extern StoredPaymentInstrumentImageObjectDefaultTypeInternal _StoredPaymentInstrumentImageObject_default_instance_;
class StoredPaymentInstrumentKeyInfoProto;
class StoredPaymentInstrumentKeyInfoProtoDefaultTypeInternal;
extern StoredPaymentInstrumentKeyInfoProtoDefaultTypeInternal _StoredPaymentInstrumentKeyInfoProto_default_instance_;
class StoredPaymentInstrumentProto;
class StoredPaymentInstrumentProtoDefaultTypeInternal;
extern StoredPaymentInstrumentProtoDefaultTypeInternal _StoredPaymentInstrumentProto_default_instance_;
class StoredRelatedApplicationProto;
class StoredRelatedApplicationProtoDefaultTypeInternal;
extern StoredRelatedApplicationProtoDefaultTypeInternal _StoredRelatedApplicationProto_default_instance_;
}  // namespace content

namespace content {

namespace protobuf_payment_5fapp_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_payment_5fapp_2eproto

// ===================================================================

class StoredPaymentInstrumentKeyInfoProto : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:content.StoredPaymentInstrumentKeyInfoProto) */ {
 public:
  StoredPaymentInstrumentKeyInfoProto();
  virtual ~StoredPaymentInstrumentKeyInfoProto();

  StoredPaymentInstrumentKeyInfoProto(const StoredPaymentInstrumentKeyInfoProto& from);

  inline StoredPaymentInstrumentKeyInfoProto& operator=(const StoredPaymentInstrumentKeyInfoProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StoredPaymentInstrumentKeyInfoProto& default_instance();

  static inline const StoredPaymentInstrumentKeyInfoProto* internal_default_instance() {
    return reinterpret_cast<const StoredPaymentInstrumentKeyInfoProto*>(
               &_StoredPaymentInstrumentKeyInfoProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(StoredPaymentInstrumentKeyInfoProto* other);

  // implements Message ----------------------------------------------

  inline StoredPaymentInstrumentKeyInfoProto* New() const PROTOBUF_FINAL { return New(NULL); }

  StoredPaymentInstrumentKeyInfoProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const StoredPaymentInstrumentKeyInfoProto& from);
  void MergeFrom(const StoredPaymentInstrumentKeyInfoProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StoredPaymentInstrumentKeyInfoProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 2;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional uint64 insertion_order = 1;
  bool has_insertion_order() const;
  void clear_insertion_order();
  static const int kInsertionOrderFieldNumber = 1;
  ::google::protobuf::uint64 insertion_order() const;
  void set_insertion_order(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:content.StoredPaymentInstrumentKeyInfoProto)
 private:
  void set_has_insertion_order();
  void clear_has_insertion_order();
  void set_has_key();
  void clear_has_key();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::uint64 insertion_order_;
  friend struct protobuf_payment_5fapp_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImageSizeProto : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:content.ImageSizeProto) */ {
 public:
  ImageSizeProto();
  virtual ~ImageSizeProto();

  ImageSizeProto(const ImageSizeProto& from);

  inline ImageSizeProto& operator=(const ImageSizeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ImageSizeProto& default_instance();

  static inline const ImageSizeProto* internal_default_instance() {
    return reinterpret_cast<const ImageSizeProto*>(
               &_ImageSizeProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(ImageSizeProto* other);

  // implements Message ----------------------------------------------

  inline ImageSizeProto* New() const PROTOBUF_FINAL { return New(NULL); }

  ImageSizeProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ImageSizeProto& from);
  void MergeFrom(const ImageSizeProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImageSizeProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 width = 1;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 1;
  ::google::protobuf::uint64 width() const;
  void set_width(::google::protobuf::uint64 value);

  // optional uint64 height = 2;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  ::google::protobuf::uint64 height() const;
  void set_height(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:content.ImageSizeProto)
 private:
  void set_has_width();
  void clear_has_width();
  void set_has_height();
  void clear_has_height();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 width_;
  ::google::protobuf::uint64 height_;
  friend struct protobuf_payment_5fapp_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StoredPaymentInstrumentImageObject : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:content.StoredPaymentInstrumentImageObject) */ {
 public:
  StoredPaymentInstrumentImageObject();
  virtual ~StoredPaymentInstrumentImageObject();

  StoredPaymentInstrumentImageObject(const StoredPaymentInstrumentImageObject& from);

  inline StoredPaymentInstrumentImageObject& operator=(const StoredPaymentInstrumentImageObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StoredPaymentInstrumentImageObject& default_instance();

  static inline const StoredPaymentInstrumentImageObject* internal_default_instance() {
    return reinterpret_cast<const StoredPaymentInstrumentImageObject*>(
               &_StoredPaymentInstrumentImageObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(StoredPaymentInstrumentImageObject* other);

  // implements Message ----------------------------------------------

  inline StoredPaymentInstrumentImageObject* New() const PROTOBUF_FINAL { return New(NULL); }

  StoredPaymentInstrumentImageObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const StoredPaymentInstrumentImageObject& from);
  void MergeFrom(const StoredPaymentInstrumentImageObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StoredPaymentInstrumentImageObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .content.ImageSizeProto sizes = 3;
  int sizes_size() const;
  void clear_sizes();
  static const int kSizesFieldNumber = 3;
  const ::content::ImageSizeProto& sizes(int index) const;
  ::content::ImageSizeProto* mutable_sizes(int index);
  ::content::ImageSizeProto* add_sizes();
  ::google::protobuf::RepeatedPtrField< ::content::ImageSizeProto >*
      mutable_sizes();
  const ::google::protobuf::RepeatedPtrField< ::content::ImageSizeProto >&
      sizes() const;

  // optional string src = 1;
  bool has_src() const;
  void clear_src();
  static const int kSrcFieldNumber = 1;
  const ::std::string& src() const;
  void set_src(const ::std::string& value);
  #if LANG_CXX11
  void set_src(::std::string&& value);
  #endif
  void set_src(const char* value);
  void set_src(const char* value, size_t size);
  ::std::string* mutable_src();
  ::std::string* release_src();
  void set_allocated_src(::std::string* src);

  // optional string type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // @@protoc_insertion_point(class_scope:content.StoredPaymentInstrumentImageObject)
 private:
  void set_has_src();
  void clear_has_src();
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::content::ImageSizeProto > sizes_;
  ::google::protobuf::internal::ArenaStringPtr src_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  friend struct protobuf_payment_5fapp_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StoredPaymentInstrumentProto : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:content.StoredPaymentInstrumentProto) */ {
 public:
  StoredPaymentInstrumentProto();
  virtual ~StoredPaymentInstrumentProto();

  StoredPaymentInstrumentProto(const StoredPaymentInstrumentProto& from);

  inline StoredPaymentInstrumentProto& operator=(const StoredPaymentInstrumentProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StoredPaymentInstrumentProto& default_instance();

  static inline const StoredPaymentInstrumentProto* internal_default_instance() {
    return reinterpret_cast<const StoredPaymentInstrumentProto*>(
               &_StoredPaymentInstrumentProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(StoredPaymentInstrumentProto* other);

  // implements Message ----------------------------------------------

  inline StoredPaymentInstrumentProto* New() const PROTOBUF_FINAL { return New(NULL); }

  StoredPaymentInstrumentProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const StoredPaymentInstrumentProto& from);
  void MergeFrom(const StoredPaymentInstrumentProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StoredPaymentInstrumentProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .content.StoredPaymentInstrumentImageObject icons = 6;
  int icons_size() const;
  void clear_icons();
  static const int kIconsFieldNumber = 6;
  const ::content::StoredPaymentInstrumentImageObject& icons(int index) const;
  ::content::StoredPaymentInstrumentImageObject* mutable_icons(int index);
  ::content::StoredPaymentInstrumentImageObject* add_icons();
  ::google::protobuf::RepeatedPtrField< ::content::StoredPaymentInstrumentImageObject >*
      mutable_icons();
  const ::google::protobuf::RepeatedPtrField< ::content::StoredPaymentInstrumentImageObject >&
      icons() const;

  // repeated int32 supported_card_networks = 8;
  int supported_card_networks_size() const;
  void clear_supported_card_networks();
  static const int kSupportedCardNetworksFieldNumber = 8;
  ::google::protobuf::int32 supported_card_networks(int index) const;
  void set_supported_card_networks(int index, ::google::protobuf::int32 value);
  void add_supported_card_networks(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      supported_card_networks() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_supported_card_networks();

  // repeated int32 supported_card_types = 9;
  int supported_card_types_size() const;
  void clear_supported_card_types();
  static const int kSupportedCardTypesFieldNumber = 9;
  ::google::protobuf::int32 supported_card_types(int index) const;
  void set_supported_card_types(int index, ::google::protobuf::int32 value);
  void add_supported_card_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      supported_card_types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_supported_card_types();

  // optional string instrument_key = 2;
  bool has_instrument_key() const;
  void clear_instrument_key();
  static const int kInstrumentKeyFieldNumber = 2;
  const ::std::string& instrument_key() const;
  void set_instrument_key(const ::std::string& value);
  #if LANG_CXX11
  void set_instrument_key(::std::string&& value);
  #endif
  void set_instrument_key(const char* value);
  void set_instrument_key(const char* value, size_t size);
  ::std::string* mutable_instrument_key();
  ::std::string* release_instrument_key();
  void set_allocated_instrument_key(::std::string* instrument_key);

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string method = 4;
  bool has_method() const;
  void clear_method();
  static const int kMethodFieldNumber = 4;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  #if LANG_CXX11
  void set_method(::std::string&& value);
  #endif
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // optional string stringified_capabilities = 5;
  bool has_stringified_capabilities() const;
  void clear_stringified_capabilities();
  static const int kStringifiedCapabilitiesFieldNumber = 5;
  const ::std::string& stringified_capabilities() const;
  void set_stringified_capabilities(const ::std::string& value);
  #if LANG_CXX11
  void set_stringified_capabilities(::std::string&& value);
  #endif
  void set_stringified_capabilities(const char* value);
  void set_stringified_capabilities(const char* value, size_t size);
  ::std::string* mutable_stringified_capabilities();
  ::std::string* release_stringified_capabilities();
  void set_allocated_stringified_capabilities(::std::string* stringified_capabilities);

  // optional string decoded_instrument_icon = 7;
  bool has_decoded_instrument_icon() const;
  void clear_decoded_instrument_icon();
  static const int kDecodedInstrumentIconFieldNumber = 7;
  const ::std::string& decoded_instrument_icon() const;
  void set_decoded_instrument_icon(const ::std::string& value);
  #if LANG_CXX11
  void set_decoded_instrument_icon(::std::string&& value);
  #endif
  void set_decoded_instrument_icon(const char* value);
  void set_decoded_instrument_icon(const char* value, size_t size);
  ::std::string* mutable_decoded_instrument_icon();
  ::std::string* release_decoded_instrument_icon();
  void set_allocated_decoded_instrument_icon(::std::string* decoded_instrument_icon);

  // optional int64 registration_id = 1;
  bool has_registration_id() const;
  void clear_registration_id();
  static const int kRegistrationIdFieldNumber = 1;
  ::google::protobuf::int64 registration_id() const;
  void set_registration_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:content.StoredPaymentInstrumentProto)
 private:
  void set_has_registration_id();
  void clear_has_registration_id();
  void set_has_instrument_key();
  void clear_has_instrument_key();
  void set_has_name();
  void clear_has_name();
  void set_has_method();
  void clear_has_method();
  void set_has_stringified_capabilities();
  void clear_has_stringified_capabilities();
  void set_has_decoded_instrument_icon();
  void clear_has_decoded_instrument_icon();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::content::StoredPaymentInstrumentImageObject > icons_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > supported_card_networks_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > supported_card_types_;
  ::google::protobuf::internal::ArenaStringPtr instrument_key_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::google::protobuf::internal::ArenaStringPtr stringified_capabilities_;
  ::google::protobuf::internal::ArenaStringPtr decoded_instrument_icon_;
  ::google::protobuf::int64 registration_id_;
  friend struct protobuf_payment_5fapp_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StoredRelatedApplicationProto : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:content.StoredRelatedApplicationProto) */ {
 public:
  StoredRelatedApplicationProto();
  virtual ~StoredRelatedApplicationProto();

  StoredRelatedApplicationProto(const StoredRelatedApplicationProto& from);

  inline StoredRelatedApplicationProto& operator=(const StoredRelatedApplicationProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StoredRelatedApplicationProto& default_instance();

  static inline const StoredRelatedApplicationProto* internal_default_instance() {
    return reinterpret_cast<const StoredRelatedApplicationProto*>(
               &_StoredRelatedApplicationProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(StoredRelatedApplicationProto* other);

  // implements Message ----------------------------------------------

  inline StoredRelatedApplicationProto* New() const PROTOBUF_FINAL { return New(NULL); }

  StoredRelatedApplicationProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const StoredRelatedApplicationProto& from);
  void MergeFrom(const StoredRelatedApplicationProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StoredRelatedApplicationProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string platform = 1;
  bool has_platform() const;
  void clear_platform();
  static const int kPlatformFieldNumber = 1;
  const ::std::string& platform() const;
  void set_platform(const ::std::string& value);
  #if LANG_CXX11
  void set_platform(::std::string&& value);
  #endif
  void set_platform(const char* value);
  void set_platform(const char* value, size_t size);
  ::std::string* mutable_platform();
  ::std::string* release_platform();
  void set_allocated_platform(::std::string* platform);

  // optional string id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:content.StoredRelatedApplicationProto)
 private:
  void set_has_platform();
  void clear_has_platform();
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr platform_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  friend struct protobuf_payment_5fapp_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StoredPaymentAppProto : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:content.StoredPaymentAppProto) */ {
 public:
  StoredPaymentAppProto();
  virtual ~StoredPaymentAppProto();

  StoredPaymentAppProto(const StoredPaymentAppProto& from);

  inline StoredPaymentAppProto& operator=(const StoredPaymentAppProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StoredPaymentAppProto& default_instance();

  static inline const StoredPaymentAppProto* internal_default_instance() {
    return reinterpret_cast<const StoredPaymentAppProto*>(
               &_StoredPaymentAppProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(StoredPaymentAppProto* other);

  // implements Message ----------------------------------------------

  inline StoredPaymentAppProto* New() const PROTOBUF_FINAL { return New(NULL); }

  StoredPaymentAppProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const StoredPaymentAppProto& from);
  void MergeFrom(const StoredPaymentAppProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StoredPaymentAppProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .content.StoredRelatedApplicationProto related_applications = 6;
  int related_applications_size() const;
  void clear_related_applications();
  static const int kRelatedApplicationsFieldNumber = 6;
  const ::content::StoredRelatedApplicationProto& related_applications(int index) const;
  ::content::StoredRelatedApplicationProto* mutable_related_applications(int index);
  ::content::StoredRelatedApplicationProto* add_related_applications();
  ::google::protobuf::RepeatedPtrField< ::content::StoredRelatedApplicationProto >*
      mutable_related_applications();
  const ::google::protobuf::RepeatedPtrField< ::content::StoredRelatedApplicationProto >&
      related_applications() const;

  // optional string scope = 2;
  bool has_scope() const;
  void clear_scope();
  static const int kScopeFieldNumber = 2;
  const ::std::string& scope() const;
  void set_scope(const ::std::string& value);
  #if LANG_CXX11
  void set_scope(::std::string&& value);
  #endif
  void set_scope(const char* value);
  void set_scope(const char* value, size_t size);
  ::std::string* mutable_scope();
  ::std::string* release_scope();
  void set_allocated_scope(::std::string* scope);

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string icon = 4;
  bool has_icon() const;
  void clear_icon();
  static const int kIconFieldNumber = 4;
  const ::std::string& icon() const;
  void set_icon(const ::std::string& value);
  #if LANG_CXX11
  void set_icon(::std::string&& value);
  #endif
  void set_icon(const char* value);
  void set_icon(const char* value, size_t size);
  ::std::string* mutable_icon();
  ::std::string* release_icon();
  void set_allocated_icon(::std::string* icon);

  // optional string user_hint = 7;
  bool has_user_hint() const;
  void clear_user_hint();
  static const int kUserHintFieldNumber = 7;
  const ::std::string& user_hint() const;
  void set_user_hint(const ::std::string& value);
  #if LANG_CXX11
  void set_user_hint(::std::string&& value);
  #endif
  void set_user_hint(const char* value);
  void set_user_hint(const char* value, size_t size);
  ::std::string* mutable_user_hint();
  ::std::string* release_user_hint();
  void set_allocated_user_hint(::std::string* user_hint);

  // optional int64 registration_id = 1;
  bool has_registration_id() const;
  void clear_registration_id();
  static const int kRegistrationIdFieldNumber = 1;
  ::google::protobuf::int64 registration_id() const;
  void set_registration_id(::google::protobuf::int64 value);

  // optional bool prefer_related_applications = 5;
  bool has_prefer_related_applications() const;
  void clear_prefer_related_applications();
  static const int kPreferRelatedApplicationsFieldNumber = 5;
  bool prefer_related_applications() const;
  void set_prefer_related_applications(bool value);

  // @@protoc_insertion_point(class_scope:content.StoredPaymentAppProto)
 private:
  void set_has_registration_id();
  void clear_has_registration_id();
  void set_has_scope();
  void clear_has_scope();
  void set_has_name();
  void clear_has_name();
  void set_has_icon();
  void clear_has_icon();
  void set_has_prefer_related_applications();
  void clear_has_prefer_related_applications();
  void set_has_user_hint();
  void clear_has_user_hint();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::content::StoredRelatedApplicationProto > related_applications_;
  ::google::protobuf::internal::ArenaStringPtr scope_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr icon_;
  ::google::protobuf::internal::ArenaStringPtr user_hint_;
  ::google::protobuf::int64 registration_id_;
  bool prefer_related_applications_;
  friend struct protobuf_payment_5fapp_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// StoredPaymentInstrumentKeyInfoProto

// optional uint64 insertion_order = 1;
inline bool StoredPaymentInstrumentKeyInfoProto::has_insertion_order() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoredPaymentInstrumentKeyInfoProto::set_has_insertion_order() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoredPaymentInstrumentKeyInfoProto::clear_has_insertion_order() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoredPaymentInstrumentKeyInfoProto::clear_insertion_order() {
  insertion_order_ = GOOGLE_ULONGLONG(0);
  clear_has_insertion_order();
}
inline ::google::protobuf::uint64 StoredPaymentInstrumentKeyInfoProto::insertion_order() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentKeyInfoProto.insertion_order)
  return insertion_order_;
}
inline void StoredPaymentInstrumentKeyInfoProto::set_insertion_order(::google::protobuf::uint64 value) {
  set_has_insertion_order();
  insertion_order_ = value;
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentKeyInfoProto.insertion_order)
}

// optional string key = 2;
inline bool StoredPaymentInstrumentKeyInfoProto::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoredPaymentInstrumentKeyInfoProto::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoredPaymentInstrumentKeyInfoProto::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoredPaymentInstrumentKeyInfoProto::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& StoredPaymentInstrumentKeyInfoProto::key() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentKeyInfoProto.key)
  return key_.GetNoArena();
}
inline void StoredPaymentInstrumentKeyInfoProto::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentKeyInfoProto.key)
}
#if LANG_CXX11
inline void StoredPaymentInstrumentKeyInfoProto::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentInstrumentKeyInfoProto.key)
}
#endif
inline void StoredPaymentInstrumentKeyInfoProto::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentInstrumentKeyInfoProto.key)
}
inline void StoredPaymentInstrumentKeyInfoProto::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentInstrumentKeyInfoProto.key)
}
inline ::std::string* StoredPaymentInstrumentKeyInfoProto::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentKeyInfoProto.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoredPaymentInstrumentKeyInfoProto::release_key() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentInstrumentKeyInfoProto.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoredPaymentInstrumentKeyInfoProto::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentInstrumentKeyInfoProto.key)
}

// -------------------------------------------------------------------

// ImageSizeProto

// optional uint64 width = 1;
inline bool ImageSizeProto::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImageSizeProto::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImageSizeProto::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImageSizeProto::clear_width() {
  width_ = GOOGLE_ULONGLONG(0);
  clear_has_width();
}
inline ::google::protobuf::uint64 ImageSizeProto::width() const {
  // @@protoc_insertion_point(field_get:content.ImageSizeProto.width)
  return width_;
}
inline void ImageSizeProto::set_width(::google::protobuf::uint64 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:content.ImageSizeProto.width)
}

// optional uint64 height = 2;
inline bool ImageSizeProto::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImageSizeProto::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ImageSizeProto::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ImageSizeProto::clear_height() {
  height_ = GOOGLE_ULONGLONG(0);
  clear_has_height();
}
inline ::google::protobuf::uint64 ImageSizeProto::height() const {
  // @@protoc_insertion_point(field_get:content.ImageSizeProto.height)
  return height_;
}
inline void ImageSizeProto::set_height(::google::protobuf::uint64 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:content.ImageSizeProto.height)
}

// -------------------------------------------------------------------

// StoredPaymentInstrumentImageObject

// optional string src = 1;
inline bool StoredPaymentInstrumentImageObject::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoredPaymentInstrumentImageObject::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoredPaymentInstrumentImageObject::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoredPaymentInstrumentImageObject::clear_src() {
  src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_src();
}
inline const ::std::string& StoredPaymentInstrumentImageObject::src() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentImageObject.src)
  return src_.GetNoArena();
}
inline void StoredPaymentInstrumentImageObject::set_src(const ::std::string& value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentImageObject.src)
}
#if LANG_CXX11
inline void StoredPaymentInstrumentImageObject::set_src(::std::string&& value) {
  set_has_src();
  src_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentInstrumentImageObject.src)
}
#endif
inline void StoredPaymentInstrumentImageObject::set_src(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentInstrumentImageObject.src)
}
inline void StoredPaymentInstrumentImageObject::set_src(const char* value, size_t size) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentInstrumentImageObject.src)
}
inline ::std::string* StoredPaymentInstrumentImageObject::mutable_src() {
  set_has_src();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentImageObject.src)
  return src_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoredPaymentInstrumentImageObject::release_src() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentInstrumentImageObject.src)
  clear_has_src();
  return src_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoredPaymentInstrumentImageObject::set_allocated_src(::std::string* src) {
  if (src != NULL) {
    set_has_src();
  } else {
    clear_has_src();
  }
  src_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentInstrumentImageObject.src)
}

// optional string type = 2;
inline bool StoredPaymentInstrumentImageObject::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoredPaymentInstrumentImageObject::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoredPaymentInstrumentImageObject::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoredPaymentInstrumentImageObject::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
inline const ::std::string& StoredPaymentInstrumentImageObject::type() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentImageObject.type)
  return type_.GetNoArena();
}
inline void StoredPaymentInstrumentImageObject::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentImageObject.type)
}
#if LANG_CXX11
inline void StoredPaymentInstrumentImageObject::set_type(::std::string&& value) {
  set_has_type();
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentInstrumentImageObject.type)
}
#endif
inline void StoredPaymentInstrumentImageObject::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentInstrumentImageObject.type)
}
inline void StoredPaymentInstrumentImageObject::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentInstrumentImageObject.type)
}
inline ::std::string* StoredPaymentInstrumentImageObject::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentImageObject.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoredPaymentInstrumentImageObject::release_type() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentInstrumentImageObject.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoredPaymentInstrumentImageObject::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentInstrumentImageObject.type)
}

// repeated .content.ImageSizeProto sizes = 3;
inline int StoredPaymentInstrumentImageObject::sizes_size() const {
  return sizes_.size();
}
inline void StoredPaymentInstrumentImageObject::clear_sizes() {
  sizes_.Clear();
}
inline const ::content::ImageSizeProto& StoredPaymentInstrumentImageObject::sizes(int index) const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentImageObject.sizes)
  return sizes_.Get(index);
}
inline ::content::ImageSizeProto* StoredPaymentInstrumentImageObject::mutable_sizes(int index) {
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentImageObject.sizes)
  return sizes_.Mutable(index);
}
inline ::content::ImageSizeProto* StoredPaymentInstrumentImageObject::add_sizes() {
  // @@protoc_insertion_point(field_add:content.StoredPaymentInstrumentImageObject.sizes)
  return sizes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::content::ImageSizeProto >*
StoredPaymentInstrumentImageObject::mutable_sizes() {
  // @@protoc_insertion_point(field_mutable_list:content.StoredPaymentInstrumentImageObject.sizes)
  return &sizes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::content::ImageSizeProto >&
StoredPaymentInstrumentImageObject::sizes() const {
  // @@protoc_insertion_point(field_list:content.StoredPaymentInstrumentImageObject.sizes)
  return sizes_;
}

// -------------------------------------------------------------------

// StoredPaymentInstrumentProto

// optional int64 registration_id = 1;
inline bool StoredPaymentInstrumentProto::has_registration_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StoredPaymentInstrumentProto::set_has_registration_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StoredPaymentInstrumentProto::clear_has_registration_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StoredPaymentInstrumentProto::clear_registration_id() {
  registration_id_ = GOOGLE_LONGLONG(0);
  clear_has_registration_id();
}
inline ::google::protobuf::int64 StoredPaymentInstrumentProto::registration_id() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentProto.registration_id)
  return registration_id_;
}
inline void StoredPaymentInstrumentProto::set_registration_id(::google::protobuf::int64 value) {
  set_has_registration_id();
  registration_id_ = value;
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentProto.registration_id)
}

// optional string instrument_key = 2;
inline bool StoredPaymentInstrumentProto::has_instrument_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoredPaymentInstrumentProto::set_has_instrument_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoredPaymentInstrumentProto::clear_has_instrument_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoredPaymentInstrumentProto::clear_instrument_key() {
  instrument_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrument_key();
}
inline const ::std::string& StoredPaymentInstrumentProto::instrument_key() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentProto.instrument_key)
  return instrument_key_.GetNoArena();
}
inline void StoredPaymentInstrumentProto::set_instrument_key(const ::std::string& value) {
  set_has_instrument_key();
  instrument_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentProto.instrument_key)
}
#if LANG_CXX11
inline void StoredPaymentInstrumentProto::set_instrument_key(::std::string&& value) {
  set_has_instrument_key();
  instrument_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentInstrumentProto.instrument_key)
}
#endif
inline void StoredPaymentInstrumentProto::set_instrument_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_instrument_key();
  instrument_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentInstrumentProto.instrument_key)
}
inline void StoredPaymentInstrumentProto::set_instrument_key(const char* value, size_t size) {
  set_has_instrument_key();
  instrument_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentInstrumentProto.instrument_key)
}
inline ::std::string* StoredPaymentInstrumentProto::mutable_instrument_key() {
  set_has_instrument_key();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentProto.instrument_key)
  return instrument_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoredPaymentInstrumentProto::release_instrument_key() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentInstrumentProto.instrument_key)
  clear_has_instrument_key();
  return instrument_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoredPaymentInstrumentProto::set_allocated_instrument_key(::std::string* instrument_key) {
  if (instrument_key != NULL) {
    set_has_instrument_key();
  } else {
    clear_has_instrument_key();
  }
  instrument_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrument_key);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentInstrumentProto.instrument_key)
}

// optional string name = 3;
inline bool StoredPaymentInstrumentProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoredPaymentInstrumentProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoredPaymentInstrumentProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoredPaymentInstrumentProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& StoredPaymentInstrumentProto::name() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentProto.name)
  return name_.GetNoArena();
}
inline void StoredPaymentInstrumentProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentProto.name)
}
#if LANG_CXX11
inline void StoredPaymentInstrumentProto::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentInstrumentProto.name)
}
#endif
inline void StoredPaymentInstrumentProto::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentInstrumentProto.name)
}
inline void StoredPaymentInstrumentProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentInstrumentProto.name)
}
inline ::std::string* StoredPaymentInstrumentProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoredPaymentInstrumentProto::release_name() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentInstrumentProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoredPaymentInstrumentProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentInstrumentProto.name)
}

// optional string method = 4;
inline bool StoredPaymentInstrumentProto::has_method() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StoredPaymentInstrumentProto::set_has_method() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StoredPaymentInstrumentProto::clear_has_method() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StoredPaymentInstrumentProto::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method();
}
inline const ::std::string& StoredPaymentInstrumentProto::method() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentProto.method)
  return method_.GetNoArena();
}
inline void StoredPaymentInstrumentProto::set_method(const ::std::string& value) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentProto.method)
}
#if LANG_CXX11
inline void StoredPaymentInstrumentProto::set_method(::std::string&& value) {
  set_has_method();
  method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentInstrumentProto.method)
}
#endif
inline void StoredPaymentInstrumentProto::set_method(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentInstrumentProto.method)
}
inline void StoredPaymentInstrumentProto::set_method(const char* value, size_t size) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentInstrumentProto.method)
}
inline ::std::string* StoredPaymentInstrumentProto::mutable_method() {
  set_has_method();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentProto.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoredPaymentInstrumentProto::release_method() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentInstrumentProto.method)
  clear_has_method();
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoredPaymentInstrumentProto::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    set_has_method();
  } else {
    clear_has_method();
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentInstrumentProto.method)
}

// optional string stringified_capabilities = 5;
inline bool StoredPaymentInstrumentProto::has_stringified_capabilities() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StoredPaymentInstrumentProto::set_has_stringified_capabilities() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StoredPaymentInstrumentProto::clear_has_stringified_capabilities() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StoredPaymentInstrumentProto::clear_stringified_capabilities() {
  stringified_capabilities_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_stringified_capabilities();
}
inline const ::std::string& StoredPaymentInstrumentProto::stringified_capabilities() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentProto.stringified_capabilities)
  return stringified_capabilities_.GetNoArena();
}
inline void StoredPaymentInstrumentProto::set_stringified_capabilities(const ::std::string& value) {
  set_has_stringified_capabilities();
  stringified_capabilities_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentProto.stringified_capabilities)
}
#if LANG_CXX11
inline void StoredPaymentInstrumentProto::set_stringified_capabilities(::std::string&& value) {
  set_has_stringified_capabilities();
  stringified_capabilities_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentInstrumentProto.stringified_capabilities)
}
#endif
inline void StoredPaymentInstrumentProto::set_stringified_capabilities(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_stringified_capabilities();
  stringified_capabilities_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentInstrumentProto.stringified_capabilities)
}
inline void StoredPaymentInstrumentProto::set_stringified_capabilities(const char* value, size_t size) {
  set_has_stringified_capabilities();
  stringified_capabilities_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentInstrumentProto.stringified_capabilities)
}
inline ::std::string* StoredPaymentInstrumentProto::mutable_stringified_capabilities() {
  set_has_stringified_capabilities();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentProto.stringified_capabilities)
  return stringified_capabilities_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoredPaymentInstrumentProto::release_stringified_capabilities() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentInstrumentProto.stringified_capabilities)
  clear_has_stringified_capabilities();
  return stringified_capabilities_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoredPaymentInstrumentProto::set_allocated_stringified_capabilities(::std::string* stringified_capabilities) {
  if (stringified_capabilities != NULL) {
    set_has_stringified_capabilities();
  } else {
    clear_has_stringified_capabilities();
  }
  stringified_capabilities_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stringified_capabilities);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentInstrumentProto.stringified_capabilities)
}

// repeated .content.StoredPaymentInstrumentImageObject icons = 6;
inline int StoredPaymentInstrumentProto::icons_size() const {
  return icons_.size();
}
inline void StoredPaymentInstrumentProto::clear_icons() {
  icons_.Clear();
}
inline const ::content::StoredPaymentInstrumentImageObject& StoredPaymentInstrumentProto::icons(int index) const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentProto.icons)
  return icons_.Get(index);
}
inline ::content::StoredPaymentInstrumentImageObject* StoredPaymentInstrumentProto::mutable_icons(int index) {
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentProto.icons)
  return icons_.Mutable(index);
}
inline ::content::StoredPaymentInstrumentImageObject* StoredPaymentInstrumentProto::add_icons() {
  // @@protoc_insertion_point(field_add:content.StoredPaymentInstrumentProto.icons)
  return icons_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::content::StoredPaymentInstrumentImageObject >*
StoredPaymentInstrumentProto::mutable_icons() {
  // @@protoc_insertion_point(field_mutable_list:content.StoredPaymentInstrumentProto.icons)
  return &icons_;
}
inline const ::google::protobuf::RepeatedPtrField< ::content::StoredPaymentInstrumentImageObject >&
StoredPaymentInstrumentProto::icons() const {
  // @@protoc_insertion_point(field_list:content.StoredPaymentInstrumentProto.icons)
  return icons_;
}

// optional string decoded_instrument_icon = 7;
inline bool StoredPaymentInstrumentProto::has_decoded_instrument_icon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StoredPaymentInstrumentProto::set_has_decoded_instrument_icon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StoredPaymentInstrumentProto::clear_has_decoded_instrument_icon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StoredPaymentInstrumentProto::clear_decoded_instrument_icon() {
  decoded_instrument_icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_decoded_instrument_icon();
}
inline const ::std::string& StoredPaymentInstrumentProto::decoded_instrument_icon() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentProto.decoded_instrument_icon)
  return decoded_instrument_icon_.GetNoArena();
}
inline void StoredPaymentInstrumentProto::set_decoded_instrument_icon(const ::std::string& value) {
  set_has_decoded_instrument_icon();
  decoded_instrument_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentProto.decoded_instrument_icon)
}
#if LANG_CXX11
inline void StoredPaymentInstrumentProto::set_decoded_instrument_icon(::std::string&& value) {
  set_has_decoded_instrument_icon();
  decoded_instrument_icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentInstrumentProto.decoded_instrument_icon)
}
#endif
inline void StoredPaymentInstrumentProto::set_decoded_instrument_icon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_decoded_instrument_icon();
  decoded_instrument_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentInstrumentProto.decoded_instrument_icon)
}
inline void StoredPaymentInstrumentProto::set_decoded_instrument_icon(const char* value, size_t size) {
  set_has_decoded_instrument_icon();
  decoded_instrument_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentInstrumentProto.decoded_instrument_icon)
}
inline ::std::string* StoredPaymentInstrumentProto::mutable_decoded_instrument_icon() {
  set_has_decoded_instrument_icon();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentProto.decoded_instrument_icon)
  return decoded_instrument_icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoredPaymentInstrumentProto::release_decoded_instrument_icon() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentInstrumentProto.decoded_instrument_icon)
  clear_has_decoded_instrument_icon();
  return decoded_instrument_icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoredPaymentInstrumentProto::set_allocated_decoded_instrument_icon(::std::string* decoded_instrument_icon) {
  if (decoded_instrument_icon != NULL) {
    set_has_decoded_instrument_icon();
  } else {
    clear_has_decoded_instrument_icon();
  }
  decoded_instrument_icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), decoded_instrument_icon);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentInstrumentProto.decoded_instrument_icon)
}

// repeated int32 supported_card_networks = 8;
inline int StoredPaymentInstrumentProto::supported_card_networks_size() const {
  return supported_card_networks_.size();
}
inline void StoredPaymentInstrumentProto::clear_supported_card_networks() {
  supported_card_networks_.Clear();
}
inline ::google::protobuf::int32 StoredPaymentInstrumentProto::supported_card_networks(int index) const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentProto.supported_card_networks)
  return supported_card_networks_.Get(index);
}
inline void StoredPaymentInstrumentProto::set_supported_card_networks(int index, ::google::protobuf::int32 value) {
  supported_card_networks_.Set(index, value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentProto.supported_card_networks)
}
inline void StoredPaymentInstrumentProto::add_supported_card_networks(::google::protobuf::int32 value) {
  supported_card_networks_.Add(value);
  // @@protoc_insertion_point(field_add:content.StoredPaymentInstrumentProto.supported_card_networks)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
StoredPaymentInstrumentProto::supported_card_networks() const {
  // @@protoc_insertion_point(field_list:content.StoredPaymentInstrumentProto.supported_card_networks)
  return supported_card_networks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
StoredPaymentInstrumentProto::mutable_supported_card_networks() {
  // @@protoc_insertion_point(field_mutable_list:content.StoredPaymentInstrumentProto.supported_card_networks)
  return &supported_card_networks_;
}

// repeated int32 supported_card_types = 9;
inline int StoredPaymentInstrumentProto::supported_card_types_size() const {
  return supported_card_types_.size();
}
inline void StoredPaymentInstrumentProto::clear_supported_card_types() {
  supported_card_types_.Clear();
}
inline ::google::protobuf::int32 StoredPaymentInstrumentProto::supported_card_types(int index) const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentProto.supported_card_types)
  return supported_card_types_.Get(index);
}
inline void StoredPaymentInstrumentProto::set_supported_card_types(int index, ::google::protobuf::int32 value) {
  supported_card_types_.Set(index, value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentProto.supported_card_types)
}
inline void StoredPaymentInstrumentProto::add_supported_card_types(::google::protobuf::int32 value) {
  supported_card_types_.Add(value);
  // @@protoc_insertion_point(field_add:content.StoredPaymentInstrumentProto.supported_card_types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
StoredPaymentInstrumentProto::supported_card_types() const {
  // @@protoc_insertion_point(field_list:content.StoredPaymentInstrumentProto.supported_card_types)
  return supported_card_types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
StoredPaymentInstrumentProto::mutable_supported_card_types() {
  // @@protoc_insertion_point(field_mutable_list:content.StoredPaymentInstrumentProto.supported_card_types)
  return &supported_card_types_;
}

// -------------------------------------------------------------------

// StoredRelatedApplicationProto

// optional string platform = 1;
inline bool StoredRelatedApplicationProto::has_platform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoredRelatedApplicationProto::set_has_platform() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoredRelatedApplicationProto::clear_has_platform() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoredRelatedApplicationProto::clear_platform() {
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platform();
}
inline const ::std::string& StoredRelatedApplicationProto::platform() const {
  // @@protoc_insertion_point(field_get:content.StoredRelatedApplicationProto.platform)
  return platform_.GetNoArena();
}
inline void StoredRelatedApplicationProto::set_platform(const ::std::string& value) {
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredRelatedApplicationProto.platform)
}
#if LANG_CXX11
inline void StoredRelatedApplicationProto::set_platform(::std::string&& value) {
  set_has_platform();
  platform_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredRelatedApplicationProto.platform)
}
#endif
inline void StoredRelatedApplicationProto::set_platform(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredRelatedApplicationProto.platform)
}
inline void StoredRelatedApplicationProto::set_platform(const char* value, size_t size) {
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredRelatedApplicationProto.platform)
}
inline ::std::string* StoredRelatedApplicationProto::mutable_platform() {
  set_has_platform();
  // @@protoc_insertion_point(field_mutable:content.StoredRelatedApplicationProto.platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoredRelatedApplicationProto::release_platform() {
  // @@protoc_insertion_point(field_release:content.StoredRelatedApplicationProto.platform)
  clear_has_platform();
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoredRelatedApplicationProto::set_allocated_platform(::std::string* platform) {
  if (platform != NULL) {
    set_has_platform();
  } else {
    clear_has_platform();
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:content.StoredRelatedApplicationProto.platform)
}

// optional string id = 2;
inline bool StoredRelatedApplicationProto::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoredRelatedApplicationProto::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoredRelatedApplicationProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoredRelatedApplicationProto::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& StoredRelatedApplicationProto::id() const {
  // @@protoc_insertion_point(field_get:content.StoredRelatedApplicationProto.id)
  return id_.GetNoArena();
}
inline void StoredRelatedApplicationProto::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredRelatedApplicationProto.id)
}
#if LANG_CXX11
inline void StoredRelatedApplicationProto::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredRelatedApplicationProto.id)
}
#endif
inline void StoredRelatedApplicationProto::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredRelatedApplicationProto.id)
}
inline void StoredRelatedApplicationProto::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredRelatedApplicationProto.id)
}
inline ::std::string* StoredRelatedApplicationProto::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:content.StoredRelatedApplicationProto.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoredRelatedApplicationProto::release_id() {
  // @@protoc_insertion_point(field_release:content.StoredRelatedApplicationProto.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoredRelatedApplicationProto::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:content.StoredRelatedApplicationProto.id)
}

// -------------------------------------------------------------------

// StoredPaymentAppProto

// optional int64 registration_id = 1;
inline bool StoredPaymentAppProto::has_registration_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StoredPaymentAppProto::set_has_registration_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StoredPaymentAppProto::clear_has_registration_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StoredPaymentAppProto::clear_registration_id() {
  registration_id_ = GOOGLE_LONGLONG(0);
  clear_has_registration_id();
}
inline ::google::protobuf::int64 StoredPaymentAppProto::registration_id() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentAppProto.registration_id)
  return registration_id_;
}
inline void StoredPaymentAppProto::set_registration_id(::google::protobuf::int64 value) {
  set_has_registration_id();
  registration_id_ = value;
  // @@protoc_insertion_point(field_set:content.StoredPaymentAppProto.registration_id)
}

// optional string scope = 2;
inline bool StoredPaymentAppProto::has_scope() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoredPaymentAppProto::set_has_scope() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoredPaymentAppProto::clear_has_scope() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoredPaymentAppProto::clear_scope() {
  scope_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_scope();
}
inline const ::std::string& StoredPaymentAppProto::scope() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentAppProto.scope)
  return scope_.GetNoArena();
}
inline void StoredPaymentAppProto::set_scope(const ::std::string& value) {
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentAppProto.scope)
}
#if LANG_CXX11
inline void StoredPaymentAppProto::set_scope(::std::string&& value) {
  set_has_scope();
  scope_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentAppProto.scope)
}
#endif
inline void StoredPaymentAppProto::set_scope(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentAppProto.scope)
}
inline void StoredPaymentAppProto::set_scope(const char* value, size_t size) {
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentAppProto.scope)
}
inline ::std::string* StoredPaymentAppProto::mutable_scope() {
  set_has_scope();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentAppProto.scope)
  return scope_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoredPaymentAppProto::release_scope() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentAppProto.scope)
  clear_has_scope();
  return scope_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoredPaymentAppProto::set_allocated_scope(::std::string* scope) {
  if (scope != NULL) {
    set_has_scope();
  } else {
    clear_has_scope();
  }
  scope_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scope);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentAppProto.scope)
}

// optional string name = 3;
inline bool StoredPaymentAppProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoredPaymentAppProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoredPaymentAppProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoredPaymentAppProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& StoredPaymentAppProto::name() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentAppProto.name)
  return name_.GetNoArena();
}
inline void StoredPaymentAppProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentAppProto.name)
}
#if LANG_CXX11
inline void StoredPaymentAppProto::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentAppProto.name)
}
#endif
inline void StoredPaymentAppProto::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentAppProto.name)
}
inline void StoredPaymentAppProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentAppProto.name)
}
inline ::std::string* StoredPaymentAppProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentAppProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoredPaymentAppProto::release_name() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentAppProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoredPaymentAppProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentAppProto.name)
}

// optional string icon = 4;
inline bool StoredPaymentAppProto::has_icon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StoredPaymentAppProto::set_has_icon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StoredPaymentAppProto::clear_has_icon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StoredPaymentAppProto::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_icon();
}
inline const ::std::string& StoredPaymentAppProto::icon() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentAppProto.icon)
  return icon_.GetNoArena();
}
inline void StoredPaymentAppProto::set_icon(const ::std::string& value) {
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentAppProto.icon)
}
#if LANG_CXX11
inline void StoredPaymentAppProto::set_icon(::std::string&& value) {
  set_has_icon();
  icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentAppProto.icon)
}
#endif
inline void StoredPaymentAppProto::set_icon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentAppProto.icon)
}
inline void StoredPaymentAppProto::set_icon(const char* value, size_t size) {
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentAppProto.icon)
}
inline ::std::string* StoredPaymentAppProto::mutable_icon() {
  set_has_icon();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentAppProto.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoredPaymentAppProto::release_icon() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentAppProto.icon)
  clear_has_icon();
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoredPaymentAppProto::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    set_has_icon();
  } else {
    clear_has_icon();
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentAppProto.icon)
}

// optional bool prefer_related_applications = 5;
inline bool StoredPaymentAppProto::has_prefer_related_applications() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StoredPaymentAppProto::set_has_prefer_related_applications() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StoredPaymentAppProto::clear_has_prefer_related_applications() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StoredPaymentAppProto::clear_prefer_related_applications() {
  prefer_related_applications_ = false;
  clear_has_prefer_related_applications();
}
inline bool StoredPaymentAppProto::prefer_related_applications() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentAppProto.prefer_related_applications)
  return prefer_related_applications_;
}
inline void StoredPaymentAppProto::set_prefer_related_applications(bool value) {
  set_has_prefer_related_applications();
  prefer_related_applications_ = value;
  // @@protoc_insertion_point(field_set:content.StoredPaymentAppProto.prefer_related_applications)
}

// repeated .content.StoredRelatedApplicationProto related_applications = 6;
inline int StoredPaymentAppProto::related_applications_size() const {
  return related_applications_.size();
}
inline void StoredPaymentAppProto::clear_related_applications() {
  related_applications_.Clear();
}
inline const ::content::StoredRelatedApplicationProto& StoredPaymentAppProto::related_applications(int index) const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentAppProto.related_applications)
  return related_applications_.Get(index);
}
inline ::content::StoredRelatedApplicationProto* StoredPaymentAppProto::mutable_related_applications(int index) {
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentAppProto.related_applications)
  return related_applications_.Mutable(index);
}
inline ::content::StoredRelatedApplicationProto* StoredPaymentAppProto::add_related_applications() {
  // @@protoc_insertion_point(field_add:content.StoredPaymentAppProto.related_applications)
  return related_applications_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::content::StoredRelatedApplicationProto >*
StoredPaymentAppProto::mutable_related_applications() {
  // @@protoc_insertion_point(field_mutable_list:content.StoredPaymentAppProto.related_applications)
  return &related_applications_;
}
inline const ::google::protobuf::RepeatedPtrField< ::content::StoredRelatedApplicationProto >&
StoredPaymentAppProto::related_applications() const {
  // @@protoc_insertion_point(field_list:content.StoredPaymentAppProto.related_applications)
  return related_applications_;
}

// optional string user_hint = 7;
inline bool StoredPaymentAppProto::has_user_hint() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StoredPaymentAppProto::set_has_user_hint() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StoredPaymentAppProto::clear_has_user_hint() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StoredPaymentAppProto::clear_user_hint() {
  user_hint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_hint();
}
inline const ::std::string& StoredPaymentAppProto::user_hint() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentAppProto.user_hint)
  return user_hint_.GetNoArena();
}
inline void StoredPaymentAppProto::set_user_hint(const ::std::string& value) {
  set_has_user_hint();
  user_hint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentAppProto.user_hint)
}
#if LANG_CXX11
inline void StoredPaymentAppProto::set_user_hint(::std::string&& value) {
  set_has_user_hint();
  user_hint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentAppProto.user_hint)
}
#endif
inline void StoredPaymentAppProto::set_user_hint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_hint();
  user_hint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentAppProto.user_hint)
}
inline void StoredPaymentAppProto::set_user_hint(const char* value, size_t size) {
  set_has_user_hint();
  user_hint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentAppProto.user_hint)
}
inline ::std::string* StoredPaymentAppProto::mutable_user_hint() {
  set_has_user_hint();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentAppProto.user_hint)
  return user_hint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoredPaymentAppProto::release_user_hint() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentAppProto.user_hint)
  clear_has_user_hint();
  return user_hint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoredPaymentAppProto::set_allocated_user_hint(::std::string* user_hint) {
  if (user_hint != NULL) {
    set_has_user_hint();
  } else {
    clear_has_user_hint();
  }
  user_hint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_hint);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentAppProto.user_hint)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace content

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_payment_5fapp_2eproto__INCLUDED
