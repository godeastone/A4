// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: payment_app.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "payment_app.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace content {
class StoredPaymentInstrumentKeyInfoProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StoredPaymentInstrumentKeyInfoProto> {
} _StoredPaymentInstrumentKeyInfoProto_default_instance_;
class ImageSizeProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ImageSizeProto> {
} _ImageSizeProto_default_instance_;
class StoredPaymentInstrumentImageObjectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StoredPaymentInstrumentImageObject> {
} _StoredPaymentInstrumentImageObject_default_instance_;
class StoredPaymentInstrumentProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StoredPaymentInstrumentProto> {
} _StoredPaymentInstrumentProto_default_instance_;
class StoredRelatedApplicationProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StoredRelatedApplicationProto> {
} _StoredRelatedApplicationProto_default_instance_;
class StoredPaymentAppProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StoredPaymentAppProto> {
} _StoredPaymentAppProto_default_instance_;

namespace protobuf_payment_5fapp_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _StoredPaymentInstrumentKeyInfoProto_default_instance_.Shutdown();
  _ImageSizeProto_default_instance_.Shutdown();
  _StoredPaymentInstrumentImageObject_default_instance_.Shutdown();
  _StoredPaymentInstrumentProto_default_instance_.Shutdown();
  _StoredRelatedApplicationProto_default_instance_.Shutdown();
  _StoredPaymentAppProto_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _StoredPaymentInstrumentKeyInfoProto_default_instance_.DefaultConstruct();
  _ImageSizeProto_default_instance_.DefaultConstruct();
  _StoredPaymentInstrumentImageObject_default_instance_.DefaultConstruct();
  _StoredPaymentInstrumentProto_default_instance_.DefaultConstruct();
  _StoredRelatedApplicationProto_default_instance_.DefaultConstruct();
  _StoredPaymentAppProto_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_payment_5fapp_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoredPaymentInstrumentKeyInfoProto::kInsertionOrderFieldNumber;
const int StoredPaymentInstrumentKeyInfoProto::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoredPaymentInstrumentKeyInfoProto::StoredPaymentInstrumentKeyInfoProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_payment_5fapp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.StoredPaymentInstrumentKeyInfoProto)
}
StoredPaymentInstrumentKeyInfoProto::StoredPaymentInstrumentKeyInfoProto(const StoredPaymentInstrumentKeyInfoProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  insertion_order_ = from.insertion_order_;
  // @@protoc_insertion_point(copy_constructor:content.StoredPaymentInstrumentKeyInfoProto)
}

void StoredPaymentInstrumentKeyInfoProto::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  insertion_order_ = GOOGLE_ULONGLONG(0);
}

StoredPaymentInstrumentKeyInfoProto::~StoredPaymentInstrumentKeyInfoProto() {
  // @@protoc_insertion_point(destructor:content.StoredPaymentInstrumentKeyInfoProto)
  SharedDtor();
}

void StoredPaymentInstrumentKeyInfoProto::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StoredPaymentInstrumentKeyInfoProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StoredPaymentInstrumentKeyInfoProto& StoredPaymentInstrumentKeyInfoProto::default_instance() {
  protobuf_payment_5fapp_2eproto::InitDefaults();
  return *internal_default_instance();
}

StoredPaymentInstrumentKeyInfoProto* StoredPaymentInstrumentKeyInfoProto::New(::google::protobuf::Arena* arena) const {
  StoredPaymentInstrumentKeyInfoProto* n = new StoredPaymentInstrumentKeyInfoProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoredPaymentInstrumentKeyInfoProto::Clear() {
// @@protoc_insertion_point(message_clear_start:content.StoredPaymentInstrumentKeyInfoProto)
  if (has_key()) {
    GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*key_.UnsafeRawStringPointer())->clear();
  }
  insertion_order_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StoredPaymentInstrumentKeyInfoProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:content.StoredPaymentInstrumentKeyInfoProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 insertion_order = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_insertion_order();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &insertion_order_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.StoredPaymentInstrumentKeyInfoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.StoredPaymentInstrumentKeyInfoProto)
  return false;
#undef DO_
}

void StoredPaymentInstrumentKeyInfoProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.StoredPaymentInstrumentKeyInfoProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 insertion_order = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->insertion_order(), output);
  }

  // optional string key = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.StoredPaymentInstrumentKeyInfoProto)
}

size_t StoredPaymentInstrumentKeyInfoProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.StoredPaymentInstrumentKeyInfoProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string key = 2;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional uint64 insertion_order = 1;
    if (has_insertion_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->insertion_order());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoredPaymentInstrumentKeyInfoProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StoredPaymentInstrumentKeyInfoProto*>(&from));
}

void StoredPaymentInstrumentKeyInfoProto::MergeFrom(const StoredPaymentInstrumentKeyInfoProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.StoredPaymentInstrumentKeyInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      insertion_order_ = from.insertion_order_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StoredPaymentInstrumentKeyInfoProto::CopyFrom(const StoredPaymentInstrumentKeyInfoProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.StoredPaymentInstrumentKeyInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoredPaymentInstrumentKeyInfoProto::IsInitialized() const {
  return true;
}

void StoredPaymentInstrumentKeyInfoProto::Swap(StoredPaymentInstrumentKeyInfoProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoredPaymentInstrumentKeyInfoProto::InternalSwap(StoredPaymentInstrumentKeyInfoProto* other) {
  key_.Swap(&other->key_);
  std::swap(insertion_order_, other->insertion_order_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string StoredPaymentInstrumentKeyInfoProto::GetTypeName() const {
  return "content.StoredPaymentInstrumentKeyInfoProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoredPaymentInstrumentKeyInfoProto

// optional uint64 insertion_order = 1;
bool StoredPaymentInstrumentKeyInfoProto::has_insertion_order() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StoredPaymentInstrumentKeyInfoProto::set_has_insertion_order() {
  _has_bits_[0] |= 0x00000002u;
}
void StoredPaymentInstrumentKeyInfoProto::clear_has_insertion_order() {
  _has_bits_[0] &= ~0x00000002u;
}
void StoredPaymentInstrumentKeyInfoProto::clear_insertion_order() {
  insertion_order_ = GOOGLE_ULONGLONG(0);
  clear_has_insertion_order();
}
::google::protobuf::uint64 StoredPaymentInstrumentKeyInfoProto::insertion_order() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentKeyInfoProto.insertion_order)
  return insertion_order_;
}
void StoredPaymentInstrumentKeyInfoProto::set_insertion_order(::google::protobuf::uint64 value) {
  set_has_insertion_order();
  insertion_order_ = value;
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentKeyInfoProto.insertion_order)
}

// optional string key = 2;
bool StoredPaymentInstrumentKeyInfoProto::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StoredPaymentInstrumentKeyInfoProto::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void StoredPaymentInstrumentKeyInfoProto::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void StoredPaymentInstrumentKeyInfoProto::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
const ::std::string& StoredPaymentInstrumentKeyInfoProto::key() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentKeyInfoProto.key)
  return key_.GetNoArena();
}
void StoredPaymentInstrumentKeyInfoProto::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentKeyInfoProto.key)
}
#if LANG_CXX11
void StoredPaymentInstrumentKeyInfoProto::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentInstrumentKeyInfoProto.key)
}
#endif
void StoredPaymentInstrumentKeyInfoProto::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentInstrumentKeyInfoProto.key)
}
void StoredPaymentInstrumentKeyInfoProto::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentInstrumentKeyInfoProto.key)
}
::std::string* StoredPaymentInstrumentKeyInfoProto::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentKeyInfoProto.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StoredPaymentInstrumentKeyInfoProto::release_key() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentInstrumentKeyInfoProto.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StoredPaymentInstrumentKeyInfoProto::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentInstrumentKeyInfoProto.key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageSizeProto::kWidthFieldNumber;
const int ImageSizeProto::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageSizeProto::ImageSizeProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_payment_5fapp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.ImageSizeProto)
}
ImageSizeProto::ImageSizeProto(const ImageSizeProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&width_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:content.ImageSizeProto)
}

void ImageSizeProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
}

ImageSizeProto::~ImageSizeProto() {
  // @@protoc_insertion_point(destructor:content.ImageSizeProto)
  SharedDtor();
}

void ImageSizeProto::SharedDtor() {
}

void ImageSizeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ImageSizeProto& ImageSizeProto::default_instance() {
  protobuf_payment_5fapp_2eproto::InitDefaults();
  return *internal_default_instance();
}

ImageSizeProto* ImageSizeProto::New(::google::protobuf::Arena* arena) const {
  ImageSizeProto* n = new ImageSizeProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImageSizeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:content.ImageSizeProto)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&width_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&height_) -
        reinterpret_cast<char*>(&width_)) + sizeof(height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ImageSizeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:content.ImageSizeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 width = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.ImageSizeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.ImageSizeProto)
  return false;
#undef DO_
}

void ImageSizeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.ImageSizeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 width = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->width(), output);
  }

  // optional uint64 height = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->height(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.ImageSizeProto)
}

size_t ImageSizeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.ImageSizeProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 width = 1;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->width());
    }

    // optional uint64 height = 2;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageSizeProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ImageSizeProto*>(&from));
}

void ImageSizeProto::MergeFrom(const ImageSizeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.ImageSizeProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000002u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ImageSizeProto::CopyFrom(const ImageSizeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.ImageSizeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageSizeProto::IsInitialized() const {
  return true;
}

void ImageSizeProto::Swap(ImageSizeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageSizeProto::InternalSwap(ImageSizeProto* other) {
  std::swap(width_, other->width_);
  std::swap(height_, other->height_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ImageSizeProto::GetTypeName() const {
  return "content.ImageSizeProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ImageSizeProto

// optional uint64 width = 1;
bool ImageSizeProto::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ImageSizeProto::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
void ImageSizeProto::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
void ImageSizeProto::clear_width() {
  width_ = GOOGLE_ULONGLONG(0);
  clear_has_width();
}
::google::protobuf::uint64 ImageSizeProto::width() const {
  // @@protoc_insertion_point(field_get:content.ImageSizeProto.width)
  return width_;
}
void ImageSizeProto::set_width(::google::protobuf::uint64 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:content.ImageSizeProto.width)
}

// optional uint64 height = 2;
bool ImageSizeProto::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ImageSizeProto::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
void ImageSizeProto::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
void ImageSizeProto::clear_height() {
  height_ = GOOGLE_ULONGLONG(0);
  clear_has_height();
}
::google::protobuf::uint64 ImageSizeProto::height() const {
  // @@protoc_insertion_point(field_get:content.ImageSizeProto.height)
  return height_;
}
void ImageSizeProto::set_height(::google::protobuf::uint64 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:content.ImageSizeProto.height)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoredPaymentInstrumentImageObject::kSrcFieldNumber;
const int StoredPaymentInstrumentImageObject::kTypeFieldNumber;
const int StoredPaymentInstrumentImageObject::kSizesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoredPaymentInstrumentImageObject::StoredPaymentInstrumentImageObject()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_payment_5fapp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.StoredPaymentInstrumentImageObject)
}
StoredPaymentInstrumentImageObject::StoredPaymentInstrumentImageObject(const StoredPaymentInstrumentImageObject& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      sizes_(from.sizes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_src()) {
    src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  // @@protoc_insertion_point(copy_constructor:content.StoredPaymentInstrumentImageObject)
}

void StoredPaymentInstrumentImageObject::SharedCtor() {
  _cached_size_ = 0;
  src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StoredPaymentInstrumentImageObject::~StoredPaymentInstrumentImageObject() {
  // @@protoc_insertion_point(destructor:content.StoredPaymentInstrumentImageObject)
  SharedDtor();
}

void StoredPaymentInstrumentImageObject::SharedDtor() {
  src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StoredPaymentInstrumentImageObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StoredPaymentInstrumentImageObject& StoredPaymentInstrumentImageObject::default_instance() {
  protobuf_payment_5fapp_2eproto::InitDefaults();
  return *internal_default_instance();
}

StoredPaymentInstrumentImageObject* StoredPaymentInstrumentImageObject::New(::google::protobuf::Arena* arena) const {
  StoredPaymentInstrumentImageObject* n = new StoredPaymentInstrumentImageObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoredPaymentInstrumentImageObject::Clear() {
// @@protoc_insertion_point(message_clear_start:content.StoredPaymentInstrumentImageObject)
  sizes_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_src()) {
      GOOGLE_DCHECK(!src_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*src_.UnsafeRawStringPointer())->clear();
    }
    if (has_type()) {
      GOOGLE_DCHECK(!type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*type_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StoredPaymentInstrumentImageObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:content.StoredPaymentInstrumentImageObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string src = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .content.ImageSizeProto sizes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sizes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.StoredPaymentInstrumentImageObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.StoredPaymentInstrumentImageObject)
  return false;
#undef DO_
}

void StoredPaymentInstrumentImageObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.StoredPaymentInstrumentImageObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string src = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->src(), output);
  }

  // optional string type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // repeated .content.ImageSizeProto sizes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sizes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->sizes(static_cast<int>(i)), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.StoredPaymentInstrumentImageObject)
}

size_t StoredPaymentInstrumentImageObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.StoredPaymentInstrumentImageObject)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated .content.ImageSizeProto sizes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->sizes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sizes(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string src = 1;
    if (has_src()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->src());
    }

    // optional string type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoredPaymentInstrumentImageObject::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StoredPaymentInstrumentImageObject*>(&from));
}

void StoredPaymentInstrumentImageObject::MergeFrom(const StoredPaymentInstrumentImageObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.StoredPaymentInstrumentImageObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sizes_.MergeFrom(from.sizes_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_src();
      src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
  }
}

void StoredPaymentInstrumentImageObject::CopyFrom(const StoredPaymentInstrumentImageObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.StoredPaymentInstrumentImageObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoredPaymentInstrumentImageObject::IsInitialized() const {
  return true;
}

void StoredPaymentInstrumentImageObject::Swap(StoredPaymentInstrumentImageObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoredPaymentInstrumentImageObject::InternalSwap(StoredPaymentInstrumentImageObject* other) {
  sizes_.InternalSwap(&other->sizes_);
  src_.Swap(&other->src_);
  type_.Swap(&other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string StoredPaymentInstrumentImageObject::GetTypeName() const {
  return "content.StoredPaymentInstrumentImageObject";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoredPaymentInstrumentImageObject

// optional string src = 1;
bool StoredPaymentInstrumentImageObject::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StoredPaymentInstrumentImageObject::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
void StoredPaymentInstrumentImageObject::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
void StoredPaymentInstrumentImageObject::clear_src() {
  src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_src();
}
const ::std::string& StoredPaymentInstrumentImageObject::src() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentImageObject.src)
  return src_.GetNoArena();
}
void StoredPaymentInstrumentImageObject::set_src(const ::std::string& value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentImageObject.src)
}
#if LANG_CXX11
void StoredPaymentInstrumentImageObject::set_src(::std::string&& value) {
  set_has_src();
  src_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentInstrumentImageObject.src)
}
#endif
void StoredPaymentInstrumentImageObject::set_src(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentInstrumentImageObject.src)
}
void StoredPaymentInstrumentImageObject::set_src(const char* value, size_t size) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentInstrumentImageObject.src)
}
::std::string* StoredPaymentInstrumentImageObject::mutable_src() {
  set_has_src();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentImageObject.src)
  return src_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StoredPaymentInstrumentImageObject::release_src() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentInstrumentImageObject.src)
  clear_has_src();
  return src_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StoredPaymentInstrumentImageObject::set_allocated_src(::std::string* src) {
  if (src != NULL) {
    set_has_src();
  } else {
    clear_has_src();
  }
  src_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentInstrumentImageObject.src)
}

// optional string type = 2;
bool StoredPaymentInstrumentImageObject::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StoredPaymentInstrumentImageObject::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void StoredPaymentInstrumentImageObject::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void StoredPaymentInstrumentImageObject::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& StoredPaymentInstrumentImageObject::type() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentImageObject.type)
  return type_.GetNoArena();
}
void StoredPaymentInstrumentImageObject::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentImageObject.type)
}
#if LANG_CXX11
void StoredPaymentInstrumentImageObject::set_type(::std::string&& value) {
  set_has_type();
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentInstrumentImageObject.type)
}
#endif
void StoredPaymentInstrumentImageObject::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentInstrumentImageObject.type)
}
void StoredPaymentInstrumentImageObject::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentInstrumentImageObject.type)
}
::std::string* StoredPaymentInstrumentImageObject::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentImageObject.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StoredPaymentInstrumentImageObject::release_type() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentInstrumentImageObject.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StoredPaymentInstrumentImageObject::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentInstrumentImageObject.type)
}

// repeated .content.ImageSizeProto sizes = 3;
int StoredPaymentInstrumentImageObject::sizes_size() const {
  return sizes_.size();
}
void StoredPaymentInstrumentImageObject::clear_sizes() {
  sizes_.Clear();
}
const ::content::ImageSizeProto& StoredPaymentInstrumentImageObject::sizes(int index) const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentImageObject.sizes)
  return sizes_.Get(index);
}
::content::ImageSizeProto* StoredPaymentInstrumentImageObject::mutable_sizes(int index) {
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentImageObject.sizes)
  return sizes_.Mutable(index);
}
::content::ImageSizeProto* StoredPaymentInstrumentImageObject::add_sizes() {
  // @@protoc_insertion_point(field_add:content.StoredPaymentInstrumentImageObject.sizes)
  return sizes_.Add();
}
::google::protobuf::RepeatedPtrField< ::content::ImageSizeProto >*
StoredPaymentInstrumentImageObject::mutable_sizes() {
  // @@protoc_insertion_point(field_mutable_list:content.StoredPaymentInstrumentImageObject.sizes)
  return &sizes_;
}
const ::google::protobuf::RepeatedPtrField< ::content::ImageSizeProto >&
StoredPaymentInstrumentImageObject::sizes() const {
  // @@protoc_insertion_point(field_list:content.StoredPaymentInstrumentImageObject.sizes)
  return sizes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoredPaymentInstrumentProto::kRegistrationIdFieldNumber;
const int StoredPaymentInstrumentProto::kInstrumentKeyFieldNumber;
const int StoredPaymentInstrumentProto::kNameFieldNumber;
const int StoredPaymentInstrumentProto::kMethodFieldNumber;
const int StoredPaymentInstrumentProto::kStringifiedCapabilitiesFieldNumber;
const int StoredPaymentInstrumentProto::kIconsFieldNumber;
const int StoredPaymentInstrumentProto::kDecodedInstrumentIconFieldNumber;
const int StoredPaymentInstrumentProto::kSupportedCardNetworksFieldNumber;
const int StoredPaymentInstrumentProto::kSupportedCardTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoredPaymentInstrumentProto::StoredPaymentInstrumentProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_payment_5fapp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.StoredPaymentInstrumentProto)
}
StoredPaymentInstrumentProto::StoredPaymentInstrumentProto(const StoredPaymentInstrumentProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      icons_(from.icons_),
      supported_card_networks_(from.supported_card_networks_),
      supported_card_types_(from.supported_card_types_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instrument_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_instrument_key()) {
    instrument_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_key_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_method()) {
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  stringified_capabilities_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_stringified_capabilities()) {
    stringified_capabilities_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stringified_capabilities_);
  }
  decoded_instrument_icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_decoded_instrument_icon()) {
    decoded_instrument_icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.decoded_instrument_icon_);
  }
  registration_id_ = from.registration_id_;
  // @@protoc_insertion_point(copy_constructor:content.StoredPaymentInstrumentProto)
}

void StoredPaymentInstrumentProto::SharedCtor() {
  _cached_size_ = 0;
  instrument_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stringified_capabilities_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  decoded_instrument_icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registration_id_ = GOOGLE_LONGLONG(0);
}

StoredPaymentInstrumentProto::~StoredPaymentInstrumentProto() {
  // @@protoc_insertion_point(destructor:content.StoredPaymentInstrumentProto)
  SharedDtor();
}

void StoredPaymentInstrumentProto::SharedDtor() {
  instrument_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stringified_capabilities_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  decoded_instrument_icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StoredPaymentInstrumentProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StoredPaymentInstrumentProto& StoredPaymentInstrumentProto::default_instance() {
  protobuf_payment_5fapp_2eproto::InitDefaults();
  return *internal_default_instance();
}

StoredPaymentInstrumentProto* StoredPaymentInstrumentProto::New(::google::protobuf::Arena* arena) const {
  StoredPaymentInstrumentProto* n = new StoredPaymentInstrumentProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoredPaymentInstrumentProto::Clear() {
// @@protoc_insertion_point(message_clear_start:content.StoredPaymentInstrumentProto)
  icons_.Clear();
  supported_card_networks_.Clear();
  supported_card_types_.Clear();
  if (_has_bits_[0 / 32] & 31u) {
    if (has_instrument_key()) {
      GOOGLE_DCHECK(!instrument_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*instrument_key_.UnsafeRawStringPointer())->clear();
    }
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_method()) {
      GOOGLE_DCHECK(!method_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*method_.UnsafeRawStringPointer())->clear();
    }
    if (has_stringified_capabilities()) {
      GOOGLE_DCHECK(!stringified_capabilities_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*stringified_capabilities_.UnsafeRawStringPointer())->clear();
    }
    if (has_decoded_instrument_icon()) {
      GOOGLE_DCHECK(!decoded_instrument_icon_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*decoded_instrument_icon_.UnsafeRawStringPointer())->clear();
    }
  }
  registration_id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StoredPaymentInstrumentProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:content.StoredPaymentInstrumentProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 registration_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_registration_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &registration_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string instrument_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrument_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string method = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string stringified_capabilities = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stringified_capabilities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .content.StoredPaymentInstrumentImageObject icons = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_icons()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string decoded_instrument_icon = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_decoded_instrument_icon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 supported_card_networks = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 64u, input, this->mutable_supported_card_networks())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(66u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_supported_card_networks())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 supported_card_types = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 72u, input, this->mutable_supported_card_types())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(74u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_supported_card_types())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.StoredPaymentInstrumentProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.StoredPaymentInstrumentProto)
  return false;
#undef DO_
}

void StoredPaymentInstrumentProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.StoredPaymentInstrumentProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 registration_id = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->registration_id(), output);
  }

  // optional string instrument_key = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->instrument_key(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string method = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->method(), output);
  }

  // optional string stringified_capabilities = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->stringified_capabilities(), output);
  }

  // repeated .content.StoredPaymentInstrumentImageObject icons = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->icons_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->icons(static_cast<int>(i)), output);
  }

  // optional string decoded_instrument_icon = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->decoded_instrument_icon(), output);
  }

  // repeated int32 supported_card_networks = 8;
  for (int i = 0, n = this->supported_card_networks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      8, this->supported_card_networks(i), output);
  }

  // repeated int32 supported_card_types = 9;
  for (int i = 0, n = this->supported_card_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      9, this->supported_card_types(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.StoredPaymentInstrumentProto)
}

size_t StoredPaymentInstrumentProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.StoredPaymentInstrumentProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated .content.StoredPaymentInstrumentImageObject icons = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->icons_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->icons(static_cast<int>(i)));
    }
  }

  // repeated int32 supported_card_networks = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->supported_card_networks_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->supported_card_networks_size());
    total_size += data_size;
  }

  // repeated int32 supported_card_types = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->supported_card_types_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->supported_card_types_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional string instrument_key = 2;
    if (has_instrument_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->instrument_key());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string method = 4;
    if (has_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->method());
    }

    // optional string stringified_capabilities = 5;
    if (has_stringified_capabilities()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stringified_capabilities());
    }

    // optional string decoded_instrument_icon = 7;
    if (has_decoded_instrument_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->decoded_instrument_icon());
    }

    // optional int64 registration_id = 1;
    if (has_registration_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->registration_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoredPaymentInstrumentProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StoredPaymentInstrumentProto*>(&from));
}

void StoredPaymentInstrumentProto::MergeFrom(const StoredPaymentInstrumentProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.StoredPaymentInstrumentProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  icons_.MergeFrom(from.icons_);
  supported_card_networks_.MergeFrom(from.supported_card_networks_);
  supported_card_types_.MergeFrom(from.supported_card_types_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_instrument_key();
      instrument_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_method();
      method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_stringified_capabilities();
      stringified_capabilities_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stringified_capabilities_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_decoded_instrument_icon();
      decoded_instrument_icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.decoded_instrument_icon_);
    }
    if (cached_has_bits & 0x00000020u) {
      registration_id_ = from.registration_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StoredPaymentInstrumentProto::CopyFrom(const StoredPaymentInstrumentProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.StoredPaymentInstrumentProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoredPaymentInstrumentProto::IsInitialized() const {
  return true;
}

void StoredPaymentInstrumentProto::Swap(StoredPaymentInstrumentProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoredPaymentInstrumentProto::InternalSwap(StoredPaymentInstrumentProto* other) {
  icons_.InternalSwap(&other->icons_);
  supported_card_networks_.InternalSwap(&other->supported_card_networks_);
  supported_card_types_.InternalSwap(&other->supported_card_types_);
  instrument_key_.Swap(&other->instrument_key_);
  name_.Swap(&other->name_);
  method_.Swap(&other->method_);
  stringified_capabilities_.Swap(&other->stringified_capabilities_);
  decoded_instrument_icon_.Swap(&other->decoded_instrument_icon_);
  std::swap(registration_id_, other->registration_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string StoredPaymentInstrumentProto::GetTypeName() const {
  return "content.StoredPaymentInstrumentProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoredPaymentInstrumentProto

// optional int64 registration_id = 1;
bool StoredPaymentInstrumentProto::has_registration_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void StoredPaymentInstrumentProto::set_has_registration_id() {
  _has_bits_[0] |= 0x00000020u;
}
void StoredPaymentInstrumentProto::clear_has_registration_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void StoredPaymentInstrumentProto::clear_registration_id() {
  registration_id_ = GOOGLE_LONGLONG(0);
  clear_has_registration_id();
}
::google::protobuf::int64 StoredPaymentInstrumentProto::registration_id() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentProto.registration_id)
  return registration_id_;
}
void StoredPaymentInstrumentProto::set_registration_id(::google::protobuf::int64 value) {
  set_has_registration_id();
  registration_id_ = value;
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentProto.registration_id)
}

// optional string instrument_key = 2;
bool StoredPaymentInstrumentProto::has_instrument_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StoredPaymentInstrumentProto::set_has_instrument_key() {
  _has_bits_[0] |= 0x00000001u;
}
void StoredPaymentInstrumentProto::clear_has_instrument_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void StoredPaymentInstrumentProto::clear_instrument_key() {
  instrument_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrument_key();
}
const ::std::string& StoredPaymentInstrumentProto::instrument_key() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentProto.instrument_key)
  return instrument_key_.GetNoArena();
}
void StoredPaymentInstrumentProto::set_instrument_key(const ::std::string& value) {
  set_has_instrument_key();
  instrument_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentProto.instrument_key)
}
#if LANG_CXX11
void StoredPaymentInstrumentProto::set_instrument_key(::std::string&& value) {
  set_has_instrument_key();
  instrument_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentInstrumentProto.instrument_key)
}
#endif
void StoredPaymentInstrumentProto::set_instrument_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_instrument_key();
  instrument_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentInstrumentProto.instrument_key)
}
void StoredPaymentInstrumentProto::set_instrument_key(const char* value, size_t size) {
  set_has_instrument_key();
  instrument_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentInstrumentProto.instrument_key)
}
::std::string* StoredPaymentInstrumentProto::mutable_instrument_key() {
  set_has_instrument_key();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentProto.instrument_key)
  return instrument_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StoredPaymentInstrumentProto::release_instrument_key() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentInstrumentProto.instrument_key)
  clear_has_instrument_key();
  return instrument_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StoredPaymentInstrumentProto::set_allocated_instrument_key(::std::string* instrument_key) {
  if (instrument_key != NULL) {
    set_has_instrument_key();
  } else {
    clear_has_instrument_key();
  }
  instrument_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrument_key);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentInstrumentProto.instrument_key)
}

// optional string name = 3;
bool StoredPaymentInstrumentProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StoredPaymentInstrumentProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void StoredPaymentInstrumentProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void StoredPaymentInstrumentProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& StoredPaymentInstrumentProto::name() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentProto.name)
  return name_.GetNoArena();
}
void StoredPaymentInstrumentProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentProto.name)
}
#if LANG_CXX11
void StoredPaymentInstrumentProto::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentInstrumentProto.name)
}
#endif
void StoredPaymentInstrumentProto::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentInstrumentProto.name)
}
void StoredPaymentInstrumentProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentInstrumentProto.name)
}
::std::string* StoredPaymentInstrumentProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StoredPaymentInstrumentProto::release_name() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentInstrumentProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StoredPaymentInstrumentProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentInstrumentProto.name)
}

// optional string method = 4;
bool StoredPaymentInstrumentProto::has_method() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void StoredPaymentInstrumentProto::set_has_method() {
  _has_bits_[0] |= 0x00000004u;
}
void StoredPaymentInstrumentProto::clear_has_method() {
  _has_bits_[0] &= ~0x00000004u;
}
void StoredPaymentInstrumentProto::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method();
}
const ::std::string& StoredPaymentInstrumentProto::method() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentProto.method)
  return method_.GetNoArena();
}
void StoredPaymentInstrumentProto::set_method(const ::std::string& value) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentProto.method)
}
#if LANG_CXX11
void StoredPaymentInstrumentProto::set_method(::std::string&& value) {
  set_has_method();
  method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentInstrumentProto.method)
}
#endif
void StoredPaymentInstrumentProto::set_method(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentInstrumentProto.method)
}
void StoredPaymentInstrumentProto::set_method(const char* value, size_t size) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentInstrumentProto.method)
}
::std::string* StoredPaymentInstrumentProto::mutable_method() {
  set_has_method();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentProto.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StoredPaymentInstrumentProto::release_method() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentInstrumentProto.method)
  clear_has_method();
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StoredPaymentInstrumentProto::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    set_has_method();
  } else {
    clear_has_method();
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentInstrumentProto.method)
}

// optional string stringified_capabilities = 5;
bool StoredPaymentInstrumentProto::has_stringified_capabilities() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void StoredPaymentInstrumentProto::set_has_stringified_capabilities() {
  _has_bits_[0] |= 0x00000008u;
}
void StoredPaymentInstrumentProto::clear_has_stringified_capabilities() {
  _has_bits_[0] &= ~0x00000008u;
}
void StoredPaymentInstrumentProto::clear_stringified_capabilities() {
  stringified_capabilities_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_stringified_capabilities();
}
const ::std::string& StoredPaymentInstrumentProto::stringified_capabilities() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentProto.stringified_capabilities)
  return stringified_capabilities_.GetNoArena();
}
void StoredPaymentInstrumentProto::set_stringified_capabilities(const ::std::string& value) {
  set_has_stringified_capabilities();
  stringified_capabilities_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentProto.stringified_capabilities)
}
#if LANG_CXX11
void StoredPaymentInstrumentProto::set_stringified_capabilities(::std::string&& value) {
  set_has_stringified_capabilities();
  stringified_capabilities_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentInstrumentProto.stringified_capabilities)
}
#endif
void StoredPaymentInstrumentProto::set_stringified_capabilities(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_stringified_capabilities();
  stringified_capabilities_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentInstrumentProto.stringified_capabilities)
}
void StoredPaymentInstrumentProto::set_stringified_capabilities(const char* value, size_t size) {
  set_has_stringified_capabilities();
  stringified_capabilities_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentInstrumentProto.stringified_capabilities)
}
::std::string* StoredPaymentInstrumentProto::mutable_stringified_capabilities() {
  set_has_stringified_capabilities();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentProto.stringified_capabilities)
  return stringified_capabilities_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StoredPaymentInstrumentProto::release_stringified_capabilities() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentInstrumentProto.stringified_capabilities)
  clear_has_stringified_capabilities();
  return stringified_capabilities_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StoredPaymentInstrumentProto::set_allocated_stringified_capabilities(::std::string* stringified_capabilities) {
  if (stringified_capabilities != NULL) {
    set_has_stringified_capabilities();
  } else {
    clear_has_stringified_capabilities();
  }
  stringified_capabilities_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stringified_capabilities);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentInstrumentProto.stringified_capabilities)
}

// repeated .content.StoredPaymentInstrumentImageObject icons = 6;
int StoredPaymentInstrumentProto::icons_size() const {
  return icons_.size();
}
void StoredPaymentInstrumentProto::clear_icons() {
  icons_.Clear();
}
const ::content::StoredPaymentInstrumentImageObject& StoredPaymentInstrumentProto::icons(int index) const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentProto.icons)
  return icons_.Get(index);
}
::content::StoredPaymentInstrumentImageObject* StoredPaymentInstrumentProto::mutable_icons(int index) {
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentProto.icons)
  return icons_.Mutable(index);
}
::content::StoredPaymentInstrumentImageObject* StoredPaymentInstrumentProto::add_icons() {
  // @@protoc_insertion_point(field_add:content.StoredPaymentInstrumentProto.icons)
  return icons_.Add();
}
::google::protobuf::RepeatedPtrField< ::content::StoredPaymentInstrumentImageObject >*
StoredPaymentInstrumentProto::mutable_icons() {
  // @@protoc_insertion_point(field_mutable_list:content.StoredPaymentInstrumentProto.icons)
  return &icons_;
}
const ::google::protobuf::RepeatedPtrField< ::content::StoredPaymentInstrumentImageObject >&
StoredPaymentInstrumentProto::icons() const {
  // @@protoc_insertion_point(field_list:content.StoredPaymentInstrumentProto.icons)
  return icons_;
}

// optional string decoded_instrument_icon = 7;
bool StoredPaymentInstrumentProto::has_decoded_instrument_icon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void StoredPaymentInstrumentProto::set_has_decoded_instrument_icon() {
  _has_bits_[0] |= 0x00000010u;
}
void StoredPaymentInstrumentProto::clear_has_decoded_instrument_icon() {
  _has_bits_[0] &= ~0x00000010u;
}
void StoredPaymentInstrumentProto::clear_decoded_instrument_icon() {
  decoded_instrument_icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_decoded_instrument_icon();
}
const ::std::string& StoredPaymentInstrumentProto::decoded_instrument_icon() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentProto.decoded_instrument_icon)
  return decoded_instrument_icon_.GetNoArena();
}
void StoredPaymentInstrumentProto::set_decoded_instrument_icon(const ::std::string& value) {
  set_has_decoded_instrument_icon();
  decoded_instrument_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentProto.decoded_instrument_icon)
}
#if LANG_CXX11
void StoredPaymentInstrumentProto::set_decoded_instrument_icon(::std::string&& value) {
  set_has_decoded_instrument_icon();
  decoded_instrument_icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentInstrumentProto.decoded_instrument_icon)
}
#endif
void StoredPaymentInstrumentProto::set_decoded_instrument_icon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_decoded_instrument_icon();
  decoded_instrument_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentInstrumentProto.decoded_instrument_icon)
}
void StoredPaymentInstrumentProto::set_decoded_instrument_icon(const char* value, size_t size) {
  set_has_decoded_instrument_icon();
  decoded_instrument_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentInstrumentProto.decoded_instrument_icon)
}
::std::string* StoredPaymentInstrumentProto::mutable_decoded_instrument_icon() {
  set_has_decoded_instrument_icon();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentInstrumentProto.decoded_instrument_icon)
  return decoded_instrument_icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StoredPaymentInstrumentProto::release_decoded_instrument_icon() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentInstrumentProto.decoded_instrument_icon)
  clear_has_decoded_instrument_icon();
  return decoded_instrument_icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StoredPaymentInstrumentProto::set_allocated_decoded_instrument_icon(::std::string* decoded_instrument_icon) {
  if (decoded_instrument_icon != NULL) {
    set_has_decoded_instrument_icon();
  } else {
    clear_has_decoded_instrument_icon();
  }
  decoded_instrument_icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), decoded_instrument_icon);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentInstrumentProto.decoded_instrument_icon)
}

// repeated int32 supported_card_networks = 8;
int StoredPaymentInstrumentProto::supported_card_networks_size() const {
  return supported_card_networks_.size();
}
void StoredPaymentInstrumentProto::clear_supported_card_networks() {
  supported_card_networks_.Clear();
}
::google::protobuf::int32 StoredPaymentInstrumentProto::supported_card_networks(int index) const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentProto.supported_card_networks)
  return supported_card_networks_.Get(index);
}
void StoredPaymentInstrumentProto::set_supported_card_networks(int index, ::google::protobuf::int32 value) {
  supported_card_networks_.Set(index, value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentProto.supported_card_networks)
}
void StoredPaymentInstrumentProto::add_supported_card_networks(::google::protobuf::int32 value) {
  supported_card_networks_.Add(value);
  // @@protoc_insertion_point(field_add:content.StoredPaymentInstrumentProto.supported_card_networks)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
StoredPaymentInstrumentProto::supported_card_networks() const {
  // @@protoc_insertion_point(field_list:content.StoredPaymentInstrumentProto.supported_card_networks)
  return supported_card_networks_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
StoredPaymentInstrumentProto::mutable_supported_card_networks() {
  // @@protoc_insertion_point(field_mutable_list:content.StoredPaymentInstrumentProto.supported_card_networks)
  return &supported_card_networks_;
}

// repeated int32 supported_card_types = 9;
int StoredPaymentInstrumentProto::supported_card_types_size() const {
  return supported_card_types_.size();
}
void StoredPaymentInstrumentProto::clear_supported_card_types() {
  supported_card_types_.Clear();
}
::google::protobuf::int32 StoredPaymentInstrumentProto::supported_card_types(int index) const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentInstrumentProto.supported_card_types)
  return supported_card_types_.Get(index);
}
void StoredPaymentInstrumentProto::set_supported_card_types(int index, ::google::protobuf::int32 value) {
  supported_card_types_.Set(index, value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentInstrumentProto.supported_card_types)
}
void StoredPaymentInstrumentProto::add_supported_card_types(::google::protobuf::int32 value) {
  supported_card_types_.Add(value);
  // @@protoc_insertion_point(field_add:content.StoredPaymentInstrumentProto.supported_card_types)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
StoredPaymentInstrumentProto::supported_card_types() const {
  // @@protoc_insertion_point(field_list:content.StoredPaymentInstrumentProto.supported_card_types)
  return supported_card_types_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
StoredPaymentInstrumentProto::mutable_supported_card_types() {
  // @@protoc_insertion_point(field_mutable_list:content.StoredPaymentInstrumentProto.supported_card_types)
  return &supported_card_types_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoredRelatedApplicationProto::kPlatformFieldNumber;
const int StoredRelatedApplicationProto::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoredRelatedApplicationProto::StoredRelatedApplicationProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_payment_5fapp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.StoredRelatedApplicationProto)
}
StoredRelatedApplicationProto::StoredRelatedApplicationProto(const StoredRelatedApplicationProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_platform()) {
    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:content.StoredRelatedApplicationProto)
}

void StoredRelatedApplicationProto::SharedCtor() {
  _cached_size_ = 0;
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StoredRelatedApplicationProto::~StoredRelatedApplicationProto() {
  // @@protoc_insertion_point(destructor:content.StoredRelatedApplicationProto)
  SharedDtor();
}

void StoredRelatedApplicationProto::SharedDtor() {
  platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StoredRelatedApplicationProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StoredRelatedApplicationProto& StoredRelatedApplicationProto::default_instance() {
  protobuf_payment_5fapp_2eproto::InitDefaults();
  return *internal_default_instance();
}

StoredRelatedApplicationProto* StoredRelatedApplicationProto::New(::google::protobuf::Arena* arena) const {
  StoredRelatedApplicationProto* n = new StoredRelatedApplicationProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoredRelatedApplicationProto::Clear() {
// @@protoc_insertion_point(message_clear_start:content.StoredRelatedApplicationProto)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_platform()) {
      GOOGLE_DCHECK(!platform_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*platform_.UnsafeRawStringPointer())->clear();
    }
    if (has_id()) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StoredRelatedApplicationProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:content.StoredRelatedApplicationProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string platform = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.StoredRelatedApplicationProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.StoredRelatedApplicationProto)
  return false;
#undef DO_
}

void StoredRelatedApplicationProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.StoredRelatedApplicationProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string platform = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->platform(), output);
  }

  // optional string id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.StoredRelatedApplicationProto)
}

size_t StoredRelatedApplicationProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.StoredRelatedApplicationProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string platform = 1;
    if (has_platform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platform());
    }

    // optional string id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoredRelatedApplicationProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StoredRelatedApplicationProto*>(&from));
}

void StoredRelatedApplicationProto::MergeFrom(const StoredRelatedApplicationProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.StoredRelatedApplicationProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_platform();
      platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
  }
}

void StoredRelatedApplicationProto::CopyFrom(const StoredRelatedApplicationProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.StoredRelatedApplicationProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoredRelatedApplicationProto::IsInitialized() const {
  return true;
}

void StoredRelatedApplicationProto::Swap(StoredRelatedApplicationProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoredRelatedApplicationProto::InternalSwap(StoredRelatedApplicationProto* other) {
  platform_.Swap(&other->platform_);
  id_.Swap(&other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string StoredRelatedApplicationProto::GetTypeName() const {
  return "content.StoredRelatedApplicationProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoredRelatedApplicationProto

// optional string platform = 1;
bool StoredRelatedApplicationProto::has_platform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StoredRelatedApplicationProto::set_has_platform() {
  _has_bits_[0] |= 0x00000001u;
}
void StoredRelatedApplicationProto::clear_has_platform() {
  _has_bits_[0] &= ~0x00000001u;
}
void StoredRelatedApplicationProto::clear_platform() {
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platform();
}
const ::std::string& StoredRelatedApplicationProto::platform() const {
  // @@protoc_insertion_point(field_get:content.StoredRelatedApplicationProto.platform)
  return platform_.GetNoArena();
}
void StoredRelatedApplicationProto::set_platform(const ::std::string& value) {
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredRelatedApplicationProto.platform)
}
#if LANG_CXX11
void StoredRelatedApplicationProto::set_platform(::std::string&& value) {
  set_has_platform();
  platform_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredRelatedApplicationProto.platform)
}
#endif
void StoredRelatedApplicationProto::set_platform(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredRelatedApplicationProto.platform)
}
void StoredRelatedApplicationProto::set_platform(const char* value, size_t size) {
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredRelatedApplicationProto.platform)
}
::std::string* StoredRelatedApplicationProto::mutable_platform() {
  set_has_platform();
  // @@protoc_insertion_point(field_mutable:content.StoredRelatedApplicationProto.platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StoredRelatedApplicationProto::release_platform() {
  // @@protoc_insertion_point(field_release:content.StoredRelatedApplicationProto.platform)
  clear_has_platform();
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StoredRelatedApplicationProto::set_allocated_platform(::std::string* platform) {
  if (platform != NULL) {
    set_has_platform();
  } else {
    clear_has_platform();
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:content.StoredRelatedApplicationProto.platform)
}

// optional string id = 2;
bool StoredRelatedApplicationProto::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StoredRelatedApplicationProto::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void StoredRelatedApplicationProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void StoredRelatedApplicationProto::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& StoredRelatedApplicationProto::id() const {
  // @@protoc_insertion_point(field_get:content.StoredRelatedApplicationProto.id)
  return id_.GetNoArena();
}
void StoredRelatedApplicationProto::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredRelatedApplicationProto.id)
}
#if LANG_CXX11
void StoredRelatedApplicationProto::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredRelatedApplicationProto.id)
}
#endif
void StoredRelatedApplicationProto::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredRelatedApplicationProto.id)
}
void StoredRelatedApplicationProto::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredRelatedApplicationProto.id)
}
::std::string* StoredRelatedApplicationProto::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:content.StoredRelatedApplicationProto.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StoredRelatedApplicationProto::release_id() {
  // @@protoc_insertion_point(field_release:content.StoredRelatedApplicationProto.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StoredRelatedApplicationProto::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:content.StoredRelatedApplicationProto.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoredPaymentAppProto::kRegistrationIdFieldNumber;
const int StoredPaymentAppProto::kScopeFieldNumber;
const int StoredPaymentAppProto::kNameFieldNumber;
const int StoredPaymentAppProto::kIconFieldNumber;
const int StoredPaymentAppProto::kPreferRelatedApplicationsFieldNumber;
const int StoredPaymentAppProto::kRelatedApplicationsFieldNumber;
const int StoredPaymentAppProto::kUserHintFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoredPaymentAppProto::StoredPaymentAppProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_payment_5fapp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.StoredPaymentAppProto)
}
StoredPaymentAppProto::StoredPaymentAppProto(const StoredPaymentAppProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      related_applications_(from.related_applications_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_scope()) {
    scope_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scope_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_icon()) {
    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  user_hint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_hint()) {
    user_hint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_hint_);
  }
  ::memcpy(&registration_id_, &from.registration_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&prefer_related_applications_) -
    reinterpret_cast<char*>(&registration_id_)) + sizeof(prefer_related_applications_));
  // @@protoc_insertion_point(copy_constructor:content.StoredPaymentAppProto)
}

void StoredPaymentAppProto::SharedCtor() {
  _cached_size_ = 0;
  scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_hint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&registration_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prefer_related_applications_) -
      reinterpret_cast<char*>(&registration_id_)) + sizeof(prefer_related_applications_));
}

StoredPaymentAppProto::~StoredPaymentAppProto() {
  // @@protoc_insertion_point(destructor:content.StoredPaymentAppProto)
  SharedDtor();
}

void StoredPaymentAppProto::SharedDtor() {
  scope_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_hint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StoredPaymentAppProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StoredPaymentAppProto& StoredPaymentAppProto::default_instance() {
  protobuf_payment_5fapp_2eproto::InitDefaults();
  return *internal_default_instance();
}

StoredPaymentAppProto* StoredPaymentAppProto::New(::google::protobuf::Arena* arena) const {
  StoredPaymentAppProto* n = new StoredPaymentAppProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoredPaymentAppProto::Clear() {
// @@protoc_insertion_point(message_clear_start:content.StoredPaymentAppProto)
  related_applications_.Clear();
  if (_has_bits_[0 / 32] & 15u) {
    if (has_scope()) {
      GOOGLE_DCHECK(!scope_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*scope_.UnsafeRawStringPointer())->clear();
    }
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_icon()) {
      GOOGLE_DCHECK(!icon_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*icon_.UnsafeRawStringPointer())->clear();
    }
    if (has_user_hint()) {
      GOOGLE_DCHECK(!user_hint_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*user_hint_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 48u) {
    ::memset(&registration_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&prefer_related_applications_) -
        reinterpret_cast<char*>(&registration_id_)) + sizeof(prefer_related_applications_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StoredPaymentAppProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:content.StoredPaymentAppProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 registration_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_registration_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &registration_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string scope = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scope()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string icon = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool prefer_related_applications = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_prefer_related_applications();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &prefer_related_applications_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .content.StoredRelatedApplicationProto related_applications = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_related_applications()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string user_hint = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_hint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.StoredPaymentAppProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.StoredPaymentAppProto)
  return false;
#undef DO_
}

void StoredPaymentAppProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.StoredPaymentAppProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 registration_id = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->registration_id(), output);
  }

  // optional string scope = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->scope(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string icon = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->icon(), output);
  }

  // optional bool prefer_related_applications = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->prefer_related_applications(), output);
  }

  // repeated .content.StoredRelatedApplicationProto related_applications = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->related_applications_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->related_applications(static_cast<int>(i)), output);
  }

  // optional string user_hint = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->user_hint(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.StoredPaymentAppProto)
}

size_t StoredPaymentAppProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.StoredPaymentAppProto)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated .content.StoredRelatedApplicationProto related_applications = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->related_applications_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->related_applications(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional string scope = 2;
    if (has_scope()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scope());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string icon = 4;
    if (has_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->icon());
    }

    // optional string user_hint = 7;
    if (has_user_hint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_hint());
    }

    // optional int64 registration_id = 1;
    if (has_registration_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->registration_id());
    }

    // optional bool prefer_related_applications = 5;
    if (has_prefer_related_applications()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoredPaymentAppProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StoredPaymentAppProto*>(&from));
}

void StoredPaymentAppProto::MergeFrom(const StoredPaymentAppProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.StoredPaymentAppProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  related_applications_.MergeFrom(from.related_applications_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_scope();
      scope_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scope_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_icon();
      icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_user_hint();
      user_hint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_hint_);
    }
    if (cached_has_bits & 0x00000010u) {
      registration_id_ = from.registration_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      prefer_related_applications_ = from.prefer_related_applications_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StoredPaymentAppProto::CopyFrom(const StoredPaymentAppProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.StoredPaymentAppProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoredPaymentAppProto::IsInitialized() const {
  return true;
}

void StoredPaymentAppProto::Swap(StoredPaymentAppProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoredPaymentAppProto::InternalSwap(StoredPaymentAppProto* other) {
  related_applications_.InternalSwap(&other->related_applications_);
  scope_.Swap(&other->scope_);
  name_.Swap(&other->name_);
  icon_.Swap(&other->icon_);
  user_hint_.Swap(&other->user_hint_);
  std::swap(registration_id_, other->registration_id_);
  std::swap(prefer_related_applications_, other->prefer_related_applications_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string StoredPaymentAppProto::GetTypeName() const {
  return "content.StoredPaymentAppProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoredPaymentAppProto

// optional int64 registration_id = 1;
bool StoredPaymentAppProto::has_registration_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void StoredPaymentAppProto::set_has_registration_id() {
  _has_bits_[0] |= 0x00000010u;
}
void StoredPaymentAppProto::clear_has_registration_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void StoredPaymentAppProto::clear_registration_id() {
  registration_id_ = GOOGLE_LONGLONG(0);
  clear_has_registration_id();
}
::google::protobuf::int64 StoredPaymentAppProto::registration_id() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentAppProto.registration_id)
  return registration_id_;
}
void StoredPaymentAppProto::set_registration_id(::google::protobuf::int64 value) {
  set_has_registration_id();
  registration_id_ = value;
  // @@protoc_insertion_point(field_set:content.StoredPaymentAppProto.registration_id)
}

// optional string scope = 2;
bool StoredPaymentAppProto::has_scope() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StoredPaymentAppProto::set_has_scope() {
  _has_bits_[0] |= 0x00000001u;
}
void StoredPaymentAppProto::clear_has_scope() {
  _has_bits_[0] &= ~0x00000001u;
}
void StoredPaymentAppProto::clear_scope() {
  scope_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_scope();
}
const ::std::string& StoredPaymentAppProto::scope() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentAppProto.scope)
  return scope_.GetNoArena();
}
void StoredPaymentAppProto::set_scope(const ::std::string& value) {
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentAppProto.scope)
}
#if LANG_CXX11
void StoredPaymentAppProto::set_scope(::std::string&& value) {
  set_has_scope();
  scope_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentAppProto.scope)
}
#endif
void StoredPaymentAppProto::set_scope(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentAppProto.scope)
}
void StoredPaymentAppProto::set_scope(const char* value, size_t size) {
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentAppProto.scope)
}
::std::string* StoredPaymentAppProto::mutable_scope() {
  set_has_scope();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentAppProto.scope)
  return scope_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StoredPaymentAppProto::release_scope() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentAppProto.scope)
  clear_has_scope();
  return scope_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StoredPaymentAppProto::set_allocated_scope(::std::string* scope) {
  if (scope != NULL) {
    set_has_scope();
  } else {
    clear_has_scope();
  }
  scope_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scope);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentAppProto.scope)
}

// optional string name = 3;
bool StoredPaymentAppProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StoredPaymentAppProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void StoredPaymentAppProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void StoredPaymentAppProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& StoredPaymentAppProto::name() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentAppProto.name)
  return name_.GetNoArena();
}
void StoredPaymentAppProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentAppProto.name)
}
#if LANG_CXX11
void StoredPaymentAppProto::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentAppProto.name)
}
#endif
void StoredPaymentAppProto::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentAppProto.name)
}
void StoredPaymentAppProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentAppProto.name)
}
::std::string* StoredPaymentAppProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentAppProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StoredPaymentAppProto::release_name() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentAppProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StoredPaymentAppProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentAppProto.name)
}

// optional string icon = 4;
bool StoredPaymentAppProto::has_icon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void StoredPaymentAppProto::set_has_icon() {
  _has_bits_[0] |= 0x00000004u;
}
void StoredPaymentAppProto::clear_has_icon() {
  _has_bits_[0] &= ~0x00000004u;
}
void StoredPaymentAppProto::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_icon();
}
const ::std::string& StoredPaymentAppProto::icon() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentAppProto.icon)
  return icon_.GetNoArena();
}
void StoredPaymentAppProto::set_icon(const ::std::string& value) {
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentAppProto.icon)
}
#if LANG_CXX11
void StoredPaymentAppProto::set_icon(::std::string&& value) {
  set_has_icon();
  icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentAppProto.icon)
}
#endif
void StoredPaymentAppProto::set_icon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentAppProto.icon)
}
void StoredPaymentAppProto::set_icon(const char* value, size_t size) {
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentAppProto.icon)
}
::std::string* StoredPaymentAppProto::mutable_icon() {
  set_has_icon();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentAppProto.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StoredPaymentAppProto::release_icon() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentAppProto.icon)
  clear_has_icon();
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StoredPaymentAppProto::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    set_has_icon();
  } else {
    clear_has_icon();
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentAppProto.icon)
}

// optional bool prefer_related_applications = 5;
bool StoredPaymentAppProto::has_prefer_related_applications() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void StoredPaymentAppProto::set_has_prefer_related_applications() {
  _has_bits_[0] |= 0x00000020u;
}
void StoredPaymentAppProto::clear_has_prefer_related_applications() {
  _has_bits_[0] &= ~0x00000020u;
}
void StoredPaymentAppProto::clear_prefer_related_applications() {
  prefer_related_applications_ = false;
  clear_has_prefer_related_applications();
}
bool StoredPaymentAppProto::prefer_related_applications() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentAppProto.prefer_related_applications)
  return prefer_related_applications_;
}
void StoredPaymentAppProto::set_prefer_related_applications(bool value) {
  set_has_prefer_related_applications();
  prefer_related_applications_ = value;
  // @@protoc_insertion_point(field_set:content.StoredPaymentAppProto.prefer_related_applications)
}

// repeated .content.StoredRelatedApplicationProto related_applications = 6;
int StoredPaymentAppProto::related_applications_size() const {
  return related_applications_.size();
}
void StoredPaymentAppProto::clear_related_applications() {
  related_applications_.Clear();
}
const ::content::StoredRelatedApplicationProto& StoredPaymentAppProto::related_applications(int index) const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentAppProto.related_applications)
  return related_applications_.Get(index);
}
::content::StoredRelatedApplicationProto* StoredPaymentAppProto::mutable_related_applications(int index) {
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentAppProto.related_applications)
  return related_applications_.Mutable(index);
}
::content::StoredRelatedApplicationProto* StoredPaymentAppProto::add_related_applications() {
  // @@protoc_insertion_point(field_add:content.StoredPaymentAppProto.related_applications)
  return related_applications_.Add();
}
::google::protobuf::RepeatedPtrField< ::content::StoredRelatedApplicationProto >*
StoredPaymentAppProto::mutable_related_applications() {
  // @@protoc_insertion_point(field_mutable_list:content.StoredPaymentAppProto.related_applications)
  return &related_applications_;
}
const ::google::protobuf::RepeatedPtrField< ::content::StoredRelatedApplicationProto >&
StoredPaymentAppProto::related_applications() const {
  // @@protoc_insertion_point(field_list:content.StoredPaymentAppProto.related_applications)
  return related_applications_;
}

// optional string user_hint = 7;
bool StoredPaymentAppProto::has_user_hint() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void StoredPaymentAppProto::set_has_user_hint() {
  _has_bits_[0] |= 0x00000008u;
}
void StoredPaymentAppProto::clear_has_user_hint() {
  _has_bits_[0] &= ~0x00000008u;
}
void StoredPaymentAppProto::clear_user_hint() {
  user_hint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_hint();
}
const ::std::string& StoredPaymentAppProto::user_hint() const {
  // @@protoc_insertion_point(field_get:content.StoredPaymentAppProto.user_hint)
  return user_hint_.GetNoArena();
}
void StoredPaymentAppProto::set_user_hint(const ::std::string& value) {
  set_has_user_hint();
  user_hint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.StoredPaymentAppProto.user_hint)
}
#if LANG_CXX11
void StoredPaymentAppProto::set_user_hint(::std::string&& value) {
  set_has_user_hint();
  user_hint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.StoredPaymentAppProto.user_hint)
}
#endif
void StoredPaymentAppProto::set_user_hint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_hint();
  user_hint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.StoredPaymentAppProto.user_hint)
}
void StoredPaymentAppProto::set_user_hint(const char* value, size_t size) {
  set_has_user_hint();
  user_hint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.StoredPaymentAppProto.user_hint)
}
::std::string* StoredPaymentAppProto::mutable_user_hint() {
  set_has_user_hint();
  // @@protoc_insertion_point(field_mutable:content.StoredPaymentAppProto.user_hint)
  return user_hint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StoredPaymentAppProto::release_user_hint() {
  // @@protoc_insertion_point(field_release:content.StoredPaymentAppProto.user_hint)
  clear_has_user_hint();
  return user_hint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StoredPaymentAppProto::set_allocated_user_hint(::std::string* user_hint) {
  if (user_hint != NULL) {
    set_has_user_hint();
  } else {
    clear_has_user_hint();
  }
  user_hint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_hint);
  // @@protoc_insertion_point(field_set_allocated:content.StoredPaymentAppProto.user_hint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace content

// @@protoc_insertion_point(global_scope)
