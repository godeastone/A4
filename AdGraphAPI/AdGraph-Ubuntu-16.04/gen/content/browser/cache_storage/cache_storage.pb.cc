// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cache_storage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cache_storage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace content {
namespace proto {
class CacheStorageIndex_CacheDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CacheStorageIndex_Cache> {
} _CacheStorageIndex_Cache_default_instance_;
class CacheStorageIndexDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CacheStorageIndex> {
} _CacheStorageIndex_default_instance_;
class CacheHeaderMapDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CacheHeaderMap> {
} _CacheHeaderMap_default_instance_;
class CacheRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CacheRequest> {
} _CacheRequest_default_instance_;
class CacheResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CacheResponse> {
} _CacheResponse_default_instance_;
class CacheMetadataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CacheMetadata> {
} _CacheMetadata_default_instance_;

namespace protobuf_cache_5fstorage_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _CacheStorageIndex_Cache_default_instance_.Shutdown();
  _CacheStorageIndex_default_instance_.Shutdown();
  _CacheHeaderMap_default_instance_.Shutdown();
  _CacheRequest_default_instance_.Shutdown();
  _CacheResponse_default_instance_.Shutdown();
  _CacheMetadata_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _CacheStorageIndex_Cache_default_instance_.DefaultConstruct();
  _CacheStorageIndex_default_instance_.DefaultConstruct();
  _CacheHeaderMap_default_instance_.DefaultConstruct();
  _CacheRequest_default_instance_.DefaultConstruct();
  _CacheResponse_default_instance_.DefaultConstruct();
  _CacheMetadata_default_instance_.DefaultConstruct();
  _CacheMetadata_default_instance_.get_mutable()->request_ = const_cast< ::content::proto::CacheRequest*>(
      ::content::proto::CacheRequest::internal_default_instance());
  _CacheMetadata_default_instance_.get_mutable()->response_ = const_cast< ::content::proto::CacheResponse*>(
      ::content::proto::CacheResponse::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_cache_5fstorage_2eproto

bool CacheResponse_ResponseType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CacheResponse_ResponseType CacheResponse::BASIC_TYPE;
const CacheResponse_ResponseType CacheResponse::CORS_TYPE;
const CacheResponse_ResponseType CacheResponse::DEFAULT_TYPE;
const CacheResponse_ResponseType CacheResponse::ERROR_TYPE;
const CacheResponse_ResponseType CacheResponse::OPAQUE_TYPE;
const CacheResponse_ResponseType CacheResponse::OPAQUE_REDIRECT_TYPE;
const CacheResponse_ResponseType CacheResponse::ResponseType_MIN;
const CacheResponse_ResponseType CacheResponse::ResponseType_MAX;
const int CacheResponse::ResponseType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CacheStorageIndex_Cache::kNameFieldNumber;
const int CacheStorageIndex_Cache::kCacheDirFieldNumber;
const int CacheStorageIndex_Cache::kSizeFieldNumber;
const int CacheStorageIndex_Cache::kPaddingKeyFieldNumber;
const int CacheStorageIndex_Cache::kPaddingFieldNumber;
const int CacheStorageIndex_Cache::kPaddingVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CacheStorageIndex_Cache::CacheStorageIndex_Cache()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cache_5fstorage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.proto.CacheStorageIndex.Cache)
}
CacheStorageIndex_Cache::CacheStorageIndex_Cache(const CacheStorageIndex_Cache& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  cache_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cache_dir()) {
    cache_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cache_dir_);
  }
  padding_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_padding_key()) {
    padding_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.padding_key_);
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&padding_version_) -
    reinterpret_cast<char*>(&size_)) + sizeof(padding_version_));
  // @@protoc_insertion_point(copy_constructor:content.proto.CacheStorageIndex.Cache)
}

void CacheStorageIndex_Cache::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cache_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  padding_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&padding_version_) -
      reinterpret_cast<char*>(&size_)) + sizeof(padding_version_));
}

CacheStorageIndex_Cache::~CacheStorageIndex_Cache() {
  // @@protoc_insertion_point(destructor:content.proto.CacheStorageIndex.Cache)
  SharedDtor();
}

void CacheStorageIndex_Cache::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cache_dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  padding_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CacheStorageIndex_Cache::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CacheStorageIndex_Cache& CacheStorageIndex_Cache::default_instance() {
  protobuf_cache_5fstorage_2eproto::InitDefaults();
  return *internal_default_instance();
}

CacheStorageIndex_Cache* CacheStorageIndex_Cache::New(::google::protobuf::Arena* arena) const {
  CacheStorageIndex_Cache* n = new CacheStorageIndex_Cache;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CacheStorageIndex_Cache::Clear() {
// @@protoc_insertion_point(message_clear_start:content.proto.CacheStorageIndex.Cache)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_cache_dir()) {
      GOOGLE_DCHECK(!cache_dir_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*cache_dir_.UnsafeRawStringPointer())->clear();
    }
    if (has_padding_key()) {
      GOOGLE_DCHECK(!padding_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*padding_key_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 56u) {
    ::memset(&size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&padding_version_) -
        reinterpret_cast<char*>(&size_)) + sizeof(padding_version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CacheStorageIndex_Cache::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:content.proto.CacheStorageIndex.Cache)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cache_dir = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cache_dir()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string padding_key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_padding_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 padding = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_padding();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &padding_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 padding_version = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_padding_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &padding_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.proto.CacheStorageIndex.Cache)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.proto.CacheStorageIndex.Cache)
  return false;
#undef DO_
}

void CacheStorageIndex_Cache::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.proto.CacheStorageIndex.Cache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string cache_dir = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cache_dir(), output);
  }

  // optional int64 size = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->size(), output);
  }

  // optional string padding_key = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->padding_key(), output);
  }

  // optional int64 padding = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->padding(), output);
  }

  // optional int32 padding_version = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->padding_version(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.proto.CacheStorageIndex.Cache)
}

size_t CacheStorageIndex_Cache::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.proto.CacheStorageIndex.Cache)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  if (_has_bits_[0 / 32] & 62u) {
    // optional string cache_dir = 2;
    if (has_cache_dir()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cache_dir());
    }

    // optional string padding_key = 4;
    if (has_padding_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->padding_key());
    }

    // optional int64 size = 3;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->size());
    }

    // optional int64 padding = 5;
    if (has_padding()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->padding());
    }

    // optional int32 padding_version = 6;
    if (has_padding_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->padding_version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CacheStorageIndex_Cache::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CacheStorageIndex_Cache*>(&from));
}

void CacheStorageIndex_Cache::MergeFrom(const CacheStorageIndex_Cache& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.proto.CacheStorageIndex.Cache)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_cache_dir();
      cache_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cache_dir_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_padding_key();
      padding_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.padding_key_);
    }
    if (cached_has_bits & 0x00000008u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000010u) {
      padding_ = from.padding_;
    }
    if (cached_has_bits & 0x00000020u) {
      padding_version_ = from.padding_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CacheStorageIndex_Cache::CopyFrom(const CacheStorageIndex_Cache& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.proto.CacheStorageIndex.Cache)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CacheStorageIndex_Cache::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CacheStorageIndex_Cache::Swap(CacheStorageIndex_Cache* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CacheStorageIndex_Cache::InternalSwap(CacheStorageIndex_Cache* other) {
  name_.Swap(&other->name_);
  cache_dir_.Swap(&other->cache_dir_);
  padding_key_.Swap(&other->padding_key_);
  std::swap(size_, other->size_);
  std::swap(padding_, other->padding_);
  std::swap(padding_version_, other->padding_version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CacheStorageIndex_Cache::GetTypeName() const {
  return "content.proto.CacheStorageIndex.Cache";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CacheStorageIndex_Cache

// required string name = 1;
bool CacheStorageIndex_Cache::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CacheStorageIndex_Cache::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CacheStorageIndex_Cache::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CacheStorageIndex_Cache::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& CacheStorageIndex_Cache::name() const {
  // @@protoc_insertion_point(field_get:content.proto.CacheStorageIndex.Cache.name)
  return name_.GetNoArena();
}
void CacheStorageIndex_Cache::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.proto.CacheStorageIndex.Cache.name)
}
#if LANG_CXX11
void CacheStorageIndex_Cache::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.proto.CacheStorageIndex.Cache.name)
}
#endif
void CacheStorageIndex_Cache::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.proto.CacheStorageIndex.Cache.name)
}
void CacheStorageIndex_Cache::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.proto.CacheStorageIndex.Cache.name)
}
::std::string* CacheStorageIndex_Cache::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:content.proto.CacheStorageIndex.Cache.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CacheStorageIndex_Cache::release_name() {
  // @@protoc_insertion_point(field_release:content.proto.CacheStorageIndex.Cache.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CacheStorageIndex_Cache::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:content.proto.CacheStorageIndex.Cache.name)
}

// optional string cache_dir = 2;
bool CacheStorageIndex_Cache::has_cache_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CacheStorageIndex_Cache::set_has_cache_dir() {
  _has_bits_[0] |= 0x00000002u;
}
void CacheStorageIndex_Cache::clear_has_cache_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
void CacheStorageIndex_Cache::clear_cache_dir() {
  cache_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cache_dir();
}
const ::std::string& CacheStorageIndex_Cache::cache_dir() const {
  // @@protoc_insertion_point(field_get:content.proto.CacheStorageIndex.Cache.cache_dir)
  return cache_dir_.GetNoArena();
}
void CacheStorageIndex_Cache::set_cache_dir(const ::std::string& value) {
  set_has_cache_dir();
  cache_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.proto.CacheStorageIndex.Cache.cache_dir)
}
#if LANG_CXX11
void CacheStorageIndex_Cache::set_cache_dir(::std::string&& value) {
  set_has_cache_dir();
  cache_dir_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.proto.CacheStorageIndex.Cache.cache_dir)
}
#endif
void CacheStorageIndex_Cache::set_cache_dir(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cache_dir();
  cache_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.proto.CacheStorageIndex.Cache.cache_dir)
}
void CacheStorageIndex_Cache::set_cache_dir(const char* value, size_t size) {
  set_has_cache_dir();
  cache_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.proto.CacheStorageIndex.Cache.cache_dir)
}
::std::string* CacheStorageIndex_Cache::mutable_cache_dir() {
  set_has_cache_dir();
  // @@protoc_insertion_point(field_mutable:content.proto.CacheStorageIndex.Cache.cache_dir)
  return cache_dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CacheStorageIndex_Cache::release_cache_dir() {
  // @@protoc_insertion_point(field_release:content.proto.CacheStorageIndex.Cache.cache_dir)
  clear_has_cache_dir();
  return cache_dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CacheStorageIndex_Cache::set_allocated_cache_dir(::std::string* cache_dir) {
  if (cache_dir != NULL) {
    set_has_cache_dir();
  } else {
    clear_has_cache_dir();
  }
  cache_dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cache_dir);
  // @@protoc_insertion_point(field_set_allocated:content.proto.CacheStorageIndex.Cache.cache_dir)
}

// optional int64 size = 3;
bool CacheStorageIndex_Cache::has_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CacheStorageIndex_Cache::set_has_size() {
  _has_bits_[0] |= 0x00000008u;
}
void CacheStorageIndex_Cache::clear_has_size() {
  _has_bits_[0] &= ~0x00000008u;
}
void CacheStorageIndex_Cache::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
  clear_has_size();
}
::google::protobuf::int64 CacheStorageIndex_Cache::size() const {
  // @@protoc_insertion_point(field_get:content.proto.CacheStorageIndex.Cache.size)
  return size_;
}
void CacheStorageIndex_Cache::set_size(::google::protobuf::int64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:content.proto.CacheStorageIndex.Cache.size)
}

// optional string padding_key = 4;
bool CacheStorageIndex_Cache::has_padding_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CacheStorageIndex_Cache::set_has_padding_key() {
  _has_bits_[0] |= 0x00000004u;
}
void CacheStorageIndex_Cache::clear_has_padding_key() {
  _has_bits_[0] &= ~0x00000004u;
}
void CacheStorageIndex_Cache::clear_padding_key() {
  padding_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_padding_key();
}
const ::std::string& CacheStorageIndex_Cache::padding_key() const {
  // @@protoc_insertion_point(field_get:content.proto.CacheStorageIndex.Cache.padding_key)
  return padding_key_.GetNoArena();
}
void CacheStorageIndex_Cache::set_padding_key(const ::std::string& value) {
  set_has_padding_key();
  padding_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.proto.CacheStorageIndex.Cache.padding_key)
}
#if LANG_CXX11
void CacheStorageIndex_Cache::set_padding_key(::std::string&& value) {
  set_has_padding_key();
  padding_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.proto.CacheStorageIndex.Cache.padding_key)
}
#endif
void CacheStorageIndex_Cache::set_padding_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_padding_key();
  padding_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.proto.CacheStorageIndex.Cache.padding_key)
}
void CacheStorageIndex_Cache::set_padding_key(const char* value, size_t size) {
  set_has_padding_key();
  padding_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.proto.CacheStorageIndex.Cache.padding_key)
}
::std::string* CacheStorageIndex_Cache::mutable_padding_key() {
  set_has_padding_key();
  // @@protoc_insertion_point(field_mutable:content.proto.CacheStorageIndex.Cache.padding_key)
  return padding_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CacheStorageIndex_Cache::release_padding_key() {
  // @@protoc_insertion_point(field_release:content.proto.CacheStorageIndex.Cache.padding_key)
  clear_has_padding_key();
  return padding_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CacheStorageIndex_Cache::set_allocated_padding_key(::std::string* padding_key) {
  if (padding_key != NULL) {
    set_has_padding_key();
  } else {
    clear_has_padding_key();
  }
  padding_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), padding_key);
  // @@protoc_insertion_point(field_set_allocated:content.proto.CacheStorageIndex.Cache.padding_key)
}

// optional int64 padding = 5;
bool CacheStorageIndex_Cache::has_padding() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CacheStorageIndex_Cache::set_has_padding() {
  _has_bits_[0] |= 0x00000010u;
}
void CacheStorageIndex_Cache::clear_has_padding() {
  _has_bits_[0] &= ~0x00000010u;
}
void CacheStorageIndex_Cache::clear_padding() {
  padding_ = GOOGLE_LONGLONG(0);
  clear_has_padding();
}
::google::protobuf::int64 CacheStorageIndex_Cache::padding() const {
  // @@protoc_insertion_point(field_get:content.proto.CacheStorageIndex.Cache.padding)
  return padding_;
}
void CacheStorageIndex_Cache::set_padding(::google::protobuf::int64 value) {
  set_has_padding();
  padding_ = value;
  // @@protoc_insertion_point(field_set:content.proto.CacheStorageIndex.Cache.padding)
}

// optional int32 padding_version = 6;
bool CacheStorageIndex_Cache::has_padding_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CacheStorageIndex_Cache::set_has_padding_version() {
  _has_bits_[0] |= 0x00000020u;
}
void CacheStorageIndex_Cache::clear_has_padding_version() {
  _has_bits_[0] &= ~0x00000020u;
}
void CacheStorageIndex_Cache::clear_padding_version() {
  padding_version_ = 0;
  clear_has_padding_version();
}
::google::protobuf::int32 CacheStorageIndex_Cache::padding_version() const {
  // @@protoc_insertion_point(field_get:content.proto.CacheStorageIndex.Cache.padding_version)
  return padding_version_;
}
void CacheStorageIndex_Cache::set_padding_version(::google::protobuf::int32 value) {
  set_has_padding_version();
  padding_version_ = value;
  // @@protoc_insertion_point(field_set:content.proto.CacheStorageIndex.Cache.padding_version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CacheStorageIndex::kCacheFieldNumber;
const int CacheStorageIndex::kOriginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CacheStorageIndex::CacheStorageIndex()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cache_5fstorage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.proto.CacheStorageIndex)
}
CacheStorageIndex::CacheStorageIndex(const CacheStorageIndex& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      cache_(from.cache_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  origin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_origin()) {
    origin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_);
  }
  // @@protoc_insertion_point(copy_constructor:content.proto.CacheStorageIndex)
}

void CacheStorageIndex::SharedCtor() {
  _cached_size_ = 0;
  origin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CacheStorageIndex::~CacheStorageIndex() {
  // @@protoc_insertion_point(destructor:content.proto.CacheStorageIndex)
  SharedDtor();
}

void CacheStorageIndex::SharedDtor() {
  origin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CacheStorageIndex::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CacheStorageIndex& CacheStorageIndex::default_instance() {
  protobuf_cache_5fstorage_2eproto::InitDefaults();
  return *internal_default_instance();
}

CacheStorageIndex* CacheStorageIndex::New(::google::protobuf::Arena* arena) const {
  CacheStorageIndex* n = new CacheStorageIndex;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CacheStorageIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:content.proto.CacheStorageIndex)
  cache_.Clear();
  if (has_origin()) {
    GOOGLE_DCHECK(!origin_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*origin_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CacheStorageIndex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:content.proto.CacheStorageIndex)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .content.proto.CacheStorageIndex.Cache cache = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cache()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string origin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_origin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.proto.CacheStorageIndex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.proto.CacheStorageIndex)
  return false;
#undef DO_
}

void CacheStorageIndex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.proto.CacheStorageIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .content.proto.CacheStorageIndex.Cache cache = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cache_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->cache(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string origin = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->origin(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.proto.CacheStorageIndex)
}

size_t CacheStorageIndex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.proto.CacheStorageIndex)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // repeated .content.proto.CacheStorageIndex.Cache cache = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->cache_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cache(static_cast<int>(i)));
    }
  }

  // optional string origin = 2;
  if (has_origin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->origin());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CacheStorageIndex::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CacheStorageIndex*>(&from));
}

void CacheStorageIndex::MergeFrom(const CacheStorageIndex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.proto.CacheStorageIndex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cache_.MergeFrom(from.cache_);
  if (from.has_origin()) {
    set_has_origin();
    origin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_);
  }
}

void CacheStorageIndex::CopyFrom(const CacheStorageIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.proto.CacheStorageIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CacheStorageIndex::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->cache())) return false;
  return true;
}

void CacheStorageIndex::Swap(CacheStorageIndex* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CacheStorageIndex::InternalSwap(CacheStorageIndex* other) {
  cache_.InternalSwap(&other->cache_);
  origin_.Swap(&other->origin_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CacheStorageIndex::GetTypeName() const {
  return "content.proto.CacheStorageIndex";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CacheStorageIndex

// repeated .content.proto.CacheStorageIndex.Cache cache = 1;
int CacheStorageIndex::cache_size() const {
  return cache_.size();
}
void CacheStorageIndex::clear_cache() {
  cache_.Clear();
}
const ::content::proto::CacheStorageIndex_Cache& CacheStorageIndex::cache(int index) const {
  // @@protoc_insertion_point(field_get:content.proto.CacheStorageIndex.cache)
  return cache_.Get(index);
}
::content::proto::CacheStorageIndex_Cache* CacheStorageIndex::mutable_cache(int index) {
  // @@protoc_insertion_point(field_mutable:content.proto.CacheStorageIndex.cache)
  return cache_.Mutable(index);
}
::content::proto::CacheStorageIndex_Cache* CacheStorageIndex::add_cache() {
  // @@protoc_insertion_point(field_add:content.proto.CacheStorageIndex.cache)
  return cache_.Add();
}
::google::protobuf::RepeatedPtrField< ::content::proto::CacheStorageIndex_Cache >*
CacheStorageIndex::mutable_cache() {
  // @@protoc_insertion_point(field_mutable_list:content.proto.CacheStorageIndex.cache)
  return &cache_;
}
const ::google::protobuf::RepeatedPtrField< ::content::proto::CacheStorageIndex_Cache >&
CacheStorageIndex::cache() const {
  // @@protoc_insertion_point(field_list:content.proto.CacheStorageIndex.cache)
  return cache_;
}

// optional string origin = 2;
bool CacheStorageIndex::has_origin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CacheStorageIndex::set_has_origin() {
  _has_bits_[0] |= 0x00000001u;
}
void CacheStorageIndex::clear_has_origin() {
  _has_bits_[0] &= ~0x00000001u;
}
void CacheStorageIndex::clear_origin() {
  origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_origin();
}
const ::std::string& CacheStorageIndex::origin() const {
  // @@protoc_insertion_point(field_get:content.proto.CacheStorageIndex.origin)
  return origin_.GetNoArena();
}
void CacheStorageIndex::set_origin(const ::std::string& value) {
  set_has_origin();
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.proto.CacheStorageIndex.origin)
}
#if LANG_CXX11
void CacheStorageIndex::set_origin(::std::string&& value) {
  set_has_origin();
  origin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.proto.CacheStorageIndex.origin)
}
#endif
void CacheStorageIndex::set_origin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_origin();
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.proto.CacheStorageIndex.origin)
}
void CacheStorageIndex::set_origin(const char* value, size_t size) {
  set_has_origin();
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.proto.CacheStorageIndex.origin)
}
::std::string* CacheStorageIndex::mutable_origin() {
  set_has_origin();
  // @@protoc_insertion_point(field_mutable:content.proto.CacheStorageIndex.origin)
  return origin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CacheStorageIndex::release_origin() {
  // @@protoc_insertion_point(field_release:content.proto.CacheStorageIndex.origin)
  clear_has_origin();
  return origin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CacheStorageIndex::set_allocated_origin(::std::string* origin) {
  if (origin != NULL) {
    set_has_origin();
  } else {
    clear_has_origin();
  }
  origin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), origin);
  // @@protoc_insertion_point(field_set_allocated:content.proto.CacheStorageIndex.origin)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CacheHeaderMap::kNameFieldNumber;
const int CacheHeaderMap::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CacheHeaderMap::CacheHeaderMap()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cache_5fstorage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.proto.CacheHeaderMap)
}
CacheHeaderMap::CacheHeaderMap(const CacheHeaderMap& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:content.proto.CacheHeaderMap)
}

void CacheHeaderMap::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CacheHeaderMap::~CacheHeaderMap() {
  // @@protoc_insertion_point(destructor:content.proto.CacheHeaderMap)
  SharedDtor();
}

void CacheHeaderMap::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CacheHeaderMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CacheHeaderMap& CacheHeaderMap::default_instance() {
  protobuf_cache_5fstorage_2eproto::InitDefaults();
  return *internal_default_instance();
}

CacheHeaderMap* CacheHeaderMap::New(::google::protobuf::Arena* arena) const {
  CacheHeaderMap* n = new CacheHeaderMap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CacheHeaderMap::Clear() {
// @@protoc_insertion_point(message_clear_start:content.proto.CacheHeaderMap)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_value()) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CacheHeaderMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:content.proto.CacheHeaderMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.proto.CacheHeaderMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.proto.CacheHeaderMap)
  return false;
#undef DO_
}

void CacheHeaderMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.proto.CacheHeaderMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.proto.CacheHeaderMap)
}

size_t CacheHeaderMap::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:content.proto.CacheHeaderMap)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_value()) {
    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  return total_size;
}
size_t CacheHeaderMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.proto.CacheHeaderMap)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CacheHeaderMap::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CacheHeaderMap*>(&from));
}

void CacheHeaderMap::MergeFrom(const CacheHeaderMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.proto.CacheHeaderMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void CacheHeaderMap::CopyFrom(const CacheHeaderMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.proto.CacheHeaderMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CacheHeaderMap::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CacheHeaderMap::Swap(CacheHeaderMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CacheHeaderMap::InternalSwap(CacheHeaderMap* other) {
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CacheHeaderMap::GetTypeName() const {
  return "content.proto.CacheHeaderMap";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CacheHeaderMap

// required string name = 1;
bool CacheHeaderMap::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CacheHeaderMap::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CacheHeaderMap::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CacheHeaderMap::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& CacheHeaderMap::name() const {
  // @@protoc_insertion_point(field_get:content.proto.CacheHeaderMap.name)
  return name_.GetNoArena();
}
void CacheHeaderMap::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.proto.CacheHeaderMap.name)
}
#if LANG_CXX11
void CacheHeaderMap::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.proto.CacheHeaderMap.name)
}
#endif
void CacheHeaderMap::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.proto.CacheHeaderMap.name)
}
void CacheHeaderMap::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.proto.CacheHeaderMap.name)
}
::std::string* CacheHeaderMap::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:content.proto.CacheHeaderMap.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CacheHeaderMap::release_name() {
  // @@protoc_insertion_point(field_release:content.proto.CacheHeaderMap.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CacheHeaderMap::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:content.proto.CacheHeaderMap.name)
}

// required string value = 2;
bool CacheHeaderMap::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CacheHeaderMap::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void CacheHeaderMap::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void CacheHeaderMap::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& CacheHeaderMap::value() const {
  // @@protoc_insertion_point(field_get:content.proto.CacheHeaderMap.value)
  return value_.GetNoArena();
}
void CacheHeaderMap::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.proto.CacheHeaderMap.value)
}
#if LANG_CXX11
void CacheHeaderMap::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.proto.CacheHeaderMap.value)
}
#endif
void CacheHeaderMap::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.proto.CacheHeaderMap.value)
}
void CacheHeaderMap::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.proto.CacheHeaderMap.value)
}
::std::string* CacheHeaderMap::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:content.proto.CacheHeaderMap.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CacheHeaderMap::release_value() {
  // @@protoc_insertion_point(field_release:content.proto.CacheHeaderMap.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CacheHeaderMap::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:content.proto.CacheHeaderMap.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CacheRequest::kMethodFieldNumber;
const int CacheRequest::kHeadersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CacheRequest::CacheRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cache_5fstorage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.proto.CacheRequest)
}
CacheRequest::CacheRequest(const CacheRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      headers_(from.headers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_method()) {
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  // @@protoc_insertion_point(copy_constructor:content.proto.CacheRequest)
}

void CacheRequest::SharedCtor() {
  _cached_size_ = 0;
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CacheRequest::~CacheRequest() {
  // @@protoc_insertion_point(destructor:content.proto.CacheRequest)
  SharedDtor();
}

void CacheRequest::SharedDtor() {
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CacheRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CacheRequest& CacheRequest::default_instance() {
  protobuf_cache_5fstorage_2eproto::InitDefaults();
  return *internal_default_instance();
}

CacheRequest* CacheRequest::New(::google::protobuf::Arena* arena) const {
  CacheRequest* n = new CacheRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CacheRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:content.proto.CacheRequest)
  headers_.Clear();
  if (has_method()) {
    GOOGLE_DCHECK(!method_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*method_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CacheRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:content.proto.CacheRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string method = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .content.proto.CacheHeaderMap headers = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_headers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.proto.CacheRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.proto.CacheRequest)
  return false;
#undef DO_
}

void CacheRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.proto.CacheRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string method = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->method(), output);
  }

  // repeated .content.proto.CacheHeaderMap headers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->headers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->headers(static_cast<int>(i)), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.proto.CacheRequest)
}

size_t CacheRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.proto.CacheRequest)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // required string method = 1;
  if (has_method()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }
  // repeated .content.proto.CacheHeaderMap headers = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->headers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->headers(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CacheRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CacheRequest*>(&from));
}

void CacheRequest::MergeFrom(const CacheRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.proto.CacheRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  headers_.MergeFrom(from.headers_);
  if (from.has_method()) {
    set_has_method();
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
}

void CacheRequest::CopyFrom(const CacheRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.proto.CacheRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CacheRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->headers())) return false;
  return true;
}

void CacheRequest::Swap(CacheRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CacheRequest::InternalSwap(CacheRequest* other) {
  headers_.InternalSwap(&other->headers_);
  method_.Swap(&other->method_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CacheRequest::GetTypeName() const {
  return "content.proto.CacheRequest";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CacheRequest

// required string method = 1;
bool CacheRequest::has_method() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CacheRequest::set_has_method() {
  _has_bits_[0] |= 0x00000001u;
}
void CacheRequest::clear_has_method() {
  _has_bits_[0] &= ~0x00000001u;
}
void CacheRequest::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method();
}
const ::std::string& CacheRequest::method() const {
  // @@protoc_insertion_point(field_get:content.proto.CacheRequest.method)
  return method_.GetNoArena();
}
void CacheRequest::set_method(const ::std::string& value) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.proto.CacheRequest.method)
}
#if LANG_CXX11
void CacheRequest::set_method(::std::string&& value) {
  set_has_method();
  method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.proto.CacheRequest.method)
}
#endif
void CacheRequest::set_method(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.proto.CacheRequest.method)
}
void CacheRequest::set_method(const char* value, size_t size) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.proto.CacheRequest.method)
}
::std::string* CacheRequest::mutable_method() {
  set_has_method();
  // @@protoc_insertion_point(field_mutable:content.proto.CacheRequest.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CacheRequest::release_method() {
  // @@protoc_insertion_point(field_release:content.proto.CacheRequest.method)
  clear_has_method();
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CacheRequest::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    set_has_method();
  } else {
    clear_has_method();
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:content.proto.CacheRequest.method)
}

// repeated .content.proto.CacheHeaderMap headers = 2;
int CacheRequest::headers_size() const {
  return headers_.size();
}
void CacheRequest::clear_headers() {
  headers_.Clear();
}
const ::content::proto::CacheHeaderMap& CacheRequest::headers(int index) const {
  // @@protoc_insertion_point(field_get:content.proto.CacheRequest.headers)
  return headers_.Get(index);
}
::content::proto::CacheHeaderMap* CacheRequest::mutable_headers(int index) {
  // @@protoc_insertion_point(field_mutable:content.proto.CacheRequest.headers)
  return headers_.Mutable(index);
}
::content::proto::CacheHeaderMap* CacheRequest::add_headers() {
  // @@protoc_insertion_point(field_add:content.proto.CacheRequest.headers)
  return headers_.Add();
}
::google::protobuf::RepeatedPtrField< ::content::proto::CacheHeaderMap >*
CacheRequest::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_list:content.proto.CacheRequest.headers)
  return &headers_;
}
const ::google::protobuf::RepeatedPtrField< ::content::proto::CacheHeaderMap >&
CacheRequest::headers() const {
  // @@protoc_insertion_point(field_list:content.proto.CacheRequest.headers)
  return headers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CacheResponse::kStatusCodeFieldNumber;
const int CacheResponse::kStatusTextFieldNumber;
const int CacheResponse::kResponseTypeFieldNumber;
const int CacheResponse::kHeadersFieldNumber;
const int CacheResponse::kUrlFieldNumber;
const int CacheResponse::kResponseTimeFieldNumber;
const int CacheResponse::kCorsExposedHeaderNamesFieldNumber;
const int CacheResponse::kUrlListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CacheResponse::CacheResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cache_5fstorage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.proto.CacheResponse)
}
CacheResponse::CacheResponse(const CacheResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      headers_(from.headers_),
      cors_exposed_header_names_(from.cors_exposed_header_names_),
      url_list_(from.url_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_status_text()) {
    status_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_text_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  ::memcpy(&status_code_, &from.status_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&response_time_) -
    reinterpret_cast<char*>(&status_code_)) + sizeof(response_time_));
  // @@protoc_insertion_point(copy_constructor:content.proto.CacheResponse)
}

void CacheResponse::SharedCtor() {
  _cached_size_ = 0;
  status_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_time_) -
      reinterpret_cast<char*>(&status_code_)) + sizeof(response_time_));
}

CacheResponse::~CacheResponse() {
  // @@protoc_insertion_point(destructor:content.proto.CacheResponse)
  SharedDtor();
}

void CacheResponse::SharedDtor() {
  status_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CacheResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CacheResponse& CacheResponse::default_instance() {
  protobuf_cache_5fstorage_2eproto::InitDefaults();
  return *internal_default_instance();
}

CacheResponse* CacheResponse::New(::google::protobuf::Arena* arena) const {
  CacheResponse* n = new CacheResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CacheResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:content.proto.CacheResponse)
  headers_.Clear();
  cors_exposed_header_names_.Clear();
  url_list_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_status_text()) {
      GOOGLE_DCHECK(!status_text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*status_text_.UnsafeRawStringPointer())->clear();
    }
    if (has_url()) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&status_code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&response_time_) -
        reinterpret_cast<char*>(&status_code_)) + sizeof(response_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CacheResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:content.proto.CacheResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 status_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_status_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string status_text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .content.proto.CacheResponse.ResponseType response_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::content::proto::CacheResponse_ResponseType_IsValid(value)) {
            set_response_type(static_cast< ::content::proto::CacheResponse_ResponseType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(24u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .content.proto.CacheHeaderMap headers = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_headers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 5 [deprecated = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 response_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_response_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &response_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string cors_exposed_header_names = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cors_exposed_header_names()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string url_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_url_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.proto.CacheResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.proto.CacheResponse)
  return false;
#undef DO_
}

void CacheResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.proto.CacheResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 status_code = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status_code(), output);
  }

  // required string status_text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->status_text(), output);
  }

  // required .content.proto.CacheResponse.ResponseType response_type = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->response_type(), output);
  }

  // repeated .content.proto.CacheHeaderMap headers = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->headers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->headers(static_cast<int>(i)), output);
  }

  // optional string url = 5 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->url(), output);
  }

  // optional int64 response_time = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->response_time(), output);
  }

  // repeated string cors_exposed_header_names = 7;
  for (int i = 0, n = this->cors_exposed_header_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->cors_exposed_header_names(i), output);
  }

  // repeated string url_list = 8;
  for (int i = 0, n = this->url_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->url_list(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.proto.CacheResponse)
}

size_t CacheResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:content.proto.CacheResponse)
  size_t total_size = 0;

  if (has_status_text()) {
    // required string status_text = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status_text());
  }

  if (has_status_code()) {
    // required int32 status_code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status_code());
  }

  if (has_response_type()) {
    // required .content.proto.CacheResponse.ResponseType response_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());
  }

  return total_size;
}
size_t CacheResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.proto.CacheResponse)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (((_has_bits_[0] & 0x0000000d) ^ 0x0000000d) == 0) {  // All required fields are present.
    // required string status_text = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status_text());

    // required int32 status_code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status_code());

    // required .content.proto.CacheResponse.ResponseType response_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .content.proto.CacheHeaderMap headers = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->headers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->headers(static_cast<int>(i)));
    }
  }

  // repeated string cors_exposed_header_names = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cors_exposed_header_names_size());
  for (int i = 0, n = this->cors_exposed_header_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cors_exposed_header_names(i));
  }

  // repeated string url_list = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->url_list_size());
  for (int i = 0, n = this->url_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->url_list(i));
  }

  // optional string url = 5 [deprecated = true];
  if (has_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // optional int64 response_time = 6;
  if (has_response_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->response_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CacheResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CacheResponse*>(&from));
}

void CacheResponse::MergeFrom(const CacheResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.proto.CacheResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  headers_.MergeFrom(from.headers_);
  cors_exposed_header_names_.MergeFrom(from.cors_exposed_header_names_);
  url_list_.MergeFrom(from.url_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_status_text();
      status_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_text_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000004u) {
      status_code_ = from.status_code_;
    }
    if (cached_has_bits & 0x00000008u) {
      response_type_ = from.response_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      response_time_ = from.response_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CacheResponse::CopyFrom(const CacheResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.proto.CacheResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CacheResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000d) != 0x0000000d) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->headers())) return false;
  return true;
}

void CacheResponse::Swap(CacheResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CacheResponse::InternalSwap(CacheResponse* other) {
  headers_.InternalSwap(&other->headers_);
  cors_exposed_header_names_.InternalSwap(&other->cors_exposed_header_names_);
  url_list_.InternalSwap(&other->url_list_);
  status_text_.Swap(&other->status_text_);
  url_.Swap(&other->url_);
  std::swap(status_code_, other->status_code_);
  std::swap(response_type_, other->response_type_);
  std::swap(response_time_, other->response_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CacheResponse::GetTypeName() const {
  return "content.proto.CacheResponse";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CacheResponse

// required int32 status_code = 1;
bool CacheResponse::has_status_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CacheResponse::set_has_status_code() {
  _has_bits_[0] |= 0x00000004u;
}
void CacheResponse::clear_has_status_code() {
  _has_bits_[0] &= ~0x00000004u;
}
void CacheResponse::clear_status_code() {
  status_code_ = 0;
  clear_has_status_code();
}
::google::protobuf::int32 CacheResponse::status_code() const {
  // @@protoc_insertion_point(field_get:content.proto.CacheResponse.status_code)
  return status_code_;
}
void CacheResponse::set_status_code(::google::protobuf::int32 value) {
  set_has_status_code();
  status_code_ = value;
  // @@protoc_insertion_point(field_set:content.proto.CacheResponse.status_code)
}

// required string status_text = 2;
bool CacheResponse::has_status_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CacheResponse::set_has_status_text() {
  _has_bits_[0] |= 0x00000001u;
}
void CacheResponse::clear_has_status_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void CacheResponse::clear_status_text() {
  status_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_status_text();
}
const ::std::string& CacheResponse::status_text() const {
  // @@protoc_insertion_point(field_get:content.proto.CacheResponse.status_text)
  return status_text_.GetNoArena();
}
void CacheResponse::set_status_text(const ::std::string& value) {
  set_has_status_text();
  status_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.proto.CacheResponse.status_text)
}
#if LANG_CXX11
void CacheResponse::set_status_text(::std::string&& value) {
  set_has_status_text();
  status_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.proto.CacheResponse.status_text)
}
#endif
void CacheResponse::set_status_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_status_text();
  status_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.proto.CacheResponse.status_text)
}
void CacheResponse::set_status_text(const char* value, size_t size) {
  set_has_status_text();
  status_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.proto.CacheResponse.status_text)
}
::std::string* CacheResponse::mutable_status_text() {
  set_has_status_text();
  // @@protoc_insertion_point(field_mutable:content.proto.CacheResponse.status_text)
  return status_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CacheResponse::release_status_text() {
  // @@protoc_insertion_point(field_release:content.proto.CacheResponse.status_text)
  clear_has_status_text();
  return status_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CacheResponse::set_allocated_status_text(::std::string* status_text) {
  if (status_text != NULL) {
    set_has_status_text();
  } else {
    clear_has_status_text();
  }
  status_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status_text);
  // @@protoc_insertion_point(field_set_allocated:content.proto.CacheResponse.status_text)
}

// required .content.proto.CacheResponse.ResponseType response_type = 3;
bool CacheResponse::has_response_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CacheResponse::set_has_response_type() {
  _has_bits_[0] |= 0x00000008u;
}
void CacheResponse::clear_has_response_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void CacheResponse::clear_response_type() {
  response_type_ = 0;
  clear_has_response_type();
}
::content::proto::CacheResponse_ResponseType CacheResponse::response_type() const {
  // @@protoc_insertion_point(field_get:content.proto.CacheResponse.response_type)
  return static_cast< ::content::proto::CacheResponse_ResponseType >(response_type_);
}
void CacheResponse::set_response_type(::content::proto::CacheResponse_ResponseType value) {
  assert(::content::proto::CacheResponse_ResponseType_IsValid(value));
  set_has_response_type();
  response_type_ = value;
  // @@protoc_insertion_point(field_set:content.proto.CacheResponse.response_type)
}

// repeated .content.proto.CacheHeaderMap headers = 4;
int CacheResponse::headers_size() const {
  return headers_.size();
}
void CacheResponse::clear_headers() {
  headers_.Clear();
}
const ::content::proto::CacheHeaderMap& CacheResponse::headers(int index) const {
  // @@protoc_insertion_point(field_get:content.proto.CacheResponse.headers)
  return headers_.Get(index);
}
::content::proto::CacheHeaderMap* CacheResponse::mutable_headers(int index) {
  // @@protoc_insertion_point(field_mutable:content.proto.CacheResponse.headers)
  return headers_.Mutable(index);
}
::content::proto::CacheHeaderMap* CacheResponse::add_headers() {
  // @@protoc_insertion_point(field_add:content.proto.CacheResponse.headers)
  return headers_.Add();
}
::google::protobuf::RepeatedPtrField< ::content::proto::CacheHeaderMap >*
CacheResponse::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_list:content.proto.CacheResponse.headers)
  return &headers_;
}
const ::google::protobuf::RepeatedPtrField< ::content::proto::CacheHeaderMap >&
CacheResponse::headers() const {
  // @@protoc_insertion_point(field_list:content.proto.CacheResponse.headers)
  return headers_;
}

// optional string url = 5 [deprecated = true];
bool CacheResponse::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CacheResponse::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
void CacheResponse::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
void CacheResponse::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& CacheResponse::url() const {
  // @@protoc_insertion_point(field_get:content.proto.CacheResponse.url)
  return url_.GetNoArena();
}
void CacheResponse::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:content.proto.CacheResponse.url)
}
#if LANG_CXX11
void CacheResponse::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:content.proto.CacheResponse.url)
}
#endif
void CacheResponse::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:content.proto.CacheResponse.url)
}
void CacheResponse::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:content.proto.CacheResponse.url)
}
::std::string* CacheResponse::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:content.proto.CacheResponse.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CacheResponse::release_url() {
  // @@protoc_insertion_point(field_release:content.proto.CacheResponse.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CacheResponse::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:content.proto.CacheResponse.url)
}

// optional int64 response_time = 6;
bool CacheResponse::has_response_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CacheResponse::set_has_response_time() {
  _has_bits_[0] |= 0x00000010u;
}
void CacheResponse::clear_has_response_time() {
  _has_bits_[0] &= ~0x00000010u;
}
void CacheResponse::clear_response_time() {
  response_time_ = GOOGLE_LONGLONG(0);
  clear_has_response_time();
}
::google::protobuf::int64 CacheResponse::response_time() const {
  // @@protoc_insertion_point(field_get:content.proto.CacheResponse.response_time)
  return response_time_;
}
void CacheResponse::set_response_time(::google::protobuf::int64 value) {
  set_has_response_time();
  response_time_ = value;
  // @@protoc_insertion_point(field_set:content.proto.CacheResponse.response_time)
}

// repeated string cors_exposed_header_names = 7;
int CacheResponse::cors_exposed_header_names_size() const {
  return cors_exposed_header_names_.size();
}
void CacheResponse::clear_cors_exposed_header_names() {
  cors_exposed_header_names_.Clear();
}
const ::std::string& CacheResponse::cors_exposed_header_names(int index) const {
  // @@protoc_insertion_point(field_get:content.proto.CacheResponse.cors_exposed_header_names)
  return cors_exposed_header_names_.Get(index);
}
::std::string* CacheResponse::mutable_cors_exposed_header_names(int index) {
  // @@protoc_insertion_point(field_mutable:content.proto.CacheResponse.cors_exposed_header_names)
  return cors_exposed_header_names_.Mutable(index);
}
void CacheResponse::set_cors_exposed_header_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:content.proto.CacheResponse.cors_exposed_header_names)
  cors_exposed_header_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void CacheResponse::set_cors_exposed_header_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:content.proto.CacheResponse.cors_exposed_header_names)
  cors_exposed_header_names_.Mutable(index)->assign(std::move(value));
}
#endif
void CacheResponse::set_cors_exposed_header_names(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cors_exposed_header_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:content.proto.CacheResponse.cors_exposed_header_names)
}
void CacheResponse::set_cors_exposed_header_names(int index, const char* value, size_t size) {
  cors_exposed_header_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:content.proto.CacheResponse.cors_exposed_header_names)
}
::std::string* CacheResponse::add_cors_exposed_header_names() {
  // @@protoc_insertion_point(field_add_mutable:content.proto.CacheResponse.cors_exposed_header_names)
  return cors_exposed_header_names_.Add();
}
void CacheResponse::add_cors_exposed_header_names(const ::std::string& value) {
  cors_exposed_header_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:content.proto.CacheResponse.cors_exposed_header_names)
}
#if LANG_CXX11
void CacheResponse::add_cors_exposed_header_names(::std::string&& value) {
  cors_exposed_header_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:content.proto.CacheResponse.cors_exposed_header_names)
}
#endif
void CacheResponse::add_cors_exposed_header_names(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cors_exposed_header_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:content.proto.CacheResponse.cors_exposed_header_names)
}
void CacheResponse::add_cors_exposed_header_names(const char* value, size_t size) {
  cors_exposed_header_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:content.proto.CacheResponse.cors_exposed_header_names)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CacheResponse::cors_exposed_header_names() const {
  // @@protoc_insertion_point(field_list:content.proto.CacheResponse.cors_exposed_header_names)
  return cors_exposed_header_names_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CacheResponse::mutable_cors_exposed_header_names() {
  // @@protoc_insertion_point(field_mutable_list:content.proto.CacheResponse.cors_exposed_header_names)
  return &cors_exposed_header_names_;
}

// repeated string url_list = 8;
int CacheResponse::url_list_size() const {
  return url_list_.size();
}
void CacheResponse::clear_url_list() {
  url_list_.Clear();
}
const ::std::string& CacheResponse::url_list(int index) const {
  // @@protoc_insertion_point(field_get:content.proto.CacheResponse.url_list)
  return url_list_.Get(index);
}
::std::string* CacheResponse::mutable_url_list(int index) {
  // @@protoc_insertion_point(field_mutable:content.proto.CacheResponse.url_list)
  return url_list_.Mutable(index);
}
void CacheResponse::set_url_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:content.proto.CacheResponse.url_list)
  url_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void CacheResponse::set_url_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:content.proto.CacheResponse.url_list)
  url_list_.Mutable(index)->assign(std::move(value));
}
#endif
void CacheResponse::set_url_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  url_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:content.proto.CacheResponse.url_list)
}
void CacheResponse::set_url_list(int index, const char* value, size_t size) {
  url_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:content.proto.CacheResponse.url_list)
}
::std::string* CacheResponse::add_url_list() {
  // @@protoc_insertion_point(field_add_mutable:content.proto.CacheResponse.url_list)
  return url_list_.Add();
}
void CacheResponse::add_url_list(const ::std::string& value) {
  url_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:content.proto.CacheResponse.url_list)
}
#if LANG_CXX11
void CacheResponse::add_url_list(::std::string&& value) {
  url_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:content.proto.CacheResponse.url_list)
}
#endif
void CacheResponse::add_url_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  url_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:content.proto.CacheResponse.url_list)
}
void CacheResponse::add_url_list(const char* value, size_t size) {
  url_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:content.proto.CacheResponse.url_list)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CacheResponse::url_list() const {
  // @@protoc_insertion_point(field_list:content.proto.CacheResponse.url_list)
  return url_list_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CacheResponse::mutable_url_list() {
  // @@protoc_insertion_point(field_mutable_list:content.proto.CacheResponse.url_list)
  return &url_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CacheMetadata::kRequestFieldNumber;
const int CacheMetadata::kResponseFieldNumber;
const int CacheMetadata::kEntryTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CacheMetadata::CacheMetadata()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cache_5fstorage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.proto.CacheMetadata)
}
CacheMetadata::CacheMetadata(const CacheMetadata& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_request()) {
    request_ = new ::content::proto::CacheRequest(*from.request_);
  } else {
    request_ = NULL;
  }
  if (from.has_response()) {
    response_ = new ::content::proto::CacheResponse(*from.response_);
  } else {
    response_ = NULL;
  }
  entry_time_ = from.entry_time_;
  // @@protoc_insertion_point(copy_constructor:content.proto.CacheMetadata)
}

void CacheMetadata::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&request_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entry_time_) -
      reinterpret_cast<char*>(&request_)) + sizeof(entry_time_));
}

CacheMetadata::~CacheMetadata() {
  // @@protoc_insertion_point(destructor:content.proto.CacheMetadata)
  SharedDtor();
}

void CacheMetadata::SharedDtor() {
  if (this != internal_default_instance()) {
    delete request_;
  }
  if (this != internal_default_instance()) {
    delete response_;
  }
}

void CacheMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CacheMetadata& CacheMetadata::default_instance() {
  protobuf_cache_5fstorage_2eproto::InitDefaults();
  return *internal_default_instance();
}

CacheMetadata* CacheMetadata::New(::google::protobuf::Arena* arena) const {
  CacheMetadata* n = new CacheMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CacheMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:content.proto.CacheMetadata)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_request()) {
      GOOGLE_DCHECK(request_ != NULL);
      request_->::content::proto::CacheRequest::Clear();
    }
    if (has_response()) {
      GOOGLE_DCHECK(response_ != NULL);
      response_->::content::proto::CacheResponse::Clear();
    }
  }
  entry_time_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CacheMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:content.proto.CacheMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .content.proto.CacheRequest request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .content.proto.CacheResponse response = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 entry_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_entry_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &entry_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.proto.CacheMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.proto.CacheMetadata)
  return false;
#undef DO_
}

void CacheMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.proto.CacheMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .content.proto.CacheRequest request = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->request_, output);
  }

  // required .content.proto.CacheResponse response = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->response_, output);
  }

  // optional int64 entry_time = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->entry_time(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.proto.CacheMetadata)
}

size_t CacheMetadata::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:content.proto.CacheMetadata)
  size_t total_size = 0;

  if (has_request()) {
    // required .content.proto.CacheRequest request = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->request_);
  }

  if (has_response()) {
    // required .content.proto.CacheResponse response = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->response_);
  }

  return total_size;
}
size_t CacheMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.proto.CacheMetadata)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .content.proto.CacheRequest request = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->request_);

    // required .content.proto.CacheResponse response = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->response_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int64 entry_time = 3;
  if (has_entry_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->entry_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CacheMetadata::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CacheMetadata*>(&from));
}

void CacheMetadata::MergeFrom(const CacheMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.proto.CacheMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_request()->::content::proto::CacheRequest::MergeFrom(from.request());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_response()->::content::proto::CacheResponse::MergeFrom(from.response());
    }
    if (cached_has_bits & 0x00000004u) {
      entry_time_ = from.entry_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CacheMetadata::CopyFrom(const CacheMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.proto.CacheMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CacheMetadata::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_request()) {
    if (!this->request_->IsInitialized()) return false;
  }
  if (has_response()) {
    if (!this->response_->IsInitialized()) return false;
  }
  return true;
}

void CacheMetadata::Swap(CacheMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CacheMetadata::InternalSwap(CacheMetadata* other) {
  std::swap(request_, other->request_);
  std::swap(response_, other->response_);
  std::swap(entry_time_, other->entry_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CacheMetadata::GetTypeName() const {
  return "content.proto.CacheMetadata";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CacheMetadata

// required .content.proto.CacheRequest request = 1;
bool CacheMetadata::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CacheMetadata::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
void CacheMetadata::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
void CacheMetadata::clear_request() {
  if (request_ != NULL) request_->::content::proto::CacheRequest::Clear();
  clear_has_request();
}
const ::content::proto::CacheRequest& CacheMetadata::request() const {
  // @@protoc_insertion_point(field_get:content.proto.CacheMetadata.request)
  return request_ != NULL ? *request_
                         : *::content::proto::CacheRequest::internal_default_instance();
}
::content::proto::CacheRequest* CacheMetadata::mutable_request() {
  set_has_request();
  if (request_ == NULL) {
    request_ = new ::content::proto::CacheRequest;
  }
  // @@protoc_insertion_point(field_mutable:content.proto.CacheMetadata.request)
  return request_;
}
::content::proto::CacheRequest* CacheMetadata::release_request() {
  // @@protoc_insertion_point(field_release:content.proto.CacheMetadata.request)
  clear_has_request();
  ::content::proto::CacheRequest* temp = request_;
  request_ = NULL;
  return temp;
}
void CacheMetadata::set_allocated_request(::content::proto::CacheRequest* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
  // @@protoc_insertion_point(field_set_allocated:content.proto.CacheMetadata.request)
}

// required .content.proto.CacheResponse response = 2;
bool CacheMetadata::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CacheMetadata::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
void CacheMetadata::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
void CacheMetadata::clear_response() {
  if (response_ != NULL) response_->::content::proto::CacheResponse::Clear();
  clear_has_response();
}
const ::content::proto::CacheResponse& CacheMetadata::response() const {
  // @@protoc_insertion_point(field_get:content.proto.CacheMetadata.response)
  return response_ != NULL ? *response_
                         : *::content::proto::CacheResponse::internal_default_instance();
}
::content::proto::CacheResponse* CacheMetadata::mutable_response() {
  set_has_response();
  if (response_ == NULL) {
    response_ = new ::content::proto::CacheResponse;
  }
  // @@protoc_insertion_point(field_mutable:content.proto.CacheMetadata.response)
  return response_;
}
::content::proto::CacheResponse* CacheMetadata::release_response() {
  // @@protoc_insertion_point(field_release:content.proto.CacheMetadata.response)
  clear_has_response();
  ::content::proto::CacheResponse* temp = response_;
  response_ = NULL;
  return temp;
}
void CacheMetadata::set_allocated_response(::content::proto::CacheResponse* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:content.proto.CacheMetadata.response)
}

// optional int64 entry_time = 3;
bool CacheMetadata::has_entry_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CacheMetadata::set_has_entry_time() {
  _has_bits_[0] |= 0x00000004u;
}
void CacheMetadata::clear_has_entry_time() {
  _has_bits_[0] &= ~0x00000004u;
}
void CacheMetadata::clear_entry_time() {
  entry_time_ = GOOGLE_LONGLONG(0);
  clear_has_entry_time();
}
::google::protobuf::int64 CacheMetadata::entry_time() const {
  // @@protoc_insertion_point(field_get:content.proto.CacheMetadata.entry_time)
  return entry_time_;
}
void CacheMetadata::set_entry_time(::google::protobuf::int64 value) {
  set_has_entry_time();
  entry_time_ = value;
  // @@protoc_insertion_point(field_set:content.proto.CacheMetadata.entry_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace content

// @@protoc_insertion_point(global_scope)
